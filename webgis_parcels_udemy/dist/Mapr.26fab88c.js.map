{"version":3,"sources":["node_modules/ol/events/Event.js","node_modules/ol/ObjectEventType.js","node_modules/ol/Disposable.js","node_modules/ol/array.js","node_modules/ol/functions.js","node_modules/ol/obj.js","node_modules/ol/events/Target.js","node_modules/ol/events/EventType.js","node_modules/ol/events.js","node_modules/ol/Observable.js","node_modules/ol/util.js","node_modules/ol/Object.js","node_modules/ol/CollectionEventType.js","node_modules/ol/Collection.js","node_modules/ol/asserts.js","node_modules/ol/Feature.js","node_modules/ol/transform.js","node_modules/ol/extent/Relationship.js","node_modules/ol/extent.js","node_modules/ol/proj/Units.js","node_modules/ol/proj/Projection.js","node_modules/ol/proj/epsg3857.js","node_modules/ol/proj/epsg4326.js","node_modules/ol/proj/projections.js","node_modules/ol/proj/transforms.js","node_modules/ol/math.js","node_modules/ol/string.js","node_modules/ol/coordinate.js","node_modules/ol/sphere.js","node_modules/ol/console.js","node_modules/ol/proj.js","node_modules/ol/geom/flat/transform.js","node_modules/ol/geom/Geometry.js","node_modules/ol/geom/SimpleGeometry.js","node_modules/ol/geom/flat/closest.js","node_modules/ol/geom/flat/deflate.js","node_modules/ol/geom/flat/simplify.js","node_modules/ol/geom/flat/inflate.js","node_modules/ol/geom/flat/area.js","node_modules/ol/geom/LinearRing.js","node_modules/ol/geom/Point.js","node_modules/ol/geom/flat/contains.js","node_modules/ol/geom/flat/interiorpoint.js","node_modules/ol/geom/flat/segments.js","node_modules/ol/geom/flat/intersectsextent.js","node_modules/ol/geom/flat/reverse.js","node_modules/ol/geom/flat/orient.js","node_modules/ol/geom/Polygon.js","node_modules/ol/Geolocation.js","node_modules/ol/render/EventType.js","node_modules/ol/ImageState.js","node_modules/color-space/rgb.js","node_modules/color-space/xyz.js","node_modules/color-space/luv.js","node_modules/color-space/lchuv.js","node_modules/color-name/index.js","node_modules/color-parse/index.js","node_modules/color-space/hsl.js","node_modules/color-rgba/index.js","node_modules/ol/color.js","node_modules/ol/has.js","node_modules/ol/dom.js","node_modules/ol/Image.js","node_modules/ol/style/IconImageCache.js","node_modules/ol/style/IconImage.js","node_modules/ol/style/Fill.js","node_modules/ol/geom/flat/interpolate.js","node_modules/ol/geom/flat/length.js","node_modules/ol/geom/LineString.js","node_modules/ol/style/Stroke.js","node_modules/ol/size.js","node_modules/ol/style/Image.js","node_modules/ol/colorlike.js","node_modules/ol/css.js","node_modules/ol/render/canvas.js","node_modules/ol/style/RegularShape.js","node_modules/ol/style/Circle.js","node_modules/ol/style/Style.js","node_modules/ol/style/Text.js","node_modules/ol/layer/Property.js","node_modules/ol/layer/Base.js","node_modules/ol/ViewHint.js","node_modules/ol/ViewProperty.js","node_modules/ol/tilegrid/common.js","node_modules/ol/centerconstraint.js","node_modules/ol/resolutionconstraint.js","node_modules/ol/rotationconstraint.js","node_modules/ol/easing.js","node_modules/ol/View.js","node_modules/ol/layer/Layer.js","node_modules/rbush/rbush.min.js","node_modules/ol/style/Icon.js","node_modules/ol/expr/expression.js","node_modules/ol/expr/cpu.js","node_modules/ol/render/canvas/style.js","node_modules/ol/layer/BaseVector.js","node_modules/ol/render/canvas/Instruction.js","node_modules/ol/render/VectorContext.js","node_modules/ol/render/canvas/Builder.js","node_modules/ol/render/canvas/ImageBuilder.js","node_modules/ol/render/canvas/LineStringBuilder.js","node_modules/ol/render/canvas/PolygonBuilder.js","node_modules/ol/geom/flat/linechunk.js","node_modules/ol/geom/flat/straightchunk.js","node_modules/ol/render/canvas/TextBuilder.js","node_modules/ol/render/canvas/BuilderGroup.js","node_modules/ol/renderer/Layer.js","node_modules/ol/render/Event.js","node_modules/ol/render/canvas/ZIndexContext.js","node_modules/ol/renderer/canvas/Layer.js","node_modules/ol/geom/flat/textpath.js","node_modules/ol/render/canvas/Executor.js","node_modules/ol/render/canvas/ExecutorGroup.js","node_modules/ol/render/canvas/Immediate.js","node_modules/ol/style.js","node_modules/ol/render/canvas/hitdetect.js","node_modules/ol/renderer/vector.js","node_modules/ol/renderer/canvas/VectorLayer.js","node_modules/ol/layer/Vector.js","node_modules/ol/structs/RBush.js","node_modules/ol/geom/Circle.js","node_modules/ol/geom/GeometryCollection.js","node_modules/ol/geom/MultiLineString.js","node_modules/ol/geom/MultiPoint.js","node_modules/ol/geom/flat/center.js","node_modules/ol/geom/MultiPolygon.js","node_modules/ol/geom.js","node_modules/ol/render/Feature.js","node_modules/ol/source/Source.js","node_modules/ol/source/VectorEventType.js","node_modules/ol/loadingstrategy.js","node_modules/ol/featureloader.js","node_modules/ol/source/Vector.js","node_modules/ol/render.js","node_modules/ol/geom/flat/geodesic.js","node_modules/ol/layer/Graticule.js","node_modules/ol/ImageCanvas.js","node_modules/ol/TileState.js","node_modules/ol/Tile.js","node_modules/ol/ImageTile.js","node_modules/ol/Kinetic.js","node_modules/ol/renderer/Map.js","node_modules/ol/renderer/Composite.js","node_modules/ol/layer/Group.js","node_modules/ol/MapEvent.js","node_modules/ol/MapBrowserEvent.js","node_modules/ol/MapBrowserEventType.js","node_modules/ol/pointer/EventType.js","node_modules/ol/MapBrowserEventHandler.js","node_modules/ol/MapEventType.js","node_modules/ol/MapProperty.js","node_modules/ol/structs/PriorityQueue.js","node_modules/ol/TileQueue.js","node_modules/ol/control/Control.js","node_modules/ol/control/Attribution.js","node_modules/ol/control/Rotate.js","node_modules/ol/control/Zoom.js","node_modules/ol/control/defaults.js","node_modules/ol/interaction/Property.js","node_modules/ol/interaction/Interaction.js","node_modules/ol/interaction/DoubleClickZoom.js","node_modules/ol/interaction/Pointer.js","node_modules/ol/events/condition.js","node_modules/ol/interaction/DragPan.js","node_modules/ol/interaction/DragRotate.js","node_modules/ol/render/Box.js","node_modules/ol/interaction/DragBox.js","node_modules/ol/interaction/DragZoom.js","node_modules/ol/events/Key.js","node_modules/ol/interaction/KeyboardPan.js","node_modules/ol/interaction/KeyboardZoom.js","node_modules/ol/interaction/MouseWheelZoom.js","node_modules/ol/interaction/PinchRotate.js","node_modules/ol/interaction/PinchZoom.js","node_modules/ol/interaction/defaults.js","node_modules/ol/Map.js","node_modules/ol/Overlay.js","node_modules/ol/structs/LRUCache.js","node_modules/ol/tilecoord.js","node_modules/ol/TileCache.js","node_modules/ol/TileRange.js","node_modules/ol/VectorRenderTile.js","node_modules/ol/VectorTile.js","node_modules/ol/index.js","node_modules/ol/webgl.js","node_modules/ol/webgl/Buffer.js","node_modules/ol/webgl/ContextEventType.js","node_modules/ol/webgl/PostProcessingPass.js","node_modules/ol/vec/mat4.js","node_modules/ol/webgl/Helper.js","node_modules/ol/renderer/webgl/Layer.js","node_modules/ol/webgl/RenderTarget.js","node_modules/ol/render/webgl/constants.js","node_modules/earcut/src/earcut.js","node_modules/ol/render/webgl/utils.js","node_modules/base64-js/index.js","node_modules/ieee754/index.js","node_modules/isarray/index.js","node_modules/buffer/index.js","node_modules/ol/worker/webgl.js","node_modules/ol/renderer/webgl/worldUtil.js","node_modules/ol/renderer/webgl/PointsLayer.js","node_modules/ol/webgl/PaletteTexture.js","node_modules/ol/reproj/common.js","node_modules/ol/DataTile.js","node_modules/ol/reproj/Triangulation.js","node_modules/ol/reproj.js","node_modules/ol/reproj/DataTile.js","node_modules/ol/reproj/Tile.js","node_modules/ol/webgl/BaseTileRepresentation.js","node_modules/ol/webgl/TileTexture.js","node_modules/ol/renderer/webgl/TileLayerBase.js","node_modules/ol/renderer/webgl/TileLayer.js","node_modules/ol/expr/gpu.js","node_modules/ol/style/flat.js","node_modules/ol/webgl/ShaderBuilder.js","node_modules/ol/layer/Heatmap.js","node_modules/ol/layer/BaseImage.js","node_modules/ol/renderer/canvas/ImageLayer.js","node_modules/ol/layer/Image.js","node_modules/ol/layer/TileProperty.js","node_modules/ol/layer/BaseTile.js","node_modules/ol/renderer/canvas/TileLayer.js","node_modules/ol/layer/Tile.js","node_modules/ol/resolution.js","node_modules/ol/renderer/canvas/VectorImageLayer.js","node_modules/ol/layer/VectorImage.js","node_modules/ol/renderer/canvas/VectorTileLayer.js","node_modules/ol/layer/VectorTile.js","node_modules/ol/webgl/styleparser.js","node_modules/ol/layer/WebGLPoints.js","node_modules/ol/layer/WebGLTile.js","node_modules/ol/layer.js","node_modules/ol/reproj/Image.js","node_modules/ol/source/common.js","node_modules/ol/source/Image.js","node_modules/ol/uri.js","node_modules/ol/source/wms.js","node_modules/ol/source/ImageWMS.js","node_modules/ol/source/TileEventType.js","node_modules/ol/tilegrid/TileGrid.js","node_modules/ol/tilegrid/WMTS.js","node_modules/ol/tilegrid.js","node_modules/ol/source/Tile.js","node_modules/ol/tileurlfunction.js","node_modules/ol/source/UrlTile.js","node_modules/ol/source/TileImage.js","node_modules/ol/source/TileWMS.js","Scripts/Mapr.js","node_modules/parcel-bundler/src/builtins/bundle-url.js","node_modules/parcel-bundler/src/builtins/css-loader.js","node_modules/parcel-bundler/src/builtins/hmr-runtime.js"],"names":["BaseEvent","type","_classCallCheck","propagationStopped","defaultPrevented","target","_createClass","key","value","preventDefault","stopPropagation","evt","_default","exports","default","PROPERTYCHANGE","Disposable","disposed","dispose","disposeInternal","binarySearch","haystack","needle","comparator","mid","cmp","ascending","low","high","length","found","a","b","descending","linearFindNearest","arr","direction","n","i","candidate","reverseSubArray","begin","end","tmp","extend","data","extension","Array","isArray","remove","obj","indexOf","splice","equals","arr1","arr2","len1","stableSort","compareFnc","index","sort","isSorted","func","strict","compare","every","currentVal","res","_array","require","TRUE","FALSE","VOID","memoizeOne","fn","called","lastResult","lastArgs","lastThis","nextArgs","prototype","slice","call","arguments","arrayEquals","apply","toPromise","getter","promiseGetter","err","Promise","reject","resolve","clear","object","property","isEmpty","_Disposable2","_interopRequireDefault","_Event","_functions","_obj","e","__esModule","_typeof","o","Symbol","iterator","constructor","TypeError","_defineProperties","r","t","enumerable","configurable","writable","Object","defineProperty","_toPropertyKey","_toPrimitive","toPrimitive","String","Number","_callSuper","_getPrototypeOf","_possibleConstructorReturn","_isNativeReflectConstruct","Reflect","construct","_assertThisInitialized","ReferenceError","Boolean","valueOf","setPrototypeOf","getPrototypeOf","bind","__proto__","_inherits","create","_setPrototypeOf","Target","_Disposable","_this","eventTarget_","pendingRemovals_","dispatching_","listeners_","addEventListener","listener","listeners","listenersForType","includes","push","dispatchEvent","event","isString","Event","dispatching","pendingRemovals","propagate","ii","handleEvent","pr","removeEventListener","getListeners","undefined","hasListener","keys","CHANGE","ERROR","BLUR","CLEAR","CONTEXTMENU","CLICK","DBLCLICK","DRAGENTER","DRAGOVER","DROP","FOCUS","KEYDOWN","KEYPRESS","LOAD","RESIZE","TOUCHMOVE","WHEEL","listen","thisArg","once","originalListener","eventsKey","listenOnce","unlistenByKey","_Target","_EventType","_events","Observable","_EventTarget","on","onInternal","onceInternal","un","unInternal","revision_","changed","EventType","getRevision","len","ol_key","unByKey","EventTarget","abstract","Error","uidCounter_","getUid","ol_uid","VERSION","_Event2","_ObjectEventType","_Observable2","_util","ObjectEvent","oldValue","BaseObject","_Observable","values","_this2","values_","setProperties","get","hasOwnProperty","getKeys","getProperties","assign","getPropertiesInternal","hasProperties","notify","eventType","concat","ObjectEventType","addChangeListener","removeChangeListener","set","silent","applyProperties","source","unset","ADD","REMOVE","_Object","_CollectionEventType","Property","LENGTH","CollectionEvent","element","Collection","_BaseObject","array","options","unique_","unique","array_","assertUnique_","updateLength_","getLength","pop","forEach","f","getArray","item","insertAt","elem","CollectionEventType","removeAt","prev","setAt","except","assert","assertion","errorMessage","_asserts","Feature","geometryOrProperties","id_","geometryName_","style_","styleFunction_","geometryChangeKey_","handleGeometryChanged_","getSimplifiedGeometry","geometry","setGeometry","properties","clone","setGeometryName","getGeometryName","getGeometry","style","getStyle","setStyle","getId","getStyleFunction","handleGeometryChange_","createStyleFunction","setId","id","name","styles","getZIndex","tmp_","reset","transform","multiply","transform1","transform2","a1","b1","c1","d1","e1","f1","a2","b2","c2","d2","e2","f2","c","d","setFromArray","coordinate","x","y","rotate","angle","cos","Math","sin","scale","makeScale","translate","dx","dy","compose","dx1","dy1","sx","sy","dx2","dy2","composeCssTransform","toString","invert","makeInverse","det","determinant","mat","matrixPrecision","transformString","map","round","join","UNKNOWN","INTERSECTING","ABOVE","RIGHT","BELOW","LEFT","_Relationship","_slicedToArray","_arrayWithHoles","_iterableToArrayLimit","_unsupportedIterableToArray","_nonIterableRest","_arrayLikeToArray","from","test","l","u","next","done","return","boundingExtent","coordinates","extent","createEmpty","extendCoordinate","_boundingExtentXYs","xs","ys","dest","minX","min","minY","maxX","max","maxY","createOrUpdate","buffer","closestSquaredDistanceXY","containsCoordinate","containsXY","containsExtent","extent1","extent2","coordinateRelationship","relationship","Relationship","Infinity","createOrUpdateEmpty","createOrUpdateFromCoordinate","createOrUpdateFromCoordinates","extendCoordinates","createOrUpdateFromFlatCoordinates","flatCoordinates","offset","stride","extendFlatCoordinates","createOrUpdateFromRings","rings","extendRings","approximatelyEquals","tolerance","abs","extendXY","forEachCorner","callback","val","getBottomLeft","getBottomRight","getTopRight","getTopLeft","getArea","area","getWidth","getHeight","getCenter","getCorner","corner","getEnlargedArea","getForViewAndSize","center","resolution","rotation","size","_getRotatedViewport","getRotatedViewport","_getRotatedViewport2","x0","y0","x1","y1","x2","y2","x3","y3","cosRotation","sinRotation","xCos","xSin","yCos","ySin","getIntersectionArea","intersection","getIntersection","intersects","getMargin","getSize","returnOrUpdate","scaleFromCenter","deltaX","deltaY","intersectsSegment","start","startRel","endRel","startX","startY","endX","endY","slope","applyTransform","transformFn","stops","width","height","wrapX","projection","projectionExtent","getExtent","canWrapX","worldWidth","worldsAway","floor","wrapAndSliceX","multiWorld","isFinite","unitByCode","fromCode","code","METERS_PER_UNIT","PI","_Units","Projection","code_","units_","units","extent_","worldExtent_","worldExtent","axisOrientation_","axisOrientation","global_","global","canWrapX_","getPointResolutionFunc_","getPointResolution","defaultTileGrid_","metersPerUnit_","metersPerUnit","getCode","getUnits","getMetersPerUnit","getWorldExtent","getAxisOrientation","isGlobal","setGlobal","getDefaultTileGrid","setDefaultTileGrid","tileGrid","setExtent","setWorldExtent","setGetPointResolution","getPointResolutionFunc","_Projection2","RADIUS","HALF_SIZE","EXTENT","WORLD_EXTENT","MAX_SAFE_Y","log","tan","EPSG3857Projection","_Projection","point","cosh","PROJECTIONS","fromEPSG4326","input","output","dimension","toEPSG4326","atan","exp","EPSG4326Projection","cache","replace","add","transforms","destination","sourceCode","destinationCode","clamp","squaredSegmentDistance","squaredDistance","solveLinearSystem","maxRow","maxEl","absValue","j","coef","k","m","toDegrees","angleInRadians","toRadians","angleInDegrees","modulo","lerp","toFixed","decimals","factor","pow","ceil","padNumber","number","precision","numberString","decimal","compareVersions","v1","v2","s1","split","s2","n1","parseInt","n2","_extent","_math","_string","delta","closestOnCircle","circle","getRadius","sqrt","closestOnSegment","segment","along","createStringXY","fractionDigits","toStringXY","degreesToStringHDMS","hemispheres","degrees","normalizedDegrees","deg","sec","hdms","charAt","format","template","coordinate1","coordinate2","cosAngle","sinAngle","coord1","coord2","distance","squaredDistanceToSegment","toStringHDMS","getWorldsAway","sourceExtentWidth","DEFAULT_RADIUS","getDistance","radius","lat1","lat2","deltaLatBy2","deltaLonBy2","atan2","getLengthInternal","getType","coords","jj","getCoordinates","geometries","getGeometries","getAreaInternal","bearing","lon1","dByR","lat","asin","lon","levels","info","warn","error","none","level","setLevel","_console","console","_console2","_console3","_epsg","_epsg2","_projections","_transforms","_coordinate","_sphere","showCoordinateWarning","disableCoordinateWarning","disable","hide","cloneTransform","identityTransform","addProjection","addProj","addTransformFunc","addProjections","projections","projectionLike","getProj","pointResolution","projUnits","getTransformFromProjections","vertices","addEquivalentProjections","addEquivalentTransforms","projections1","projections2","forwardTransform","inverseTransform","projection1","projection2","clearAllProjections","clearProj","clearTransformFuncs","createProjection","defaultCode","createTransformFromCoordinateTransform","coordTransform","pointLength","addCoordinateTransforms","forward","inverse","sourceProj","destProj","fromLonLat","toLonLat","lonLat","equivalent","equalUnits","transformFunc","sourceProjection","destinationProjection","getTransformFunc","getTransform","transformExtent","transformWithProjections","userProjection","setUserProjection","clearUserProjection","getUserProjection","useGeographic","toUserCoordinate","fromUserCoordinate","destProjection","toUserExtent","fromUserExtent","toUserResolution","sourceMetersPerUnit","userMetersPerUnit","fromUserResolution","destMetersPerUnit","createSafeCoordinateTransform","coord","transformed","sourceExtent","addCommon","EPSG3857_PROJECTIONS","EPSG4326_PROJECTIONS","transform2D","anchor","anchorX","anchorY","_transform","_extent2","_proj","_transform2","tmpTransform","createTransform","Geometry","extentRevision_","simplifiedGeometryMaxMinSquaredTolerance","simplifiedGeometryRevision","simplifyTransformedInternal","revision","squaredTolerance","simplifyTransformed","closestPointXY","closestPoint","minSquaredDistance","getClosestPoint","NaN","intersectsCoordinate","computeExtent","isNaN","simplify","intersectsExtent","getProjection","inCoordinates","outCoordinates","pixelExtent","projectedExtent","composeTransform","_Geometry2","SimpleGeometry","_Geometry","layout","getFirstCoordinate","getFlatCoordinates","getLastCoordinate","getLayout","simplifiedGeometry","getSimplifiedGeometryInternal","simplifiedFlatCoordinates","getStride","setFlatCoordinates","getStrideForLayout","setCoordinates","setLayout","nesting","getLayoutForStride","transformGeom2D","simpleGeometry","assignClosest","offset1","offset2","maxSquaredDelta","squaredDelta","squaredDx","arrayMaxSquaredDelta","ends","multiArrayMaxSquaredDelta","endss","assignClosestPoint","maxDelta","isRing","tmpPoint","assignClosestArrayPoint","assignClosestMultiArrayPoint","deflateCoordinate","deflateCoordinates","deflateCoordinatesArray","coordinatess","deflateMultiCoordinatesArray","coordinatesss","simplifyLineString","highQuality","radialDistance","douglasPeucker","simplifiedOffset","markers","stack","last","first","maxSquaredDistance","douglasPeuckerArray","simplifiedEnds","douglasPeuckerMultiArray","simplifiedEndss","snap","quantize","quantizeArray","quantizeMultiArray","inflateCoordinates","inflateCoordinatesArray","inflateMultiCoordinatesArray","linearRing","twiceArea","linearRings","linearRingss","_SimpleGeometry2","_closest","_deflate","_simplify","_inflate","_area","LinearRing","_SimpleGeometry","maxDelta_","maxDeltaRevision_","linearRingArea","Point","linearRingContainsExtent","outside","linearRingContainsXY","wn","linearRingsContainsXY","linearRingssContainsXY","_contains","getInteriorPointOfArray","flatCenters","flatCentersOffset","intersections","rr","pointX","maxSegmentLength","segmentLength","getInteriorPointsOfMultiArray","interiorPoints","ret","_segments","intersectsLineString","coordinatesExtent","forEachSegment","point1","point2","intersectsLineStringArray","intersectsLinearRing","intersectsLinearRingArray","intersectsLinearRingMultiArray","_reverse","linearRingIsClockwise","edge","linearRingsAreOriented","right","isClockwise","linearRingssAreOriented","orientLinearRings","reverse","reverseCoordinates","orientLinearRingsArray","inflateEnds","prevEndIndex","startOrientation","orientation","_LinearRing","_Point","_interiorpoint","_intersectsextent","_orient","Polygon","ends_","flatInteriorPointRevision_","flatInteriorPoint_","orientedRevision_","orientedFlatCoordinates_","appendLinearRing","polygon","getOrientedFlatCoordinates","linearRingsArea","getEnds","getFlatInteriorPoint","flatCenter","getInteriorPoint","getLinearRingCount","getLinearRing","getLinearRings","circular","sphereRadius","sphereOffset","fromExtent","fromCircle","sides","arrayLength","makeRegular","startAngle","_Polygon","_get","p","_superPropBase","getOwnPropertyDescriptor","ACCURACY","ACCURACY_GEOMETRY","ALTITUDE","ALTITUDE_ACCURACY","HEADING","POSITION","PROJECTION","SPEED","TRACKING","TRACKING_OPTIONS","GeolocationErrorType","GeolocationError","_BaseEvent","message","Geolocation","position_","transform_","watchId_","handleProjectionChanged_","handleTrackingChanged_","setProjection","trackingOptions","setTrackingOptions","setTracking","tracking","navigator","getTracking","geolocation","watchPosition","positionChange_","positionError_","getTrackingOptions","clearWatch","position","accuracy","altitude","altitudeAccuracy","heading","longitude","latitude","projectedPosition","speed","circularPolygon","getAccuracy","getAccuracyGeometry","getAltitude","getAltitudeAccuracy","getHeading","getPosition","getSpeed","PRERENDER","POSTRENDER","PRECOMPOSE","POSTCOMPOSE","RENDERCOMPLETE","IDLE","LOADING","LOADED","EMPTY","channel","alias","_rgb","xyz","whitepoint","A","C","D50","D55","D65","D75","F2","F7","F11","E","rgb","_xyz","white","z","g","arg","_u","_v","v","xn","yn","zn","vn","luv","yr","_luv","lchuv","h","hr","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","teal","thistle","tomato","turquoise","violet","wheat","whitesmoke","yellow","yellowgreen","_colorName","parse","baseHues","cstr","parts","alpha","space","toLowerCase","names","base","isShort","exec","dims","trim","shift","parseFloat","endsWith","match","hsl","s","t1","t2","t3","_colorParse","_hsl","rgba","color","raw","parsed","_lchuv","_colorRgba","_createForOfIteratorHelper","_n","F","asString","MAX_CACHE_SIZE","cacheSize","withAlpha","rgbaToLcha","lchaToRgba","fromString","parseRgba","_iterator","_step","normalize","asArray","isStringColor","_","ua","userAgent","FIREFOX","SAFARI","SAFARI_BUG_237906","WEBKIT","MAC","DEVICE_PIXEL_RATIO","devicePixelRatio","WORKER_OFFSCREEN_CANVAS","WorkerGlobalScope","OffscreenCanvas","self","IMAGE_DECODE","Image","decode","CREATE_IMAGE_BITMAP","createImageBitmap","PASSIVE_EVENT_LISTENERS","passive","window","_has","createCanvasContext2D","canvasPool","settings","canvas","document","createElement","getContext","sharedCanvasContext","getSharedCanvasContext2D","releaseCanvas","context","clearRect","outerWidth","offsetWidth","getComputedStyle","marginLeft","marginRight","outerHeight","offsetHeight","marginTop","marginBottom","replaceNode","newNode","oldNode","parent","parentNode","replaceChild","removeNode","node","removeChild","removeChildren","lastChild","replaceChildren","children","oldChildren","childNodes","oldChild","newChild","appendChild","insertBefore","_ImageState","ImageWrapper","pixelRatio","stateOrLoader","pixelRatio_","state","ImageState","image_","loader","getImage","getPixelRatio","getResolution","getState","load","requestResolution","then","image","HTMLImageElement","ImageBitmap","HTMLCanvasElement","HTMLVideoElement","catch","finally","setImage","setResolution","listenImage","loadHandler","errorHandler","img","listening","decoding","loaded","listenerKeys","src","unlisten","handleLoad","handleError","decodeFallback","complete","_color","_dom","IconImageCache","cache_","patternCache_","cacheSize_","maxCacheSize_","canExpireCache","expire","iconImage","crossOrigin","getCacheKey","getPattern","pattern","update","getImageState","ready","createPattern","setSize","maxCacheSize","colorString","shared","_Image","_IconImageCache","taintedTestContext","IconImage","imageState","hitDetectionImage_","crossOrigin_","canvas_","color_","imageState_","size_","src_","tainted_","ready_","initializeImage_","isTainted_","willReadFrequently","drawImage","getImageData","dispatchChangeEvent_","handleImageError_","handleImageLoad_","replaceColor_","getHitDetectionImage","fillRect","getSrc","ctx","globalCompositeOperation","fillStyle","_this3","onChange","cacheKey","iconImageCache","_IconImage","Fill","patternImage_","setColor","getColor","patternImage","getIconImage","loading","interpolatePoint","fraction","cumulativeLengths","lineStringCoordinateAtM","extrapolate","lo","hi","m0","m1","lineStringsCoordinateAtM","interpolate","lineStringLength","linearRingLength","perimeter","_interpolate","_length","LineString","flatMidpoint_","flatMidpointRevision_","appendCoordinate","lineString","getCoordinateAtM","getCoordinateAt","getFlatMidpoint","_this$flatMidpoint_","Stroke","lineCap_","lineCap","lineDash_","lineDash","lineDashOffset_","lineDashOffset","lineJoin_","lineJoin","miterLimit_","miterLimit","width_","getLineCap","getLineDash","getLineDashOffset","getLineJoin","getMiterLimit","setLineCap","setLineDash","setLineDashOffset","setLineJoin","setMiterLimit","setWidth","num","hasArea","ratio","toSize","_size","ImageStyle","opacity_","opacity","rotateWithView_","rotateWithView","rotation_","scale_","scaleArray_","displacement_","displacement","declutterMode_","declutterMode","getScale","getOpacity","getRotation","getRotateWithView","getDisplacement","getDeclutterMode","getScaleArray","getAnchor","getImageSize","getOrigin","setDisplacement","setOpacity","setRotateWithView","setRotation","setScale","listenImageChange","unlistenImageChange","asColorLike","asCanvasPattern","iconCache","canvasPattern","patternCanvasContext","CLASS_HIDDEN","CLASS_SELECTABLE","CLASS_UNSELECTABLE","CLASS_UNSUPPORTED","CLASS_CONTROL","CLASS_COLLAPSED","fontRegEx","RegExp","fontRegExMatchIndex","getFontParameters","fontSpec","lineHeight","weight","variant","families","family","_css","defaultFont","defaultFillStyle","defaultLineCap","defaultLineDash","defaultLineDashOffset","defaultLineJoin","defaultMiterLimit","defaultStrokeStyle","defaultTextAlign","defaultTextBaseline","defaultPadding","defaultLineWidth","checkedFonts","measureContext","measureFont","textHeights","registerFont","retries","referenceFonts","text","interval","referenceWidth","isAvailable","fontStyle","fontWeight","fontFamily","available","referenceFont","measureTextWidth","check","fonts","font","clearInterval","setInterval","measureTextHeight","measureElement","metrics","measureText","actualBoundingBoxAscent","actualBoundingBoxDescent","innerHTML","minHeight","maxHeight","padding","border","display","left","body","measureAndCacheTextWidth","reduce","curr","getTextDimensions","baseStyle","chunks","widths","heights","lineWidths","lineWidth","currentWidth","currentHeight","rotateAtOffset","offsetX","offsetY","drawImageOrLabel","labelOrImage","originX","originY","w","save","globalAlpha","contextInstructions","executeLabelInstructions","restore","label","_colorlike","_canvas","RegularShape","_ImageStyle","canvases_","hitDetectionCanvas_","fill_","fill","origin_","points_","points","radius_","radius2_","radius2","angle_","stroke_","stroke","renderOptions_","render","getFill","getPoints","getRadius2","getAngle","getStroke","setFill","createHitDetectionCanvas_","renderOptions","draw_","setStroke","calculateLineJoinSize_","strokeWidth","r1","r2","miterRatio","maxr","bevelAdd","aa","bb","dd","ee","innerMiterRatio","innerLength","createRenderOptions","strokeStyle","_this$stroke_$getColo","_this$stroke_$getWidt","_this$stroke_$getLine","_this$stroke_$getLine2","_this$stroke_$getLine3","_this$stroke_$getMite","maxRadius","createPath_","drawHitDetectionCanvas_","arc","step","angle0","radiusC","lineTo","closePath","_RegularShape2","CircleStyle","_RegularShape","setRadius","_Circle","_Fill","_Stroke","Style","geometry_","geometryFunction_","defaultGeometryFunction","renderer_","renderer","hitDetectionRenderer_","hitDetectionRenderer","text_","zIndex_","zIndex","_geometry","_this$getRenderer","getRenderer","getText","setRenderer","setHitDetectionRenderer","getHitDetectionRenderer","getGeometryFunction","setText","feature","setZIndex","toFunction","styleFunction","defaultStyles","createDefaultStyle","createEditingStyle","DEFAULT_FILL_COLOR","Text","font_","textAlign_","textAlign","justify_","justify","repeat_","repeat","textBaseline_","textBaseline","maxAngle_","maxAngle","placement_","placement","overflow_","overflow","offsetX_","offsetY_","backgroundFill_","backgroundFill","backgroundStroke_","backgroundStroke","padding_","getFont","getPlacement","getRepeat","getMaxAngle","getOverflow","getTextAlign","getJustify","getTextBaseline","getOffsetX","getOffsetY","getBackgroundFill","getBackgroundStroke","getPadding","setOverflow","setFont","setMaxAngle","setOffsetX","setOffsetY","setPlacement","setRepeat","setTextAlign","setJustify","setTextBaseline","setBackgroundFill","setBackgroundStroke","setPadding","OPACITY","VISIBLE","Z_INDEX","MAX_RESOLUTION","MIN_RESOLUTION","MAX_ZOOM","MIN_ZOOM","SOURCE","MAP","_Property","BaseLayer","background_","background","LayerProperty","visible","maxResolution","minResolution","minZoom","maxZoom","className_","className","state_","getBackground","getClassName","getLayerState","managed","layer","getVisible","getMaxResolution","getMinResolution","getMinZoom","getMaxZoom","getLayersArray","getLayerStatesArray","states","getSourceState","setBackground","setMaxResolution","setMinResolution","setMaxZoom","setMinZoom","setVisible","zindex","ANIMATING","INTERACTING","CENTER","RESOLUTION","ROTATION","DEFAULT_MAX_ZOOM","DEFAULT_TILE_SIZE","createExtent","onlyCenter","smooth","isMoving","centerShift","viewWidth","viewHeight","shiftX","shiftY","getViewportClampedResolution","maxExtent","viewportSize","showFullExtent","xResolution","yResolution","getSmoothClampedResolution","result","createSnapToResolutions","resolutions","cappedMaxRes","capped","createSnapToPower","power","minZoomLevel","cappedZoomLevel","zoomLevel","newResolution","createMinMaxResolution","createSnapToN","theta","createSnapToZero","easeIn","easeOut","inAndOut","linear","upAndDown","_ViewHint","_ViewProperty","_common","_centerconstraint","_resolutionconstraint","_rotationconstraint","_easing","DEFAULT_MIN_ZOOM","View","hints_","animations_","updateAnimationKey_","projection_","viewportSize_","targetCenter_","targetResolution_","targetRotation_","nextCenter_","nextResolution_","nextRotation_","cancelAnchor_","applyOptions_","ViewProperty","resolutionConstraintInfo","createResolutionConstraint","maxResolution_","minResolution_","zoomFactor_","zoomFactor","resolutions_","minZoom_","centerConstraint","createCenterConstraint","resolutionConstraint","constraint","rotationConstraint","createRotationConstraint","constraints_","setCenterInternal","zoom","setZoom","oldPadding","getCenterInternal","newPadding","getUpdatedOptions_","newOptions","getZoom","animate","var_args","isDef","getAnimating","resolveConstraints","args","animateInternal","animationCount","animationCallback","Date","now","series","animation","duration","easing","sourceCenter","targetCenter","sourceResolution","targetResolution","getResolutionForZoom","sourceRotation","targetRotation","isNoopAnimation","setHint","ViewHint","updateAnimations_","getInteracting","cancelAnimations","cancelAnimationFrame","more","seriesComplete","elapsed","progress","getViewportSize_","constrainedResolution","calculateCenterZoom","applyTargetState_","constrainedRotation","calculateCenterRotate","filter","requestAnimationFrame","currentCenter","rotateCoordinate","addCoordinate","currentResolution","setViewportSize","getConstraints","getConstrainResolution","getHints","hints","calculateExtent","calculateExtentInternal","getViewportSizeMinusPadding_","getZoomForResolution","setConstrainResolution","enabled","constrainResolution","getResolutions","getResolutionForExtent","getResolutionForExtentInternal","getResolutionForValueFunction","getConstrainedResolution","getValueForResolutionFunction","logPower","reducedSize","calculateCenterOn","nextCenter","nextResolution","nextRotation","getViewStateAndExtent","viewState","nearest","baseLevel","fit","geometryOrExtent","polygonFromExtent","fitInternal","rotatedExtentForGeometry","minRotX","minRotY","maxRotX","maxRotY","rotX","rotY","rotatedExtent","centerRot","centerX","centerY","getConstrainedCenter","centerOn","centerOnInternal","calculateCenterShift","shiftedCenter","adjustCenter","deltaCoordinates","setCenter","adjustCenterInternal","adjustResolution","adjustResolutionInternal","adjustZoom","adjustRotation","adjustRotationInternal","newRotation","hint","doNotCancelAnims","forceMoving","newCenter","resolutionDirection","beginInteraction","endInteraction","endInteractionInternal","getConstrainedZoom","targetZoom","targetRes","returnValue","setTimeout","smoothExtentConstraint","constrainOnlyCenter","centerNone","defaultMaxZoom","defaultZoomFactor","smoothResolutionConstraint","projExtent","defaultMaxResolution","defaultMinResolution","enableRotation","constrainRotation","rotationNone","coordinatesEqual","_Base","_EventType2","_View","Layer","_BaseLayer","baseOptions","mapPrecomposeKey_","mapRenderKey_","sourceChangeKey_","sourceReady_","rendered","setMap","handleSourcePropertyChange_","setSource","getSource","getRenderSource","handleSourceChange_","getFeatures","pixel","getData","isVisible","view","frameState","getMapInternal","getView","layerStatesArray","getLayerGroup","layerState","find","layerExtent","inView","getAttributions","attributions","layerRenderer","prepareFrame","renderFrame","unrender","getDeclutter","renderDeclutter","renderDeferred","setMapInternal","RenderEventType","renderEvent","some","arrayLayerState","createRenderer","hasRenderer","calculateScale","wantedWidth","wantedHeight","Icon","anchor_","normalizedAnchor_","anchorOrigin_","anchorOrigin","anchorXUnits_","anchorXUnits","anchorYUnits_","anchorYUnits","iconImage_","offset_","offsetOrigin_","offsetOrigin","_options$size","initialOptions_","onload","imageSize","setAnchor","iconImageSize","_parsers","_construct","_toConsumableArray","_arrayWithoutHoles","_iterableToArray","_nonIterableSpread","_defineProperty","numTypes","NoneType","BooleanType","NumberType","StringType","ColorType","NumberArrayType","SizeType","AnyType","typeNames","namedTypes","typeName","namedType","includesType","broad","specific","overlapsType","oneType","otherType","isType","expected","LiteralExpression","CallExpression","operator","_len","_key","newParsingContext","variables","Set","featureId","geometryType","getTypeFromHint","typeHint","encoded","parseCallExpression","_iterator2","_step2","Ops","Get","Var","Concat","GeometryType","Any","All","Not","Resolution","Zoom","Time","Equal","NotEqual","GreaterThan","GreaterThanOrEqualTo","LessThan","LessThanOrEqualTo","Multiply","Divide","Add","Subtract","Clamp","Mod","Pow","Abs","Floor","Ceil","Round","Sin","Cos","Atan","Sqrt","Match","Between","Interpolate","Coalesce","Case","In","Color","Id","Band","Palette","ToString","parsers","createParser","_ref","_ref2","withArgsCount","withGetArgs","_ref3","_ref4","firstArg","withVarArgs","withNoArgs","usesFeatureId","parseArgsOfType","usesGeometryType","narrowArgsType","parsedArgs","outputType","withEvenArgs","parseMatchArgs","parseInterpolateArgs","withOddArgs","parseCaseArgs","parseInArgs","parsePaletteArgs","varName","initialValue","operation","minArgs","maxArgs","argCount","plural","range","argType","expression","gotType","expectedType","sameType","JSON","stringify","argsCount","inputType","fallback","expectedInputType","interpolationType","interpolation","stop","condition","needleType","colors","parsedColors","returnType","_len2","argValidators","_key2","actualType","parser","computeGeometryType","substring","_expression","newEvaluationContext","buildExpression","actual","compileExpression","colorValue","compileAssertionExpression","compileAccessorExpression","compileLogicalExpression","compileComparisonExpression","compileNumericExpression","compileCaseExpression","compileMatchExpression","compileInterpolateExpression","compileConvertExpression","nameExpression","op","previousInput","previousOutput","isColor","interpolateColor","interpolateNumber","input1","output1","input2","output2","rgba1","rgba2","lcha1","lcha2","deltaHue","lcha","_Icon","_Style","_Text","_cpu","always","rulesToStyleFunction","rules","parsingContext","evaluator","buildRuleSet","evaluationContext","flatStylesToStyleFunction","flatStyles","evaluators","buildStyle","nonNullCount","compiledRules","rule","styleLength","someMatched","filterEvaluator","else","styleEvaluator","flatStyle","evaluateFill","buildFill","evaluateStroke","buildStroke","evaluateText","buildText","evaluateImage","buildImage","evaluateZIndex","numberEvaluator","empty","prefix","evaluateColor","patternEvaluator","colorLikeEvaluator","evaluateWidth","evaluateLineCap","stringEvaluator","evaluateLineJoin","evaluateLineDash","numberArrayEvaluator","evaluateLineDashOffset","evaluateMiterLimit","evaluateValue","evaluateBackgroundFill","evaluateBackgroundStroke","evaluateFont","evaluateMaxAngle","evaluateOffsetX","evaluateOffsetY","evaluateOverflow","booleanEvaluator","evaluatePlacement","evaluateRepeat","evaluateScale","sizeLikeEvaluator","evaluateRotateWithView","evaluateRotation","evaluateAlign","evaluateJustify","evaluateBaseline","evaluatePadding","optionalDeclutterMode","buildIcon","buildShape","buildCircle","srcName","requireString","evaluateAnchor","coordinateEvaluator","evaluateOpacity","evaluateDisplacement","optionalIconOrigin","optionalIconAnchorUnits","optionalColorLike","optionalString","optionalNumberArray","optionalNumber","optionalSize","icon","pointsName","radiusName","requireNumber","shape","evaluateRadius","Circle","srcEvaluator","offsetEvaluator","sizeEvaluator","patternSizeEvaluator","colorEvaluator","requireColorLike","requireNumberArray","requireSize","requireSizeLike","_Layer2","_rbush","_interopRequireWildcard","_style","_getRequireWildcardCache","WeakMap","has","RENDER_ORDER","BaseVectorLayer","_Layer","renderBuffer","updateWhileAnimating","updateWhileInteracting","declutter_","declutter","renderBuffer_","updateWhileAnimating_","updateWhileInteracting_","getRenderBuffer","getRenderOrder","getUpdateWhileAnimating","getUpdateWhileInteracting","declutterGroup","RBush","setRenderOrder","renderOrder","styleLike","toStyleLike","toStyleFunction","Instruction","BEGIN_GEOMETRY","BEGIN_PATH","CIRCLE","CLOSE_PATH","CUSTOM","DRAW_CHARS","DRAW_IMAGE","END_GEOMETRY","FILL","MOVE_TO_LINE_TO","SET_FILL_STYLE","SET_STROKE_STYLE","STROKE","fillInstruction","strokeInstruction","beginPathInstruction","closePathInstruction","VectorContext","drawCustom","drawGeometry","drawCircle","circleGeometry","drawFeature","drawGeometryCollection","geometryCollectionGeometry","drawLineString","lineStringGeometry","drawMultiLineString","multiLineStringGeometry","drawMultiPoint","multiPointGeometry","drawMultiPolygon","multiPolygonGeometry","drawPoint","pointGeometry","drawPolygon","polygonGeometry","drawText","setFillStrokeStyle","setImageStyle","imageStyle","declutterImageWithText","setTextStyle","textStyle","_Instruction","_VectorContext2","CanvasBuilder","_VectorContext","maxLineWidth","beginGeometryInstruction1_","beginGeometryInstruction2_","bufferedMaxExtent_","instructions","tmpCoordinate_","hitDetectionInstructions","applyPixelRatio","dashArray","dash","appendFlatPointCoordinates","getBufferedMaxExtent","tmpCoord","myEnd","appendFlatLineCoordinates","closed","skipFirst","lastXCoord","lastYCoord","nextCoord","skipped","lastRel","nextRel","drawCustomCoordinates_","builderEnds","builderEnd","beginGeometry","builderBegin","builderEndss","getEndss","myEnds","CanvasInstruction","endGeometry","finish","reverseHitDetectionInstructions","instruction","fillStyleColor","fillPatternScale","strokeStyleColor","strokeStyleLineCap","strokeStyleLineDash","strokeStyleLineDashOffset","strokeStyleLineJoin","strokeStyleWidth","strokeStyleMiterLimit","createFill","applyStroke","createStroke","updateFillStyle","currentFillStyle","updateStrokeStyle","currentStrokeStyle","currentLineCap","currentLineDash","currentLineDashOffset","currentLineJoin","currentLineWidth","currentMiterLimit","endGeometryInstruction","_Builder","CanvasImageBuilder","_CanvasBuilder","imagePixelRatio_","anchorX_","anchorY_","height_","originX_","originY_","declutterImageWithText_","myBegin","filteredFlatCoordinates","sharedData","origin","CanvasLineStringBuilder","drawFlatCoordinates_","moveToLineToInstruction","lastStroke","CanvasPolygonBuilder","drawFlatCoordinatess_","numEnds","setFillStrokeStyles_","circleInstruction","lineChunk","chunkLength","cursor","chunkM","currentChunk","_currentChunk$slice","_currentChunk$slice2","missing","matchingChunk","chunkStart","chunkEnd","acos","m12","m23","x12","y12","x23","y23","_linechunk","_straightchunk","TEXT_ALIGN","CanvasTextBuilder","labels_","textOffsetX_","textOffsetY_","textRotateWithView_","textRotation_","textFillState_","fillStates","textStrokeState_","strokeStates","textState_","textStates","textKey_","fillKey_","strokeKey_","fillState","strokeState","textState","flatOffset","oo","cc","chunk","chunkBegin","drawChars_","geometryWidths","getFlatMidpoints","getFlatInteriorPoints","beg","keep","saveTextStates_","p0","p1","p2","p3","strokeKey","textKey","fillKey","baseline","textFillStyle","textStrokeStyle","textScale","textOffsetX","textOffsetY","textRotateWithView","textRotation","_ImageBuilder","_LineStringBuilder","_PolygonBuilder","_TextBuilder","BATCH_CONSTRUCTORS","PolygonBuilder","Builder","ImageBuilder","LineStringBuilder","TextBuilder","BuilderGroup","tolerance_","maxExtent_","resolution_","buildersByZIndex_","builderInstructions","zKey","builders","builderKey","builderInstruction","getBuilder","builderType","zIndexKey","replays","replay","Constructor","LayerRenderer","boundHandleImageChange_","handleImageChange_","layer_","loadedTileCallback","tiles","tile","tileCoord","createLoadedTileFinder","tileRange","forEachLoadedTile","forEachFeatureAtCoordinate","hitTolerance","matches","getLayer","handleFontsChanged","renderIfReadyAndVisible","loadImage","RenderEvent","inversePixelTransform","ZIndexContext","instructions_","context_","Proxy","pushMethodArgs_","pushFunction","draw","instructionsAtIndex","instructionAtIndex","_ZIndexContext","pixelContext","createPixelContext","CanvasLayerRenderer","_LayerRenderer","container","renderedResolution","tempTransform","pixelTransform","deferredContext_","containerReused","pixelContext_","col","row","useContainer","backgroundColor","layerClassName","firstElementChild","transformOrigin","clipUnrotated","topLeft","topRight","bottomRight","bottomLeft","coordinateToPixelTransform","inverted","beginPath","moveTo","clip","prepareContainer","canvasTransform","toTransformString","dispatchRenderEvent_","preRender","postRender","renderDeferredInternal","getRenderContext","getRenderTransform","drawTextOnPath","startM","segmentM","advance","beginX","beginY","startOffset","startLength","endM","flat","singleSegment","previousAngle","iStart","charLength","chars","_textpath","tmpExtent","p4","getDeclutterBox","replayImageOrLabelArgs","declutterBox","rtlRegEx","fromCharCode","horizontalTextAlign","align","createTextChunks","acc","line","Executor","overlaps","deferredRendering","alignAndScaleFill_","coordinateCache_","renderedTransform_","pixelCoordinates_","viewRotation_","widths_","zIndexContext_","getZIndexContext","createLabel","textIsArray","_getTextDimensions","renderWidth","leftRight","strokeInstructions","fillInstructions","lineOffset","widthHeightIndex","lineWidthIndex","previousFont","fillStrokeArgs","replayTextBackground_","setStrokeStyle_","calculateImageOrLabelDimensions_","sheetWidth","sheetHeight","snapToPixel","fillStroke","boxW","boxH","boxX","boxY","drawImageX","drawImageY","drawImageW","drawImageH","replayImageOrLabel_","scaledCanvasSize","imageOrLabel","dimensions","box","strokePadding","alignAndScale","repeatSize","drawLabelWithPointPlacement_","execute_","featureCallback","hitExtent","declutterTree","zIndexContext","pixelCoordinates","transformSetFromArray","prevX","prevY","roundX","roundY","pendingFill","pendingStroke","lastFillInstruction","lastStrokeInstruction","coordinateCache","viewRotation","viewRotationFromTransform","batchSize","currentGeometry","labelWithAnchor","widthIndex","imageArgs","imageDeclutterMode","imageDeclutterBox","imageDeclutter","renderImage","renderText","collides","insert","measurePixelRatio","pixelRatioScale","cachedWidths","pathLength","textLength","drawChars","part","execute","executeHitDetection","_Executor","ALL","DECLUTTER","NON_DECLUTTER","ExecutorGroup","allInstructions","overlaps_","executorsByZIndex_","hitDetectionContext_","hitDetectionTransform_","renderedContext_","deferredZIndexContexts_","createExecutors_","flatClipCoords","getClipCoords","executors","instructionByZindex","hasExecutors","candidates","declutteredFeatures","contextSize","newContext","indexes","getPixelIndexArray","imageData","idx","zs","executor","targetContext","builderTypes","maxBuilderTypes","_loop","requireClip","getDeferredZIndexContexts","getRenderedContext","deferredZIndexContexts","circlePixelIndexArrayCache","maxDistanceSq","distances","distanceSq","pixelIndex","CanvasImmediateRenderer","userTransform","transformRotation_","squaredTolerance_","userTransform_","contextFillState_","contextStrokeState_","contextTextState_","fillState_","strokeState_","imageAnchorX_","imageAnchorY_","imageHeight_","imageOpacity_","imageOriginX_","imageOriginY_","imageRotateWithView_","imageRotation_","imageScale_","imageWidth_","textScale_","tmpLocalTransform_","drawImages_","localTransform","drawText_","setContextFillState_","setContextStrokeState_","setContextTextState_","strokeText","fillText","moveToLineTo_","close","drawRings_","setTransform","getGeometriesArray","flatMidpoint","geometryExtent","flatMidpoints","flatInteriorPoint","flatInteriorPoints","contextFillState","contextStrokeState","contextTextState","imagePixelRatio","imageAnchor","imageOrigin","imageScale","textFillStyleColor","textStrokeStyleColor","textStrokeStyleLineCap","textStrokeStyleLineDash","textStrokeStyleLineDashOffset","textStrokeStyleLineJoin","textStrokeStyleWidth","textStrokeStyleMiterLimit","textFont","textText","textTextAlign","textTextBaseline","_Immediate","HIT_DETECT_RESOLUTION","createHitDetectionImageData","features","userExtent","imageSmoothingEnabled","featureCount","indexFactor","featuresByZIndex","featureStyleFunction","padStart","originalStyle","imgSize","imgContext","byGeometryType","getGeometriesArrayRecursive","zIndexKeys","geomAndStyle","kk","hitDetect","resultFeatures","SIMPLIFY_TOLERANCE","GEOMETRY_RENDERERS","renderPointGeometry","renderLineStringGeometry","renderPolygonGeometry","renderMultiPointGeometry","renderMultiLineStringGeometry","renderMultiPolygonGeometry","renderGeometryCollectionGeometry","renderCircleGeometry","defaultOrder","feature1","feature2","getSquaredTolerance","getTolerance","builderGroup","circleReplay","textReplay","renderFeature","replayGroup","loadingPromises","all","renderFeatureInternal","renderGeometry","geometryRenderer","declutterBuilderGroup","lineStringReplay","polygonReplay","hasText","imageReplay","hasImage","_BuilderGroup","_ExecutorGroup","_hitdetect","_vector","CanvasVectorLayerRenderer","_CanvasLayerRenderer","vectorLayer","boundHandleStyleImageChange_","handleStyleImageChange_","animatingOrInteracting_","hitDetectionImageData_","clipped_","renderedFeatures_","renderedRevision_","renderedResolution_","renderedExtent_","wrappedRenderedExtent_","renderedRotation_","renderedCenter_","renderedProjection_","renderedPixelRatio_","renderedRenderOrder_","renderedFrameDeclutter_","replayGroup_","replayGroupChanged","clipping","targetContext_","renderWorlds","executorGroup","declutterable","vectorSource","viewHints","getWrapX","endWorld","world","setDrawContext_","resetDrawContext_","layerIndex","hasRenderListeners","getSquaredRenderTolerance","lastIndexOf","executorGroups","animating","interacting","frameStateExtent","vectorLayerRevision","vectorLayerRenderBuffer","vectorLayerRenderOrder","defaultRenderOrder","renderedExtent","loadExtents","gutter","wrapCoordinateX","loadExtent","wrapExtentX","CanvasBuilderGroup","getRenderTolerance","loadFeatures","dirty","getFeaturesInExtent","replayGroupInstructions","getOverlaps","_BaseVector","_VectorLayer","VectorLayer","_BaseVectorLayer","maxEntries","rbush_","RBush_","items_","extents","items","uid","bbox","getAll","getInExtent","search","forEach_","forEachInExtent","toJSON","rbush","setCenterAndRadius","getRadiusSquared_","circleExtent","GeometryCollection","geometries_","changeEventsKeys_","listenGeometriesChange_","unlistenGeometriesChange_","geometryCollection","cloneGeometries","geometriesArray","simplifiedGeometries","simplified","simplifiedGeometryCollection","setGeometries","setGeometriesArray","_LineString","MultiLineString","lineStrings","appendLineString","multiLineString","getLineString","getLineStrings","midpoints","midpoint","MultiPoint","appendPoint","multiPoint","getPoint","_MultiPoint","_center","MultiPolygon","endss_","flatInteriorPointsRevision_","flatInteriorPoints_","polygons","thisEndss","appendPolygon","newEndss","multiPolygon","linearRingssArea","linearRingssCenter","getInteriorPoints","getPolygon","prevEnds","getPolygons","lastEnds","_GeometryCollection","_MultiLineString","_MultiPolygon","_Feature","_geom","RenderFeature","type_","flatCoordinates_","flatMidpoints_","properties_","stride_","simplifiedGeometry_","_this$ends_","enableSimplifyTransformed","toGeometry","toFeature","geometryName","Source","attributions_","adaptAttributions","attributionsCollapsible_","attributionsCollapsible","wrapX_","interpolate_","viewResolver","viewRejector","viewPromise_","getAttributionsCollapsible","getInterpolate","refresh","setAttributions","setState","attributionLike","ADDFEATURE","CHANGEFEATURE","REMOVEFEATURE","FEATURESLOADSTART","FEATURESLOADEND","FEATURESLOADERROR","getZForResolution","getTileRangeForExtentAndZ","getTileCoordExtent","withCredentials","loadFeaturesXhr","url","success","failure","xhr","XMLHttpRequest","open","responseType","status","responseText","responseXML","response","readFeatures","featureProjection","readProjection","_unused","onerror","send","dataProjection","addFeatures","setWithCredentials","xhrWithCredentials","_Collection","_RBush","_Source2","_VectorEventType","_loadingstrategy","_featureloader","VectorSourceEvent","VectorSource","_Source","loader_","format_","url_","strategy_","strategy","allStrategy","useSpatialIndex","featuresRtree_","loadedExtentsRtree_","loadingExtentsCount_","nullGeometryFeatures_","idIndex_","uidIndex_","featureChangeKeys_","featuresCollection_","collection","addFeaturesInternal","bindFeaturesCollection_","addFeature","addFeatureInternal","featureKey","addToIndex_","setupChangeEvents_","VectorEventType","handleFeatureChange_","valid","indexedFeature","newFeatures","geometryFeatures","modifyingCollection","removeFeature","fast","_this4","removeAndIgnoreReturn","removeFeatureInternal","clearEvent","forEachFeature","forEachFeatureAtCoordinateDirect","forEachFeatureInExtent","forEachFeatureIntersectingExtent","getFeaturesCollection","getFeaturesAtCoordinate","_this5","anExtent","getClosestFeatureToCoordinate","closestFeature","previousMinSquaredDistance","minDistance","getFeatureById","getFeatureByUid","getFormat","getUrl","sid","removeFromIdIndex_","hasFeature","_this6","loadedExtentsRtree","extentsToLoad","extentToLoad","alreadyLoaded","removeLoadedExtent","removeFeatures","removedFeatures","removedFeature","featureChangeKeys","idString","removed","setLoader","setUrl","toContext","scaleTransform","getVectorContext","CanvasRenderingContext2D","canvasPixelRatio","multiplyTransform","getRenderPixel","geoA","geoB","geoStack","fractionStack","fractions","maxIterations","geoM","fracA","fracB","fracM","greatCircleArc","lon2","geoProjection","cosLat1","sinLat1","cosLat2","sinLat2","cosDeltaLon","sinDeltaLon","frac","D","cosD","sinD","meridian","epsg4326Projection","parallel","_Vector","_Vector2","_render","_geodesic","DEFAULT_STROKE_STYLE","INTERVALS","Graticule","maxLines","targetSize","showLabels","lonLabelFormatter","latLabelFormatter","lonLabelPosition","latLabelPosition","lonLabelStyle","latLabelStyle","intervals","maxLat_","maxLon_","minLat_","minLon_","maxX_","maxY_","minX_","minY_","targetSize_","maxLines_","meridians_","parallels_","strokeStyle_","fromLonLatTransform_","toLonLatTransform_","projectionCenterLonLat_","bottomLeft_","bottomRight_","topLeft_","topRight_","meridiansLabels_","parallelsLabels_","lonLabelFormatter_","latLabelFormatter_","lonLabelPosition_","latLabelPosition_","lonLabelStyleBase_","lonLabelStyle_","latLabelStyleBase_","latLabelStyle_","drawLabels_","intervals_","loaderFunction","strategyFunction","featurePool_","lineStyle_","loadedExtent_","realWorldExtent","renderExtent","updateProjectionInfo","equivalentProjection","updateProjectionInfo_","createGraticule_","featuresColl","poolIndex","addMeridian_","minLat","maxLat","getMeridian_","geom","addParallel_","minLon","maxLon","getParallel_","rotationCenter","rotationExtent","unrotatedWidth","unrotatedHeight","startWorld","labelsAtStart","vectorContext","textPoint","getMeridianPoint_","getParallelPoint_","getInterval_","validCenterP","centerLonLat","centerLon","centerLat","cnt","validExtentP","validExtent","clampedLat","dist","bottom","top","clampedBottom","clampedTop","coordinate0","getMeridians","clampedLeft","clampedRight","getParallels","toLonLatTransform","lonLatCoordinates","worldExtentP","ImageCanvas","_ImageWrapper","error_","getError","handleLoad_","_TileState","Tile","interimTile","transition_","transition","transitionStarts_","release","TileState","getKey","getInterimTile","refreshInterimChain","getTileCoord","getAlpha","time","inTransition","endTransition","_Tile2","ImageTile","_Tile","tileLoadFunction","unlisten_","tileLoadFunction_","unlistenImage_","getBlankImage","naturalWidth","naturalHeight","Kinetic","decay","minVelocity","delay","decay_","minVelocity_","delay_","initialVelocity_","lastIndex","firstIndex","MapRenderer","map_","dispatchRenderEvent","calculateMatrices2D","pixelToCoordinateTransform","checkWrapped","layerFilter","thisArg2","translatedCoordinate","offsets","layerStates","numLayers","order","hasFeatureAtCoordinate","getMap","scheduleExpireIconCache","postRenderFunctions","expireIconCache","_Map","CompositeMapRenderer","_MapRenderer","fontChangeListenerKey_","redrawText","element_","getViewport","firstChild","children_","renderedVisible_","renderedLayerStates","previousElement","sourceState","GroupEvent","LAYERS","LayerGroup","layers","layersListenerKeys_","listenerKeys_","handleLayersChanged_","setLayers","handleLayerChange_","getLayers","handleLayersAdd_","handleLayersRemove_","layersArray","registerLayerListeners_","handleLayerGroupAdd_","handleLayerGroupRemove_","collectionEvent","currentLayers","pos","ownLayerState","defaultZIndex","MapEvent","_MapEvent2","MapBrowserEvent","_MapEvent","originalEvent","dragging","activePointers","pixel_","coordinate_","getEventPixel","getCoordinateFromPixel","SINGLECLICK","POINTERDRAG","POINTERMOVE","POINTERDOWN","POINTERUP","POINTEROVER","POINTEROUT","POINTERENTER","POINTERLEAVE","POINTERCANCEL","_MapBrowserEvent","_MapBrowserEventType","_Target2","MapBrowserEventHandler","moveTolerance","clickTimeoutId_","emulateClicks_","dragging_","dragListenerKeys_","moveTolerance_","down_","activePointers_","trackedTouches_","pointerdownListenerKey_","PointerEventType","handlePointerDown_","originalPointerMoveEvent_","relayedListenerKey_","relayMoveEvent_","boundHandleTouchMove_","handleTouchMove_","emulateClick_","pointerEvent","newEvent","MapBrowserEventType","clearTimeout","updateActivePointers_","pointerId","handlePointerUp_","isMouseActionButton_","button","PointerEvent","doc","getOwnerDocument","handlePointerMove_","getRootNode","isMoving_","cancelable","clientX","clientY","MOVESTART","MOVEEND","LOADSTART","LOADEND","LAYERGROUP","SIZE","TARGET","VIEW","PriorityQueue","priorityFunction","keyFunction","priorityFunction_","keyFunction_","elements_","priorities_","queuedElements_","dequeue","elements","priorities","siftUp_","elementKey","enqueue","priority","siftDown_","getCount","getLeftChildIndex_","getRightChildIndex_","getParentIndex_","heapify_","isKeyQueued","isQueued","count","startIndex","lIndex","rIndex","smallerChildIndex","parentIndex","reprioritize","_PriorityQueue2","TileQueue","_PriorityQueue","tilePriorityFunction","tileChangeCallback","boundHandleTileChange_","handleTileChange","tileChangeCallback_","tilesLoading_","tilesLoadingKeys_","added","getTilesLoading","tileKey","loadMoreTiles","maxTotalLoading","maxNewLoads","newLoads","getTilePriority","tileSourceKey","tileCenter","tileResolution","wantedTiles","_MapEventType","Control","pointerEvents","target_","setTarget","getOverlayContainerStopEvent","MapEventType","mapEvent","getElementById","_Control2","_regeneratorRuntime","asyncIterator","toStringTag","define","wrap","Generator","Context","makeInvokeMethod","tryCatch","GeneratorFunction","GeneratorFunctionPrototype","defineIteratorMethods","_invoke","AsyncIterator","invoke","__await","callInvokeWithMethodAndArg","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","resultName","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","displayName","isGeneratorFunction","mark","awrap","async","rval","handle","_catch","delegateYield","asyncGeneratorStep","_asyncToGenerator","_next","_throw","Attribution","_Control","ulElement_","collapsed_","collapsed","userCollapsed_","overrideCollapsible_","collapsible","collapsible_","tipLabel","expandClassName","collapseLabel","collapseClassName","collapseLabel_","textContent","label_","activeLabel","toggleButton_","setAttribute","title","handleClick_","cssClasses","renderedAttributions_","collectSourceAttributions_","visibleAttributions","getAllLayers","flatMap","setCollapsible","_updateElement_","_callee","_callee$","_context","attribution","updateElement_","_x","handleToggle_","classList","toggle","getCollapsible","setCollapsed","getCollapsed","Rotate","compassClassName","callResetNorth_","resetNorth","duration_","autoHide_","autoHide","resetNorth_","contains","zoomInClassName","zoomOutClassName","zoomInLabel","zoomOutLabel","zoomInTipLabel","zoomOutTipLabel","inElement","createTextNode","outElement","zoomByDelta_","currentZoom","newZoom","_Attribution","_Rotate","_Zoom","defaults","controls","zoomControl","zoomOptions","rotateControl","rotateOptions","attributionControl","attributionOptions","ACTIVE","Interaction","setActive","getActive","InteractionProperty","mapBrowserEvent","active","pan","zoomByDelta","_Interaction2","DoubleClickZoom","_Interaction","delta_","stopEvent","browserEvent","shiftKey","PointerInteraction","handleDownEvent","handleDragEvent","handleMoveEvent","handleUpEvent","stopDown","handlingDownUpSequence","targetPointers","getPointerCount","updateTrackedPointers_","handledUp","handled","centroid","conditions","pass","altKeyOnly","altKey","metaKey","ctrlKey","altShiftKeysOnly","focus","targetElement","getTargetElement","activeElement","focusWithTabindex","hasAttribute","click","mouseActionButton","never","pointerMove","singleClick","doubleClick","noModifierKeys","platformModifierKeyOnly","platformModifierKey","shiftKeyOnly","targetNotEditable","tagName","isContentEditable","mouseOnly","pointerType","touchOnly","pointerEvt","penOnly","primaryAction","isPrimary","_Pointer","_condition","DragPan","_PointerInteraction","kinetic_","kinetic","lastCentroid","lastPointersCount_","panning_","condition_","onFocusOnly","noKinetic_","centroidFromPointers","scaleCoordinate","centerpx","getPixelFromCoordinateInternal","getCoordinateFromPixelInternal","DragRotate","lastAngle_","RenderBox","startPixel_","endPixel_","render_","startPixel","endPixel","px","getOverlayContainer","setPixels","createOrUpdateGeometry","pixels","_Box","DragBoxEventType","BOXSTART","BOXDRAG","BOXEND","BOXCANCEL","DragBoxEvent","DragBox","box_","minArea_","minArea","onBoxEnd","boxEndCondition_","boxEndCondition","defaultBoxEndCondition","completeBox","_DragBox2","DragZoom","_DragBox","out_","out","UP","DOWN","_Key","KeyboardPan","defaultCondition_","pixelDelta_","pixelDelta","keyEvent","Key","mapUnitsDelta","KeyboardZoom","MouseWheelZoom","totalDelta_","lastDelta_","timeout_","timeout","useAnchor_","useAnchor","constrainResolution_","lastAnchor_","startTime_","timeoutId_","mode_","trackpadEventGap_","trackpadTimeoutId_","deltaPerZoom_","endInteraction_","wheelEvent","deltaMode","WheelEvent","DOM_DELTA_PIXEL","DOM_DELTA_LINE","timeLeft","handleWheelZoom_","setMouseAnchor","PinchRotate","pointerOptions","rotating_","rotationDelta_","threshold_","threshold","rotationDelta","touch0","touch1","PinchZoom","lastDistance_","lastScaleDelta_","scaleDelta","_DoubleClickZoom","_DragPan","_DragRotate","_DragZoom","_KeyboardPan","_KeyboardZoom","_Kinetic","_MouseWheelZoom","_PinchRotate","_PinchZoom","interactions","altShiftDragRotate","doubleClickZoom","zoomDelta","zoomDuration","dragPan","pinchRotate","pinchZoom","keyboard","mouseWheelZoom","shiftDragZoom","_Composite","_Group","_MapBrowserEventHandler","_MapProperty","_EventType3","_TileQueue","_defaults","_defaults2","removeLayerMapProperty","setLayerMapProperty","Map","optionsInternal","createOptionsInternal","renderComplete_","loaded_","boundHandleBrowserEvent_","handleBrowserEvent","maxTilesLoading_","maxTilesLoading","postRenderTimeoutHandle_","animationDelayKey_","animationDelay_","coordinateToPixelTransform_","pixelToCoordinateTransform_","frameIndex_","frameState_","previousExtent_","viewPropertyListenerKey_","viewChangeListenerKey_","layerGroupPropertyListenerKeys_","viewport_","overlayContainer_","overlayContainerStopEvent_","mapBrowserEventHandler_","keyboardEventTarget_","keyboardEventTarget","targetChangeHandlerKeys_","targetElement_","resizeObserver_","ResizeObserver","updateSize","defaultControls","defaultInteractions","overlays_","overlays","overlayIdIndex_","postRenderFunctions_","tileQueue_","handleTileChange_","MapProperty","handleLayerGroupChanged_","handleViewChanged_","handleSizeChanged_","handleTargetChanged_","viewOptions","setView","addOverlayInternal_","control","interaction","addControl","getControls","addInteraction","getInteractions","addLayer","handleLayerAdd_","addOverlay","overlay","getOverlays","disconnect","forEachFeatureAtPixel","getFeaturesAtPixel","addLayersFrom","layerGroup","hasFeatureAtPixel","getEventCoordinate","getEventCoordinateInternal","viewport","viewportPosition","getBoundingClientRect","scaleX","scaleY","eventPosition","changedTouches","getTarget","getOverlayById","group","getLoadingOrNotReady","getPixelFromCoordinate","viewCoordinate","ownerDocument","handleMapBrowserEvent","rootNode","documentElement","interactionsArray","cont","handlePostRender","tileQueue","lowOnFrameBudget","unobserve","ShadowRoot","host","observe","handleViewPropertyChanged_","updateViewportSize_","handleLayerRemove_","isRendered","renderFrame_","renderSync","removeControl","removeInteraction","removeLayer","removeOverlay","previousFrameState","usedTiles","mapId","renderTargets","nextExtent","moveStart","equalsExtent","idle","setLayerGroup","oldLayerGroup","computedStyle","getClientRects","oldSize","ELEMENT","OFFSET","POSITIONING","Overlay","insertFirst","autoPan","mapPostrenderListenerKey","handleElementChanged","handleMapChanged","handleOffsetChanged","handlePositionChanged","handlePositioningChanged","setElement","setOffset","setPositioning","positioning","setPosition","getElement","getOffset","getPositioning","updatePixelPosition","performAutoPan","panIntoView","panIntoViewOptions","mapRect","getRect","overlayRect","myMargin","margin","offsetLeft","offsetRight","offsetTop","offsetBottom","centerPx","newCenterPx","panOptions","pageXOffset","pageYOffset","mapSize","updateRenderedPosition","posX","posY","getOptions","LRUCache","highWaterMark","count_","entries_","oldest_","newest_","expireCache","containsKey","entry","value_","key_","newer","older","getValues","peekLast","peekLastKey","peekFirstKey","peek","_this$entries_$key","getKeyZXY","getCacheKeyForTileKey","_tileKey$substring$sp","_tileKey$substring$sp2","fromKey","hash","withinExtentAndZ","getFullTileRange","_LRUCache2","_tilecoord","TileCache","_LRUCache","pruneExceptNewestZ","TileRange","containsTileRange","VectorRenderTile","urlTileCoord","getSourceTiles","loadingSourceTiles","hitDetectionImageData","replayState_","sourceTiles","errorTileKeys","wantedResolution","wrappedTileCoord","hasContext","getReplayState","renderedRenderOrder","renderedRevision","renderedTileResolution","renderedTileRevision","renderedTileZ","VectorTile","features_","onLoad","setFeatures","onError","_Geolocation","_Graticule","_ImageCanvas","_ImageTile","_Overlay","_TileCache","_TileRange","_VectorRenderTile","_VectorTile","ARRAY_BUFFER","ELEMENT_ARRAY_BUFFER","STREAM_DRAW","STATIC_DRAW","DYNAMIC_DRAW","UNSIGNED_BYTE","UNSIGNED_SHORT","UNSIGNED_INT","FLOAT","CONTEXT_IDS","attributes","preserveDrawingBuffer","antialias","supportedExtensions","getSupportedExtensions","gl","_webgl","BufferUsage","WebGLArrayBuffer","usage","usage_","ofSize","getArrayClassForType","fromArray","fromArrayBuffer","getUsage","Float32Array","Uint32Array","LOST","RESTORED","DEFAULT_VERTEX_SHADER","DEFAULT_FRAGMENT_SHADER","WebGLPostProcessingPass","gl_","webGlContext","scaleRatio_","scaleRatio","renderTargetTexture_","createTexture","renderTargetTextureSize_","frameBuffer_","createFramebuffer","depthBuffer_","createRenderbuffer","vertexShader","createShader","VERTEX_SHADER","shaderSource","compileShader","fragmentShader","FRAGMENT_SHADER","renderTargetProgram_","createProgram","attachShader","linkProgram","renderTargetVerticesBuffer_","createBuffer","verticesArray","bindBuffer","bufferData","renderTargetAttribLocation_","getAttribLocation","renderTargetUniformLocation_","getUniformLocation","renderTargetOpacityLocation_","renderTargetTextureLocation_","uniforms_","uniforms","location","getGL","init","textureSize","drawingBufferWidth","drawingBufferHeight","bindFramebuffer","FRAMEBUFFER","getFrameBuffer","bindRenderbuffer","RENDERBUFFER","getDepthBuffer","internalFormat","RGBA","bindTexture","TEXTURE_2D","texImage2D","texParameteri","TEXTURE_MIN_FILTER","LINEAR","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","framebufferTexture2D","COLOR_ATTACHMENT0","renderbufferStorage","DEPTH_COMPONENT16","framebufferRenderbuffer","DEPTH_ATTACHMENT","nextPass","preCompose","postCompose","activeTexture","TEXTURE0","canvasId","getContextAttributes","clearColor","clearDepth","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","DEPTH_TEST","enable","BLEND","blendFunc","ONE","ONE_MINUS_SRC_ALPHA","useProgram","enableVertexAttribArray","vertexAttribPointer","uniform2f","uniform1i","uniform1f","applyUniforms","drawArrays","TRIANGLES","textureSlot","uniform","ImageData","texture","Uint8Array","uniform3f","uniform4f","fromTransform","mat4","_ContextEventType","_PostProcessingPass","_mat","ShaderType","DefaultUniform","PROJECTION_MATRIX","SCREEN_TO_WORLD_MATRIX","TIME","ZOOM","VIEWPORT_SIZE_PX","PIXEL_RATIO","HIT_DETECTION","AttributeType","canvasCache","getSharedCanvasCacheKey","uniqueCanvasCacheKeyCount","getUniqueCanvasCacheKey","getOrCreateContext","cacheItem","users","getExtension","loseContext","WebGLHelper","boundHandleWebGLContextLost_","handleWebGLContextLost","boundHandleWebGLContextRestored_","handleWebGLContextRestored","canvasCacheKey_","canvasCacheKey","bufferCache_","extensionCache_","currentProgram_","needsToBeRecreated_","ContextEventType","offsetRotateMatrix_","offsetScaleMatrix_","tmpMat4_","uniformLocationsByProgram_","attribLocationsByProgram_","setUniforms","postProcessPasses_","postProcesses","shaderCompileErrors_","addUniforms","canvasCacheKeyMatches","bufferKey","bufferCache","webGlBuffer","flushBufferData","deleteBuffer","buf","bufferCacheEntry","isContextLost","prepareDraw","disableAlphaBlend","enableDepth","getCanvas","depthRange","ZERO","depthFunc","LEQUAL","slot","uniformName","prepareDrawToRenderTarget","renderTarget","getFramebuffer","getDepthbuffer","getTexture","drawElements","elementType","elementSize","numItems","offsetInBytes","finalizeDraw","applyFrameState","setUniformFloatValue","setUniformFloatVec2","applyHitDetectionUniform","loc","WebGLTexture","prevValue","imageReady","setUniformMatrixValue","program","shader","getProgram","fragmentShaderSource","vertexShaderSource","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","deleteShader","getProgramParameter","LINK_STATUS","getProgramInfoLog","programUid","getAttributeLocation","makeProjectionTransform","uniform2fv","setUniformFloatVec4","uniform4fv","uniformMatrix4fv","enableAttributeArray_","attribName","enableAttributes","computeAttributesStride","attr","getByteSizeFromType","needsToBeRecreated","BYTES_PER_ELEMENT","Uint16Array","_Helper","WebGLLayerRenderer","inversePixelTransform_","postProcesses_","helper","removeHelper","dispatchPreComposeEvent","dispatchPostComposeEvent","incrementGroup","groupNumber","afterHelperCreated","prepareFrameInternal","tmpArray4","WebGLRenderTarget","helper_","texture_","framebuffer_","depthbuffer_","data_","dataCacheDirty_","updateSize_","clearCachedData","readAll","readPixels","readPixel","WebGLWorkerMessageType","GENERATE_POLYGON_BUFFERS","GENERATE_POINT_BUFFERS","GENERATE_LINE_STRING_BUFFERS","_earcut","LINESTRING_ANGLE_COSINE_CUTOFF","tmpArray_","bufferPositions_","vertexPosition","indexPosition","writePointVertex","writePointFeatureToBuffers","elementIndex","vertexBuffer","indexBuffer","customAttributesSize","bufferPositions","baseVertexAttrsCount","baseInstructionsCount","customAttrs","vPos","iPos","baseIndex","writeLineSegmentToBuffers","segmentStartIndex","segmentEndIndex","beforeSegmentIndex","afterSegmentIndex","vertexArray","indexArray","customAttributes","toWorldTransform","currentLength","currentAngleTangentSum","p0world","p1world","angleBetween","pA","pB","lenA","tangentA","orthoA","lenB","tangentB","angle1","newAngleTangentSum","joinBefore","joinAfter","pBworld","pAworld","computeParameters","vertexIndex","angleSum","sign","writePolygonTrianglesToBuffers","polygonStartIndex","instructionsPerVertex","attributesPerVertex","instructionsIndex","ringsCount","verticesCount","holes","flatCoords","earcut","getBlankImageData","createImageData","colorEncodeId","radix","divide","colorDecodeId","mult","Worker","Blob","Buffer","URL","createObjectURL","getWorldParameters","_Buffer","_RenderTarget","_constants","_utils","_webgl2","_worldUtil","WebGLPointsLayerRenderer","_WebGLLayerRenderer","_options$hitDetection","_this$attributes","projectionMatrixTransform","sourceRevision_","verticesBuffer_","indicesBuffer_","vertexShader_","fragmentShader_","program_","hitDetectionEnabled_","hitDetectionEnabled","attribute","currentTransform_","renderTransform_","invertRenderTransform_","renderInstructions_","hitRenderTarget_","lastSentId","worker_","createWebGLWorker","received","projectionTransform","makeInverseTransform","renderInstructions","featureCache_","featureCount_","sourceListenKeys_","handleSourceFeatureAdded_","handleSourceFeatureChanged_","handleSourceFeatureDelete_","handleSourceFeatureClear_","_getWorldParameters","_getWorldParameters2","viewNotMoving","extentChanged","sourceChanged","BaseVector","rebuildBuffers_","baseInstructionLength","singleInstructionLength","totalSize","featureCache","tmpCoords","tmpColor","featureUid","userCoords","hitColor","postMessage","forHitDetection","translateTransform","renderCount","terminate","PaletteTexture","NEAREST","TEXTURE_MAG_FILTER","_delete","deleteTexture","ERROR_THRESHOLD","asImageLike","asArrayLike","Uint8ClampedArray","DataView","sharedContext","toArray","defaultSize","DataTile","MAX_SUBDIVISION","MAX_TRIANGLE_WIDTH","Triangulation","targetProj","targetExtent","maxSourceExtent","errorThreshold","destinationResolution","sourceProj_","targetProj_","transformInvCache","transformInv","transformInv_","maxSourceExtent_","errorThresholdSquared_","triangles_","wrapsXInSource_","canWrapXInSource_","sourceWorldWidth_","targetWorldWidth_","destinationTopLeft","destinationTopRight","destinationBottomRight","destinationBottomLeft","sourceTopLeft","sourceTopRight","sourceBottomRight","sourceBottomLeft","maxSubdivision","log2","addQuad_","leftBound","triangle","newTriangle","addTriangle_","aSrc","bSrc","cSrc","dSrc","sourceQuadExtent","sourceCoverageX","sourceWorldWidth","wrapsX","needsSubdivision","targetQuadExtent","targetCoverageX","isNotFinite","centerSrc","centerSrcEstimX","centerSrcErrorSquared","bc","bcSrc","da","daSrc","ab","abSrc","cd","cdSrc","calculateSourceExtent","getTriangles","brokenDiagonalRendering_","drawTestTriangle","u1","u2","verifyBrokenDiagonalRendering","isBrokenDiagonalRendering","calculateSourceResolution","targetMetersPerUnit","compensationFactor","calculateSourceExtentResolution","triangulation","sources","renderEdges","drawSingle","clipExtent","pixelRound","sourceDataExtent","stitchContext","stitchScale","inverseScale","xPos","yPos","rect","srcWidth","srcHeight","targetTopLeft","u0","v0","sourceNumericalShiftX","sourceNumericalShiftY","augmentedMatrix","affineCoefs","steps","ud","vd","_DataTile2","_Triangulation","_reproj","ReprojDataTile","_DataTile","gutter_","reprojData_","reprojError_","reprojSize_","sourceTileGrid_","sourceTileGrid","targetTileGrid_","targetTileGrid","wrappedTileCoord_","sourceTiles_","sourcesListenerKeys_","sourceZ_","sourceProjExtent","sourceTileGridExtent","clipExtent_","maxTargetExtent","limitedTargetExtent","errorThresholdInPixels","triangulation_","sourceExtents","sourceRange","getTile","getTileFunction","srcX","srcY","reproject_","dataSources","_this2$clipExtent_","tileData","arrayData","pixelSize","isFloat","pixelCount","DataType","tileDataR","bytesPerElement","bytesPerPixel","bytesPerRow","byteLength","bandCount","packedLength","packedData","dataIndex","rowOffset","colCount","rowIndex","colIndex","dataType","getTileSize","targetWidth","targetHeight","dataR","dataU","reprojs","reproj","dataSource","putImageData","renderReprojected","leftToLoad","sourceListenKey","unlistenSources_","ReprojTile","renderEdges_","BaseTileRepresentation","setTile","uploadTile","setReady","_BaseTileRepresentation","bindAndConfigure","resampleFilter","uploadImageTexture","uploadDataTexture","textureType","canInterpolate","unpackAlignment","LUMINANCE","LUMINANCE_ALPHA","RGB","oldUnpackAlignment","getParameter","UNPACK_ALIGNMENT","pixelStorei","TileTexture","_BaseTileRepresentati","textures","renderSize_","grid","sourceTileSize","textureCount","textureDataArrays","textureIndex","dataValue","bandIndex","textureData","textureBandIndex","getImagePixelData_","renderCol","renderRow","renderHeight","sourceWidth","sourceHeight","sourceWidthWithoutGutter","sourceHeightWithoutGutter","sourceCol","sourceRow","getArrayPixelData_","sourceSize","getPixelData","Uniforms","TILE_TRANSFORM","TRANSITION_ALPHA","DEPTH","RENDER_EXTENT","PATTERN_ORIGIN","GLOBAL_ALPHA","depthForZ","newTileRepresentationLookup","tileIds","representationsByZ","lookupHasTile","tileRepresentationLookup","addTileRepresentationToLookup","tileRepresentation","getRenderExtent","gridExtent","getTileGridForProjection","getTileCoordKey","WebGLBaseTileLayerRenderer","tileLayer","renderComplete","tileTransform_","tempMat4","createMat4","tempTileRange_","tempTileCoord_","createTileCoord","tempSize_","tileRepresentationCache","isDrawableTile_","tileState","useInterimTilesOnError","getUseInterimTilesOnError","clearCache","createTileRepresentation","enqueueTiles","initialZ","preload","tileSource","getGutterForProjection","minZ","zDirection","tileQueueKey","getTileCoordCenter","beforeTilesRender","tilesWithAlpha","beforeTilesMaskRender","renderTile","tileTransform","tileSize","tileOrigin","tileExtent","depth","renderTileMask","tileZ","drawTile_","alphaLookup","tileCoordKey","tileWidthWithGutter","tileHeightWithGutter","aspectRatio","centerI","centerJ","tileScale","tileCenterI","tileCenterJ","resetTransform","rotateTransform","getPreload","targetZ","blend","coveredByChildren","findAltTiles_","parentZ","coveredByParent","_iterator3","_step3","_iterator4","_step4","postRenderFunction","updateCacheSize","altZ","getTileRangeForTileCoordAndZ","covered","_TileTexture","_TileLayerBase","ownKeys","getOwnPropertySymbols","_objectSpread","getOwnPropertyDescriptors","defineProperties","BaseUniforms","TILE_TEXTURE_ARRAY","TEXTURE_PIXEL_WIDTH","TEXTURE_PIXEL_HEIGHT","TEXTURE_RESOLUTION","TEXTURE_ORIGIN_X","TEXTURE_ORIGIN_Y","Attributes","TEXTURE_COORD","attributeDescriptions","WebGLTileLayerRenderer","_WebGLBaseTileLayerRe","indices_","paletteTextures_","paletteTextures","paletteTexture","delete","tileTexture","paletteIndex","mat4FromTransform","gutterExtent","getSources","tileTextureCache","getTileCoordForCoordAndZ","deleteProgram","_PaletteTexture","_TileLayer","_compilers","_toArray","computeOperatorFunctionName","functions","numberToGlsl","arrayToGlsl","colorToGlsl","sizeToGlsl","stringToFloatMap","stringToFloatCounter","getStringNumberEquivalent","string","stringToGlsl","uniformNameForVariable","variableName","newCompilationContext","inFragmentShader","GET_BAND_VALUE_FUNC","PALETTE_TEXTURE_ARRAY","compilationContext","compile","createCompiler","compilers","propName","isExisting","compiledArgs","firstValue","secondValue","_ref5","_ref6","_ref7","_ref8","_ref9","_ref10","_ref11","_ref12","_ref13","_ref14","_ref15","_ref16","_ref17","_ref18","_ref19","_ref20","_ref21","_ref22","_ref23","_ref24","_ref25","_ref26","_ref27","_ref28","_ref29","_ref30","_ref31","_ref32","_ref33","_ref34","_ref35","_ref36","_ref37","_ref38","_ref39","_ref40","_ref41","_ref42","_ref43","_ref44","exponent","stop1","stop2","_ref45","_ref46","funcName","tests","_ref47","_ref48","band","xOffset","yOffset","ifBlocks","colorIndex","textureName","_expression$args","numColors","palette","parsedValue","paletteName","compiledIndex","compiler","_gpu","_flat","COMMON_HEADER","DEFAULT_STYLE","ShaderBuilder","attributes_","varyings_","hasSymbol_","symbolSizeExpression_","symbolRotationExpression_","symbolOffsetExpression_","symbolColorExpression_","texCoordExpression_","discardExpression_","symbolRotateWithView_","hasStroke_","strokeWidthExpression_","strokeColorExpression_","strokeOffsetExpression_","strokeCapExpression_","strokeJoinExpression_","strokeMiterLimitExpression_","strokeDistanceFieldExpression_","hasFill_","fillColorExpression_","vertexShaderFunctions_","fragmentShaderFunctions_","addUniform","addAttribute","addVarying","setSymbolSizeExpression","getSymbolSizeExpression","setSymbolRotationExpression","setSymbolOffsetExpression","getSymbolOffsetExpression","setSymbolColorExpression","getSymbolColorExpression","setTextureCoordinateExpression","setFragmentDiscardExpression","getFragmentDiscardExpression","setSymbolRotateWithView","setStrokeWidthExpression","setStrokeColorExpression","getStrokeColorExpression","setStrokeOffsetExpression","setStrokeCapExpression","setStrokeJoinExpression","setStrokeMiterLimitExpression","setStrokeDistanceFieldExpression","setFillColorExpression","getFillColorExpression","addVertexShaderFunction","addFragmentShaderFunction","getSymbolVertexShader","varying","getSymbolFragmentShader","getStrokeVertexShader","getStrokeFragmentShader","getFillVertexShader","getFillFragmentShader","_BaseVector2","_PointsLayer","_ShaderBuilder","GRADIENT","DEFAULT_GRADIENT","Heatmap","gradient","blur","gradient_","handleGradientChanged_","setGradient","setBlur","weightFunction_","getBlur","getGradient","createGradient","builder","u_size","u_blurSlope","u_gradientTexture","u_opacity","createLinearGradient","addColorStop","BaseImageLayer","CanvasImageLayerRenderer","imageLayer","viewResolution","imageSource","imageExtent","imageMapWidth","imageMapHeight","imageResolution","imageResolutionX","imageResolutionY","viewCenter","clipped","dw","dh","_BaseImage","_ImageLayer","ImageLayer","_BaseImageLayer","PRELOAD","USE_INTERIM_TILES_ON_ERROR","_TileProperty","BaseTileLayer","setPreload","setUseInterimTilesOnError","TileProperty","CanvasTileLayerRenderer","renderedPixelRatio","renderedProjection","renderedTiles","newTiles_","tmpTileRange_","isDrawableTile","tilePixelRatio","getTilePixelRatio","sourceRevision","canvasExtent","tilesToDrawByZ","findLoadedTiles","tmpTileRange","tileCoordIntersectsViewport","childTileRange","getTileCoordChildTileRange","forEachTileCoordParentTileRange","canvasScale","clips","clipZs","currentClip","getOpaque","currentZ","currentTilePixelSize","getTilePixelSize","currentScale","originTileCoord","originTileExtent","tileGutter","tilesToDraw","xIndex","nextX","yIndex","nextY","contextSaved","drawTileImage","unshift","updateUsedTiles","manageTilePyramid","scheduleExpireCache","getTileImage","alphaChanged","tileCallback","tileCount","useTile","_BaseTile","TileLayer","_BaseTileLayer","fromResolutionLike","_resolution","CanvasVectorImageLayerRenderer","_CanvasImageLayerRend","vectorRenderer_","layerImageRatio_","getImageRatio","coordinateToVectorPixelTransform_","renderedPixelToCoordinateTransform_","vectorPixel","vectorRenderer","imageLayerState","imageFrameState","emptyImage","_VectorImageLayer","VectorImageLayer","imageRatio","imageRatio_","IMAGE_REPLAYS","VECTOR_REPLAYS","CanvasVectorTileLayerRenderer","_CanvasTileLayerRende","renderedLayerRevision_","renderedOpacity_","tmpTransform_","tileClipContexts_","prepareTile","updateExecutorGroup_","tileImageNeedsRender_","hifi","getRenderMode","renderTileImage_","layerRevision","builderState","getTileGrid","layerUid","sourceTile","sourceTileCoord","sourceTileExtent","sharedExtent","builderExtent","bufferedExtent","executorGroupInstructions","replayExtent","renderingReplayGroup","CanvasExecutorGroup","tt","_loop2","getTileCoordForCoordAndResolution","tilePixel","accumulator","getTileRenderTransform","executorGroupZIndexContexts","usedZIndices","executorGroupZindexContext","zIndexContexts","_executorGroups$i","tileClipContext","worldOffset","renderMode","replayTypes","tileClipContexts","clipContext","_frameState$declutter","replayState","renderPixelRatio","renderScale","pixelScale","_VectorTileLayer","VectorTileLayer","renderMode_","expressionToGlsl","packColor","UNPACK_COLOR_FN","getGlslSizeFromType","getGlslTypeFromType","computeHash","charCodeAt","parseCommonSymbolProperties","vertContext","getColorFromDistanceField","distanceField","fillColor","strokeColor","strokeFillRatio","shapeOpacity","parseImageProperties","textureId","parseImageOffsetProperties","sampleSize","offsetExpression","parseCircleProperties","fragContext","currentPoint","colorExpression","parseShapeProperties","numPoints","shapeField","parseIconProperties","sizeExpression","fullsize","shiftPx","offsetPx","parseStrokeProperties","sampleSizeExpression","spacingExpression","tintExpression","dashPattern","uniqueDashKey","dashFunctionName","dashLengthsDef","totalLengthDef","currentDashOffset","distanceExpression","parseFillProperties","parseLiteralStyle","parsedFilter","variable","functionName","_styleparser","WebGLPointsLayer","parseResult_","styleVariables_","hitDetectionDisabled_","disableHitDetection","updateStyleVariables","parseStyle","pipeline","contrast","exposure","saturation","gamma","brightness","numVariables","uniformDeclarations","functionDefintions","WebGLTileLayer","sources_","renderedSource_","handleSourceUpdate_","getSourceBandCount_","MAX_SAFE_INTEGER","parsedStyle","renderSources","altSources","_Heatmap","_VectorImage","_WebGLPoints","_WebGLTile","ReprojImage","getImageFunction","sourceImage","sourcePixelRatio","targetExtent_","sourceImage_","sourcePixelRatio_","sourceListenerKey_","unlistenSource_","DEFAULT_WMS_VERSION","DECIMALS","_Image2","ImageSourceEventType","IMAGELOADSTART","IMAGELOADEND","IMAGELOADERROR","ImageSourceEvent","ImageSource","reprojectedImage_","reprojectedRevision_","wantedExtent_","wantedResolution_","static_","wantedProjection_","setResolutions","findNearestResolution","getImageInternal","requestExtent","getRequestExtent","handleImageChange","defaultImageLoadFunction","marginWidth","requestWidth","marginHeight","requestHeight","appendParams","uri","params","keyParams","encodeURIComponent","qs","_uri","DEFAULT_VERSION","GETFEATUREINFO_IMAGE_SIZE","getRequestUrl","baseUrl","v13","substr","getImageSrc","serverType","REQUEST","dpi","getRequestParams","request","createLoader","hidpi","getFeatureInfoUrl","projectionObj","baseParams","getLegendUrl","isSingleLayer","mpu","_wms","ImageWMS","_ImageSource","imageLoadFunction_","imageLoadFunction","params_","serverType_","hidpi_","ratio_","loaderProjection_","sourceProjectionObj","getParams","getImageLoadFunction","setImageLoadFunction","updateParams","TILELOADSTART","TILELOADEND","TILELOADERROR","tmpTileCoord","TileGrid","origins","origins_","tileSizes_","tileSizes","tileSize_","fullTileRanges_","tmpSize_","tmpExtent_","sizes","restrictedTileRange","calculateTileRanges_","forEachTileCoord","tempTileRange","tempExtent","tileCoordExtent","createOrUpdateTileRange","tileCoordZ","tileCoordX","tileCoordY","getTileCoordForXYAndZ_","opt_tileCoord","getTileCoordForXYAndResolution_","reverseIntersectionPolicy","createOrUpdateTileCoord","getTileCoordResolution","opt_direction","fullTileRanges","_TileGrid2","WMTSTileGrid","_TileGrid","matrixIds_","matrixIds","getMatrixId","getMatrixIds","createFromCapabilitiesMatrixSet","matrixSet","matrixLimits","supportedCRSPropName","matrixIdsPropName","identifierPropName","scaleDenominatorPropName","topLeftCornerPropName","tileWidthPropName","tileHeightPropName","switchOriginXY","elt","matrixAvailable","elt_ml","tileWidth","tileHeight","_WMTS","getForProjection","createForProjection","extentFromProjection","createForExtent","resolutionsFromExtent","createXYZ","xyzOptions","gridOptions","half","_tilegrid","TileSource","opaque_","opaque","tilePixelRatio_","tileCache","tmpSize","tileOptions","getTileCacheForProjection","setKey","scaleSize","getTileCoordForTileUrlFunction","TileSourceEvent","createFromTemplate","zRegEx","xRegEx","yRegEx","dashYRegEx","createFromTemplates","templates","tileUrlFunctions","createFromTileUrlFunctions","tileCoordHash","nullTileUrlFunction","expandUrl","urls","startCharCode","stopCharCode","charCode","_TileEventType","_tileurlfunction","UrlTile","_TileSource","generateTileUrlFunction_","tileUrlFunction","setUrls","tileLoadingKeys_","getTileLoadFunction","getTileUrlFunction","getUrls","TileEventType","setTileLoadFunction","setTileUrlFunction","_UrlTile2","TileImage","_UrlTile","defaultTileLoadFunction","tileClass","tileCacheForProjection","tileGridForProjection","reprojectionErrorThreshold_","reprojectionErrorThreshold","renderReprojectionEdges_","usedTileCache","getGutter","thisProj","projKey","createTile_","tileUrl","getTileInternal","newTile","setRenderReprojectionEdges","setTileGridForProjection","tilegrid","proj","imageTile","_TileImage2","TileWMS","_TileImage","transparent","v13_","updateV13_","getKeyForParams_","sourceProjCoord","getRequestUrl_","version","_ol2","_layer","_ImageWMS","_TileWMS","serverUrl","mapProjection","orthophotoSource","orthophotoLayer","parcelsSource","parcelsLayer","BuildingsSource","BuildingsLayer","$","bundleURL","getBundleURLCached","getBundleURL","getBaseURL","bundle","updateLink","link","newLink","cloneNode","href","nextSibling","cssTimeout","reloadCSS","links","querySelectorAll","module","OVERLAY_ID","OldModule","Module","moduleName","hot","hotData","_acceptCallbacks","_disposeCallbacks","accept","checkedAssets","assetsToAccept","isParcelRequire","WebSocket","hostname","protocol","ws","onmessage","assets","asset","isNew","didAccept","hmrAcceptCheck","parcelRequire","generated","js","hmrApply","hmrAcceptRun","reload","onclose","removeErrorOverlay","createErrorOverlay","stackTrace","innerText","getParents","modules","parents","dep","Function","deps","cached","cb"],"mappings":"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AAAA,CAAA,CAAAC,UAAA,GAAAD,CAAA,KAAAxF,OAAA,EAAAwF,CAAA;AAP5C;AACA;AACA;;AAOA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACO,IAAM42C,WAAW,GAAAr8C,OAAA,CAAAq8C,WAAA,GAAG,iBAAiB;;AAE5C;AACA;AACA;AACA;AACO,IAAMC,gBAAgB,GAAAt8C,OAAA,CAAAs8C,gBAAA,GAAG,MAAM;;AAEtC;AACA;AACA;AACA;AACO,IAAMC,cAAc,GAAAv8C,OAAA,CAAAu8C,cAAA,GAAG,OAAO;;AAErC;AACA;AACA;AACA;AACO,IAAMC,eAAe,GAAAx8C,OAAA,CAAAw8C,eAAA,GAAG,EAAE;;AAEjC;AACA;AACA;AACA;AACO,IAAMC,qBAAqB,GAAAz8C,OAAA,CAAAy8C,qBAAA,GAAG,CAAC;;AAEtC;AACA;AACA;AACA;AACO,IAAMC,eAAe,GAAA18C,OAAA,CAAA08C,eAAA,GAAG,OAAO;;AAEtC;AACA;AACA;AACA;AACO,IAAMC,iBAAiB,GAAA38C,OAAA,CAAA28C,iBAAA,GAAG,EAAE;;AAEnC;AACA;AACA;AACA;AACO,IAAMC,kBAAkB,GAAA58C,OAAA,CAAA48C,kBAAA,GAAG,MAAM;;AAExC;AACA;AACA;AACA;AACO,IAAMC,gBAAgB,GAAA78C,OAAA,CAAA68C,gBAAA,GAAG,QAAQ;;AAExC;AACA;AACA;AACA;AACO,IAAMC,mBAAmB,GAAA98C,OAAA,CAAA88C,mBAAA,GAAG,QAAQ;;AAE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AACA;AACA;AACA;AACA,IAAMw9D,SAAS,GAAG,CAChB,EAAE,EACF,EAAE,EACF,EAAE,EACF,EAAE,EACF,EAAE,EACF,CAAC,EACD,CAAC,EACD,CAAC,EACD,EAAE,GAAG,EAAE,EACP,EAAE,GAAG,EAAE,EACP,EAAE,GAAG,EAAE,EACP,CAAC,GAAG,EAAE,EACN,CAAC,GAAG,EAAE,EACN,CAAC,GAAG,EAAE,EACN,EAAE,GAAG,IAAI,EACT,EAAE,GAAG,IAAI,EACT,EAAE,GAAG,IAAI,EACT,CAAC,GAAG,IAAI,EACR,CAAC,GAAG,IAAI,EACR,CAAC,GAAG,IAAI,CACT;;AAED;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA,IASMC,SAAS,0BAAAvP,YAAA;EACb;AACF;AACA;EACE,SAAAuP,UAAYx4F,OAAO,EAAE;IAAA,IAAAnH,KAAA;IAAA5I,eAAA,OAAAuoG,SAAA;IACnBx4F,OAAO,GAAGA,OAAO,GAAGA,OAAO,GAAG,CAAC,CAAC;IAEhC,IAAMqrD,WAAW,GAAGl0D,MAAM,CAACoH,MAAM,CAC/B;MACE6iE,oBAAoB,EAAE,IAAI;MAC1BC,sBAAsB,EAAE,IAAI;MAC5BF,YAAY,EAAE;IAChB,CAAC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AI+B,IAAI,CAACwB,KAAK,CAACy0B,KAAK,CAAC,CAAC,CAAC,GAAGgoG,KAAK,GAAGG,IAAI,CAAC;EACzCngI,EAAE,IAAI+B,IAAI,CAACwB,KAAK,CAACy0B,KAAK,CAAC,CAAC,CAAC,GAAGmoG,IAAI,CAAC;EACjC,OAAOngI,EAAE;AACX;;ACpatJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrvDe,SAAStK,MAAMA,CAAA,EAAG;EACvB,IAAM0G,MAAM,GAAG,wwUAAwwU;EACvxU,OAAO,IAAIgkI,MAAM,CAAC,OAAOC,IAAI,KAAK,WAAW,GACzC,qCAAqC,GAAGC,MAAM,CAACh8H,IAAI,CAAClI,MAAM,EAAE,QAAQ,CAAC,CAAC0G,QAAQ,CAAC,QAAQ,CAAC,GACxFy9H,GAAG,CAACC,eAAe,CAAC,IAAIH,IAAI,CAAC,CAACjkI,MAAM,CAAC,EAAE;IAACnP,IAAI,EAAE;EAAwB,CAAC,CAAC,CAAC,CAAC;AAChF;;;;;;;;ACNR,IAAAolB,OAAA,GAAAhhB,OAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACO,SAASovI,kBAAkBA,CAACl3E,UAAU,EAAElQ,KAAK,EAAE;EACpD,IAAM/tC,UAAU,GAAGi+C,UAAU,CAACjF,SAAS,CAACh5C,UAAU;EAElD,IAAM24E,YAAY,GAAG5qC,KAAK,CAAC0P,SAAS,CAAC,CAAC;EACtC,IAAMj9C,UAAU,GAAGm4E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mE,KAAK,CAACsV,QAAQ,CAAC,CAAC,CAAC;EAClD;EAEA,IAAI,CAACgxD,UAAU,CAAC7mE,IAAI,GAAGigE,qBAAS,IAAI,CAAC,EAAE;IACrC,OAAO+sF,WAAW,EAChB,qCAAuCnmF,UAAU,CAACtmE,KACpD,CAAC;EACH;EAEA,IAAI,CAACsmE,UAAU,CAAC7mE,IAAI,GAAGkgE,2BAAe,IAAI,CAAC,EAAE;IAC3C,OAAO6sF,WAAW,EAAC,4BAA8BlmF,UAAU,CAACtmE,KAAM,CAAC;EACrE;EAEA,IAAI,CAACsmE,UAAU,CAAC7mE,IAAI,GAAGmgE,oBAAQ,IAAI,CAAC,EAAE;IACpC,OAAO8sF,UAAU,EACf,+CAAiDpmF,UAAU,CAACtmE,KAC9D,CAAC;EACH;EAEA,MAAM,IAAI2M,KAAK,0BAAA0B,MAAA,CACYi4D,UAAU,CAACtmE,KAAK,sBAAAqO,MAAA,CAAmB,IAAA2xD,oBAAQ,EAClEuH,UACF,CAAC,MACH,CAAC;AACH;;;;;;;;AC9fA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACO,SAASxgB,kBAAkBA,CAAA,EAAG;EACnC,OAAO;IACL,YAAY,EAAE,uBAAuB;IACrC,cAAc,EAAE,SAAS;IACzB,cAAc,EAAE,IAAI;IACpB,eAAe,EAAE,CAAC;IAClB,mBAAmB,EAAE,uBAAuB;IAC5C,qBAAqB,EAAE,IAAI;IAC3B,qBAAqB,EAAE;EACzB,CAAC;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACzSA,IAAAssF,MAAA,GAAAxvI,OAAA;AACA,IAAAguJ,IAAA,GAAAhuJ,OAAA;AACA,IAAAiuJ,KAAA,GAAAjuJ,OAAA;AAAoD,SAAAmC,QAAAC,CAAA,sCAAAD,OAAA,wBAAAE,MAAA,uBAAAA,MAAA,CAAAC,QAAA,aAAAF,CAAA,kBAAAA,CAAA,gBAAAA,CAAA,WAAAA,CAAA,yBAAAC,MAAA,IAAAD,CAAA,CAAAG,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","file":"Mapr.26fab88c.js","sourceRoot":"..","sourcesContent":["/**\n * @module ol/events/Event\n */\n\n/**\n * @classdesc\n * Stripped down implementation of the W3C DOM Level 2 Event interface.\n * See https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-interface.\n *\n * This implementation only provides `type` and `target` properties, and\n * `stopPropagation` and `preventDefault` methods. It is meant as base class\n * for higher level events defined in the library, and works with\n * {@link module:ol/events/Target~Target}.\n */\nclass BaseEvent {\n  /**\n   * @param {string} type Type.\n   */\n  constructor(type) {\n    /**\n     * @type {boolean}\n     */\n    this.propagationStopped;\n\n    /**\n     * @type {boolean}\n     */\n    this.defaultPrevented;\n\n    /**\n     * The event type.\n     * @type {string}\n     * @api\n     */\n    this.type = type;\n\n    /**\n     * The event target.\n     * @type {Object}\n     * @api\n     */\n    this.target = null;\n  }\n\n  /**\n   * Prevent default. This means that no emulated `click`, `singleclick` or `doubleclick` events\n   * will be fired.\n   * @api\n   */\n  preventDefault() {\n    this.defaultPrevented = true;\n  }\n\n  /**\n   * Stop event propagation.\n   * @api\n   */\n  stopPropagation() {\n    this.propagationStopped = true;\n  }\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function stopPropagation(evt) {\n  evt.stopPropagation();\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function preventDefault(evt) {\n  evt.preventDefault();\n}\n\nexport default BaseEvent;\n","/**\n * @module ol/ObjectEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a property is changed.\n   * @event module:ol/Object.ObjectEvent#propertychange\n   * @api\n   */\n  PROPERTYCHANGE: 'propertychange',\n};\n\n/**\n * @typedef {'propertychange'} Types\n */\n","/**\n * @module ol/Disposable\n */\n\n/**\n * @classdesc\n * Objects that need to clean up after themselves.\n */\nclass Disposable {\n  constructor() {\n    /**\n     * The object has already been disposed.\n     * @type {boolean}\n     * @protected\n     */\n    this.disposed = false;\n  }\n\n  /**\n   * Clean up.\n   */\n  dispose() {\n    if (!this.disposed) {\n      this.disposed = true;\n      this.disposeInternal();\n    }\n  }\n\n  /**\n   * Extension point for disposable objects.\n   * @protected\n   */\n  disposeInternal() {}\n}\n\nexport default Disposable;\n","/**\n * @module ol/array\n */\n\n/**\n * Performs a binary search on the provided sorted list and returns the index of the item if found. If it can't be found it'll return -1.\n * https://github.com/darkskyapp/binary-search\n *\n * @param {Array<*>} haystack Items to search through.\n * @param {*} needle The item to look for.\n * @param {Function} [comparator] Comparator function.\n * @return {number} The index of the item if found, -1 if not.\n */\nexport function binarySearch(haystack, needle, comparator) {\n  let mid, cmp;\n  comparator = comparator || ascending;\n  let low = 0;\n  let high = haystack.length;\n  let found = false;\n\n  while (low < high) {\n    /* Note that \"(low + high) >>> 1\" may overflow, and results in a typecast\n     * to double (which gives the wrong results). */\n    mid = low + ((high - low) >> 1);\n    cmp = +comparator(haystack[mid], needle);\n\n    if (cmp < 0.0) {\n      /* Too low. */\n      low = mid + 1;\n    } else {\n      /* Key found or too high */\n      high = mid;\n      found = !cmp;\n    }\n  }\n\n  /* Key not found. */\n  return found ? low : ~low;\n}\n\n/**\n * Compare function sorting arrays in ascending order.  Safe to use for numeric values.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is less than, equal to, or greater than the second.\n */\nexport function ascending(a, b) {\n  return a > b ? 1 : a < b ? -1 : 0;\n}\n\n/**\n * Compare function sorting arrays in descending order.  Safe to use for numeric values.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is greater than, equal to, or less than the second.\n */\nexport function descending(a, b) {\n  return a < b ? 1 : a > b ? -1 : 0;\n}\n\n/**\n * {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution} can use a function\n * of this type to determine which nearest resolution to use.\n *\n * This function takes a `{number}` representing a value between two array entries,\n * a `{number}` representing the value of the nearest higher entry and\n * a `{number}` representing the value of the nearest lower entry\n * as arguments and returns a `{number}`. If a negative number or zero is returned\n * the lower value will be used, if a positive number is returned the higher value\n * will be used.\n * @typedef {function(number, number, number): number} NearestDirectionFunction\n * @api\n */\n\n/**\n * @param {Array<number>} arr Array in descending order.\n * @param {number} target Target.\n * @param {number|NearestDirectionFunction} direction\n *    0 means return the nearest,\n *    > 0 means return the largest nearest,\n *    < 0 means return the smallest nearest.\n * @return {number} Index.\n */\nexport function linearFindNearest(arr, target, direction) {\n  if (arr[0] <= target) {\n    return 0;\n  }\n\n  const n = arr.length;\n  if (target <= arr[n - 1]) {\n    return n - 1;\n  }\n\n  if (typeof direction === 'function') {\n    for (let i = 1; i < n; ++i) {\n      const candidate = arr[i];\n      if (candidate === target) {\n        return i;\n      }\n      if (candidate < target) {\n        if (direction(target, arr[i - 1], candidate) > 0) {\n          return i - 1;\n        }\n        return i;\n      }\n    }\n    return n - 1;\n  }\n\n  if (direction > 0) {\n    for (let i = 1; i < n; ++i) {\n      if (arr[i] < target) {\n        return i - 1;\n      }\n    }\n    return n - 1;\n  }\n\n  if (direction < 0) {\n    for (let i = 1; i < n; ++i) {\n      if (arr[i] <= target) {\n        return i;\n      }\n    }\n    return n - 1;\n  }\n\n  for (let i = 1; i < n; ++i) {\n    if (arr[i] == target) {\n      return i;\n    }\n    if (arr[i] < target) {\n      if (arr[i - 1] - target < target - arr[i]) {\n        return i - 1;\n      }\n      return i;\n    }\n  }\n  return n - 1;\n}\n\n/**\n * @param {Array<*>} arr Array.\n * @param {number} begin Begin index.\n * @param {number} end End index.\n */\nexport function reverseSubArray(arr, begin, end) {\n  while (begin < end) {\n    const tmp = arr[begin];\n    arr[begin] = arr[end];\n    arr[end] = tmp;\n    ++begin;\n    --end;\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {!Array<VALUE>|VALUE} data The elements or arrays of elements to add to arr.\n * @template VALUE\n */\nexport function extend(arr, data) {\n  const extension = Array.isArray(data) ? data : [data];\n  const length = extension.length;\n  for (let i = 0; i < length; i++) {\n    arr[arr.length] = extension[i];\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {VALUE} obj The element to remove.\n * @template VALUE\n * @return {boolean} If the element was removed.\n */\nexport function remove(arr, obj) {\n  const i = arr.indexOf(obj);\n  const found = i > -1;\n  if (found) {\n    arr.splice(i, 1);\n  }\n  return found;\n}\n\n/**\n * @param {Array<any>|Uint8ClampedArray} arr1 The first array to compare.\n * @param {Array<any>|Uint8ClampedArray} arr2 The second array to compare.\n * @return {boolean} Whether the two arrays are equal.\n */\nexport function equals(arr1, arr2) {\n  const len1 = arr1.length;\n  if (len1 !== arr2.length) {\n    return false;\n  }\n  for (let i = 0; i < len1; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Sort the passed array such that the relative order of equal elements is preserved.\n * See https://en.wikipedia.org/wiki/Sorting_algorithm#Stability for details.\n * @param {Array<*>} arr The array to sort (modifies original).\n * @param {!function(*, *): number} compareFnc Comparison function.\n * @api\n */\nexport function stableSort(arr, compareFnc) {\n  const length = arr.length;\n  const tmp = Array(arr.length);\n  let i;\n  for (i = 0; i < length; i++) {\n    tmp[i] = {index: i, value: arr[i]};\n  }\n  tmp.sort(function (a, b) {\n    return compareFnc(a.value, b.value) || a.index - b.index;\n  });\n  for (i = 0; i < arr.length; i++) {\n    arr[i] = tmp[i].value;\n  }\n}\n\n/**\n * @param {Array<*>} arr The array to test.\n * @param {Function} [func] Comparison function.\n * @param {boolean} [strict] Strictly sorted (default false).\n * @return {boolean} Return index.\n */\nexport function isSorted(arr, func, strict) {\n  const compare = func || ascending;\n  return arr.every(function (currentVal, index) {\n    if (index === 0) {\n      return true;\n    }\n    const res = compare(arr[index - 1], currentVal);\n    return !(res > 0 || (strict && res === 0));\n  });\n}\n","/**\n * @module ol/functions\n */\n\nimport {equals as arrayEquals} from './array.js';\n\n/**\n * Always returns true.\n * @return {boolean} true.\n */\nexport function TRUE() {\n  return true;\n}\n\n/**\n * Always returns false.\n * @return {boolean} false.\n */\nexport function FALSE() {\n  return false;\n}\n\n/**\n * A reusable function, used e.g. as a default for callbacks.\n *\n * @return {void} Nothing.\n */\nexport function VOID() {}\n\n/**\n * Wrap a function in another function that remembers the last return.  If the\n * returned function is called twice in a row with the same arguments and the same\n * this object, it will return the value from the first call in the second call.\n *\n * @param {function(...any): ReturnType} fn The function to memoize.\n * @return {function(...any): ReturnType} The memoized function.\n * @template ReturnType\n */\nexport function memoizeOne(fn) {\n  let called = false;\n\n  /** @type {ReturnType} */\n  let lastResult;\n\n  /** @type {Array<any>} */\n  let lastArgs;\n\n  let lastThis;\n\n  return function () {\n    const nextArgs = Array.prototype.slice.call(arguments);\n    if (!called || this !== lastThis || !arrayEquals(nextArgs, lastArgs)) {\n      called = true;\n      lastThis = this;\n      lastArgs = nextArgs;\n      lastResult = fn.apply(this, arguments);\n    }\n    return lastResult;\n  };\n}\n\n/**\n * @template T\n * @param {function(): (T | Promise<T>)} getter A function that returns a value or a promise for a value.\n * @return {Promise<T>} A promise for the value.\n */\nexport function toPromise(getter) {\n  function promiseGetter() {\n    let value;\n    try {\n      value = getter();\n    } catch (err) {\n      return Promise.reject(err);\n    }\n    if (value instanceof Promise) {\n      return value;\n    }\n    return Promise.resolve(value);\n  }\n  return promiseGetter();\n}\n","/**\n * @module ol/obj\n */\n\n/**\n * Removes all properties from an object.\n * @param {Object<string, unknown>} object The object to clear.\n */\nexport function clear(object) {\n  for (const property in object) {\n    delete object[property];\n  }\n}\n\n/**\n * Determine if an object has any properties.\n * @param {Object} object The object to check.\n * @return {boolean} The object is empty.\n */\nexport function isEmpty(object) {\n  let property;\n  for (property in object) {\n    return false;\n  }\n  return !property;\n}\n","/**\n * @module ol/events/Target\n */\nimport Disposable from '../Disposable.js';\nimport Event from './Event.js';\nimport {VOID} from '../functions.js';\nimport {clear} from '../obj.js';\n\n/**\n * @typedef {EventTarget|Target} EventTargetLike\n */\n\n/**\n * @classdesc\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\n * See https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget.\n *\n * There are two important simplifications compared to the specification:\n *\n * 1. The handling of `useCapture` in `addEventListener` and\n *    `removeEventListener`. There is no real capture model.\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\n *    There is no event target hierarchy. When a listener calls\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\n *    more listeners after this one will be called. Same as when the listener\n *    returns false.\n */\nclass Target extends Disposable {\n  /**\n   * @param {*} [target] Default event target for dispatched events.\n   */\n  constructor(target) {\n    super();\n\n    /**\n     * @private\n     * @type {*}\n     */\n    this.eventTarget_ = target;\n\n    /**\n     * @private\n     * @type {Object<string, number>|null}\n     */\n    this.pendingRemovals_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, number>|null}\n     */\n    this.dispatching_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").Listener>>|null}\n     */\n    this.listeners_ = null;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  addEventListener(type, listener) {\n    if (!type || !listener) {\n      return;\n    }\n    const listeners = this.listeners_ || (this.listeners_ = {});\n    const listenersForType = listeners[type] || (listeners[type] = []);\n    if (!listenersForType.includes(listener)) {\n      listenersForType.push(listener);\n    }\n  }\n\n  /**\n   * Dispatches an event and calls all listeners listening for events\n   * of this type. The event parameter can either be a string or an\n   * Object with a `type` property.\n   *\n   * @param {import(\"./Event.js\").default|string} event Event object.\n   * @return {boolean|undefined} `false` if anyone called preventDefault on the\n   *     event object or if any of the listeners returned false.\n   * @api\n   */\n  dispatchEvent(event) {\n    const isString = typeof event === 'string';\n    const type = isString ? event : event.type;\n    const listeners = this.listeners_ && this.listeners_[type];\n    if (!listeners) {\n      return;\n    }\n\n    const evt = isString ? new Event(event) : /** @type {Event} */ (event);\n    if (!evt.target) {\n      evt.target = this.eventTarget_ || this;\n    }\n    const dispatching = this.dispatching_ || (this.dispatching_ = {});\n    const pendingRemovals =\n      this.pendingRemovals_ || (this.pendingRemovals_ = {});\n    if (!(type in dispatching)) {\n      dispatching[type] = 0;\n      pendingRemovals[type] = 0;\n    }\n    ++dispatching[type];\n    let propagate;\n    for (let i = 0, ii = listeners.length; i < ii; ++i) {\n      if ('handleEvent' in listeners[i]) {\n        propagate = /** @type {import(\"../events.js\").ListenerObject} */ (\n          listeners[i]\n        ).handleEvent(evt);\n      } else {\n        propagate = /** @type {import(\"../events.js\").ListenerFunction} */ (\n          listeners[i]\n        ).call(this, evt);\n      }\n      if (propagate === false || evt.propagationStopped) {\n        propagate = false;\n        break;\n      }\n    }\n    if (--dispatching[type] === 0) {\n      let pr = pendingRemovals[type];\n      delete pendingRemovals[type];\n      while (pr--) {\n        this.removeEventListener(type, VOID);\n      }\n      delete dispatching[type];\n    }\n    return propagate;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.listeners_ && clear(this.listeners_);\n  }\n\n  /**\n   * Get the listeners for a specified event type. Listeners are returned in the\n   * order that they will be called in.\n   *\n   * @param {string} type Type.\n   * @return {Array<import(\"../events.js\").Listener>|undefined} Listeners.\n   */\n  getListeners(type) {\n    return (this.listeners_ && this.listeners_[type]) || undefined;\n  }\n\n  /**\n   * @param {string} [type] Type. If not provided,\n   *     `true` will be returned if this event target has any listeners.\n   * @return {boolean} Has listeners.\n   */\n  hasListener(type) {\n    if (!this.listeners_) {\n      return false;\n    }\n    return type\n      ? type in this.listeners_\n      : Object.keys(this.listeners_).length > 0;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  removeEventListener(type, listener) {\n    if (!this.listeners_) {\n      return;\n    }\n    const listeners = this.listeners_[type];\n    if (!listeners) {\n      return;\n    }\n    const index = listeners.indexOf(listener);\n    if (index !== -1) {\n      if (this.pendingRemovals_ && type in this.pendingRemovals_) {\n        // make listener a no-op, and remove later in #dispatchEvent()\n        listeners[index] = VOID;\n        ++this.pendingRemovals_[type];\n      } else {\n        listeners.splice(index, 1);\n        if (listeners.length === 0) {\n          delete this.listeners_[type];\n        }\n      }\n    }\n  }\n}\n\nexport default Target;\n","/**\n * @module ol/events/EventType\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  /**\n   * Generic change event. Triggered when the revision counter is increased.\n   * @event module:ol/events/Event~BaseEvent#change\n   * @api\n   */\n  CHANGE: 'change',\n\n  /**\n   * Generic error event. Triggered when an error occurs.\n   * @event module:ol/events/Event~BaseEvent#error\n   * @api\n   */\n  ERROR: 'error',\n\n  BLUR: 'blur',\n  CLEAR: 'clear',\n  CONTEXTMENU: 'contextmenu',\n  CLICK: 'click',\n  DBLCLICK: 'dblclick',\n  DRAGENTER: 'dragenter',\n  DRAGOVER: 'dragover',\n  DROP: 'drop',\n  FOCUS: 'focus',\n  KEYDOWN: 'keydown',\n  KEYPRESS: 'keypress',\n  LOAD: 'load',\n  RESIZE: 'resize',\n  TOUCHMOVE: 'touchmove',\n  WHEEL: 'wheel',\n};\n","/**\n * @module ol/events\n */\nimport {clear} from './obj.js';\n\n/**\n * Key to use with {@link module:ol/Observable.unByKey}.\n * @typedef {Object} EventsKey\n * @property {ListenerFunction} listener Listener.\n * @property {import(\"./events/Target.js\").EventTargetLike} target Target.\n * @property {string} type Type.\n * @api\n */\n\n/**\n * Listener function. This function is called with an event object as argument.\n * When the function returns `false`, event propagation will stop.\n *\n * @typedef {function((Event|import(\"./events/Event.js\").default)): (void|boolean)} ListenerFunction\n * @api\n */\n\n/**\n * @typedef {Object} ListenerObject\n * @property {ListenerFunction} handleEvent HandleEvent listener function.\n */\n\n/**\n * @typedef {ListenerFunction|ListenerObject} Listener\n */\n\n/**\n * Registers an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` to a `this` object, and returns\n * a key for use with {@link module:ol/events.unlistenByKey}.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [thisArg] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @param {boolean} [once] If true, add the listener as one-off listener.\n * @return {EventsKey} Unique key for the listener.\n */\nexport function listen(target, type, listener, thisArg, once) {\n  if (thisArg && thisArg !== target) {\n    listener = listener.bind(thisArg);\n  }\n  if (once) {\n    const originalListener = listener;\n    listener = function () {\n      target.removeEventListener(type, listener);\n      originalListener.apply(this, arguments);\n    };\n  }\n  const eventsKey = {\n    target: target,\n    type: type,\n    listener: listener,\n  };\n  target.addEventListener(type, listener);\n  return eventsKey;\n}\n\n/**\n * Registers a one-off event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` as self-unregistering listener\n * to a `this` object, and returns a key for use with\n * {@link module:ol/events.unlistenByKey} in case the listener needs to be\n * unregistered before it is called.\n *\n * When {@link module:ol/events.listen} is called with the same arguments after this\n * function, the self-unregistering listener will be turned into a permanent\n * listener.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [thisArg] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @return {EventsKey} Key for unlistenByKey.\n */\nexport function listenOnce(target, type, listener, thisArg) {\n  return listen(target, type, listener, thisArg, true);\n}\n\n/**\n * Unregisters event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * The argument passed to this function is the key returned from\n * {@link module:ol/events.listen} or {@link module:ol/events.listenOnce}.\n *\n * @param {EventsKey} key The key.\n */\nexport function unlistenByKey(key) {\n  if (key && key.target) {\n    key.target.removeEventListener(key.type, key.listener);\n    clear(key);\n  }\n}\n","/**\n * @module ol/Observable\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport {listen, listenOnce, unlistenByKey} from './events.js';\n\n/***\n * @template {string} Type\n * @template {Event|import(\"./events/Event.js\").default} EventClass\n * @template Return\n * @typedef {(type: Type, listener: (event: EventClass) => ?) => Return} OnSignature\n */\n\n/***\n * @template {string} Type\n * @template Return\n * @typedef {(type: Type[], listener: (event: Event|import(\"./events/Event\").default) => ?) => Return extends void ? void : Return[]} CombinedOnSignature\n */\n\n/**\n * @typedef {'change'|'error'} EventTypes\n */\n\n/***\n * @template Return\n * @typedef {OnSignature<EventTypes, import(\"./events/Event.js\").default, Return> & CombinedOnSignature<EventTypes, Return>} ObservableOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * An event target providing convenient methods for listener registration\n * and unregistration. A generic `change` event is always available through\n * {@link module:ol/Observable~Observable#changed}.\n *\n * @fires import(\"./events/Event.js\").default\n * @api\n */\nclass Observable extends EventTarget {\n  constructor() {\n    super();\n\n    this.on =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onInternal\n      );\n\n    this.once =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onceInternal\n      );\n\n    this.un = /** @type {ObservableOnSignature<void>} */ (this.unInternal);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.revision_ = 0;\n  }\n\n  /**\n   * Increases the revision counter and dispatches a 'change' event.\n   * @api\n   */\n  changed() {\n    ++this.revision_;\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Get the version number for this object.  Each time the object is modified,\n   * its version number will be incremented.\n   * @return {number} Revision.\n   * @api\n   */\n  getRevision() {\n    return this.revision_;\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onInternal(type, listener) {\n    if (Array.isArray(type)) {\n      const len = type.length;\n      const keys = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        keys[i] = listen(this, type[i], listener);\n      }\n      return keys;\n    }\n    return listen(this, /** @type {string} */ (type), listener);\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onceInternal(type, listener) {\n    let key;\n    if (Array.isArray(type)) {\n      const len = type.length;\n      key = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        key[i] = listenOnce(this, type[i], listener);\n      }\n    } else {\n      key = listenOnce(this, /** @type {string} */ (type), listener);\n    }\n    /** @type {Object} */ (listener).ol_key = key;\n    return key;\n  }\n\n  /**\n   * Unlisten for a certain type of event.\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @protected\n   */\n  unInternal(type, listener) {\n    const key = /** @type {Object} */ (listener).ol_key;\n    if (key) {\n      unByKey(key);\n    } else if (Array.isArray(type)) {\n      for (let i = 0, ii = type.length; i < ii; ++i) {\n        this.removeEventListener(type[i], listener);\n      }\n    } else {\n      this.removeEventListener(type, listener);\n    }\n  }\n}\n\n/**\n * Listen for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.on;\n\n/**\n * Listen once for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.once;\n\n/**\n * Unlisten for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @api\n */\nObservable.prototype.un;\n\n/**\n * Removes an event listener using the key returned by `on()` or `once()`.\n * @param {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} key The key returned by `on()`\n *     or `once()` (or an array of keys).\n * @api\n */\nexport function unByKey(key) {\n  if (Array.isArray(key)) {\n    for (let i = 0, ii = key.length; i < ii; ++i) {\n      unlistenByKey(key[i]);\n    }\n  } else {\n    unlistenByKey(/** @type {import(\"./events.js\").EventsKey} */ (key));\n  }\n}\n\nexport default Observable;\n","/**\n * @module ol/util\n */\n\n/**\n * @return {never} Any return.\n */\nexport function abstract() {\n  throw new Error('Unimplemented abstract method.');\n}\n\n/**\n * Counter for getUid.\n * @type {number}\n * @private\n */\nlet uidCounter_ = 0;\n\n/**\n * Gets a unique ID for an object. This mutates the object so that further calls\n * with the same object as a parameter returns the same value. Unique IDs are generated\n * as a strictly increasing sequence. Adapted from goog.getUid.\n *\n * @param {Object} obj The object to get the unique ID for.\n * @return {string} The unique ID for the object.\n * @api\n */\nexport function getUid(obj) {\n  return obj.ol_uid || (obj.ol_uid = String(++uidCounter_));\n}\n\n/**\n * OpenLayers version.\n * @type {string}\n */\nexport const VERSION = '9.2.4';\n","/**\n * @module ol/Object\n */\nimport Event from './events/Event.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport Observable from './Observable.js';\nimport {getUid} from './util.js';\nimport {isEmpty} from './obj.js';\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Object~BaseObject} instances are instances of this type.\n */\nexport class ObjectEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {string} key The property name.\n   * @param {*} oldValue The old value for `key`.\n   */\n  constructor(type, key, oldValue) {\n    super(type);\n\n    /**\n     * The name of the property whose value is changing.\n     * @type {string}\n     * @api\n     */\n    this.key = key;\n\n    /**\n     * The old value. To get the new value use `e.target.get(e.key)` where\n     * `e` is the event object.\n     * @type {*}\n     * @api\n     */\n    this.oldValue = oldValue;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types, ObjectEvent, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types, Return>} ObjectOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Most non-trivial classes inherit from this.\n *\n * This extends {@link module:ol/Observable~Observable} with observable\n * properties, where each property is observable as well as the object as a\n * whole.\n *\n * Classes that inherit from this have pre-defined properties, to which you can\n * add your owns. The pre-defined properties are listed in this documentation as\n * 'Observable Properties', and have their own accessors; for example,\n * {@link module:ol/Map~Map} has a `target` property, accessed with\n * `getTarget()` and changed with `setTarget()`. Not all properties are however\n * settable. There are also general-purpose accessors `get()` and `set()`. For\n * example, `get('target')` is equivalent to `getTarget()`.\n *\n * The `set` accessors trigger a change event, and you can monitor this by\n * registering a listener. For example, {@link module:ol/View~View} has a\n * `center` property, so `view.on('change:center', function(evt) {...});` would\n * call the function whenever the value of the center property changes. Within\n * the function, `evt.target` would be the view, so `evt.target.getCenter()`\n * would return the new center.\n *\n * You can add your own observable properties with\n * `object.set('prop', 'value')`, and retrieve that with `object.get('prop')`.\n * You can listen for changes on that property value with\n * `object.on('change:prop', listener)`. You can get a list of all\n * properties with {@link module:ol/Object~BaseObject#getProperties}.\n *\n * Note that the observable properties are separate from standard JS properties.\n * You can, for example, give your map object a title with\n * `map.title='New title'` and with `map.set('title', 'Another title')`. The\n * first will be a `hasOwnProperty`; the second will appear in\n * `getProperties()`. Only the second is observable.\n *\n * Properties can be deleted by using the unset method. E.g.\n * object.unset('foo').\n *\n * @fires ObjectEvent\n * @api\n */\nclass BaseObject extends Observable {\n  /**\n   * @param {Object<string, *>} [values] An object with key-value pairs.\n   */\n  constructor(values) {\n    super();\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ObjectOnSignature<void>}\n     */\n    this.un;\n\n    // Call {@link module:ol/util.getUid} to ensure that the order of objects' ids is\n    // the same as the order in which they were created.  This also helps to\n    // ensure that object properties are always added in the same order, which\n    // helps many JavaScript engines generate faster code.\n    getUid(this);\n\n    /**\n     * @private\n     * @type {Object<string, *>|null}\n     */\n    this.values_ = null;\n\n    if (values !== undefined) {\n      this.setProperties(values);\n    }\n  }\n\n  /**\n   * Gets a value.\n   * @param {string} key Key name.\n   * @return {*} Value.\n   * @api\n   */\n  get(key) {\n    let value;\n    if (this.values_ && this.values_.hasOwnProperty(key)) {\n      value = this.values_[key];\n    }\n    return value;\n  }\n\n  /**\n   * Get a list of object property names.\n   * @return {Array<string>} List of property names.\n   * @api\n   */\n  getKeys() {\n    return (this.values_ && Object.keys(this.values_)) || [];\n  }\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object<string, *>} Object.\n   * @api\n   */\n  getProperties() {\n    return (this.values_ && Object.assign({}, this.values_)) || {};\n  }\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object<string, *>?} Object.\n   */\n  getPropertiesInternal() {\n    return this.values_;\n  }\n\n  /**\n   * @return {boolean} The object has properties.\n   */\n  hasProperties() {\n    return !!this.values_;\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {*} oldValue Old value.\n   */\n  notify(key, oldValue) {\n    let eventType;\n    eventType = `change:${key}`;\n    if (this.hasListener(eventType)) {\n      this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    }\n    eventType = ObjectEventType.PROPERTYCHANGE;\n    if (this.hasListener(eventType)) {\n      this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    }\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  addChangeListener(key, listener) {\n    this.addEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  removeChangeListener(key, listener) {\n    this.removeEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * Sets a value.\n   * @param {string} key Key name.\n   * @param {*} value Value.\n   * @param {boolean} [silent] Update without triggering an event.\n   * @api\n   */\n  set(key, value, silent) {\n    const values = this.values_ || (this.values_ = {});\n    if (silent) {\n      values[key] = value;\n    } else {\n      const oldValue = values[key];\n      values[key] = value;\n      if (oldValue !== value) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n\n  /**\n   * Sets a collection of key-value pairs.  Note that this changes any existing\n   * properties and adds new ones (it does not remove any existing properties).\n   * @param {Object<string, *>} values Values.\n   * @param {boolean} [silent] Update without triggering an event.\n   * @api\n   */\n  setProperties(values, silent) {\n    for (const key in values) {\n      this.set(key, values[key], silent);\n    }\n  }\n\n  /**\n   * Apply any properties from another object without triggering events.\n   * @param {BaseObject} source The source object.\n   * @protected\n   */\n  applyProperties(source) {\n    if (!source.values_) {\n      return;\n    }\n    Object.assign(this.values_ || (this.values_ = {}), source.values_);\n  }\n\n  /**\n   * Unsets a property.\n   * @param {string} key Key name.\n   * @param {boolean} [silent] Unset without triggering an event.\n   * @api\n   */\n  unset(key, silent) {\n    if (this.values_ && key in this.values_) {\n      const oldValue = this.values_[key];\n      delete this.values_[key];\n      if (isEmpty(this.values_)) {\n        this.values_ = null;\n      }\n      if (!silent) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n}\n\nexport default BaseObject;\n","/**\n * @module ol/CollectionEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when an item is added to the collection.\n   * @event module:ol/Collection.CollectionEvent#add\n   * @api\n   */\n  ADD: 'add',\n  /**\n   * Triggered when an item is removed from the collection.\n   * @event module:ol/Collection.CollectionEvent#remove\n   * @api\n   */\n  REMOVE: 'remove',\n};\n","/**\n * @module ol/Collection\n */\nimport BaseObject from './Object.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport Event from './events/Event.js';\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LENGTH: 'length',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Collection~Collection} instances are instances of this\n * type.\n * @template T\n */\nexport class CollectionEvent extends Event {\n  /**\n   * @param {import(\"./CollectionEventType.js\").default} type Type.\n   * @param {T} element Element.\n   * @param {number} index The index of the added or removed element.\n   */\n  constructor(type, element, index) {\n    super(type);\n\n    /**\n     * The element that is added to or removed from the collection.\n     * @type {T}\n     * @api\n     */\n    this.element = element;\n\n    /**\n     * The index of the added or removed element.\n     * @type {number}\n     * @api\n     */\n    this.index = index;\n  }\n}\n\n/***\n * @template T\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types|'change:length', import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").OnSignature<'add'|'remove', CollectionEvent<T>, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types|\n *     'change:length'|'add'|'remove',Return>} CollectionOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [unique=false] Disallow the same item from being added to\n * the collection twice.\n */\n\n/**\n * @classdesc\n * An expanded version of standard JS Array, adding convenience methods for\n * manipulation. Add and remove changes to the Collection trigger a Collection\n * event. Note that this does not cover changes to the objects _within_ the\n * Collection; they trigger events on the appropriate object, not on the\n * Collection as a whole.\n *\n * @fires CollectionEvent\n *\n * @template T\n * @api\n */\nclass Collection extends BaseObject {\n  /**\n   * @param {Array<T>} [array] Array.\n   * @param {Options} [options] Collection options.\n   */\n  constructor(array, options) {\n    super();\n\n    /***\n     * @type {CollectionOnSignature<T, import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {CollectionOnSignature<T, import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {CollectionOnSignature<T, void>}\n     */\n    this.un;\n\n    options = options || {};\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.unique_ = !!options.unique;\n\n    /**\n     * @private\n     * @type {!Array<T>}\n     */\n    this.array_ = array ? array : [];\n\n    if (this.unique_) {\n      for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n        this.assertUnique_(this.array_[i], i);\n      }\n    }\n\n    this.updateLength_();\n  }\n\n  /**\n   * Remove all elements from the collection.\n   * @api\n   */\n  clear() {\n    while (this.getLength() > 0) {\n      this.pop();\n    }\n  }\n\n  /**\n   * Add elements to the collection.  This pushes each item in the provided array\n   * to the end of the collection.\n   * @param {!Array<T>} arr Array.\n   * @return {Collection<T>} This collection.\n   * @api\n   */\n  extend(arr) {\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      this.push(arr[i]);\n    }\n    return this;\n  }\n\n  /**\n   * Iterate over each element, calling the provided callback.\n   * @param {function(T, number, Array<T>): *} f The function to call\n   *     for every element. This function takes 3 arguments (the element, the\n   *     index and the array). The return value is ignored.\n   * @api\n   */\n  forEach(f) {\n    const array = this.array_;\n    for (let i = 0, ii = array.length; i < ii; ++i) {\n      f(array[i], i, array);\n    }\n  }\n\n  /**\n   * Get a reference to the underlying Array object. Warning: if the array\n   * is mutated, no events will be dispatched by the collection, and the\n   * collection's \"length\" property won't be in sync with the actual length\n   * of the array.\n   * @return {!Array<T>} Array.\n   * @api\n   */\n  getArray() {\n    return this.array_;\n  }\n\n  /**\n   * Get the element at the provided index.\n   * @param {number} index Index.\n   * @return {T} Element.\n   * @api\n   */\n  item(index) {\n    return this.array_[index];\n  }\n\n  /**\n   * Get the length of this collection.\n   * @return {number} The length of the array.\n   * @observable\n   * @api\n   */\n  getLength() {\n    return this.get(Property.LENGTH);\n  }\n\n  /**\n   * Insert an element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  insertAt(index, elem) {\n    if (index < 0 || index > this.getLength()) {\n      throw new Error('Index out of bounds: ' + index);\n    }\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    this.array_.splice(index, 0, elem);\n    this.updateLength_();\n    this.dispatchEvent(\n      new CollectionEvent(CollectionEventType.ADD, elem, index),\n    );\n  }\n\n  /**\n   * Remove the last element of the collection and return it.\n   * Return `undefined` if the collection is empty.\n   * @return {T|undefined} Element.\n   * @api\n   */\n  pop() {\n    return this.removeAt(this.getLength() - 1);\n  }\n\n  /**\n   * Insert the provided element at the end of the collection.\n   * @param {T} elem Element.\n   * @return {number} New length of the collection.\n   * @api\n   */\n  push(elem) {\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    const n = this.getLength();\n    this.insertAt(n, elem);\n    return this.getLength();\n  }\n\n  /**\n   * Remove the first occurrence of an element from the collection.\n   * @param {T} elem Element.\n   * @return {T|undefined} The removed element or undefined if none found.\n   * @api\n   */\n  remove(elem) {\n    const arr = this.array_;\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      if (arr[i] === elem) {\n        return this.removeAt(i);\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * Remove the element at the provided index and return it.\n   * Return `undefined` if the collection does not contain this index.\n   * @param {number} index Index.\n   * @return {T|undefined} Value.\n   * @api\n   */\n  removeAt(index) {\n    if (index < 0 || index >= this.getLength()) {\n      return undefined;\n    }\n    const prev = this.array_[index];\n    this.array_.splice(index, 1);\n    this.updateLength_();\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n      ),\n    );\n    return prev;\n  }\n\n  /**\n   * Set the element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  setAt(index, elem) {\n    const n = this.getLength();\n    if (index >= n) {\n      this.insertAt(index, elem);\n      return;\n    }\n    if (index < 0) {\n      throw new Error('Index out of bounds: ' + index);\n    }\n    if (this.unique_) {\n      this.assertUnique_(elem, index);\n    }\n    const prev = this.array_[index];\n    this.array_[index] = elem;\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n      ),\n    );\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.ADD, elem, index)\n      ),\n    );\n  }\n\n  /**\n   * @private\n   */\n  updateLength_() {\n    this.set(Property.LENGTH, this.array_.length);\n  }\n\n  /**\n   * @private\n   * @param {T} elem Element.\n   * @param {number} [except] Optional index to ignore.\n   */\n  assertUnique_(elem, except) {\n    for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n      if (this.array_[i] === elem && i !== except) {\n        throw new Error('Duplicate item added to a unique collection');\n      }\n    }\n  }\n}\n\nexport default Collection;\n","/**\n * @module ol/asserts\n */\n\n/**\n * @param {*} assertion Assertion we expected to be truthy.\n * @param {string} errorMessage Error message.\n */\nexport function assert(assertion, errorMessage) {\n  if (!assertion) {\n    throw new Error(errorMessage);\n  }\n}\n","/**\n * @module ol/Feature\n */\nimport BaseObject from './Object.js';\nimport EventType from './events/EventType.js';\nimport {assert} from './asserts.js';\nimport {listen, unlistenByKey} from './events.js';\n\n/**\n * @typedef {typeof Feature|typeof import(\"./render/Feature.js\").default} FeatureClass\n */\n\n/**\n * @typedef {Feature|import(\"./render/Feature.js\").default} FeatureLike\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types|'change:geometry', import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types\n *     |'change:geometry', Return>} FeatureOnSignature\n */\n\n/***\n * @template {import(\"./geom/Geometry.js\").default} [Geometry=import(\"./geom/Geometry.js\").default]\n * @typedef {Object<string, *> & { geometry?: Geometry }} ObjectWithGeometry\n */\n\n/**\n * @classdesc\n * A vector object for geographic features with a geometry and other\n * attribute properties, similar to the features in vector file formats like\n * GeoJSON.\n *\n * Features can be styled individually with `setStyle`; otherwise they use the\n * style of their vector layer.\n *\n * Note that attribute properties are set as {@link module:ol/Object~BaseObject} properties on\n * the feature object, so they are observable, and have get/set accessors.\n *\n * Typically, a feature has a single geometry property. You can set the\n * geometry using the `setGeometry` method and get it with `getGeometry`.\n * It is possible to store more than one geometry on a feature using attribute\n * properties. By default, the geometry used for rendering is identified by\n * the property name `geometry`. If you want to use another geometry property\n * for rendering, use the `setGeometryName` method to change the attribute\n * property associated with the geometry for the feature.  For example:\n *\n * ```js\n *\n * import Feature from 'ol/Feature.js';\n * import Polygon from 'ol/geom/Polygon.js';\n * import Point from 'ol/geom/Point.js';\n *\n * const feature = new Feature({\n *   geometry: new Polygon(polyCoords),\n *   labelPoint: new Point(labelCoords),\n *   name: 'My Polygon',\n * });\n *\n * // get the polygon geometry\n * const poly = feature.getGeometry();\n *\n * // Render the feature as a point using the coordinates from labelPoint\n * feature.setGeometryName('labelPoint');\n *\n * // get the point geometry\n * const point = feature.getGeometry();\n * ```\n *\n * @api\n * @template {import(\"./geom/Geometry.js\").default} [Geometry=import(\"./geom/Geometry.js\").default]\n */\nclass Feature extends BaseObject {\n  /**\n   * @param {Geometry|ObjectWithGeometry<Geometry>} [geometryOrProperties]\n   *     You may pass a Geometry object directly, or an object literal containing\n   *     properties. If you pass an object literal, you may include a Geometry\n   *     associated with a `geometry` key.\n   */\n  constructor(geometryOrProperties) {\n    super();\n\n    /***\n     * @type {FeatureOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {FeatureOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {FeatureOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {number|string|undefined}\n     */\n    this.id_ = undefined;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.geometryName_ = 'geometry';\n\n    /**\n     * User provided style.\n     * @private\n     * @type {import(\"./style/Style.js\").StyleLike}\n     */\n    this.style_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./style/Style.js\").StyleFunction|undefined}\n     */\n    this.styleFunction_ = undefined;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.geometryChangeKey_ = null;\n\n    this.addChangeListener(this.geometryName_, this.handleGeometryChanged_);\n\n    if (geometryOrProperties) {\n      if (\n        typeof (\n          /** @type {?} */ (geometryOrProperties).getSimplifiedGeometry\n        ) === 'function'\n      ) {\n        const geometry = /** @type {Geometry} */ (geometryOrProperties);\n        this.setGeometry(geometry);\n      } else {\n        /** @type {Object<string, *>} */\n        const properties = geometryOrProperties;\n        this.setProperties(properties);\n      }\n    }\n  }\n\n  /**\n   * Clone this feature. If the original feature has a geometry it\n   * is also cloned. The feature id is not set in the clone.\n   * @return {Feature<Geometry>} The clone.\n   * @api\n   */\n  clone() {\n    const clone = /** @type {Feature<Geometry>} */ (\n      new Feature(this.hasProperties() ? this.getProperties() : null)\n    );\n    clone.setGeometryName(this.getGeometryName());\n    const geometry = this.getGeometry();\n    if (geometry) {\n      clone.setGeometry(/** @type {Geometry} */ (geometry.clone()));\n    }\n    const style = this.getStyle();\n    if (style) {\n      clone.setStyle(style);\n    }\n    return clone;\n  }\n\n  /**\n   * Get the feature's default geometry.  A feature may have any number of named\n   * geometries.  The \"default\" geometry (the one that is rendered by default) is\n   * set when calling {@link module:ol/Feature~Feature#setGeometry}.\n   * @return {Geometry|undefined} The default geometry for the feature.\n   * @api\n   * @observable\n   */\n  getGeometry() {\n    return /** @type {Geometry|undefined} */ (this.get(this.geometryName_));\n  }\n\n  /**\n   * Get the feature identifier.  This is a stable identifier for the feature and\n   * is either set when reading data from a remote source or set explicitly by\n   * calling {@link module:ol/Feature~Feature#setId}.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id_;\n  }\n\n  /**\n   * Get the name of the feature's default geometry.  By default, the default\n   * geometry is named `geometry`.\n   * @return {string} Get the property name associated with the default geometry\n   *     for this feature.\n   * @api\n   */\n  getGeometryName() {\n    return this.geometryName_;\n  }\n\n  /**\n   * Get the feature's style. Will return what was provided to the\n   * {@link module:ol/Feature~Feature#setStyle} method.\n   * @return {import(\"./style/Style.js\").StyleLike|undefined} The feature style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the feature's style function.\n   * @return {import(\"./style/Style.js\").StyleFunction|undefined} Return a function\n   * representing the current style of this feature.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChanged_() {\n    if (this.geometryChangeKey_) {\n      unlistenByKey(this.geometryChangeKey_);\n      this.geometryChangeKey_ = null;\n    }\n    const geometry = this.getGeometry();\n    if (geometry) {\n      this.geometryChangeKey_ = listen(\n        geometry,\n        EventType.CHANGE,\n        this.handleGeometryChange_,\n        this,\n      );\n    }\n    this.changed();\n  }\n\n  /**\n   * Set the default geometry for the feature.  This will update the property\n   * with the name returned by {@link module:ol/Feature~Feature#getGeometryName}.\n   * @param {Geometry|undefined} geometry The new geometry.\n   * @api\n   * @observable\n   */\n  setGeometry(geometry) {\n    this.set(this.geometryName_, geometry);\n  }\n\n  /**\n   * Set the style for the feature to override the layer style.  This can be a\n   * single style object, an array of styles, or a function that takes a\n   * resolution and returns an array of styles. To unset the feature style, call\n   * `setStyle()` without arguments or a falsey value.\n   * @param {import(\"./style/Style.js\").StyleLike} [style] Style for this feature.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setStyle(style) {\n    this.style_ = style;\n    this.styleFunction_ = !style ? undefined : createStyleFunction(style);\n    this.changed();\n  }\n\n  /**\n   * Set the feature id.  The feature id is considered stable and may be used when\n   * requesting features or comparing identifiers returned from a remote source.\n   * The feature id can be used with the\n   * {@link module:ol/source/Vector~VectorSource#getFeatureById} method.\n   * @param {number|string|undefined} id The feature id.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setId(id) {\n    this.id_ = id;\n    this.changed();\n  }\n\n  /**\n   * Set the property name to be used when getting the feature's default geometry.\n   * When calling {@link module:ol/Feature~Feature#getGeometry}, the value of the property with\n   * this name will be returned.\n   * @param {string} name The property name of the default geometry.\n   * @api\n   */\n  setGeometryName(name) {\n    this.removeChangeListener(this.geometryName_, this.handleGeometryChanged_);\n    this.geometryName_ = name;\n    this.addChangeListener(this.geometryName_, this.handleGeometryChanged_);\n    this.handleGeometryChanged_();\n  }\n}\n\n/**\n * Convert the provided object into a feature style function.  Functions passed\n * through unchanged.  Arrays of Style or single style objects wrapped\n * in a new feature style function.\n * @param {!import(\"./style/Style.js\").StyleFunction|!Array<import(\"./style/Style.js\").default>|!import(\"./style/Style.js\").default} obj\n *     A feature style function, a single style, or an array of styles.\n * @return {import(\"./style/Style.js\").StyleFunction} A style function.\n */\nexport function createStyleFunction(obj) {\n  if (typeof obj === 'function') {\n    return obj;\n  }\n  /**\n   * @type {Array<import(\"./style/Style.js\").default>}\n   */\n  let styles;\n  if (Array.isArray(obj)) {\n    styles = obj;\n  } else {\n    assert(\n      typeof (/** @type {?} */ (obj).getZIndex) === 'function',\n      'Expected an `ol/style/Style` or an array of `ol/style/Style.js`',\n    );\n    const style = /** @type {import(\"./style/Style.js\").default} */ (obj);\n    styles = [style];\n  }\n  return function () {\n    return styles;\n  };\n}\nexport default Feature;\n","/**\n * @module ol/transform\n */\nimport {assert} from './asserts.js';\n\n/**\n * An array representing an affine 2d transformation for use with\n * {@link module:ol/transform} functions. The array has 6 elements.\n * @typedef {!Array<number>} Transform\n * @api\n */\n\n/**\n * Collection of affine 2d transformation functions. The functions work on an\n * array of 6 elements. The element order is compatible with the [SVGMatrix\n * interface](https://developer.mozilla.org/en-US/docs/Web/API/SVGMatrix) and is\n * a subset (elements a to f) of a 3×3 matrix:\n * ```\n * [ a c e ]\n * [ b d f ]\n * [ 0 0 1 ]\n * ```\n */\n\n/**\n * @private\n * @type {Transform}\n */\nconst tmp_ = new Array(6);\n\n/**\n * Create an identity transform.\n * @return {!Transform} Identity transform.\n */\nexport function create() {\n  return [1, 0, 0, 1, 0, 0];\n}\n\n/**\n * Resets the given transform to an identity transform.\n * @param {!Transform} transform Transform.\n * @return {!Transform} Transform.\n */\nexport function reset(transform) {\n  return set(transform, 1, 0, 0, 1, 0, 0);\n}\n\n/**\n * Multiply the underlying matrices of two transforms and return the result in\n * the first transform.\n * @param {!Transform} transform1 Transform parameters of matrix 1.\n * @param {!Transform} transform2 Transform parameters of matrix 2.\n * @return {!Transform} transform1 multiplied with transform2.\n */\nexport function multiply(transform1, transform2) {\n  const a1 = transform1[0];\n  const b1 = transform1[1];\n  const c1 = transform1[2];\n  const d1 = transform1[3];\n  const e1 = transform1[4];\n  const f1 = transform1[5];\n  const a2 = transform2[0];\n  const b2 = transform2[1];\n  const c2 = transform2[2];\n  const d2 = transform2[3];\n  const e2 = transform2[4];\n  const f2 = transform2[5];\n\n  transform1[0] = a1 * a2 + c1 * b2;\n  transform1[1] = b1 * a2 + d1 * b2;\n  transform1[2] = a1 * c2 + c1 * d2;\n  transform1[3] = b1 * c2 + d1 * d2;\n  transform1[4] = a1 * e2 + c1 * f2 + e1;\n  transform1[5] = b1 * e2 + d1 * f2 + f1;\n\n  return transform1;\n}\n\n/**\n * Set the transform components a-f on a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} a The a component of the transform.\n * @param {number} b The b component of the transform.\n * @param {number} c The c component of the transform.\n * @param {number} d The d component of the transform.\n * @param {number} e The e component of the transform.\n * @param {number} f The f component of the transform.\n * @return {!Transform} Matrix with transform applied.\n */\nexport function set(transform, a, b, c, d, e, f) {\n  transform[0] = a;\n  transform[1] = b;\n  transform[2] = c;\n  transform[3] = d;\n  transform[4] = e;\n  transform[5] = f;\n  return transform;\n}\n\n/**\n * Set transform on one matrix from another matrix.\n * @param {!Transform} transform1 Matrix to set transform to.\n * @param {!Transform} transform2 Matrix to set transform from.\n * @return {!Transform} transform1 with transform from transform2 applied.\n */\nexport function setFromArray(transform1, transform2) {\n  transform1[0] = transform2[0];\n  transform1[1] = transform2[1];\n  transform1[2] = transform2[2];\n  transform1[3] = transform2[3];\n  transform1[4] = transform2[4];\n  transform1[5] = transform2[5];\n  return transform1;\n}\n\n/**\n * Transforms the given coordinate with the given transform returning the\n * resulting, transformed coordinate. The coordinate will be modified in-place.\n *\n * @param {Transform} transform The transformation.\n * @param {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} coordinate The coordinate to transform.\n * @return {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} return coordinate so that operations can be\n *     chained together.\n */\nexport function apply(transform, coordinate) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  coordinate[0] = transform[0] * x + transform[2] * y + transform[4];\n  coordinate[1] = transform[1] * x + transform[3] * y + transform[5];\n  return coordinate;\n}\n\n/**\n * Applies rotation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} angle Angle in radians.\n * @return {!Transform} The rotated transform.\n */\nexport function rotate(transform, angle) {\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  return multiply(transform, set(tmp_, cos, sin, -sin, cos, 0, 0));\n}\n\n/**\n * Applies scale to a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scaled transform.\n */\nexport function scale(transform, x, y) {\n  return multiply(transform, set(tmp_, x, 0, 0, y, 0, 0));\n}\n\n/**\n * Creates a scale transform.\n * @param {!Transform} target Transform to overwrite.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scale transform.\n */\nexport function makeScale(target, x, y) {\n  return set(target, x, 0, 0, y, 0, 0);\n}\n\n/**\n * Applies translation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} dx Translation x.\n * @param {number} dy Translation y.\n * @return {!Transform} The translated transform.\n */\nexport function translate(transform, dx, dy) {\n  return multiply(transform, set(tmp_, 1, 0, 0, 1, dx, dy));\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative).\n * @param {!Transform} transform The transform (will be modified in place).\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {!Transform} The composite transform.\n */\nexport function compose(transform, dx1, dy1, sx, sy, angle, dx2, dy2) {\n  const sin = Math.sin(angle);\n  const cos = Math.cos(angle);\n  transform[0] = sx * cos;\n  transform[1] = sy * sin;\n  transform[2] = -sx * sin;\n  transform[3] = sy * cos;\n  transform[4] = dx2 * sx * cos - dy2 * sx * sin + dx1;\n  transform[5] = dx2 * sy * sin + dy2 * sy * cos + dy1;\n  return transform;\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative). The resulting transform\n * string can be applied as `transform` property of an HTMLElement's style.\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {string} The composite css transform.\n * @api\n */\nexport function composeCssTransform(dx1, dy1, sx, sy, angle, dx2, dy2) {\n  return toString(compose(create(), dx1, dy1, sx, sy, angle, dx2, dy2));\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (source) transform.\n */\nexport function invert(source) {\n  return makeInverse(source, source);\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} target Transform to be set as the inverse of\n *     the source transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (target) transform.\n */\nexport function makeInverse(target, source) {\n  const det = determinant(source);\n  assert(det !== 0, 'Transformation matrix cannot be inverted');\n\n  const a = source[0];\n  const b = source[1];\n  const c = source[2];\n  const d = source[3];\n  const e = source[4];\n  const f = source[5];\n\n  target[0] = d / det;\n  target[1] = -b / det;\n  target[2] = -c / det;\n  target[3] = a / det;\n  target[4] = (c * f - d * e) / det;\n  target[5] = -(a * f - b * e) / det;\n\n  return target;\n}\n\n/**\n * Returns the determinant of the given matrix.\n * @param {!Transform} mat Matrix.\n * @return {number} Determinant.\n */\nexport function determinant(mat) {\n  return mat[0] * mat[3] - mat[1] * mat[2];\n}\n\n/**\n * @type {Array}\n */\nconst matrixPrecision = [1e6, 1e6, 1e6, 1e6, 2, 2];\n\n/**\n * A rounded string version of the transform.  This can be used\n * for CSS transforms.\n * @param {!Transform} mat Matrix.\n * @return {string} The transform as a string.\n */\nexport function toString(mat) {\n  const transformString =\n    'matrix(' +\n    mat\n      .map(\n        (value, i) =>\n          Math.round(value * matrixPrecision[i]) / matrixPrecision[i],\n      )\n      .join(', ') +\n    ')';\n  return transformString;\n}\n","/**\n * @module ol/extent/Relationship\n */\n\n/**\n * Relationship to an extent.\n * @enum {number}\n */\nexport default {\n  UNKNOWN: 0,\n  INTERSECTING: 1,\n  ABOVE: 2,\n  RIGHT: 4,\n  BELOW: 8,\n  LEFT: 16,\n};\n","/**\n * @module ol/extent\n */\nimport Relationship from './extent/Relationship.js';\n\n/**\n * An array of numbers representing an extent: `[minx, miny, maxx, maxy]`.\n * @typedef {Array<number>} Extent\n * @api\n */\n\n/**\n * Extent corner.\n * @typedef {'bottom-left' | 'bottom-right' | 'top-left' | 'top-right'} Corner\n */\n\n/**\n * Build an extent that includes all given coordinates.\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Bounding extent.\n * @api\n */\nexport function boundingExtent(coordinates) {\n  const extent = createEmpty();\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Array<number>} xs Xs.\n * @param {Array<number>} ys Ys.\n * @param {Extent} [dest] Destination extent.\n * @private\n * @return {Extent} Extent.\n */\nfunction _boundingExtentXYs(xs, ys, dest) {\n  const minX = Math.min.apply(null, xs);\n  const minY = Math.min.apply(null, ys);\n  const maxX = Math.max.apply(null, xs);\n  const maxY = Math.max.apply(null, ys);\n  return createOrUpdate(minX, minY, maxX, maxY, dest);\n}\n\n/**\n * Return extent increased by the provided value.\n * @param {Extent} extent Extent.\n * @param {number} value The amount by which the extent should be buffered.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function buffer(extent, value, dest) {\n  if (dest) {\n    dest[0] = extent[0] - value;\n    dest[1] = extent[1] - value;\n    dest[2] = extent[2] + value;\n    dest[3] = extent[3] + value;\n    return dest;\n  }\n  return [\n    extent[0] - value,\n    extent[1] - value,\n    extent[2] + value,\n    extent[3] + value,\n  ];\n}\n\n/**\n * Creates a clone of an extent.\n *\n * @param {Extent} extent Extent to clone.\n * @param {Extent} [dest] Extent.\n * @return {Extent} The clone.\n */\nexport function clone(extent, dest) {\n  if (dest) {\n    dest[0] = extent[0];\n    dest[1] = extent[1];\n    dest[2] = extent[2];\n    dest[3] = extent[3];\n    return dest;\n  }\n  return extent.slice();\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {number} Closest squared distance.\n */\nexport function closestSquaredDistanceXY(extent, x, y) {\n  let dx, dy;\n  if (x < extent[0]) {\n    dx = extent[0] - x;\n  } else if (extent[2] < x) {\n    dx = x - extent[2];\n  } else {\n    dx = 0;\n  }\n  if (y < extent[1]) {\n    dy = extent[1] - y;\n  } else if (extent[3] < y) {\n    dy = y - extent[3];\n  } else {\n    dy = 0;\n  }\n  return dx * dx + dy * dy;\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @return {boolean} The coordinate is contained in the extent.\n * @api\n */\nexport function containsCoordinate(extent, coordinate) {\n  return containsXY(extent, coordinate[0], coordinate[1]);\n}\n\n/**\n * Check if one extent contains another.\n *\n * An extent is deemed contained if it lies completely within the other extent,\n * including if they share one or more edges.\n *\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The second extent is contained by or on the edge of the\n *     first.\n * @api\n */\nexport function containsExtent(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[0] &&\n    extent2[2] <= extent1[2] &&\n    extent1[1] <= extent2[1] &&\n    extent2[3] <= extent1[3]\n  );\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n * @return {boolean} The x, y values are contained in the extent.\n * @api\n */\nexport function containsXY(extent, x, y) {\n  return extent[0] <= x && x <= extent[2] && extent[1] <= y && y <= extent[3];\n}\n\n/**\n * Get the relationship between a coordinate and extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate The coordinate.\n * @return {import(\"./extent/Relationship.js\").default} The relationship (bitwise compare with\n *     import(\"./extent/Relationship.js\").Relationship).\n */\nexport function coordinateRelationship(extent, coordinate) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const x = coordinate[0];\n  const y = coordinate[1];\n  let relationship = Relationship.UNKNOWN;\n  if (x < minX) {\n    relationship = relationship | Relationship.LEFT;\n  } else if (x > maxX) {\n    relationship = relationship | Relationship.RIGHT;\n  }\n  if (y < minY) {\n    relationship = relationship | Relationship.BELOW;\n  } else if (y > maxY) {\n    relationship = relationship | Relationship.ABOVE;\n  }\n  if (relationship === Relationship.UNKNOWN) {\n    relationship = Relationship.INTERSECTING;\n  }\n  return relationship;\n}\n\n/**\n * Create an empty extent.\n * @return {Extent} Empty extent.\n * @api\n */\nexport function createEmpty() {\n  return [Infinity, Infinity, -Infinity, -Infinity];\n}\n\n/**\n * Create a new extent or update the provided extent.\n * @param {number} minX Minimum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxX Maximum X.\n * @param {number} maxY Maximum Y.\n * @param {Extent} [dest] Destination extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdate(minX, minY, maxX, maxY, dest) {\n  if (dest) {\n    dest[0] = minX;\n    dest[1] = minY;\n    dest[2] = maxX;\n    dest[3] = maxY;\n    return dest;\n  }\n  return [minX, minY, maxX, maxY];\n}\n\n/**\n * Create a new empty extent or make the provided one empty.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateEmpty(dest) {\n  return createOrUpdate(Infinity, Infinity, -Infinity, -Infinity, dest);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinate(coordinate, dest) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  return createOrUpdate(x, y, x, y, dest);\n}\n\n/**\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinates(coordinates, dest) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendCoordinates(extent, coordinates);\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromFlatCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  dest,\n) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendFlatCoordinates(extent, flatCoordinates, offset, end, stride);\n}\n\n/**\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromRings(rings, dest) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendRings(extent, rings);\n}\n\n/**\n * Determine if two extents are equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The two extents are equivalent.\n * @api\n */\nexport function equals(extent1, extent2) {\n  return (\n    extent1[0] == extent2[0] &&\n    extent1[2] == extent2[2] &&\n    extent1[1] == extent2[1] &&\n    extent1[3] == extent2[3]\n  );\n}\n\n/**\n * Determine if two extents are approximately equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {number} tolerance Tolerance in extent coordinate units.\n * @return {boolean} The two extents differ by less than the tolerance.\n */\nexport function approximatelyEquals(extent1, extent2, tolerance) {\n  return (\n    Math.abs(extent1[0] - extent2[0]) < tolerance &&\n    Math.abs(extent1[2] - extent2[2]) < tolerance &&\n    Math.abs(extent1[1] - extent2[1]) < tolerance &&\n    Math.abs(extent1[3] - extent2[3]) < tolerance\n  );\n}\n\n/**\n * Modify an extent to include another extent.\n * @param {Extent} extent1 The extent to be modified.\n * @param {Extent} extent2 The extent that will be included in the first.\n * @return {Extent} A reference to the first (extended) extent.\n * @api\n */\nexport function extend(extent1, extent2) {\n  if (extent2[0] < extent1[0]) {\n    extent1[0] = extent2[0];\n  }\n  if (extent2[2] > extent1[2]) {\n    extent1[2] = extent2[2];\n  }\n  if (extent2[1] < extent1[1]) {\n    extent1[1] = extent2[1];\n  }\n  if (extent2[3] > extent1[3]) {\n    extent1[3] = extent2[3];\n  }\n  return extent1;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n */\nexport function extendCoordinate(extent, coordinate) {\n  if (coordinate[0] < extent[0]) {\n    extent[0] = coordinate[0];\n  }\n  if (coordinate[0] > extent[2]) {\n    extent[2] = coordinate[0];\n  }\n  if (coordinate[1] < extent[1]) {\n    extent[1] = coordinate[1];\n  }\n  if (coordinate[1] > extent[3]) {\n    extent[3] = coordinate[1];\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Extent.\n */\nexport function extendCoordinates(extent, coordinates) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Extent} Extent.\n */\nexport function extendFlatCoordinates(\n  extent,\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n) {\n  for (; offset < end; offset += stride) {\n    extendXY(extent, flatCoordinates[offset], flatCoordinates[offset + 1]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @return {Extent} Extent.\n */\nexport function extendRings(extent, rings) {\n  for (let i = 0, ii = rings.length; i < ii; ++i) {\n    extendCoordinates(extent, rings[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n */\nexport function extendXY(extent, x, y) {\n  extent[0] = Math.min(extent[0], x);\n  extent[1] = Math.min(extent[1], y);\n  extent[2] = Math.max(extent[2], x);\n  extent[3] = Math.max(extent[3], y);\n}\n\n/**\n * This function calls `callback` for each corner of the extent. If the\n * callback returns a truthy value the function returns that value\n * immediately. Otherwise the function returns `false`.\n * @param {Extent} extent Extent.\n * @param {function(import(\"./coordinate.js\").Coordinate): S} callback Callback.\n * @return {S|boolean} Value.\n * @template S\n */\nexport function forEachCorner(extent, callback) {\n  let val;\n  val = callback(getBottomLeft(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getBottomRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopLeft(extent));\n  if (val) {\n    return val;\n  }\n  return false;\n}\n\n/**\n * Get the size of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Area.\n * @api\n */\nexport function getArea(extent) {\n  let area = 0;\n  if (!isEmpty(extent)) {\n    area = getWidth(extent) * getHeight(extent);\n  }\n  return area;\n}\n\n/**\n * Get the bottom left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom left coordinate.\n * @api\n */\nexport function getBottomLeft(extent) {\n  return [extent[0], extent[1]];\n}\n\n/**\n * Get the bottom right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom right coordinate.\n * @api\n */\nexport function getBottomRight(extent) {\n  return [extent[2], extent[1]];\n}\n\n/**\n * Get the center coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Center.\n * @api\n */\nexport function getCenter(extent) {\n  return [(extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2];\n}\n\n/**\n * Get a corner coordinate of an extent.\n * @param {Extent} extent Extent.\n * @param {Corner} corner Corner.\n * @return {import(\"./coordinate.js\").Coordinate} Corner coordinate.\n */\nexport function getCorner(extent, corner) {\n  let coordinate;\n  if (corner === 'bottom-left') {\n    coordinate = getBottomLeft(extent);\n  } else if (corner === 'bottom-right') {\n    coordinate = getBottomRight(extent);\n  } else if (corner === 'top-left') {\n    coordinate = getTopLeft(extent);\n  } else if (corner === 'top-right') {\n    coordinate = getTopRight(extent);\n  } else {\n    throw new Error('Invalid corner');\n  }\n  return coordinate;\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Enlarged area.\n */\nexport function getEnlargedArea(extent1, extent2) {\n  const minX = Math.min(extent1[0], extent2[0]);\n  const minY = Math.min(extent1[1], extent2[1]);\n  const maxX = Math.max(extent1[2], extent2[2]);\n  const maxY = Math.max(extent1[3], extent2[3]);\n  return (maxX - minX) * (maxY - minY);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @param {Extent} [dest] Destination extent.\n * @return {Extent} Extent.\n */\nexport function getForViewAndSize(center, resolution, rotation, size, dest) {\n  const [x0, y0, x1, y1, x2, y2, x3, y3] = getRotatedViewport(\n    center,\n    resolution,\n    rotation,\n    size,\n  );\n  return createOrUpdate(\n    Math.min(x0, x1, x2, x3),\n    Math.min(y0, y1, y2, y3),\n    Math.max(x0, x1, x2, x3),\n    Math.max(y0, y1, y2, y3),\n    dest,\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @return {Array<number>} Linear ring representing the viewport.\n */\nexport function getRotatedViewport(center, resolution, rotation, size) {\n  const dx = (resolution * size[0]) / 2;\n  const dy = (resolution * size[1]) / 2;\n  const cosRotation = Math.cos(rotation);\n  const sinRotation = Math.sin(rotation);\n  const xCos = dx * cosRotation;\n  const xSin = dx * sinRotation;\n  const yCos = dy * cosRotation;\n  const ySin = dy * sinRotation;\n  const x = center[0];\n  const y = center[1];\n  return [\n    x - xCos + ySin,\n    y - xSin - yCos,\n    x - xCos - ySin,\n    y - xSin + yCos,\n    x + xCos - ySin,\n    y + xSin + yCos,\n    x + xCos + ySin,\n    y + xSin - yCos,\n    x - xCos + ySin,\n    y - xSin - yCos,\n  ];\n}\n\n/**\n * Get the height of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Height.\n * @api\n */\nexport function getHeight(extent) {\n  return extent[3] - extent[1];\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Intersection area.\n */\nexport function getIntersectionArea(extent1, extent2) {\n  const intersection = getIntersection(extent1, extent2);\n  return getArea(intersection);\n}\n\n/**\n * Get the intersection of two extents.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {Extent} [dest] Optional extent to populate with intersection.\n * @return {Extent} Intersecting extent.\n * @api\n */\nexport function getIntersection(extent1, extent2, dest) {\n  const intersection = dest ? dest : createEmpty();\n  if (intersects(extent1, extent2)) {\n    if (extent1[0] > extent2[0]) {\n      intersection[0] = extent1[0];\n    } else {\n      intersection[0] = extent2[0];\n    }\n    if (extent1[1] > extent2[1]) {\n      intersection[1] = extent1[1];\n    } else {\n      intersection[1] = extent2[1];\n    }\n    if (extent1[2] < extent2[2]) {\n      intersection[2] = extent1[2];\n    } else {\n      intersection[2] = extent2[2];\n    }\n    if (extent1[3] < extent2[3]) {\n      intersection[3] = extent1[3];\n    } else {\n      intersection[3] = extent2[3];\n    }\n  } else {\n    createOrUpdateEmpty(intersection);\n  }\n  return intersection;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @return {number} Margin.\n */\nexport function getMargin(extent) {\n  return getWidth(extent) + getHeight(extent);\n}\n\n/**\n * Get the size (width, height) of an extent.\n * @param {Extent} extent The extent.\n * @return {import(\"./size.js\").Size} The extent size.\n * @api\n */\nexport function getSize(extent) {\n  return [extent[2] - extent[0], extent[3] - extent[1]];\n}\n\n/**\n * Get the top left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top left coordinate.\n * @api\n */\nexport function getTopLeft(extent) {\n  return [extent[0], extent[3]];\n}\n\n/**\n * Get the top right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top right coordinate.\n * @api\n */\nexport function getTopRight(extent) {\n  return [extent[2], extent[3]];\n}\n\n/**\n * Get the width of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Width.\n * @api\n */\nexport function getWidth(extent) {\n  return extent[2] - extent[0];\n}\n\n/**\n * Determine if one extent intersects another.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent.\n * @return {boolean} The two extents intersect.\n * @api\n */\nexport function intersects(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[2] &&\n    extent1[2] >= extent2[0] &&\n    extent1[1] <= extent2[3] &&\n    extent1[3] >= extent2[1]\n  );\n}\n\n/**\n * Determine if an extent is empty.\n * @param {Extent} extent Extent.\n * @return {boolean} Is empty.\n * @api\n */\nexport function isEmpty(extent) {\n  return extent[2] < extent[0] || extent[3] < extent[1];\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function returnOrUpdate(extent, dest) {\n  if (dest) {\n    dest[0] = extent[0];\n    dest[1] = extent[1];\n    dest[2] = extent[2];\n    dest[3] = extent[3];\n    return dest;\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} value Value.\n */\nexport function scaleFromCenter(extent, value) {\n  const deltaX = ((extent[2] - extent[0]) / 2) * (value - 1);\n  const deltaY = ((extent[3] - extent[1]) / 2) * (value - 1);\n  extent[0] -= deltaX;\n  extent[2] += deltaX;\n  extent[1] -= deltaY;\n  extent[3] += deltaY;\n}\n\n/**\n * Determine if the segment between two coordinates intersects (crosses,\n * touches, or is contained by) the provided extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} start Segment start coordinate.\n * @param {import(\"./coordinate.js\").Coordinate} end Segment end coordinate.\n * @return {boolean} The segment intersects the extent.\n */\nexport function intersectsSegment(extent, start, end) {\n  let intersects = false;\n  const startRel = coordinateRelationship(extent, start);\n  const endRel = coordinateRelationship(extent, end);\n  if (\n    startRel === Relationship.INTERSECTING ||\n    endRel === Relationship.INTERSECTING\n  ) {\n    intersects = true;\n  } else {\n    const minX = extent[0];\n    const minY = extent[1];\n    const maxX = extent[2];\n    const maxY = extent[3];\n    const startX = start[0];\n    const startY = start[1];\n    const endX = end[0];\n    const endY = end[1];\n    const slope = (endY - startY) / (endX - startX);\n    let x, y;\n    if (!!(endRel & Relationship.ABOVE) && !(startRel & Relationship.ABOVE)) {\n      // potentially intersects top\n      x = endX - (endY - maxY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.RIGHT) &&\n      !(startRel & Relationship.RIGHT)\n    ) {\n      // potentially intersects right\n      y = endY - (endX - maxX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.BELOW) &&\n      !(startRel & Relationship.BELOW)\n    ) {\n      // potentially intersects bottom\n      x = endX - (endY - minY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.LEFT) &&\n      !(startRel & Relationship.LEFT)\n    ) {\n      // potentially intersects left\n      y = endY - (endX - minX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n  }\n  return intersects;\n}\n\n/**\n * Apply a transform function to the extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./proj.js\").TransformFunction} transformFn Transform function.\n * Called with `[minX, minY, maxX, maxY]` extent coordinates.\n * @param {Extent} [dest] Destination extent.\n * @param {number} [stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {Extent} Extent.\n * @api\n */\nexport function applyTransform(extent, transformFn, dest, stops) {\n  if (isEmpty(extent)) {\n    return createOrUpdateEmpty(dest);\n  }\n  let coordinates = [];\n  if (stops > 1) {\n    const width = extent[2] - extent[0];\n    const height = extent[3] - extent[1];\n    for (let i = 0; i < stops; ++i) {\n      coordinates.push(\n        extent[0] + (width * i) / stops,\n        extent[1],\n        extent[2],\n        extent[1] + (height * i) / stops,\n        extent[2] - (width * i) / stops,\n        extent[3],\n        extent[0],\n        extent[3] - (height * i) / stops,\n      );\n    }\n  } else {\n    coordinates = [\n      extent[0],\n      extent[1],\n      extent[2],\n      extent[1],\n      extent[2],\n      extent[3],\n      extent[0],\n      extent[3],\n    ];\n  }\n  transformFn(coordinates, coordinates, 2);\n  const xs = [];\n  const ys = [];\n  for (let i = 0, l = coordinates.length; i < l; i += 2) {\n    xs.push(coordinates[i]);\n    ys.push(coordinates[i + 1]);\n  }\n  return _boundingExtentXYs(xs, ys, dest);\n}\n\n/**\n * Modifies the provided extent in-place to be within the real world\n * extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @return {Extent} The extent within the real world extent.\n */\nexport function wrapX(extent, projection) {\n  const projectionExtent = projection.getExtent();\n  const center = getCenter(extent);\n  if (\n    projection.canWrapX() &&\n    (center[0] < projectionExtent[0] || center[0] >= projectionExtent[2])\n  ) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.floor(\n      (center[0] - projectionExtent[0]) / worldWidth,\n    );\n    const offset = worldsAway * worldWidth;\n    extent[0] -= offset;\n    extent[2] -= offset;\n  }\n  return extent;\n}\n\n/**\n * Fits the extent to the real world\n *\n * If the extent does not cross the anti meridian, this will return the extent in an array\n * If the extent crosses the anti meridian, the extent will be sliced, so each part fits within the\n * real world\n *\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @param {boolean} [multiWorld] Return all worlds\n * @return {Array<Extent>} The extent within the real world extent.\n */\nexport function wrapAndSliceX(extent, projection, multiWorld) {\n  if (projection.canWrapX()) {\n    const projectionExtent = projection.getExtent();\n\n    if (!isFinite(extent[0]) || !isFinite(extent[2])) {\n      return [[projectionExtent[0], extent[1], projectionExtent[2], extent[3]]];\n    }\n\n    wrapX(extent, projection);\n    const worldWidth = getWidth(projectionExtent);\n\n    if (getWidth(extent) > worldWidth && !multiWorld) {\n      // the extent wraps around on itself\n      return [[projectionExtent[0], extent[1], projectionExtent[2], extent[3]]];\n    }\n    if (extent[0] < projectionExtent[0]) {\n      // the extent crosses the anti meridian, so it needs to be sliced\n      return [\n        [extent[0] + worldWidth, extent[1], projectionExtent[2], extent[3]],\n        [projectionExtent[0], extent[1], extent[2], extent[3]],\n      ];\n    }\n    if (extent[2] > projectionExtent[2]) {\n      // the extent crosses the anti meridian, so it needs to be sliced\n      return [\n        [extent[0], extent[1], projectionExtent[2], extent[3]],\n        [projectionExtent[0], extent[1], extent[2] - worldWidth, extent[3]],\n      ];\n    }\n  }\n\n  return [extent];\n}\n","/**\n * @module ol/proj/Units\n */\n\n/**\n * @typedef {'radians' | 'degrees' | 'ft' | 'm' | 'pixels' | 'tile-pixels' | 'us-ft'} Units\n * Projection units.\n */\n\n/**\n * See http://duff.ess.washington.edu/data/raster/drg/docs/geotiff.txt\n * @type {Object<number, Units>}\n */\nconst unitByCode = {\n  '9001': 'm',\n  '9002': 'ft',\n  '9003': 'us-ft',\n  '9101': 'radians',\n  '9102': 'degrees',\n};\n\n/**\n * @param {number} code Unit code.\n * @return {Units} Units.\n */\nexport function fromCode(code) {\n  return unitByCode[code];\n}\n\n/**\n * @typedef {Object} MetersPerUnitLookup\n * @property {number} radians Radians\n * @property {number} degrees Degrees\n * @property {number} ft  Feet\n * @property {number} m Meters\n * @property {number} us-ft US feet\n */\n\n/**\n * Meters per unit lookup table.\n * @const\n * @type {MetersPerUnitLookup}\n * @api\n */\nexport const METERS_PER_UNIT = {\n  // use the radius of the Normal sphere\n  'radians': 6370997 / (2 * Math.PI),\n  'degrees': (2 * Math.PI * 6370997) / 360,\n  'ft': 0.3048,\n  'm': 1,\n  'us-ft': 1200 / 3937,\n};\n","/**\n * @module ol/proj/Projection\n */\nimport {METERS_PER_UNIT} from './Units.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} code The SRS identifier code, e.g. `EPSG:4326`.\n * @property {import(\"./Units.js\").Units} [units] Units. Required unless a\n * proj4 projection is defined for `code`.\n * @property {import(\"../extent.js\").Extent} [extent] The validity extent for the SRS.\n * @property {string} [axisOrientation='enu'] The axis orientation as specified in Proj4.\n * @property {boolean} [global=false] Whether the projection is valid for the whole globe.\n * @property {number} [metersPerUnit] The meters per unit for the SRS.\n * If not provided, the `units` are used to get the meters per unit from the {@link METERS_PER_UNIT}\n * lookup table.\n * @property {import(\"../extent.js\").Extent} [worldExtent] The world extent for the SRS.\n * @property {function(number, import(\"../coordinate.js\").Coordinate):number} [getPointResolution]\n * Function to determine resolution at a point. The function is called with a\n * `number` view resolution and a {@link module:ol/coordinate~Coordinate} as arguments, and returns\n * the `number` resolution in projection units at the passed coordinate. If this is `undefined`,\n * the default {@link module:ol/proj.getPointResolution} function will be used.\n */\n\n/**\n * @classdesc\n * Projection definition class. One of these is created for each projection\n * supported in the application and stored in the {@link module:ol/proj} namespace.\n * You can use these in applications, but this is not required, as API params\n * and options use {@link module:ol/proj~ProjectionLike} which means the simple string\n * code will suffice.\n *\n * You can use {@link module:ol/proj.get} to retrieve the object for a particular\n * projection.\n *\n * The library includes definitions for `EPSG:4326` and `EPSG:3857`, together\n * with the following aliases:\n * * `EPSG:4326`: CRS:84, urn:ogc:def:crs:EPSG:6.6:4326,\n *     urn:ogc:def:crs:OGC:1.3:CRS84, urn:ogc:def:crs:OGC:2:84,\n *     http://www.opengis.net/gml/srs/epsg.xml#4326,\n *     urn:x-ogc:def:crs:EPSG:4326\n * * `EPSG:3857`: EPSG:102100, EPSG:102113, EPSG:900913,\n *     urn:ogc:def:crs:EPSG:6.18:3:3857,\n *     http://www.opengis.net/gml/srs/epsg.xml#3857\n *\n * If you use [proj4js](https://github.com/proj4js/proj4js), aliases can\n * be added using `proj4.defs()`. After all required projection definitions are\n * added, call the {@link module:ol/proj/proj4.register} function.\n *\n * @api\n */\nclass Projection {\n  /**\n   * @param {Options} options Projection options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {string}\n     */\n    this.code_ = options.code;\n\n    /**\n     * Units of projected coordinates. When set to `TILE_PIXELS`, a\n     * `this.extent_` and `this.worldExtent_` must be configured properly for each\n     * tile.\n     * @private\n     * @type {import(\"./Units.js\").Units}\n     */\n    this.units_ = /** @type {import(\"./Units.js\").Units} */ (options.units);\n\n    /**\n     * Validity extent of the projection in projected coordinates. For projections\n     * with `TILE_PIXELS` units, this is the extent of the tile in\n     * tile pixel space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = options.extent !== undefined ? options.extent : null;\n\n    /**\n     * Extent of the world in EPSG:4326. For projections with\n     * `TILE_PIXELS` units, this is the extent of the tile in\n     * projected coordinate space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.worldExtent_ =\n      options.worldExtent !== undefined ? options.worldExtent : null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.axisOrientation_ =\n      options.axisOrientation !== undefined ? options.axisOrientation : 'enu';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.global_ = options.global !== undefined ? options.global : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.canWrapX_ = !!(this.global_ && this.extent_);\n\n    /**\n     * @private\n     * @type {function(number, import(\"../coordinate.js\").Coordinate):number|undefined}\n     */\n    this.getPointResolutionFunc_ = options.getPointResolution;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.defaultTileGrid_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.metersPerUnit_ = options.metersPerUnit;\n  }\n\n  /**\n   * @return {boolean} The projection is suitable for wrapping the x-axis\n   */\n  canWrapX() {\n    return this.canWrapX_;\n  }\n\n  /**\n   * Get the code for this projection, e.g. 'EPSG:4326'.\n   * @return {string} Code.\n   * @api\n   */\n  getCode() {\n    return this.code_;\n  }\n\n  /**\n   * Get the validity extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the units of this projection.\n   * @return {import(\"./Units.js\").Units} Units.\n   * @api\n   */\n  getUnits() {\n    return this.units_;\n  }\n\n  /**\n   * Get the amount of meters per unit of this projection.  If the projection is\n   * not configured with `metersPerUnit` or a units identifier, the return is\n   * `undefined`.\n   * @return {number|undefined} Meters.\n   * @api\n   */\n  getMetersPerUnit() {\n    return this.metersPerUnit_ || METERS_PER_UNIT[this.units_];\n  }\n\n  /**\n   * Get the world extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getWorldExtent() {\n    return this.worldExtent_;\n  }\n\n  /**\n   * Get the axis orientation of this projection.\n   * Example values are:\n   * enu - the default easting, northing, elevation.\n   * neu - northing, easting, up - useful for \"lat/long\" geographic coordinates,\n   *     or south orientated transverse mercator.\n   * wnu - westing, northing, up - some planetary coordinate systems have\n   *     \"west positive\" coordinate systems\n   * @return {string} Axis orientation.\n   * @api\n   */\n  getAxisOrientation() {\n    return this.axisOrientation_;\n  }\n\n  /**\n   * Is this projection a global projection which spans the whole world?\n   * @return {boolean} Whether the projection is global.\n   * @api\n   */\n  isGlobal() {\n    return this.global_;\n  }\n\n  /**\n   * Set if the projection is a global projection which spans the whole world\n   * @param {boolean} global Whether the projection is global.\n   * @api\n   */\n  setGlobal(global) {\n    this.global_ = global;\n    this.canWrapX_ = !!(global && this.extent_);\n  }\n\n  /**\n   * @return {import(\"../tilegrid/TileGrid.js\").default} The default tile grid.\n   */\n  getDefaultTileGrid() {\n    return this.defaultTileGrid_;\n  }\n\n  /**\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tileGrid The default tile grid.\n   */\n  setDefaultTileGrid(tileGrid) {\n    this.defaultTileGrid_ = tileGrid;\n  }\n\n  /**\n   * Set the validity extent for this projection.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  setExtent(extent) {\n    this.extent_ = extent;\n    this.canWrapX_ = !!(this.global_ && extent);\n  }\n\n  /**\n   * Set the world extent for this projection.\n   * @param {import(\"../extent.js\").Extent} worldExtent World extent\n   *     [minlon, minlat, maxlon, maxlat].\n   * @api\n   */\n  setWorldExtent(worldExtent) {\n    this.worldExtent_ = worldExtent;\n  }\n\n  /**\n   * Set the getPointResolution function (see {@link module:ol/proj.getPointResolution}\n   * for this projection.\n   * @param {function(number, import(\"../coordinate.js\").Coordinate):number} func Function\n   * @api\n   */\n  setGetPointResolution(func) {\n    this.getPointResolutionFunc_ = func;\n  }\n\n  /**\n   * Get the custom point resolution function for this projection (if set).\n   * @return {function(number, import(\"../coordinate.js\").Coordinate):number|undefined} The custom point\n   * resolution function (if set).\n   */\n  getPointResolutionFunc() {\n    return this.getPointResolutionFunc_;\n  }\n}\n\nexport default Projection;\n","/**\n * @module ol/proj/epsg3857\n */\nimport Projection from './Projection.js';\n\n/**\n * Radius of WGS84 sphere\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * @const\n * @type {number}\n */\nexport const HALF_SIZE = Math.PI * RADIUS;\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-HALF_SIZE, -HALF_SIZE, HALF_SIZE, HALF_SIZE];\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const WORLD_EXTENT = [-180, -85, 180, 85];\n\n/**\n * Maximum safe value in y direction\n * @const\n * @type {number}\n */\nexport const MAX_SAFE_Y = RADIUS * Math.log(Math.tan(Math.PI / 2));\n\n/**\n * @classdesc\n * Projection object for web/spherical Mercator (EPSG:3857).\n */\nclass EPSG3857Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   */\n  constructor(code) {\n    super({\n      code: code,\n      units: 'm',\n      extent: EXTENT,\n      global: true,\n      worldExtent: WORLD_EXTENT,\n      getPointResolution: function (resolution, point) {\n        return resolution / Math.cosh(point[1] / RADIUS);\n      },\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:3857.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG3857Projection('EPSG:3857'),\n  new EPSG3857Projection('EPSG:102100'),\n  new EPSG3857Projection('EPSG:102113'),\n  new EPSG3857Projection('EPSG:900913'),\n  new EPSG3857Projection('http://www.opengis.net/def/crs/EPSG/0/3857'),\n  new EPSG3857Projection('http://www.opengis.net/gml/srs/epsg.xml#3857'),\n];\n\n/**\n * Transformation from EPSG:4326 to EPSG:3857.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @param {number} [dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function fromEPSG4326(input, output, dimension) {\n  const length = input.length;\n  dimension = dimension > 1 ? dimension : 2;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (HALF_SIZE * input[i]) / 180;\n    let y = RADIUS * Math.log(Math.tan((Math.PI * (+input[i + 1] + 90)) / 360));\n    if (y > MAX_SAFE_Y) {\n      y = MAX_SAFE_Y;\n    } else if (y < -MAX_SAFE_Y) {\n      y = -MAX_SAFE_Y;\n    }\n    output[i + 1] = y;\n  }\n  return output;\n}\n\n/**\n * Transformation from EPSG:3857 to EPSG:4326.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @param {number} [dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function toEPSG4326(input, output, dimension) {\n  const length = input.length;\n  dimension = dimension > 1 ? dimension : 2;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (180 * input[i]) / HALF_SIZE;\n    output[i + 1] =\n      (360 * Math.atan(Math.exp(input[i + 1] / RADIUS))) / Math.PI - 90;\n  }\n  return output;\n}\n","/**\n * @module ol/proj/epsg4326\n */\nimport Projection from './Projection.js';\n\n/**\n * Semi-major radius of the WGS84 ellipsoid.\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * Extent of the EPSG:4326 projection which is the whole world.\n *\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-180, -90, 180, 90];\n\n/**\n * @const\n * @type {number}\n */\nexport const METERS_PER_UNIT = (Math.PI * RADIUS) / 180;\n\n/**\n * @classdesc\n * Projection object for WGS84 geographic coordinates (EPSG:4326).\n *\n * Note that OpenLayers does not strictly comply with the EPSG definition.\n * The EPSG registry defines 4326 as a CRS for Latitude,Longitude (y,x).\n * OpenLayers treats EPSG:4326 as a pseudo-projection, with x,y coordinates.\n */\nclass EPSG4326Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   * @param {string} [axisOrientation] Axis orientation.\n   */\n  constructor(code, axisOrientation) {\n    super({\n      code: code,\n      units: 'degrees',\n      extent: EXTENT,\n      axisOrientation: axisOrientation,\n      global: true,\n      metersPerUnit: METERS_PER_UNIT,\n      worldExtent: EXTENT,\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:4326.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG4326Projection('CRS:84'),\n  new EPSG4326Projection('EPSG:4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:1.3:CRS84'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:2:84'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/OGC/1.3/CRS84'),\n  new EPSG4326Projection('http://www.opengis.net/gml/srs/epsg.xml#4326', 'neu'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/EPSG/0/4326', 'neu'),\n];\n","/**\n * @module ol/proj/projections\n */\n\n/**\n * @type {Object<string, import(\"./Projection.js\").default>}\n */\nlet cache = {};\n\n/**\n * Clear the projections cache.\n */\nexport function clear() {\n  cache = {};\n}\n\n/**\n * Get a cached projection by code.\n * @param {string} code The code for the projection.\n * @return {import(\"./Projection.js\").default} The projection (if cached).\n */\nexport function get(code) {\n  return (\n    cache[code] ||\n    cache[code.replace(/urn:(x-)?ogc:def:crs:EPSG:(.*:)?(\\w+)$/, 'EPSG:$3')] ||\n    null\n  );\n}\n\n/**\n * Add a projection to the cache.\n * @param {string} code The projection code.\n * @param {import(\"./Projection.js\").default} projection The projection to cache.\n */\nexport function add(code, projection) {\n  cache[code] = projection;\n}\n","/**\n * @module ol/proj/transforms\n */\nimport {isEmpty} from '../obj.js';\n\n/**\n * @private\n * @type {!Object<string, Object<string, import(\"../proj.js\").TransformFunction>>}\n */\nlet transforms = {};\n\n/**\n * Clear the transform cache.\n */\nexport function clear() {\n  transforms = {};\n}\n\n/**\n * Registers a conversion function to convert coordinates from the source\n * projection to the destination projection.\n *\n * @param {import(\"./Projection.js\").default} source Source.\n * @param {import(\"./Projection.js\").default} destination Destination.\n * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n */\nexport function add(source, destination, transformFn) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  if (!(sourceCode in transforms)) {\n    transforms[sourceCode] = {};\n  }\n  transforms[sourceCode][destinationCode] = transformFn;\n}\n\n/**\n * Unregisters the conversion function to convert coordinates from the source\n * projection to the destination projection.  This method is used to clean up\n * cached transforms during testing.\n *\n * @param {import(\"./Projection.js\").default} source Source projection.\n * @param {import(\"./Projection.js\").default} destination Destination projection.\n * @return {import(\"../proj.js\").TransformFunction} transformFn The unregistered transform.\n */\nexport function remove(source, destination) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  const transform = transforms[sourceCode][destinationCode];\n  delete transforms[sourceCode][destinationCode];\n  if (isEmpty(transforms[sourceCode])) {\n    delete transforms[sourceCode];\n  }\n  return transform;\n}\n\n/**\n * Get a transform given a source code and a destination code.\n * @param {string} sourceCode The code for the source projection.\n * @param {string} destinationCode The code for the destination projection.\n * @return {import(\"../proj.js\").TransformFunction|undefined} The transform function (if found).\n */\nexport function get(sourceCode, destinationCode) {\n  let transform;\n  if (sourceCode in transforms && destinationCode in transforms[sourceCode]) {\n    transform = transforms[sourceCode][destinationCode];\n  }\n  return transform;\n}\n","/**\n * @module ol/math\n */\n\n/**\n * Takes a number and clamps it to within the provided bounds.\n * @param {number} value The input number.\n * @param {number} min The minimum value to return.\n * @param {number} max The maximum value to return.\n * @return {number} The input number if it is within bounds, or the nearest\n *     number within the bounds.\n */\nexport function clamp(value, min, max) {\n  return Math.min(Math.max(value, min), max);\n}\n\n/**\n * Returns the square of the closest distance between the point (x, y) and the\n * line segment (x1, y1) to (x2, y2).\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredSegmentDistance(x, y, x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  if (dx !== 0 || dy !== 0) {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      x1 = x2;\n      y1 = y2;\n    } else if (t > 0) {\n      x1 += dx * t;\n      y1 += dy * t;\n    }\n  }\n  return squaredDistance(x, y, x1, y1);\n}\n\n/**\n * Returns the square of the distance between the points (x1, y1) and (x2, y2).\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredDistance(x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  return dx * dx + dy * dy;\n}\n\n/**\n * Solves system of linear equations using Gaussian elimination method.\n *\n * @param {Array<Array<number>>} mat Augmented matrix (n x n + 1 column)\n *                                     in row-major order.\n * @return {Array<number>|null} The resulting vector.\n */\nexport function solveLinearSystem(mat) {\n  const n = mat.length;\n\n  for (let i = 0; i < n; i++) {\n    // Find max in the i-th column (ignoring i - 1 first rows)\n    let maxRow = i;\n    let maxEl = Math.abs(mat[i][i]);\n    for (let r = i + 1; r < n; r++) {\n      const absValue = Math.abs(mat[r][i]);\n      if (absValue > maxEl) {\n        maxEl = absValue;\n        maxRow = r;\n      }\n    }\n\n    if (maxEl === 0) {\n      return null; // matrix is singular\n    }\n\n    // Swap max row with i-th (current) row\n    const tmp = mat[maxRow];\n    mat[maxRow] = mat[i];\n    mat[i] = tmp;\n\n    // Subtract the i-th row to make all the remaining rows 0 in the i-th column\n    for (let j = i + 1; j < n; j++) {\n      const coef = -mat[j][i] / mat[i][i];\n      for (let k = i; k < n + 1; k++) {\n        if (i == k) {\n          mat[j][k] = 0;\n        } else {\n          mat[j][k] += coef * mat[i][k];\n        }\n      }\n    }\n  }\n\n  // Solve Ax=b for upper triangular matrix A (mat)\n  const x = new Array(n);\n  for (let l = n - 1; l >= 0; l--) {\n    x[l] = mat[l][n] / mat[l][l];\n    for (let m = l - 1; m >= 0; m--) {\n      mat[m][n] -= mat[m][l] * x[l];\n    }\n  }\n  return x;\n}\n\n/**\n * Converts radians to to degrees.\n *\n * @param {number} angleInRadians Angle in radians.\n * @return {number} Angle in degrees.\n */\nexport function toDegrees(angleInRadians) {\n  return (angleInRadians * 180) / Math.PI;\n}\n\n/**\n * Converts degrees to radians.\n *\n * @param {number} angleInDegrees Angle in degrees.\n * @return {number} Angle in radians.\n */\nexport function toRadians(angleInDegrees) {\n  return (angleInDegrees * Math.PI) / 180;\n}\n\n/**\n * Returns the modulo of a / b, depending on the sign of b.\n *\n * @param {number} a Dividend.\n * @param {number} b Divisor.\n * @return {number} Modulo.\n */\nexport function modulo(a, b) {\n  const r = a % b;\n  return r * b < 0 ? r + b : r;\n}\n\n/**\n * Calculates the linearly interpolated value of x between a and b.\n *\n * @param {number} a Number\n * @param {number} b Number\n * @param {number} x Value to be interpolated.\n * @return {number} Interpolated value.\n */\nexport function lerp(a, b, x) {\n  return a + x * (b - a);\n}\n\n/**\n * Returns a number with a limited number of decimal digits.\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The input number with a limited number of decimal digits.\n */\nexport function toFixed(n, decimals) {\n  const factor = Math.pow(10, decimals);\n  return Math.round(n * factor) / factor;\n}\n\n/**\n * Rounds a number to the nearest integer value considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The nearest integer.\n */\nexport function round(n, decimals) {\n  return Math.round(toFixed(n, decimals));\n}\n\n/**\n * Rounds a number to the next smaller integer considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The next smaller integer.\n */\nexport function floor(n, decimals) {\n  return Math.floor(toFixed(n, decimals));\n}\n\n/**\n * Rounds a number to the next bigger integer considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The next bigger integer.\n */\nexport function ceil(n, decimals) {\n  return Math.ceil(toFixed(n, decimals));\n}\n","/**\n * @module ol/string\n */\n\n/**\n * @param {number} number Number to be formatted\n * @param {number} width The desired width\n * @param {number} [precision] Precision of the output string (i.e. number of decimal places)\n * @return {string} Formatted string\n */\nexport function padNumber(number, width, precision) {\n  const numberString =\n    precision !== undefined ? number.toFixed(precision) : '' + number;\n  let decimal = numberString.indexOf('.');\n  decimal = decimal === -1 ? numberString.length : decimal;\n  return decimal > width\n    ? numberString\n    : new Array(1 + width - decimal).join('0') + numberString;\n}\n\n/**\n * Adapted from https://github.com/omichelsen/compare-versions/blob/master/index.js\n * @param {string|number} v1 First version\n * @param {string|number} v2 Second version\n * @return {number} Value\n */\nexport function compareVersions(v1, v2) {\n  const s1 = ('' + v1).split('.');\n  const s2 = ('' + v2).split('.');\n\n  for (let i = 0; i < Math.max(s1.length, s2.length); i++) {\n    const n1 = parseInt(s1[i] || '0', 10);\n    const n2 = parseInt(s2[i] || '0', 10);\n\n    if (n1 > n2) {\n      return 1;\n    }\n    if (n2 > n1) {\n      return -1;\n    }\n  }\n\n  return 0;\n}\n","/**\n * @module ol/coordinate\n */\nimport {getWidth} from './extent.js';\nimport {modulo, toFixed} from './math.js';\nimport {padNumber} from './string.js';\n\n/**\n * An array of numbers representing an `xy`, `xyz` or `xyzm` coordinate.\n * Example: `[16, 48]`.\n * @typedef {Array<number>} Coordinate\n * @api\n */\n\n/**\n * A function that takes a {@link module:ol/coordinate~Coordinate} and\n * transforms it into a `{string}`.\n *\n * @typedef {function((Coordinate|undefined)): string} CoordinateFormat\n * @api\n */\n\n/**\n * Add `delta` to `coordinate`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {add} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     add(coord, [-2, 4]);\n *     // coord is now [5.85, 51.983333]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {Coordinate} delta Delta.\n * @return {Coordinate} The input coordinate adjusted by\n * the given delta.\n * @api\n */\nexport function add(coordinate, delta) {\n  coordinate[0] += +delta[0];\n  coordinate[1] += +delta[1];\n  return coordinate;\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed circle.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {import(\"./geom/Circle.js\").default} circle The circle.\n * @return {Coordinate} Closest point on the circumference.\n */\nexport function closestOnCircle(coordinate, circle) {\n  const r = circle.getRadius();\n  const center = circle.getCenter();\n  const x0 = center[0];\n  const y0 = center[1];\n  const x1 = coordinate[0];\n  const y1 = coordinate[1];\n\n  let dx = x1 - x0;\n  const dy = y1 - y0;\n  if (dx === 0 && dy === 0) {\n    dx = 1;\n  }\n  const d = Math.sqrt(dx * dx + dy * dy);\n\n  const x = x0 + (r * dx) / d;\n  const y = y0 + (r * dy) / d;\n\n  return [x, y];\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed segment.\n * This is the foot of the perpendicular of the coordinate to the segment when\n * the foot is on the segment, or the closest segment coordinate when the foot\n * is outside the segment.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {Array<Coordinate>} segment The two coordinates\n * of the segment.\n * @return {Coordinate} The foot of the perpendicular of\n * the coordinate to the segment.\n */\nexport function closestOnSegment(coordinate, segment) {\n  const x0 = coordinate[0];\n  const y0 = coordinate[1];\n  const start = segment[0];\n  const end = segment[1];\n  const x1 = start[0];\n  const y1 = start[1];\n  const x2 = end[0];\n  const y2 = end[1];\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  const along =\n    dx === 0 && dy === 0\n      ? 0\n      : (dx * (x0 - x1) + dy * (y0 - y1)) / (dx * dx + dy * dy || 0);\n  let x, y;\n  if (along <= 0) {\n    x = x1;\n    y = y1;\n  } else if (along >= 1) {\n    x = x2;\n    y = y2;\n  } else {\n    x = x1 + along * dx;\n    y = y1 + along * dy;\n  }\n  return [x, y];\n}\n\n/**\n * Returns a {@link module:ol/coordinate~CoordinateFormat} function that can be\n * used to format\n * a {Coordinate} to a string.\n *\n * Example without specifying the fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const stringifyFunc = createStringXY();\n *     const out = stringifyFunc(coord);\n *     // out is now '8, 48'\n *\n * Example with explicitly specifying 2 fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const stringifyFunc = createStringXY(2);\n *     const out = stringifyFunc(coord);\n *     // out is now '7.85, 47.98'\n *\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {CoordinateFormat} Coordinate format.\n * @api\n */\nexport function createStringXY(fractionDigits) {\n  return (\n    /**\n     * @param {Coordinate} coordinate Coordinate.\n     * @return {string} String XY.\n     */\n    function (coordinate) {\n      return toStringXY(coordinate, fractionDigits);\n    }\n  );\n}\n\n/**\n * @param {string} hemispheres Hemispheres.\n * @param {number} degrees Degrees.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} String.\n */\nexport function degreesToStringHDMS(hemispheres, degrees, fractionDigits) {\n  const normalizedDegrees = modulo(degrees + 180, 360) - 180;\n  const x = Math.abs(3600 * normalizedDegrees);\n  const decimals = fractionDigits || 0;\n\n  let deg = Math.floor(x / 3600);\n  let min = Math.floor((x - deg * 3600) / 60);\n  let sec = toFixed(x - deg * 3600 - min * 60, decimals);\n\n  if (sec >= 60) {\n    sec = 0;\n    min += 1;\n  }\n\n  if (min >= 60) {\n    min = 0;\n    deg += 1;\n  }\n\n  let hdms = deg + '\\u00b0';\n  if (min !== 0 || sec !== 0) {\n    hdms += ' ' + padNumber(min, 2) + '\\u2032';\n  }\n  if (sec !== 0) {\n    hdms += ' ' + padNumber(sec, 2, decimals) + '\\u2033';\n  }\n  if (normalizedDegrees !== 0) {\n    hdms += ' ' + hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0);\n  }\n\n  return hdms;\n}\n\n/**\n * Transforms the given {@link module:ol/coordinate~Coordinate} to a string\n * using the given string template. The strings `{x}` and `{y}` in the template\n * will be replaced with the first and second coordinate values respectively.\n *\n * Example without specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const template = 'Coordinate is ({x}|{y}).';\n *     const out = format(coord, template);\n *     // out is now 'Coordinate is (8|48).'\n *\n * Example explicitly specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const template = 'Coordinate is ({x}|{y}).';\n *     const out = format(coord, template, 2);\n *     // out is now 'Coordinate is (7.85|47.98).'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {string} template A template string with `{x}` and `{y}` placeholders\n *     that will be replaced by first and second coordinate values.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Formatted coordinate.\n * @api\n */\nexport function format(coordinate, template, fractionDigits) {\n  if (coordinate) {\n    return template\n      .replace('{x}', coordinate[0].toFixed(fractionDigits))\n      .replace('{y}', coordinate[1].toFixed(fractionDigits));\n  }\n  return '';\n}\n\n/**\n * @param {Coordinate} coordinate1 First coordinate.\n * @param {Coordinate} coordinate2 Second coordinate.\n * @return {boolean} The two coordinates are equal.\n */\nexport function equals(coordinate1, coordinate2) {\n  let equals = true;\n  for (let i = coordinate1.length - 1; i >= 0; --i) {\n    if (coordinate1[i] != coordinate2[i]) {\n      equals = false;\n      break;\n    }\n  }\n  return equals;\n}\n\n/**\n * Rotate `coordinate` by `angle`. `coordinate` is modified in place and\n * returned by the function.\n *\n * Example:\n *\n *     import {rotate} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const rotateRadians = Math.PI / 2; // 90 degrees\n *     rotate(coord, rotateRadians);\n *     // coord is now [-47.983333, 7.85]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} angle Angle in radian.\n * @return {Coordinate} Coordinate.\n * @api\n */\nexport function rotate(coordinate, angle) {\n  const cosAngle = Math.cos(angle);\n  const sinAngle = Math.sin(angle);\n  const x = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  const y = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  coordinate[0] = x;\n  coordinate[1] = y;\n  return coordinate;\n}\n\n/**\n * Scale `coordinate` by `scale`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {scale as scaleCoordinate} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const scale = 1.2;\n *     scaleCoordinate(coord, scale);\n *     // coord is now [9.42, 57.5799996]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} scale Scale factor.\n * @return {Coordinate} Coordinate.\n */\nexport function scale(coordinate, scale) {\n  coordinate[0] *= scale;\n  coordinate[1] *= scale;\n  return coordinate;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Squared distance between coord1 and coord2.\n */\nexport function squaredDistance(coord1, coord2) {\n  const dx = coord1[0] - coord2[0];\n  const dy = coord1[1] - coord2[1];\n  return dx * dx + dy * dy;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Distance between coord1 and coord2.\n */\nexport function distance(coord1, coord2) {\n  return Math.sqrt(squaredDistance(coord1, coord2));\n}\n\n/**\n * Calculate the squared distance from a coordinate to a line segment.\n *\n * @param {Coordinate} coordinate Coordinate of the point.\n * @param {Array<Coordinate>} segment Line segment (2\n * coordinates).\n * @return {number} Squared distance from the point to the line segment.\n */\nexport function squaredDistanceToSegment(coordinate, segment) {\n  return squaredDistance(coordinate, closestOnSegment(coordinate, segment));\n}\n\n/**\n * Format a geographic coordinate with the hemisphere, degrees, minutes, and\n * seconds.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringHDMS} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringHDMS(coord);\n *     // out is now '47° 58′ 60″ N 7° 50′ 60″ E'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringHDMS} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringHDMS(coord, 1);\n *     // out is now '47° 58′ 60.0″ N 7° 50′ 60.0″ E'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Hemisphere, degrees, minutes and seconds.\n * @api\n */\nexport function toStringHDMS(coordinate, fractionDigits) {\n  if (coordinate) {\n    return (\n      degreesToStringHDMS('NS', coordinate[1], fractionDigits) +\n      ' ' +\n      degreesToStringHDMS('EW', coordinate[0], fractionDigits)\n    );\n  }\n  return '';\n}\n\n/**\n * Format a coordinate as a comma delimited string.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringXY(coord);\n *     // out is now '8, 48'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringXY(coord, 1);\n *     // out is now '7.8, 48.0'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} XY.\n * @api\n */\nexport function toStringXY(coordinate, fractionDigits) {\n  return format(coordinate, '{x}, {y}', fractionDigits);\n}\n\n/**\n * Modifies the provided coordinate in-place to be within the real world\n * extent. The lower projection extent boundary is inclusive, the upper one\n * exclusive.\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {Coordinate} The coordinate within the real world extent.\n */\nexport function wrapX(coordinate, projection) {\n  if (projection.canWrapX()) {\n    const worldWidth = getWidth(projection.getExtent());\n    const worldsAway = getWorldsAway(coordinate, projection, worldWidth);\n    if (worldsAway) {\n      coordinate[0] -= worldsAway * worldWidth;\n    }\n  }\n  return coordinate;\n}\n/**\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {number} [sourceExtentWidth] Width of the source extent.\n * @return {number} Offset in world widths.\n */\nexport function getWorldsAway(coordinate, projection, sourceExtentWidth) {\n  const projectionExtent = projection.getExtent();\n  let worldsAway = 0;\n  if (\n    projection.canWrapX() &&\n    (coordinate[0] < projectionExtent[0] || coordinate[0] > projectionExtent[2])\n  ) {\n    sourceExtentWidth = sourceExtentWidth || getWidth(projectionExtent);\n    worldsAway = Math.floor(\n      (coordinate[0] - projectionExtent[0]) / sourceExtentWidth,\n    );\n  }\n  return worldsAway;\n}\n","/**\n * @module ol/sphere\n */\nimport {toDegrees, toRadians} from './math.js';\n\n/**\n * Object literal with options for the {@link getLength} or {@link getArea}\n * functions.\n * @typedef {Object} SphereMetricOptions\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857']\n * Projection of the  geometry.  By default, the geometry is assumed to be in\n * Web Mercator.\n * @property {number} [radius=6371008.8] Sphere radius.  By default, the\n * [mean Earth radius](https://en.wikipedia.org/wiki/Earth_radius#Mean_radius)\n * for the WGS84 ellipsoid is used.\n */\n\n/**\n * The mean Earth radius (1/3 * (2a + b)) for the WGS84 ellipsoid.\n * https://en.wikipedia.org/wiki/Earth_radius#Mean_radius\n * @type {number}\n */\nexport const DEFAULT_RADIUS = 6371008.8;\n\n/**\n * Get the great circle distance (in meters) between two geographic coordinates.\n * @param {Array} c1 Starting coordinate.\n * @param {Array} c2 Ending coordinate.\n * @param {number} [radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {number} The great circle distance between the points (in meters).\n * @api\n */\nexport function getDistance(c1, c2, radius) {\n  radius = radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lat2 = toRadians(c2[1]);\n  const deltaLatBy2 = (lat2 - lat1) / 2;\n  const deltaLonBy2 = toRadians(c2[0] - c1[0]) / 2;\n  const a =\n    Math.sin(deltaLatBy2) * Math.sin(deltaLatBy2) +\n    Math.sin(deltaLonBy2) *\n      Math.sin(deltaLonBy2) *\n      Math.cos(lat1) *\n      Math.cos(lat2);\n  return 2 * radius * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n}\n\n/**\n * Get the cumulative great circle length of linestring coordinates (geographic).\n * @param {Array} coordinates Linestring coordinates.\n * @param {number} radius The sphere radius to use.\n * @return {number} The length (in meters).\n */\nfunction getLengthInternal(coordinates, radius) {\n  let length = 0;\n  for (let i = 0, ii = coordinates.length; i < ii - 1; ++i) {\n    length += getDistance(coordinates[i], coordinates[i + 1], radius);\n  }\n  return length;\n}\n\n/**\n * Get the spherical length of a geometry.  This length is the sum of the\n * great circle distances between coordinates.  For polygons, the length is\n * the sum of all rings.  For points, the length is zero.  For multi-part\n * geometries, the length is the sum of the length of each part.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [options] Options for the\n * length calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n * You can change this by providing a `projection` option.\n * @return {number} The spherical length (in meters).\n * @api\n */\nexport function getLength(geometry, options) {\n  options = options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== 'GeometryCollection') {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let length = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case 'Point':\n    case 'MultiPoint': {\n      break;\n    }\n    case 'LineString':\n    case 'LinearRing': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      length = getLengthInternal(coordinates, radius);\n      break;\n    }\n    case 'MultiLineString':\n    case 'Polygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        length += getLengthInternal(coordinates[i], radius);\n      }\n      break;\n    }\n    case 'MultiPolygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        for (j = 0, jj = coords.length; j < jj; ++j) {\n          length += getLengthInternal(coords[j], radius);\n        }\n      }\n      break;\n    }\n    case 'GeometryCollection': {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        length += getLength(geometries[i], options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return length;\n}\n\n/**\n * Returns the spherical area for a list of coordinates.\n *\n * [Reference](https://trs.jpl.nasa.gov/handle/2014/40409)\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for\n * Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n * Laboratory, Pasadena, CA, June 2007\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates List of coordinates of a linear\n * ring. If the ring is oriented clockwise, the area will be positive,\n * otherwise it will be negative.\n * @param {number} radius The sphere radius.\n * @return {number} Area (in square meters).\n */\nfunction getAreaInternal(coordinates, radius) {\n  let area = 0;\n  const len = coordinates.length;\n  let x1 = coordinates[len - 1][0];\n  let y1 = coordinates[len - 1][1];\n  for (let i = 0; i < len; i++) {\n    const x2 = coordinates[i][0];\n    const y2 = coordinates[i][1];\n    area +=\n      toRadians(x2 - x1) *\n      (2 + Math.sin(toRadians(y1)) + Math.sin(toRadians(y2)));\n    x1 = x2;\n    y1 = y2;\n  }\n  return (area * radius * radius) / 2.0;\n}\n\n/**\n * Get the spherical area of a geometry.  This is the area (in meters) assuming\n * that polygon edges are segments of great circles on a sphere.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [options] Options for the area\n *     calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n *     You can change this by providing a `projection` option.\n * @return {number} The spherical area (in square meters).\n * @api\n */\nexport function getArea(geometry, options) {\n  options = options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== 'GeometryCollection') {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let area = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case 'Point':\n    case 'MultiPoint':\n    case 'LineString':\n    case 'MultiLineString':\n    case 'LinearRing': {\n      break;\n    }\n    case 'Polygon': {\n      coordinates = /** @type {import(\"./geom/Polygon.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      area = Math.abs(getAreaInternal(coordinates[0], radius));\n      for (i = 1, ii = coordinates.length; i < ii; ++i) {\n        area -= Math.abs(getAreaInternal(coordinates[i], radius));\n      }\n      break;\n    }\n    case 'MultiPolygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        area += Math.abs(getAreaInternal(coords[0], radius));\n        for (j = 1, jj = coords.length; j < jj; ++j) {\n          area -= Math.abs(getAreaInternal(coords[j], radius));\n        }\n      }\n      break;\n    }\n    case 'GeometryCollection': {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        area += getArea(geometries[i], options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return area;\n}\n\n/**\n * Returns the coordinate at the given distance and bearing from `c1`.\n *\n * @param {import(\"./coordinate.js\").Coordinate} c1 The origin point (`[lon, lat]` in degrees).\n * @param {number} distance The great-circle distance between the origin\n *     point and the target point.\n * @param {number} bearing The bearing (in radians).\n * @param {number} [radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {import(\"./coordinate.js\").Coordinate} The target point.\n */\nexport function offset(c1, distance, bearing, radius) {\n  radius = radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lon1 = toRadians(c1[0]);\n  const dByR = distance / radius;\n  const lat = Math.asin(\n    Math.sin(lat1) * Math.cos(dByR) +\n      Math.cos(lat1) * Math.sin(dByR) * Math.cos(bearing),\n  );\n  const lon =\n    lon1 +\n    Math.atan2(\n      Math.sin(bearing) * Math.sin(dByR) * Math.cos(lat1),\n      Math.cos(dByR) - Math.sin(lat1) * Math.sin(lat),\n    );\n  return [toDegrees(lon), toDegrees(lat)];\n}\n","/**\n * @module ol/console\n */\n\n/**\n * @typedef {'info'|'warn'|'error'|'none'} Level\n */\n\n/**\n * @type {Object<Level, number>}\n */\nconst levels = {\n  info: 1,\n  warn: 2,\n  error: 3,\n  none: 4,\n};\n\n/**\n * @type {number}\n */\nlet level = levels.info;\n\n/**\n * Set the logging level.  By default, the level is set to 'info' and all\n * messages will be logged.  Set to 'warn' to only display warnings and errors.\n * Set to 'error' to only display errors.  Set to 'none' to silence all messages.\n *\n * @param {Level} l The new level.\n */\nexport function setLevel(l) {\n  level = levels[l];\n}\n\n/**\n * @param  {...any} args Arguments to log\n */\nexport function log(...args) {\n  if (level > levels.info) {\n    return;\n  }\n  console.log(...args); // eslint-disable-line no-console\n}\n\n/**\n * @param  {...any} args Arguments to log\n */\nexport function warn(...args) {\n  if (level > levels.warn) {\n    return;\n  }\n  console.warn(...args); // eslint-disable-line no-console\n}\n\n/**\n * @param  {...any} args Arguments to log\n */\nexport function error(...args) {\n  if (level > levels.error) {\n    return;\n  }\n  console.error(...args); // eslint-disable-line no-console\n}\n","/**\n * @module ol/proj\n */\n\n/**\n * The ol/proj module stores:\n * * a list of {@link module:ol/proj/Projection~Projection}\n * objects, one for each projection supported by the application\n * * a list of transform functions needed to convert coordinates in one projection\n * into another.\n *\n * The static functions are the methods used to maintain these.\n * Each transform function can handle not only simple coordinate pairs, but also\n * large arrays of coordinates such as vector geometries.\n *\n * When loaded, the library adds projection objects for EPSG:4326 (WGS84\n * geographic coordinates) and EPSG:3857 (Web or Spherical Mercator, as used\n * for example by Bing Maps or OpenStreetMap), together with the relevant\n * transform functions.\n *\n * Additional transforms may be added by using the http://proj4js.org/\n * library (version 2.2 or later). You can use the full build supplied by\n * Proj4js, or create a custom build to support those projections you need; see\n * the Proj4js website for how to do this. You also need the Proj4js definitions\n * for the required projections. These definitions can be obtained from\n * https://epsg.io/, and are a JS function, so can be loaded in a script\n * tag (as in the examples) or pasted into your application.\n *\n * After all required projection definitions are added to proj4's registry (by\n * using `proj4.defs()`), simply call `register(proj4)` from the `ol/proj/proj4`\n * package. Existing transforms are not changed by this function. See\n * examples/wms-image-custom-proj for an example of this.\n *\n * Additional projection definitions can be registered with `proj4.defs()` any\n * time. Just make sure to call `register(proj4)` again; for example, with user-supplied data where you don't\n * know in advance what projections are needed, you can initially load minimal\n * support and then load whichever are requested.\n *\n * Note that Proj4js does not support projection extents. If you want to add\n * one for creating default tile grids, you can add it after the Projection\n * object has been created with `setExtent`, for example,\n * `get('EPSG:1234').setExtent(extent)`.\n *\n * In addition to Proj4js support, any transform functions can be added with\n * {@link module:ol/proj.addCoordinateTransforms}. To use this, you must first create\n * a {@link module:ol/proj/Projection~Projection} object for the new projection and add it with\n * {@link module:ol/proj.addProjection}. You can then add the forward and inverse\n * functions with {@link module:ol/proj.addCoordinateTransforms}. See\n * examples/wms-custom-proj for an example of this.\n *\n * Note that if no transforms are needed and you only need to define the\n * projection, just add a {@link module:ol/proj/Projection~Projection} with\n * {@link module:ol/proj.addProjection}. See examples/wms-no-proj for an example of\n * this.\n */\nimport Projection from './proj/Projection.js';\nimport {\n  PROJECTIONS as EPSG3857_PROJECTIONS,\n  fromEPSG4326,\n  toEPSG4326,\n} from './proj/epsg3857.js';\nimport {PROJECTIONS as EPSG4326_PROJECTIONS} from './proj/epsg4326.js';\nimport {METERS_PER_UNIT} from './proj/Units.js';\nimport {\n  add as addProj,\n  clear as clearProj,\n  get as getProj,\n} from './proj/projections.js';\nimport {\n  add as addTransformFunc,\n  clear as clearTransformFuncs,\n  get as getTransformFunc,\n} from './proj/transforms.js';\nimport {applyTransform, getWidth} from './extent.js';\nimport {clamp, modulo} from './math.js';\nimport {equals, getWorldsAway} from './coordinate.js';\nimport {getDistance} from './sphere.js';\nimport {warn} from './console.js';\n\n/**\n * A projection as {@link module:ol/proj/Projection~Projection}, SRS identifier\n * string or undefined.\n * @typedef {Projection|string|undefined} ProjectionLike\n * @api\n */\n\n/**\n * A transform function accepts an array of input coordinate values, an optional\n * output array, and an optional dimension (default should be 2).  The function\n * transforms the input coordinate values, populates the output array, and\n * returns the output array.\n *\n * @typedef {function(Array<number>, Array<number>=, number=): Array<number>} TransformFunction\n * @api\n */\n\nexport {METERS_PER_UNIT};\n\nexport {Projection};\n\nlet showCoordinateWarning = true;\n\n/**\n * @param {boolean} [disable = true] Disable console info about `useGeographic()`\n */\nexport function disableCoordinateWarning(disable) {\n  const hide = disable === undefined ? true : disable;\n  showCoordinateWarning = !hide;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @return {Array<number>} Output coordinate array (new array, same coordinate\n *     values).\n */\nexport function cloneTransform(input, output) {\n  if (output !== undefined) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      output[i] = input[i];\n    }\n    output = output;\n  } else {\n    output = input.slice();\n  }\n  return output;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @return {Array<number>} Input coordinate array (same array as input).\n */\nexport function identityTransform(input, output) {\n  if (output !== undefined && input !== output) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      output[i] = input[i];\n    }\n    input = output;\n  }\n  return input;\n}\n\n/**\n * Add a Projection object to the list of supported projections that can be\n * looked up by their code.\n *\n * @param {Projection} projection Projection instance.\n * @api\n */\nexport function addProjection(projection) {\n  addProj(projection.getCode(), projection);\n  addTransformFunc(projection, projection, cloneTransform);\n}\n\n/**\n * @param {Array<Projection>} projections Projections.\n */\nexport function addProjections(projections) {\n  projections.forEach(addProjection);\n}\n\n/**\n * Fetches a Projection object for the code specified.\n *\n * @param {ProjectionLike} projectionLike Either a code string which is\n *     a combination of authority and identifier such as \"EPSG:4326\", or an\n *     existing projection object, or undefined.\n * @return {Projection|null} Projection object, or null if not in list.\n * @api\n */\nexport function get(projectionLike) {\n  return typeof projectionLike === 'string'\n    ? getProj(/** @type {string} */ (projectionLike))\n    : /** @type {Projection} */ (projectionLike) || null;\n}\n\n/**\n * Get the resolution of the point in degrees or distance units.\n * For projections with degrees as the unit this will simply return the\n * provided resolution. For other projections the point resolution is\n * by default estimated by transforming the `point` pixel to EPSG:4326,\n * measuring its width and height on the normal sphere,\n * and taking the average of the width and height.\n * A custom function can be provided for a specific projection, either\n * by setting the `getPointResolution` option in the\n * {@link module:ol/proj/Projection~Projection} constructor or by using\n * {@link module:ol/proj/Projection~Projection#setGetPointResolution} to change an existing\n * projection object.\n * @param {ProjectionLike} projection The projection.\n * @param {number} resolution Nominal resolution in projection units.\n * @param {import(\"./coordinate.js\").Coordinate} point Point to find adjusted resolution at.\n * @param {import(\"./proj/Units.js\").Units} [units] Units to get the point resolution in.\n * Default is the projection's units.\n * @return {number} Point resolution.\n * @api\n */\nexport function getPointResolution(projection, resolution, point, units) {\n  projection = get(projection);\n  let pointResolution;\n  const getter = projection.getPointResolutionFunc();\n  if (getter) {\n    pointResolution = getter(resolution, point);\n    if (units && units !== projection.getUnits()) {\n      const metersPerUnit = projection.getMetersPerUnit();\n      if (metersPerUnit) {\n        pointResolution =\n          (pointResolution * metersPerUnit) / METERS_PER_UNIT[units];\n      }\n    }\n  } else {\n    const projUnits = projection.getUnits();\n    if ((projUnits == 'degrees' && !units) || units == 'degrees') {\n      pointResolution = resolution;\n    } else {\n      // Estimate point resolution by transforming the center pixel to EPSG:4326,\n      // measuring its width and height on the normal sphere, and taking the\n      // average of the width and height.\n      const toEPSG4326 = getTransformFromProjections(\n        projection,\n        get('EPSG:4326'),\n      );\n      if (toEPSG4326 === identityTransform && projUnits !== 'degrees') {\n        // no transform is available\n        pointResolution = resolution * projection.getMetersPerUnit();\n      } else {\n        let vertices = [\n          point[0] - resolution / 2,\n          point[1],\n          point[0] + resolution / 2,\n          point[1],\n          point[0],\n          point[1] - resolution / 2,\n          point[0],\n          point[1] + resolution / 2,\n        ];\n        vertices = toEPSG4326(vertices, vertices, 2);\n        const width = getDistance(vertices.slice(0, 2), vertices.slice(2, 4));\n        const height = getDistance(vertices.slice(4, 6), vertices.slice(6, 8));\n        pointResolution = (width + height) / 2;\n      }\n      const metersPerUnit = units\n        ? METERS_PER_UNIT[units]\n        : projection.getMetersPerUnit();\n      if (metersPerUnit !== undefined) {\n        pointResolution /= metersPerUnit;\n      }\n    }\n  }\n  return pointResolution;\n}\n\n/**\n * Registers transformation functions that don't alter coordinates. Those allow\n * to transform between projections with equal meaning.\n *\n * @param {Array<Projection>} projections Projections.\n * @api\n */\nexport function addEquivalentProjections(projections) {\n  addProjections(projections);\n  projections.forEach(function (source) {\n    projections.forEach(function (destination) {\n      if (source !== destination) {\n        addTransformFunc(source, destination, cloneTransform);\n      }\n    });\n  });\n}\n\n/**\n * Registers transformation functions to convert coordinates in any projection\n * in projection1 to any projection in projection2.\n *\n * @param {Array<Projection>} projections1 Projections with equal\n *     meaning.\n * @param {Array<Projection>} projections2 Projections with equal\n *     meaning.\n * @param {TransformFunction} forwardTransform Transformation from any\n *   projection in projection1 to any projection in projection2.\n * @param {TransformFunction} inverseTransform Transform from any projection\n *   in projection2 to any projection in projection1..\n */\nexport function addEquivalentTransforms(\n  projections1,\n  projections2,\n  forwardTransform,\n  inverseTransform,\n) {\n  projections1.forEach(function (projection1) {\n    projections2.forEach(function (projection2) {\n      addTransformFunc(projection1, projection2, forwardTransform);\n      addTransformFunc(projection2, projection1, inverseTransform);\n    });\n  });\n}\n\n/**\n * Clear all cached projections and transforms.\n */\nexport function clearAllProjections() {\n  clearProj();\n  clearTransformFuncs();\n}\n\n/**\n * @param {Projection|string|undefined} projection Projection.\n * @param {string} defaultCode Default code.\n * @return {Projection} Projection.\n */\nexport function createProjection(projection, defaultCode) {\n  if (!projection) {\n    return get(defaultCode);\n  }\n  if (typeof projection === 'string') {\n    return get(projection);\n  }\n  return /** @type {Projection} */ (projection);\n}\n\n/**\n * Creates a {@link module:ol/proj~TransformFunction} from a simple 2D coordinate transform\n * function.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} coordTransform Coordinate\n *     transform.\n * @return {TransformFunction} Transform function.\n */\nexport function createTransformFromCoordinateTransform(coordTransform) {\n  return (\n    /**\n     * @param {Array<number>} input Input.\n     * @param {Array<number>} [output] Output.\n     * @param {number} [dimension] Dimension.\n     * @return {Array<number>} Output.\n     */\n    function (input, output, dimension) {\n      const length = input.length;\n      dimension = dimension !== undefined ? dimension : 2;\n      output = output !== undefined ? output : new Array(length);\n      for (let i = 0; i < length; i += dimension) {\n        const point = coordTransform(input.slice(i, i + dimension));\n        const pointLength = point.length;\n        for (let j = 0, jj = dimension; j < jj; ++j) {\n          output[i + j] = j >= pointLength ? input[i + j] : point[j];\n        }\n      }\n      return output;\n    }\n  );\n}\n\n/**\n * Registers coordinate transform functions to convert coordinates between the\n * source projection and the destination projection.\n * The forward and inverse functions convert coordinate pairs; this function\n * converts these into the functions used internally which also handle\n * extents and coordinate arrays.\n *\n * @param {ProjectionLike} source Source projection.\n * @param {ProjectionLike} destination Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} forward The forward transform\n *     function (that is, from the source projection to the destination\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} inverse The inverse transform\n *     function (that is, from the destination projection to the source\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}. If the transform function can only\n *     transform less dimensions than the input coordinate, it is supposeed to return a coordinate\n *     with only the length it can transform. The other dimensions will be taken unchanged from the\n *     source.\n * @api\n */\nexport function addCoordinateTransforms(source, destination, forward, inverse) {\n  const sourceProj = get(source);\n  const destProj = get(destination);\n  addTransformFunc(\n    sourceProj,\n    destProj,\n    createTransformFromCoordinateTransform(forward),\n  );\n  addTransformFunc(\n    destProj,\n    sourceProj,\n    createTransformFromCoordinateTransform(inverse),\n  );\n}\n\n/**\n * Transforms a coordinate from longitude/latitude to a different projection.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate as longitude and latitude, i.e.\n *     an array with longitude as 1st and latitude as 2nd element.\n * @param {ProjectionLike} [projection] Target projection. The\n *     default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate projected to the target projection.\n * @api\n */\nexport function fromLonLat(coordinate, projection) {\n  disableCoordinateWarning();\n  return transform(\n    coordinate,\n    'EPSG:4326',\n    projection !== undefined ? projection : 'EPSG:3857',\n  );\n}\n\n/**\n * Transforms a coordinate to longitude/latitude.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Projected coordinate.\n * @param {ProjectionLike} [projection] Projection of the coordinate.\n *     The default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate as longitude and latitude, i.e. an array\n *     with longitude as 1st and latitude as 2nd element.\n * @api\n */\nexport function toLonLat(coordinate, projection) {\n  const lonLat = transform(\n    coordinate,\n    projection !== undefined ? projection : 'EPSG:3857',\n    'EPSG:4326',\n  );\n  const lon = lonLat[0];\n  if (lon < -180 || lon > 180) {\n    lonLat[0] = modulo(lon + 180, 360) - 180;\n  }\n  return lonLat;\n}\n\n/**\n * Checks if two projections are the same, that is every coordinate in one\n * projection does represent the same geographic point as the same coordinate in\n * the other projection.\n *\n * @param {Projection} projection1 Projection 1.\n * @param {Projection} projection2 Projection 2.\n * @return {boolean} Equivalent.\n * @api\n */\nexport function equivalent(projection1, projection2) {\n  if (projection1 === projection2) {\n    return true;\n  }\n  const equalUnits = projection1.getUnits() === projection2.getUnits();\n  if (projection1.getCode() === projection2.getCode()) {\n    return equalUnits;\n  }\n  const transformFunc = getTransformFromProjections(projection1, projection2);\n  return transformFunc === cloneTransform && equalUnits;\n}\n\n/**\n * Searches in the list of transform functions for the function for converting\n * coordinates from the source projection to the destination projection.\n *\n * @param {Projection} sourceProjection Source Projection object.\n * @param {Projection} destinationProjection Destination Projection\n *     object.\n * @return {TransformFunction} Transform function.\n */\nexport function getTransformFromProjections(\n  sourceProjection,\n  destinationProjection,\n) {\n  const sourceCode = sourceProjection.getCode();\n  const destinationCode = destinationProjection.getCode();\n  let transformFunc = getTransformFunc(sourceCode, destinationCode);\n  if (!transformFunc) {\n    transformFunc = identityTransform;\n  }\n  return transformFunc;\n}\n\n/**\n * Given the projection-like objects, searches for a transformation\n * function to convert a coordinates array from the source projection to the\n * destination projection.\n *\n * @param {ProjectionLike} source Source.\n * @param {ProjectionLike} destination Destination.\n * @return {TransformFunction} Transform function.\n * @api\n */\nexport function getTransform(source, destination) {\n  const sourceProjection = get(source);\n  const destinationProjection = get(destination);\n  return getTransformFromProjections(sourceProjection, destinationProjection);\n}\n\n/**\n * Transforms a coordinate from source projection to destination projection.\n * This returns a new coordinate (and does not modify the original).\n *\n * See {@link module:ol/proj.transformExtent} for extent transformation.\n * See the transform method of {@link module:ol/geom/Geometry~Geometry} and its\n * subclasses for geometry transforms.\n *\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n * @api\n */\nexport function transform(coordinate, source, destination) {\n  const transformFunc = getTransform(source, destination);\n  return transformFunc(coordinate, undefined, coordinate.length);\n}\n\n/**\n * Transforms an extent from source projection to destination projection.  This\n * returns a new extent (and does not modify the original).\n *\n * @param {import(\"./extent.js\").Extent} extent The extent to transform.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @param {number} [stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {import(\"./extent.js\").Extent} The transformed extent.\n * @api\n */\nexport function transformExtent(extent, source, destination, stops) {\n  const transformFunc = getTransform(source, destination);\n  return applyTransform(extent, transformFunc, undefined, stops);\n}\n\n/**\n * Transforms the given point to the destination projection.\n *\n * @param {import(\"./coordinate.js\").Coordinate} point Point.\n * @param {Projection} sourceProjection Source projection.\n * @param {Projection} destinationProjection Destination projection.\n * @return {import(\"./coordinate.js\").Coordinate} Point.\n */\nexport function transformWithProjections(\n  point,\n  sourceProjection,\n  destinationProjection,\n) {\n  const transformFunc = getTransformFromProjections(\n    sourceProjection,\n    destinationProjection,\n  );\n  return transformFunc(point);\n}\n\n/**\n * @type {Projection|null}\n */\nlet userProjection = null;\n\n/**\n * Set the projection for coordinates supplied from and returned by API methods.\n * This includes all API methods except for those interacting with tile grids,\n * plus {@link import(\"./Map.js\").FrameState} and {@link import(\"./View.js\").State}.\n * @param {ProjectionLike} projection The user projection.\n * @api\n */\nexport function setUserProjection(projection) {\n  userProjection = get(projection);\n}\n\n/**\n * Clear the user projection if set.\n * @api\n */\nexport function clearUserProjection() {\n  userProjection = null;\n}\n\n/**\n * Get the projection for coordinates supplied from and returned by API methods.\n * @return {Projection|null} The user projection (or null if not set).\n * @api\n */\nexport function getUserProjection() {\n  return userProjection;\n}\n\n/**\n * Use geographic coordinates (WGS-84 datum) in API methods.\n * This includes all API methods except for those interacting with tile grids,\n * plus {@link import(\"./Map.js\").FrameState} and {@link import(\"./View.js\").State}.\n * @api\n */\nexport function useGeographic() {\n  setUserProjection('EPSG:4326');\n}\n\n/**\n * Return a coordinate transformed into the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} sourceProjection The input coordinate projection.\n * @return {Array<number>} The input coordinate in the user projection.\n */\nexport function toUserCoordinate(coordinate, sourceProjection) {\n  if (!userProjection) {\n    return coordinate;\n  }\n  return transform(coordinate, sourceProjection, userProjection);\n}\n\n/**\n * Return a coordinate transformed from the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {Array<number>} The input coordinate transformed.\n */\nexport function fromUserCoordinate(coordinate, destProjection) {\n  if (!userProjection) {\n    if (\n      showCoordinateWarning &&\n      !equals(coordinate, [0, 0]) &&\n      coordinate[0] >= -180 &&\n      coordinate[0] <= 180 &&\n      coordinate[1] >= -90 &&\n      coordinate[1] <= 90\n    ) {\n      showCoordinateWarning = false;\n      warn(\n        'Call useGeographic() from ol/proj once to work with [longitude, latitude] coordinates.',\n      );\n    }\n    return coordinate;\n  }\n  return transform(coordinate, userProjection, destProjection);\n}\n\n/**\n * Return an extent transformed into the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} sourceProjection The input extent projection.\n * @return {import(\"./extent.js\").Extent} The input extent in the user projection.\n */\nexport function toUserExtent(extent, sourceProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, sourceProjection, userProjection);\n}\n\n/**\n * Return an extent transformed from the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {import(\"./extent.js\").Extent} The input extent transformed.\n */\nexport function fromUserExtent(extent, destProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, userProjection, destProjection);\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in input projection units per pixel.\n * @param {ProjectionLike} sourceProjection The input projection.\n * @return {number} Resolution in user projection units per pixel.\n */\nexport function toUserResolution(resolution, sourceProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const sourceMetersPerUnit = get(sourceProjection).getMetersPerUnit();\n  const userMetersPerUnit = userProjection.getMetersPerUnit();\n  return sourceMetersPerUnit && userMetersPerUnit\n    ? (resolution * sourceMetersPerUnit) / userMetersPerUnit\n    : resolution;\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in user projection units per pixel.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {number} Resolution in destination projection units per pixel.\n */\nexport function fromUserResolution(resolution, destProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const destMetersPerUnit = get(destProjection).getMetersPerUnit();\n  const userMetersPerUnit = userProjection.getMetersPerUnit();\n  return destMetersPerUnit && userMetersPerUnit\n    ? (resolution * userMetersPerUnit) / destMetersPerUnit\n    : resolution;\n}\n\n/**\n * Creates a safe coordinate transform function from a coordinate transform function.\n * \"Safe\" means that it can handle wrapping of x-coordinates for global projections,\n * and that coordinates exceeding the source projection validity extent's range will be\n * clamped to the validity range.\n * @param {Projection} sourceProj Source projection.\n * @param {Projection} destProj Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} transform Transform function (source to destination).\n * @return {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} Safe transform function (source to destination).\n */\nexport function createSafeCoordinateTransform(sourceProj, destProj, transform) {\n  return function (coord) {\n    let transformed, worldsAway;\n    if (sourceProj.canWrapX()) {\n      const sourceExtent = sourceProj.getExtent();\n      const sourceExtentWidth = getWidth(sourceExtent);\n      coord = coord.slice(0);\n      worldsAway = getWorldsAway(coord, sourceProj, sourceExtentWidth);\n      if (worldsAway) {\n        // Move x to the real world\n        coord[0] = coord[0] - worldsAway * sourceExtentWidth;\n      }\n      coord[0] = clamp(coord[0], sourceExtent[0], sourceExtent[2]);\n      coord[1] = clamp(coord[1], sourceExtent[1], sourceExtent[3]);\n      transformed = transform(coord);\n    } else {\n      transformed = transform(coord);\n    }\n    if (worldsAway && destProj.canWrapX()) {\n      // Move transformed coordinate back to the offset world\n      transformed[0] += worldsAway * getWidth(destProj.getExtent());\n    }\n    return transformed;\n  };\n}\n\n/**\n * Add transforms to and from EPSG:4326 and EPSG:3857.  This function is called\n * by when this module is executed and should only need to be called again after\n * `clearAllProjections()` is called (e.g. in tests).\n */\nexport function addCommon() {\n  // Add transformations that don't alter coordinates to convert within set of\n  // projections with equal meaning.\n  addEquivalentProjections(EPSG3857_PROJECTIONS);\n  addEquivalentProjections(EPSG4326_PROJECTIONS);\n  // Add transformations to convert EPSG:4326 like coordinates to EPSG:3857 like\n  // coordinates and back.\n  addEquivalentTransforms(\n    EPSG4326_PROJECTIONS,\n    EPSG3857_PROJECTIONS,\n    fromEPSG4326,\n    toEPSG4326,\n  );\n}\n\naddCommon();\n","/**\n * @module ol/geom/flat/transform\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function transform2D(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  transform,\n  dest,\n) {\n  dest = dest ? dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const x = flatCoordinates[j];\n    const y = flatCoordinates[j + 1];\n    dest[i++] = transform[0] * x + transform[2] * y + transform[4];\n    dest[i++] = transform[1] * x + transform[3] * y + transform[5];\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} angle Angle.\n * @param {Array<number>} anchor Rotation anchor point.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function rotate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  angle,\n  anchor,\n  dest,\n) {\n  dest = dest ? dest : [];\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + deltaX * cos - deltaY * sin;\n    dest[i++] = anchorY + deltaX * sin + deltaY * cos;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * Scale the coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} sx Scale factor in the x-direction.\n * @param {number} sy Scale factor in the y-direction.\n * @param {Array<number>} anchor Scale anchor point.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function scale(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  sx,\n  sy,\n  anchor,\n  dest,\n) {\n  dest = dest ? dest : [];\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + sx * deltaX;\n    dest[i++] = anchorY + sy * deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function translate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  deltaX,\n  deltaY,\n  dest,\n) {\n  dest = dest ? dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    dest[i++] = flatCoordinates[j] + deltaX;\n    dest[i++] = flatCoordinates[j + 1] + deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n","/**\n * @module ol/geom/Geometry\n */\nimport BaseObject from '../Object.js';\nimport {abstract} from '../util.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../transform.js';\nimport {\n  createEmpty,\n  createOrUpdateEmpty,\n  getHeight,\n  returnOrUpdate,\n} from '../extent.js';\nimport {get as getProjection, getTransform} from '../proj.js';\nimport {memoizeOne} from '../functions.js';\nimport {transform2D} from './flat/transform.js';\n\n/**\n * @typedef {'XY' | 'XYZ' | 'XYM' | 'XYZM'} GeometryLayout\n * The coordinate layout for geometries, indicating whether a 3rd or 4th z ('Z')\n * or measure ('M') coordinate is available.\n */\n\n/**\n * @typedef {'Point' | 'LineString' | 'LinearRing' | 'Polygon' | 'MultiPoint' | 'MultiLineString' | 'MultiPolygon' | 'GeometryCollection' | 'Circle'} Type\n * The geometry type.  One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'`, `'MultiLineString'`, `'MultiPolygon'`,\n * `'GeometryCollection'`, or `'Circle'`.\n */\n\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nconst tmpTransform = createTransform();\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for vector geometries.\n *\n * To get notified of changes to the geometry, register a listener for the\n * generic `change` event on your geometry instance.\n *\n * @abstract\n * @api\n */\nclass Geometry extends BaseObject {\n  constructor() {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.extentRevision_ = -1;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryRevision = 0;\n\n    /**\n     * Get a transformed and simplified version of the geometry.\n     * @abstract\n     * @param {number} revision The geometry revision.\n     * @param {number} squaredTolerance Squared tolerance.\n     * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n     * @return {Geometry} Simplified geometry.\n     */\n    this.simplifyTransformedInternal = memoizeOne(\n      (revision, squaredTolerance, transform) => {\n        if (!transform) {\n          return this.getSimplifiedGeometry(squaredTolerance);\n        }\n        const clone = this.clone();\n        clone.applyTransform(transform);\n        return clone.getSimplifiedGeometry(squaredTolerance);\n      },\n    );\n  }\n\n  /**\n   * Get a transformed and simplified version of the geometry.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n   * @return {Geometry} Simplified geometry.\n   */\n  simplifyTransformed(squaredTolerance, transform) {\n    return this.simplifyTransformedInternal(\n      this.getRevision(),\n      squaredTolerance,\n      transform,\n    );\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @abstract\n   * @return {!Geometry} Clone.\n   */\n  clone() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    return abstract();\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    const coord = this.getClosestPoint([x, y]);\n    return coord[0] === x && coord[1] === y;\n  }\n\n  /**\n   * Return the closest point of the geometry to the passed point as\n   * {@link module:ol/coordinate~Coordinate coordinate}.\n   * @param {import(\"../coordinate.js\").Coordinate} point Point.\n   * @param {import(\"../coordinate.js\").Coordinate} [closestPoint] Closest point.\n   * @return {import(\"../coordinate.js\").Coordinate} Closest point.\n   * @api\n   */\n  getClosestPoint(point, closestPoint) {\n    closestPoint = closestPoint ? closestPoint : [NaN, NaN];\n    this.closestPointXY(point[0], point[1], closestPoint, Infinity);\n    return closestPoint;\n  }\n\n  /**\n   * Returns true if this geometry includes the specified coordinate. If the\n   * coordinate is on the boundary of the geometry, returns false.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {boolean} Contains coordinate.\n   * @api\n   */\n  intersectsCoordinate(coordinate) {\n    return this.containsXY(coordinate[0], coordinate[1]);\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Get the extent of the geometry.\n   * @param {import(\"../extent.js\").Extent} [extent] Extent.\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  getExtent(extent) {\n    if (this.extentRevision_ != this.getRevision()) {\n      const extent = this.computeExtent(this.extent_);\n      if (isNaN(extent[0]) || isNaN(extent[1])) {\n        createOrUpdateEmpty(extent);\n      }\n      this.extentRevision_ = this.getRevision();\n    }\n    return returnOrUpdate(this.extent_, extent);\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    abstract();\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, sy, anchor) {\n    abstract();\n  }\n\n  /**\n   * Create a simplified version of this geometry.  For linestrings, this uses\n   * the [Douglas Peucker](https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm)\n   * algorithm.  For polygons, a quantization-based\n   * simplification is used to preserve topology.\n   * @param {number} tolerance The tolerance distance for simplification.\n   * @return {Geometry} A new, simplified version of the original geometry.\n   * @api\n   */\n  simplify(tolerance) {\n    return this.getSimplifiedGeometry(tolerance * tolerance);\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker\n   * algorithm.\n   * See https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Geometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    return abstract();\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @abstract\n   * @return {Type} Geometry type.\n   */\n  getType() {\n    return abstract();\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @abstract\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   */\n  applyTransform(transformFn) {\n    abstract();\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   */\n  intersectsExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @abstract\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    abstract();\n  }\n\n  /**\n   * Transform each coordinate of the geometry from one coordinate reference\n   * system to another. The geometry is modified in place.\n   * For example, a line will be transformed to a line and a circle to a circle.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @return {this} This geometry.  Note that original geometry is\n   *     modified in place.\n   * @api\n   */\n  transform(source, destination) {\n    /** @type {import(\"../proj/Projection.js\").default} */\n    const sourceProj = getProjection(source);\n    const transformFn =\n      sourceProj.getUnits() == 'tile-pixels'\n        ? function (inCoordinates, outCoordinates, stride) {\n            const pixelExtent = sourceProj.getExtent();\n            const projectedExtent = sourceProj.getWorldExtent();\n            const scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n            composeTransform(\n              tmpTransform,\n              projectedExtent[0],\n              projectedExtent[3],\n              scale,\n              -scale,\n              0,\n              0,\n              0,\n            );\n            transform2D(\n              inCoordinates,\n              0,\n              inCoordinates.length,\n              stride,\n              tmpTransform,\n              outCoordinates,\n            );\n            return getTransform(sourceProj, destination)(\n              inCoordinates,\n              outCoordinates,\n              stride,\n            );\n          }\n        : getTransform(sourceProj, destination);\n    this.applyTransform(transformFn);\n    return this;\n  }\n}\n\nexport default Geometry;\n","/**\n * @module ol/geom/SimpleGeometry\n */\nimport Geometry from './Geometry.js';\nimport {abstract} from '../util.js';\nimport {createOrUpdateFromFlatCoordinates, getCenter} from '../extent.js';\nimport {rotate, scale, transform2D, translate} from './flat/transform.js';\n\n/**\n * @classdesc\n * Abstract base class; only used for creating subclasses; do not instantiate\n * in apps, as cannot be rendered.\n *\n * @abstract\n * @api\n */\nclass SimpleGeometry extends Geometry {\n  constructor() {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./Geometry.js\").GeometryLayout}\n     */\n    this.layout = 'XY';\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.stride = 2;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.flatCoordinates;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromFlatCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent,\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {Array<*> | null} Coordinates.\n   */\n  getCoordinates() {\n    return abstract();\n  }\n\n  /**\n   * Return the first coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} First coordinate.\n   * @api\n   */\n  getFirstCoordinate() {\n    return this.flatCoordinates.slice(0, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Flat coordinates.\n   */\n  getFlatCoordinates() {\n    return this.flatCoordinates;\n  }\n\n  /**\n   * Return the last coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} Last point.\n   * @api\n   */\n  getLastCoordinate() {\n    return this.flatCoordinates.slice(\n      this.flatCoordinates.length - this.stride,\n    );\n  }\n\n  /**\n   * Return the {@link import(\"./Geometry.js\").GeometryLayout layout} of the geometry.\n   * @return {import(\"./Geometry.js\").GeometryLayout} Layout.\n   * @api\n   */\n  getLayout() {\n    return this.layout;\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    if (this.simplifiedGeometryRevision !== this.getRevision()) {\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    // If squaredTolerance is negative or if we know that simplification will not\n    // have any effect then just return this.\n    if (\n      squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n        squaredTolerance <= this.simplifiedGeometryMaxMinSquaredTolerance)\n    ) {\n      return this;\n    }\n\n    const simplifiedGeometry =\n      this.getSimplifiedGeometryInternal(squaredTolerance);\n    const simplifiedFlatCoordinates = simplifiedGeometry.getFlatCoordinates();\n    if (simplifiedFlatCoordinates.length < this.flatCoordinates.length) {\n      return simplifiedGeometry;\n    }\n    // Simplification did not actually remove any coordinates.  We now know\n    // that any calls to getSimplifiedGeometry with a squaredTolerance less\n    // than or equal to the current squaredTolerance will also not have any\n    // effect.  This allows us to short circuit simplification (saving CPU\n    // cycles) and prevents the cache of simplified geometries from filling\n    // up with useless identical copies of this geometry (saving memory).\n    this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n    return this;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    return this;\n  }\n\n  /**\n   * @return {number} Stride.\n   */\n  getStride() {\n    return this.stride;\n  }\n\n  /**\n   * @param {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   */\n  setFlatCoordinates(layout, flatCoordinates) {\n    this.stride = getStrideForLayout(layout);\n    this.layout = layout;\n    this.flatCoordinates = flatCoordinates;\n  }\n\n  /**\n   * @abstract\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  setCoordinates(coordinates, layout) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"./Geometry.js\").GeometryLayout|undefined} layout Layout.\n   * @param {Array<*>} coordinates Coordinates.\n   * @param {number} nesting Nesting.\n   * @protected\n   */\n  setLayout(layout, coordinates, nesting) {\n    let stride;\n    if (layout) {\n      stride = getStrideForLayout(layout);\n    } else {\n      for (let i = 0; i < nesting; ++i) {\n        if (coordinates.length === 0) {\n          this.layout = 'XY';\n          this.stride = 2;\n          return;\n        }\n        coordinates = /** @type {Array<unknown>} */ (coordinates[0]);\n      }\n      stride = coordinates.length;\n      layout = getLayoutForStride(stride);\n    }\n    this.layout = layout;\n    this.stride = stride;\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   * @api\n   */\n  applyTransform(transformFn) {\n    if (this.flatCoordinates) {\n      transformFn(this.flatCoordinates, this.flatCoordinates, this.stride);\n      this.changed();\n    }\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in counter-clockwise radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      rotate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        angle,\n        anchor,\n        flatCoordinates,\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, sy, anchor) {\n    if (sy === undefined) {\n      sy = sx;\n    }\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      scale(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        sx,\n        sy,\n        anchor,\n        flatCoordinates,\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      translate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        deltaX,\n        deltaY,\n        flatCoordinates,\n      );\n      this.changed();\n    }\n  }\n}\n\n/**\n * @param {number} stride Stride.\n * @return {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n */\nexport function getLayoutForStride(stride) {\n  let layout;\n  if (stride == 2) {\n    layout = 'XY';\n  } else if (stride == 3) {\n    layout = 'XYZ';\n  } else if (stride == 4) {\n    layout = 'XYZM';\n  }\n  return /** @type {import(\"./Geometry.js\").GeometryLayout} */ (layout);\n}\n\n/**\n * @param {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n * @return {number} Stride.\n */\nexport function getStrideForLayout(layout) {\n  let stride;\n  if (layout == 'XY') {\n    stride = 2;\n  } else if (layout == 'XYZ' || layout == 'XYM') {\n    stride = 3;\n  } else if (layout == 'XYZM') {\n    stride = 4;\n  }\n  return /** @type {number} */ (stride);\n}\n\n/**\n * @param {SimpleGeometry} simpleGeometry Simple geometry.\n * @param {import(\"../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed flat coordinates.\n */\nexport function transformGeom2D(simpleGeometry, transform, dest) {\n  const flatCoordinates = simpleGeometry.getFlatCoordinates();\n  if (!flatCoordinates) {\n    return null;\n  }\n  const stride = simpleGeometry.getStride();\n  return transform2D(\n    flatCoordinates,\n    0,\n    flatCoordinates.length,\n    stride,\n    transform,\n    dest,\n  );\n}\n\nexport default SimpleGeometry;\n","/**\n * @module ol/geom/flat/closest\n */\nimport {lerp, squaredDistance as squaredDx} from '../../math.js';\n\n/**\n * Returns the point on the 2D line segment flatCoordinates[offset1] to\n * flatCoordinates[offset2] that is closest to the point (x, y).  Extra\n * dimensions are linearly interpolated.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset1 Offset 1.\n * @param {number} offset2 Offset 2.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n */\nfunction assignClosest(\n  flatCoordinates,\n  offset1,\n  offset2,\n  stride,\n  x,\n  y,\n  closestPoint,\n) {\n  const x1 = flatCoordinates[offset1];\n  const y1 = flatCoordinates[offset1 + 1];\n  const dx = flatCoordinates[offset2] - x1;\n  const dy = flatCoordinates[offset2 + 1] - y1;\n  let offset;\n  if (dx === 0 && dy === 0) {\n    offset = offset1;\n  } else {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      offset = offset2;\n    } else if (t > 0) {\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = lerp(\n          flatCoordinates[offset1 + i],\n          flatCoordinates[offset2 + i],\n          t,\n        );\n      }\n      closestPoint.length = stride;\n      return;\n    } else {\n      offset = offset1;\n    }\n  }\n  for (let i = 0; i < stride; ++i) {\n    closestPoint[i] = flatCoordinates[offset + i];\n  }\n  closestPoint.length = stride;\n}\n\n/**\n * Return the squared of the largest distance between any pair of consecutive\n * coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function maxSquaredDelta(flatCoordinates, offset, end, stride, max) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  for (offset += stride; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    const squaredDelta = squaredDx(x1, y1, x2, y2);\n    if (squaredDelta > max) {\n      max = squaredDelta;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function arrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  max,\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    max = maxSquaredDelta(flatCoordinates, offset, end, stride, max);\n    offset = end;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function multiArrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  max,\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    max = arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max);\n    offset = ends[ends.length - 1];\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestPoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint,\n) {\n  if (offset == end) {\n    return minSquaredDistance;\n  }\n  let i, squaredDistance;\n  if (maxDelta === 0) {\n    // All points are identical, so just test the first point.\n    squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[offset],\n      flatCoordinates[offset + 1],\n    );\n    if (squaredDistance < minSquaredDistance) {\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[offset + i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    }\n    return minSquaredDistance;\n  }\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  let index = offset + stride;\n  while (index < end) {\n    assignClosest(\n      flatCoordinates,\n      index - stride,\n      index,\n      stride,\n      x,\n      y,\n      tmpPoint,\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n      index += stride;\n    } else {\n      // Skip ahead multiple points, because we know that all the skipped\n      // points cannot be any closer than the closest point we have found so\n      // far.  We know this because we know how close the current point is, how\n      // close the closest point we have found so far is, and the maximum\n      // distance between consecutive points.  For example, if we're currently\n      // at distance 10, the best we've found so far is 3, and that the maximum\n      // distance between consecutive points is 2, then we'll need to skip at\n      // least (10 - 3) / 2 == 3 (rounded down) points to have any chance of\n      // finding a closer point.  We use Math.max(..., 1) to ensure that we\n      // always advance at least one point, to avoid an infinite loop.\n      index +=\n        stride *\n        Math.max(\n          ((Math.sqrt(squaredDistance) - Math.sqrt(minSquaredDistance)) /\n            maxDelta) |\n            0,\n          1,\n        );\n    }\n  }\n  if (isRing) {\n    // Check the closing segment.\n    assignClosest(\n      flatCoordinates,\n      end - stride,\n      offset,\n      stride,\n      x,\n      y,\n      tmpPoint,\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n    }\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestArrayPoint(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint,\n) {\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    minSquaredDistance = assignClosestPoint(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint,\n    );\n    offset = end;\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestMultiArrayPoint(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint,\n) {\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    minSquaredDistance = assignClosestArrayPoint(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint,\n    );\n    offset = ends[ends.length - 1];\n  }\n  return minSquaredDistance;\n}\n","/**\n * @module ol/geom/flat/deflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinate(flatCoordinates, offset, coordinate, stride) {\n  for (let i = 0, ii = coordinate.length; i < ii; ++i) {\n    flatCoordinates[offset++] = coordinate[i];\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinates(\n  flatCoordinates,\n  offset,\n  coordinates,\n  stride,\n) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    const coordinate = coordinates[i];\n    for (let j = 0; j < stride; ++j) {\n      flatCoordinates[offset++] = coordinate[j];\n    }\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} coordinatess Coordinatess.\n * @param {number} stride Stride.\n * @param {Array<number>} [ends] Ends.\n * @return {Array<number>} Ends.\n */\nexport function deflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatess,\n  stride,\n  ends,\n) {\n  ends = ends ? ends : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatess.length; j < jj; ++j) {\n    const end = deflateCoordinates(\n      flatCoordinates,\n      offset,\n      coordinatess[j],\n      stride,\n    );\n    ends[i++] = end;\n    offset = end;\n  }\n  ends.length = i;\n  return ends;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} coordinatesss Coordinatesss.\n * @param {number} stride Stride.\n * @param {Array<Array<number>>} [endss] Endss.\n * @return {Array<Array<number>>} Endss.\n */\nexport function deflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatesss,\n  stride,\n  endss,\n) {\n  endss = endss ? endss : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatesss.length; j < jj; ++j) {\n    const ends = deflateCoordinatesArray(\n      flatCoordinates,\n      offset,\n      coordinatesss[j],\n      stride,\n      endss[i],\n    );\n    if (ends.length === 0) {\n      ends[0] = offset;\n    }\n    endss[i++] = ends;\n    offset = ends[ends.length - 1];\n  }\n  endss.length = i;\n  return endss;\n}\n","/**\n * @module ol/geom/flat/simplify\n */\n// Based on simplify-js https://github.com/mourner/simplify-js\n// Copyright (c) 2012, Vladimir Agafonkin\n// All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//\n//    1. Redistributions of source code must retain the above copyright notice,\n//       this list of conditions and the following disclaimer.\n//\n//    2. Redistributions in binary form must reproduce the above copyright\n//       notice, this list of conditions and the following disclaimer in the\n//       documentation and/or other materials provided with the distribution.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n// POSSIBILITY OF SUCH DAMAGE.\n\nimport {squaredDistance, squaredSegmentDistance} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {boolean} highQuality Highest quality.\n * @param {Array<number>} [simplifiedFlatCoordinates] Simplified flat\n *     coordinates.\n * @return {Array<number>} Simplified line string.\n */\nexport function simplifyLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  highQuality,\n  simplifiedFlatCoordinates,\n) {\n  simplifiedFlatCoordinates =\n    simplifiedFlatCoordinates !== undefined ? simplifiedFlatCoordinates : [];\n  if (!highQuality) {\n    end = radialDistance(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0,\n    );\n    flatCoordinates = simplifiedFlatCoordinates;\n    offset = 0;\n    stride = 2;\n  }\n  simplifiedFlatCoordinates.length = douglasPeucker(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    squaredTolerance,\n    simplifiedFlatCoordinates,\n    0,\n  );\n  return simplifiedFlatCoordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function douglasPeucker(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n) {\n  const n = (end - offset) / stride;\n  if (n < 3) {\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  /** @type {Array<number>} */\n  const markers = new Array(n);\n  markers[0] = 1;\n  markers[n - 1] = 1;\n  /** @type {Array<number>} */\n  const stack = [offset, end - stride];\n  let index = 0;\n  while (stack.length > 0) {\n    const last = stack.pop();\n    const first = stack.pop();\n    let maxSquaredDistance = 0;\n    const x1 = flatCoordinates[first];\n    const y1 = flatCoordinates[first + 1];\n    const x2 = flatCoordinates[last];\n    const y2 = flatCoordinates[last + 1];\n    for (let i = first + stride; i < last; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      const squaredDistance = squaredSegmentDistance(x, y, x1, y1, x2, y2);\n      if (squaredDistance > maxSquaredDistance) {\n        index = i;\n        maxSquaredDistance = squaredDistance;\n      }\n    }\n    if (maxSquaredDistance > squaredTolerance) {\n      markers[(index - offset) / stride] = 1;\n      if (first + stride < index) {\n        stack.push(first, index);\n      }\n      if (index + stride < last) {\n        stack.push(index, last);\n      }\n    }\n  }\n  for (let i = 0; i < n; ++i) {\n    if (markers[i]) {\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride + 1];\n    }\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds,\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = douglasPeucker(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss,\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    /** @type {Array<number>} */\n    const simplifiedEnds = [];\n    simplifiedOffset = douglasPeuckerArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds,\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function radialDistance(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n) {\n  if (end <= offset + stride) {\n    // zero or one point, no simplification possible, so copy and return\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  // copy first point\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  let x2 = x1;\n  let y2 = y1;\n  for (offset += stride; offset < end; offset += stride) {\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    if (squaredDistance(x1, y1, x2, y2) > squaredTolerance) {\n      // copy point at offset\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  if (x2 != x1 || y2 != y1) {\n    // copy last point\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {number} value Value.\n * @param {number} tolerance Tolerance.\n * @return {number} Rounded value.\n */\nexport function snap(value, tolerance) {\n  return tolerance * Math.round(value / tolerance);\n}\n\n/**\n * Simplifies a line string using an algorithm designed by Tim Schaub.\n * Coordinates are snapped to the nearest value in a virtual grid and\n * consecutive duplicate coordinates are discarded.  This effectively preserves\n * topology as the simplification of any subsection of a line string is\n * independent of the rest of the line string.  This means that, for examples,\n * the common edge between two polygons will be simplified to the same line\n * string independently in both polygons.  This implementation uses a single\n * pass over the coordinates and eliminates intermediate collinear points.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function quantize(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n) {\n  // do nothing if the line is empty\n  if (offset == end) {\n    return simplifiedOffset;\n  }\n  // snap the first coordinate (P1)\n  let x1 = snap(flatCoordinates[offset], tolerance);\n  let y1 = snap(flatCoordinates[offset + 1], tolerance);\n  offset += stride;\n  // add the first coordinate to the output\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  // find the next coordinate that does not snap to the same value as the first\n  // coordinate (P2)\n  let x2, y2;\n  do {\n    x2 = snap(flatCoordinates[offset], tolerance);\n    y2 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    if (offset == end) {\n      // all coordinates snap to the same value, the line collapses to a point\n      // push the last snapped value anyway to ensure that the output contains\n      // at least two points\n      // FIXME should we really return at least two points anyway?\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      return simplifiedOffset;\n    }\n  } while (x2 == x1 && y2 == y1);\n  while (offset < end) {\n    // snap the next coordinate (P3)\n    const x3 = snap(flatCoordinates[offset], tolerance);\n    const y3 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    // skip P3 if it is equal to P2\n    if (x3 == x2 && y3 == y2) {\n      continue;\n    }\n    // calculate the delta between P1 and P2\n    const dx1 = x2 - x1;\n    const dy1 = y2 - y1;\n    // calculate the delta between P3 and P1\n    const dx2 = x3 - x1;\n    const dy2 = y3 - y1;\n    // if P1, P2, and P3 are colinear and P3 is further from P1 than P2 is from\n    // P1 in the same direction then P2 is on the straight line between P1 and\n    // P3\n    if (\n      dx1 * dy2 == dy1 * dx2 &&\n      ((dx1 < 0 && dx2 < dx1) || dx1 == dx2 || (dx1 > 0 && dx2 > dx1)) &&\n      ((dy1 < 0 && dy2 < dy1) || dy1 == dy2 || (dy1 > 0 && dy2 > dy1))\n    ) {\n      // discard P2 and set P2 = P3\n      x2 = x3;\n      y2 = y3;\n      continue;\n    }\n    // either P1, P2, and P3 are not colinear, or they are colinear but P3 is\n    // between P3 and P1 or on the opposite half of the line to P2.  add P2,\n    // and continue with P1 = P2 and P2 = P3\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    x1 = x2;\n    y1 = y2;\n    x2 = x3;\n    y2 = y3;\n  }\n  // add the last point (P2)\n  simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function quantizeArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds,\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = quantize(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function quantizeMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss,\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    /** @type {Array<number>} */\n    const simplifiedEnds = [];\n    simplifiedOffset = quantizeArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds,\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n","/**\n * @module ol/geom/flat/inflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} [coordinates] Coordinates.\n * @return {Array<import(\"../../coordinate.js\").Coordinate>} Coordinates.\n */\nexport function inflateCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  coordinates,\n) {\n  coordinates = coordinates !== undefined ? coordinates : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    coordinates[i++] = flatCoordinates.slice(j, j + stride);\n  }\n  coordinates.length = i;\n  return coordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} [coordinatess] Coordinatess.\n * @return {Array<Array<import(\"../../coordinate.js\").Coordinate>>} Coordinatess.\n */\nexport function inflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  coordinatess,\n) {\n  coordinatess = coordinatess !== undefined ? coordinatess : [];\n  let i = 0;\n  for (let j = 0, jj = ends.length; j < jj; ++j) {\n    const end = ends[j];\n    coordinatess[i++] = inflateCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      coordinatess[i],\n    );\n    offset = end;\n  }\n  coordinatess.length = i;\n  return coordinatess;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} [coordinatesss]\n *     Coordinatesss.\n * @return {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} Coordinatesss.\n */\nexport function inflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  coordinatesss,\n) {\n  coordinatesss = coordinatesss !== undefined ? coordinatesss : [];\n  let i = 0;\n  for (let j = 0, jj = endss.length; j < jj; ++j) {\n    const ends = endss[j];\n    coordinatesss[i++] =\n      ends.length === 1 && ends[0] === offset\n        ? []\n        : inflateCoordinatesArray(\n            flatCoordinates,\n            offset,\n            ends,\n            stride,\n            coordinatesss[i],\n          );\n    offset = ends[ends.length - 1];\n  }\n  coordinatesss.length = i;\n  return coordinatesss;\n}\n","/**\n * @module ol/geom/flat/area\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRing(flatCoordinates, offset, end, stride) {\n  let twiceArea = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    twiceArea += y1 * x2 - x1 * y2;\n    x1 = x2;\n    y1 = y2;\n  }\n  return twiceArea / 2;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRings(flatCoordinates, offset, ends, stride) {\n  let area = 0;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    area += linearRing(flatCoordinates, offset, end, stride);\n    offset = end;\n  }\n  return area;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  let area = 0;\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    area += linearRings(flatCoordinates, offset, ends, stride);\n    offset = ends[ends.length - 1];\n  }\n  return area;\n}\n","/**\n * @module ol/geom/LinearRing\n */\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {linearRing as linearRingArea} from './flat/area.js';\n\n/**\n * @classdesc\n * Linear ring geometry. Only used as part of polygon; cannot be rendered\n * on its own.\n *\n * @api\n */\nclass LinearRing extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates),\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        layout,\n      );\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LinearRing} Clone.\n   * @api\n   */\n  clone() {\n    return new LinearRing(this.flatCoordinates.slice(), this.layout);\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0,\n        ),\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n    );\n  }\n\n  /**\n   * Return the area of the linear ring on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingArea(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n    );\n  }\n\n  /**\n   * Return the coordinates of the linear ring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n    );\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LinearRing} Simplified LinearRing.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    /** @type {Array<number>} */\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0,\n    );\n    return new LinearRing(simplifiedFlatCoordinates, 'XY');\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'LinearRing';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return false;\n  }\n\n  /**\n   * Set the coordinates of the linear ring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n    );\n    this.changed();\n  }\n}\n\nexport default LinearRing;\n","/**\n * @module ol/geom/Point\n */\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {containsXY, createOrUpdateFromCoordinate} from '../extent.js';\nimport {deflateCoordinate} from './flat/deflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Point geometry.\n *\n * @api\n */\nclass Point extends SimpleGeometry {\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n    this.setCoordinates(coordinates, layout);\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Point} Clone.\n   * @api\n   */\n  clone() {\n    const point = new Point(this.flatCoordinates.slice(), this.layout);\n    point.applyProperties(this);\n    return point;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    const flatCoordinates = this.flatCoordinates;\n    const squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[0],\n      flatCoordinates[1],\n    );\n    if (squaredDistance < minSquaredDistance) {\n      const stride = this.stride;\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * Return the coordinate of the point.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return this.flatCoordinates.slice();\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromCoordinate(this.flatCoordinates, extent);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'Point';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return containsXY(extent, this.flatCoordinates[0], this.flatCoordinates[1]);\n  }\n\n  /**\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinate(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n    );\n    this.changed();\n  }\n}\n\nexport default Point;\n","/**\n * @module ol/geom/flat/contains\n */\nimport {forEachCorner} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} Contains extent.\n */\nexport function linearRingContainsExtent(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent,\n) {\n  const outside = forEachCorner(\n    extent,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains (x, y).\n     */\n    function (coordinate) {\n      return !linearRingContainsXY(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        coordinate[0],\n        coordinate[1],\n      );\n    },\n  );\n  return !outside;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingContainsXY(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  x,\n  y,\n) {\n  // https://geomalgorithms.com/a03-_inclusion.html\n  // Copyright 2000 softSurfer, 2012 Dan Sunday\n  // This code may be freely used and modified for any purpose\n  // providing that this copyright notice is included with it.\n  // SoftSurfer makes no warranty for this code, and cannot be held\n  // liable for any real or imagined damage resulting from its use.\n  // Users of this code must verify correctness for their application.\n  let wn = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    if (y1 <= y) {\n      if (y2 > y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) > 0) {\n        wn++;\n      }\n    } else if (y2 <= y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) < 0) {\n      wn--;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return wn !== 0;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingsContainsXY(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  x,\n  y,\n) {\n  if (ends.length === 0) {\n    return false;\n  }\n  if (!linearRingContainsXY(flatCoordinates, offset, ends[0], stride, x, y)) {\n    return false;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsXY(flatCoordinates, ends[i - 1], ends[i], stride, x, y)\n    ) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingssContainsXY(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  x,\n  y,\n) {\n  if (endss.length === 0) {\n    return false;\n  }\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/interiorpoint\n */\nimport {ascending} from '../../array.js';\nimport {linearRingsContainsXY} from './contains.js';\n\n/**\n * Calculates a point that is likely to lie in the interior of the linear rings.\n * Inspired by JTS's com.vividsolutions.jts.geom.Geometry#getInteriorPoint.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @param {number} flatCentersOffset Flat center offset.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Destination point as XYM coordinate, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointOfArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  flatCenters,\n  flatCentersOffset,\n  dest,\n) {\n  let i, ii, x, x1, x2, y1, y2;\n  const y = flatCenters[flatCentersOffset + 1];\n  /** @type {Array<number>} */\n  const intersections = [];\n  // Calculate intersections with the horizontal line\n  for (let r = 0, rr = ends.length; r < rr; ++r) {\n    const end = ends[r];\n    x1 = flatCoordinates[end - stride];\n    y1 = flatCoordinates[end - stride + 1];\n    for (i = offset; i < end; i += stride) {\n      x2 = flatCoordinates[i];\n      y2 = flatCoordinates[i + 1];\n      if ((y <= y1 && y2 <= y) || (y1 <= y && y <= y2)) {\n        x = ((y - y1) / (y2 - y1)) * (x2 - x1) + x1;\n        intersections.push(x);\n      }\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  // Find the longest segment of the horizontal line that has its center point\n  // inside the linear ring.\n  let pointX = NaN;\n  let maxSegmentLength = -Infinity;\n  intersections.sort(ascending);\n  x1 = intersections[0];\n  for (i = 1, ii = intersections.length; i < ii; ++i) {\n    x2 = intersections[i];\n    const segmentLength = Math.abs(x2 - x1);\n    if (segmentLength > maxSegmentLength) {\n      x = (x1 + x2) / 2;\n      if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n        pointX = x;\n        maxSegmentLength = segmentLength;\n      }\n    }\n    x1 = x2;\n  }\n  if (isNaN(pointX)) {\n    // There is no horizontal line that has its center point inside the linear\n    // ring.  Use the center of the the linear ring's extent.\n    pointX = flatCenters[flatCentersOffset];\n  }\n  if (dest) {\n    dest.push(pointX, y, maxSegmentLength);\n    return dest;\n  }\n  return [pointX, y, maxSegmentLength];\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @return {Array<number>} Interior points as XYM coordinates, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointsOfMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  flatCenters,\n) {\n  /** @type {Array<number>} */\n  let interiorPoints = [];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    interiorPoints = getInteriorPointOfArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      flatCenters,\n      2 * i,\n      interiorPoints,\n    );\n    offset = ends[ends.length - 1];\n  }\n  return interiorPoints;\n}\n","/**\n * @module ol/geom/flat/segments\n */\n\n/**\n * This function calls `callback` for each segment of the flat coordinates\n * array. If the callback returns a truthy value the function returns that\n * value immediately. Otherwise the function returns `false`.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {function(import(\"../../coordinate.js\").Coordinate, import(\"../../coordinate.js\").Coordinate): T} callback Function\n *     called for each segment.\n * @return {T|boolean} Value.\n * @template T\n */\nexport function forEach(flatCoordinates, offset, end, stride, callback) {\n  let ret;\n  offset += stride;\n  for (; offset < end; offset += stride) {\n    ret = callback(\n      flatCoordinates.slice(offset - stride, offset),\n      flatCoordinates.slice(offset, offset + stride),\n    );\n    if (ret) {\n      return ret;\n    }\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/intersectsextent\n */\nimport {\n  containsExtent,\n  createEmpty,\n  extendFlatCoordinates,\n  intersects,\n  intersectsSegment,\n} from '../../extent.js';\nimport {forEach as forEachSegment} from './segments.js';\nimport {linearRingContainsExtent, linearRingContainsXY} from './contains.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent,\n) {\n  const coordinatesExtent = extendFlatCoordinates(\n    createEmpty(),\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n  );\n  if (!intersects(extent, coordinatesExtent)) {\n    return false;\n  }\n  if (containsExtent(extent, coordinatesExtent)) {\n    return true;\n  }\n  if (coordinatesExtent[0] >= extent[0] && coordinatesExtent[2] <= extent[2]) {\n    return true;\n  }\n  if (coordinatesExtent[1] >= extent[1] && coordinatesExtent[3] <= extent[3]) {\n    return true;\n  }\n  return forEachSegment(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} point1 Start point.\n     * @param {import(\"../../coordinate.js\").Coordinate} point2 End point.\n     * @return {boolean} `true` if the segment and the extent intersect,\n     *     `false` otherwise.\n     */\n    function (point1, point2) {\n      return intersectsSegment(extent, point1, point2);\n    },\n  );\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineStringArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent,\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    if (\n      intersectsLineString(flatCoordinates, offset, ends[i], stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[i];\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRing(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent,\n) {\n  if (intersectsLineString(flatCoordinates, offset, end, stride, extent)) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[1],\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[3],\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[1],\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[3],\n    )\n  ) {\n    return true;\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent,\n) {\n  if (!intersectsLinearRing(flatCoordinates, offset, ends[0], stride, extent)) {\n    return false;\n  }\n  if (ends.length === 1) {\n    return true;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsExtent(\n        flatCoordinates,\n        ends[i - 1],\n        ends[i],\n        stride,\n        extent,\n      )\n    ) {\n      if (\n        !intersectsLineString(\n          flatCoordinates,\n          ends[i - 1],\n          ends[i],\n          stride,\n          extent,\n        )\n      ) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  extent,\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (\n      intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/reverse\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n */\nexport function coordinates(flatCoordinates, offset, end, stride) {\n  while (offset < end - stride) {\n    for (let i = 0; i < stride; ++i) {\n      const tmp = flatCoordinates[offset + i];\n      flatCoordinates[offset + i] = flatCoordinates[end - stride + i];\n      flatCoordinates[end - stride + i] = tmp;\n    }\n    offset += stride;\n    end -= stride;\n  }\n}\n","/**\n * @module ol/geom/flat/orient\n */\nimport {coordinates as reverseCoordinates} from './reverse.js';\n\n/**\n * Is the linear ring oriented clockwise in a coordinate system with a bottom-left\n * coordinate origin? For a coordinate system with a top-left coordinate origin,\n * the ring's orientation is clockwise when this function returns false.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean|undefined} Is clockwise.\n */\nexport function linearRingIsClockwise(flatCoordinates, offset, end, stride) {\n  // https://stackoverflow.com/q/1165647/clockwise-method#1165943\n  // https://github.com/OSGeo/gdal/blob/master/gdal/ogr/ogrlinearring.cpp\n  let edge = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    edge += (x2 - x1) * (y2 + y1);\n    x1 = x2;\n    y1 = y2;\n  }\n  return edge === 0 ? undefined : edge > 0;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingsAreOriented(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  right,\n) {\n  right = right !== undefined ? right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n    );\n    if (i === 0) {\n      if ((right && isClockwise) || (!right && !isClockwise)) {\n        return false;\n      }\n    } else {\n      if ((right && !isClockwise) || (!right && isClockwise)) {\n        return false;\n      }\n    }\n    offset = end;\n  }\n  return true;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingssAreOriented(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  right,\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (!linearRingsAreOriented(flatCoordinates, offset, ends, stride, right)) {\n      return false;\n    }\n    if (ends.length) {\n      offset = ends[ends.length - 1];\n    }\n  }\n  return true;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {boolean} [right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRings(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  right,\n) {\n  right = right !== undefined ? right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n    );\n    const reverse =\n      i === 0\n        ? (right && isClockwise) || (!right && !isClockwise)\n        : (right && !isClockwise) || (!right && isClockwise);\n    if (reverse) {\n      reverseCoordinates(flatCoordinates, offset, end, stride);\n    }\n    offset = end;\n  }\n  return offset;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRingsArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  right,\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    offset = orientLinearRings(\n      flatCoordinates,\n      offset,\n      endss[i],\n      stride,\n      right,\n    );\n  }\n  return offset;\n}\n\n/**\n * Return a two-dimensional endss\n * @param {Array<number>} flatCoordinates Flat coordinates\n * @param {Array<number>} ends Linear ring end indexes\n * @return {Array<Array<number>>} Two dimensional endss array that can\n * be used to construct a MultiPolygon\n */\nexport function inflateEnds(flatCoordinates, ends) {\n  const endss = [];\n  let offset = 0;\n  let prevEndIndex = 0;\n  let startOrientation;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    // classifies an array of rings into polygons with outer rings and holes\n    const orientation = linearRingIsClockwise(flatCoordinates, offset, end, 2);\n    if (startOrientation === undefined) {\n      startOrientation = orientation;\n    }\n    if (orientation === startOrientation) {\n      endss.push(ends.slice(prevEndIndex, i + 1));\n    } else {\n      if (endss.length === 0) {\n        continue;\n      }\n      endss[endss.length - 1].push(ends[prevEndIndex]);\n    }\n    prevEndIndex = i + 1;\n    offset = end;\n  }\n  return endss;\n}\n","/**\n * @module ol/geom/Polygon\n */\nimport LinearRing from './LinearRing.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {arrayMaxSquaredDelta, assignClosestArrayPoint} from './flat/closest.js';\nimport {closestSquaredDistanceXY, getCenter, isEmpty} from '../extent.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {getInteriorPointOfArray} from './flat/interiorpoint.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {intersectsLinearRingArray} from './flat/intersectsextent.js';\nimport {linearRingsAreOriented, orientLinearRings} from './flat/orient.js';\nimport {linearRings as linearRingsArea} from './flat/area.js';\nimport {linearRingsContainsXY} from './flat/contains.js';\nimport {modulo} from '../math.js';\nimport {quantizeArray} from './flat/simplify.js';\nimport {offset as sphereOffset} from '../sphere.js';\n\n/**\n * @classdesc\n * Polygon geometry.\n *\n * @api\n */\nclass Polygon extends SimpleGeometry {\n  /**\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>|!Array<number>} coordinates\n   *     Array of linear rings that define the polygon. The first linear ring of the\n   *     array defines the outer-boundary or surface of the polygon. Each subsequent\n   *     linear ring defines a hole in the surface of the polygon. A linear ring is\n   *     an array of vertices' coordinates where the first coordinate and the last are\n   *     equivalent. (For internal use, flat coordinates in combination with\n   *     `layout` and `ends` are also accepted.)\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @param {Array<number>} [ends] Ends (for internal use with flat coordinates).\n   */\n  constructor(coordinates, layout, ends) {\n    super();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate|null}\n     */\n    this.flatInteriorPoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (layout !== undefined && ends) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates),\n      );\n      this.ends_ = ends;\n    } else {\n      this.setCoordinates(\n        /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (\n          coordinates\n        ),\n        layout,\n      );\n    }\n  }\n\n  /**\n   * Append the passed linear ring to this polygon.\n   * @param {LinearRing} linearRing Linear ring.\n   * @api\n   */\n  appendLinearRing(linearRing) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = linearRing.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, linearRing.getFlatCoordinates());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Polygon} Clone.\n   * @api\n   */\n  clone() {\n    const polygon = new Polygon(\n      this.flatCoordinates.slice(),\n      this.layout,\n      this.ends_.slice(),\n    );\n    polygon.applyProperties(this);\n    return polygon;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        arrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.ends_,\n          this.stride,\n          0,\n        ),\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n    );\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    return linearRingsContainsXY(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      x,\n      y,\n    );\n  }\n\n  /**\n   * Return the area of the polygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingsArea(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n    );\n  }\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for polygons.\n   *\n   * @param {boolean} [right] Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @api\n   */\n  getCoordinates(right) {\n    let flatCoordinates;\n    if (right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRings(flatCoordinates, 0, this.ends_, this.stride, right);\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateCoordinatesArray(flatCoordinates, 0, this.ends_, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * @return {Array<number>} Interior point.\n   */\n  getFlatInteriorPoint() {\n    if (this.flatInteriorPointRevision_ != this.getRevision()) {\n      const flatCenter = getCenter(this.getExtent());\n      this.flatInteriorPoint_ = getInteriorPointOfArray(\n        this.getOrientedFlatCoordinates(),\n        0,\n        this.ends_,\n        this.stride,\n        flatCenter,\n        0,\n      );\n      this.flatInteriorPointRevision_ = this.getRevision();\n    }\n    return /** @type {import(\"../coordinate.js\").Coordinate} */ (\n      this.flatInteriorPoint_\n    );\n  }\n\n  /**\n   * Return an interior point of the polygon.\n   * @return {Point} Interior point as XYM coordinate, where M is the\n   * length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  getInteriorPoint() {\n    return new Point(this.getFlatInteriorPoint(), 'XYM');\n  }\n\n  /**\n   * Return the number of rings of the polygon,  this includes the exterior\n   * ring and any interior rings.\n   *\n   * @return {number} Number of rings.\n   * @api\n   */\n  getLinearRingCount() {\n    return this.ends_.length;\n  }\n\n  /**\n   * Return the Nth linear ring of the polygon geometry. Return `null` if the\n   * given index is out of range.\n   * The exterior linear ring is available at index `0` and the interior rings\n   * at index `1` and beyond.\n   *\n   * @param {number} index Index.\n   * @return {LinearRing|null} Linear ring.\n   * @api\n   */\n  getLinearRing(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LinearRing(\n      this.flatCoordinates.slice(\n        index === 0 ? 0 : this.ends_[index - 1],\n        this.ends_[index],\n      ),\n      this.layout,\n    );\n  }\n\n  /**\n   * Return the linear rings of the polygon.\n   * @return {Array<LinearRing>} Linear rings.\n   * @api\n   */\n  getLinearRings() {\n    const layout = this.layout;\n    const flatCoordinates = this.flatCoordinates;\n    const ends = this.ends_;\n    const linearRings = [];\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const linearRing = new LinearRing(\n        flatCoordinates.slice(offset, end),\n        layout,\n      );\n      linearRings.push(linearRing);\n      offset = end;\n    }\n    return linearRings;\n  }\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      const flatCoordinates = this.flatCoordinates;\n      if (linearRingsAreOriented(flatCoordinates, 0, this.ends_, this.stride)) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length = orientLinearRings(\n          this.orientedFlatCoordinates_,\n          0,\n          this.ends_,\n          this.stride,\n        );\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return /** @type {Array<number>} */ (this.orientedFlatCoordinates_);\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Polygon} Simplified Polygon.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    /** @type {Array<number>} */\n    const simplifiedFlatCoordinates = [];\n    /** @type {Array<number>} */\n    const simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = quantizeArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEnds,\n    );\n    return new Polygon(simplifiedFlatCoordinates, 'XY', simplifiedEnds);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'Polygon';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLinearRingArray(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      extent,\n    );\n  }\n\n  /**\n   * Set the coordinates of the polygon.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.ends_,\n    );\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n}\n\nexport default Polygon;\n\n/**\n * Create an approximation of a circle on the surface of a sphere.\n * @param {import(\"../coordinate.js\").Coordinate} center Center (`[lon, lat]` in degrees).\n * @param {number} radius The great-circle distance from the center to\n *     the polygon vertices in meters.\n * @param {number} [n] Optional number of vertices for the resulting\n *     polygon. Default is `32`.\n * @param {number} [sphereRadius] Optional radius for the sphere (defaults to\n *     the Earth's mean radius using the WGS84 ellipsoid).\n * @return {Polygon} The \"circular\" polygon.\n * @api\n */\nexport function circular(center, radius, n, sphereRadius) {\n  n = n ? n : 32;\n  /** @type {Array<number>} */\n  const flatCoordinates = [];\n  for (let i = 0; i < n; ++i) {\n    extend(\n      flatCoordinates,\n      sphereOffset(center, radius, (2 * Math.PI * i) / n, sphereRadius),\n    );\n  }\n  flatCoordinates.push(flatCoordinates[0], flatCoordinates[1]);\n  return new Polygon(flatCoordinates, 'XY', [flatCoordinates.length]);\n}\n\n/**\n * Create a polygon from an extent. The layout used is `XY`.\n * @param {import(\"../extent.js\").Extent} extent The extent.\n * @return {Polygon} The polygon.\n * @api\n */\nexport function fromExtent(extent) {\n  if (isEmpty(extent)) {\n    throw new Error('Cannot create polygon from empty extent');\n  }\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const flatCoordinates = [\n    minX,\n    minY,\n    minX,\n    maxY,\n    maxX,\n    maxY,\n    maxX,\n    minY,\n    minX,\n    minY,\n  ];\n  return new Polygon(flatCoordinates, 'XY', [flatCoordinates.length]);\n}\n\n/**\n * Create a regular polygon from a circle.\n * @param {import(\"./Circle.js\").default} circle Circle geometry.\n * @param {number} [sides] Number of sides of the polygon. Default is 32.\n * @param {number} [angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n * @return {Polygon} Polygon geometry.\n * @api\n */\nexport function fromCircle(circle, sides, angle) {\n  sides = sides ? sides : 32;\n  const stride = circle.getStride();\n  const layout = circle.getLayout();\n  const center = circle.getCenter();\n  const arrayLength = stride * (sides + 1);\n  const flatCoordinates = new Array(arrayLength);\n  for (let i = 0; i < arrayLength; i += stride) {\n    flatCoordinates[i] = 0;\n    flatCoordinates[i + 1] = 0;\n    for (let j = 2; j < stride; j++) {\n      flatCoordinates[i + j] = center[j];\n    }\n  }\n  const ends = [flatCoordinates.length];\n  const polygon = new Polygon(flatCoordinates, layout, ends);\n  makeRegular(polygon, center, circle.getRadius(), angle);\n  return polygon;\n}\n\n/**\n * Modify the coordinates of a polygon to make it a regular polygon.\n * @param {Polygon} polygon Polygon geometry.\n * @param {import(\"../coordinate.js\").Coordinate} center Center of the regular polygon.\n * @param {number} radius Radius of the regular polygon.\n * @param {number} [angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n */\nexport function makeRegular(polygon, center, radius, angle) {\n  const flatCoordinates = polygon.getFlatCoordinates();\n  const stride = polygon.getStride();\n  const sides = flatCoordinates.length / stride - 1;\n  const startAngle = angle ? angle : 0;\n  for (let i = 0; i <= sides; ++i) {\n    const offset = i * stride;\n    const angle = startAngle + (modulo(i, sides) * 2 * Math.PI) / sides;\n    flatCoordinates[offset] = center[0] + radius * Math.cos(angle);\n    flatCoordinates[offset + 1] = center[1] + radius * Math.sin(angle);\n  }\n  polygon.changed();\n}\n","/**\n * @module ol/Geolocation\n */\nimport BaseEvent from './events/Event.js';\nimport BaseObject from './Object.js';\nimport {circular as circularPolygon} from './geom/Polygon.js';\nimport {\n  get as getProjection,\n  getTransformFromProjections,\n  identityTransform,\n} from './proj.js';\nimport {toRadians} from './math.js';\n\n/**\n * @enum {string}\n */\nconst Property = {\n  ACCURACY: 'accuracy',\n  ACCURACY_GEOMETRY: 'accuracyGeometry',\n  ALTITUDE: 'altitude',\n  ALTITUDE_ACCURACY: 'altitudeAccuracy',\n  HEADING: 'heading',\n  POSITION: 'position',\n  PROJECTION: 'projection',\n  SPEED: 'speed',\n  TRACKING: 'tracking',\n  TRACKING_OPTIONS: 'trackingOptions',\n};\n\n/**\n * @enum string\n */\nconst GeolocationErrorType = {\n  /**\n   * Triggered when a `GeolocationPositionError` occurs.\n   * @event module:ol/Geolocation.GeolocationError#error\n   * @api\n   */\n  ERROR: 'error',\n};\n\n/**\n * @classdesc\n * Events emitted on [GeolocationPositionError](https://developer.mozilla.org/en-US/docs/Web/API/GeolocationPositionError).\n */\nexport class GeolocationError extends BaseEvent {\n  /**\n   * @param {GeolocationPositionError} error error object.\n   */\n  constructor(error) {\n    super(GeolocationErrorType.ERROR);\n\n    /**\n     * Code of the underlying `GeolocationPositionError`.\n     * @type {number}\n     * @api\n     */\n    this.code = error.code;\n\n    /**\n     * Message of the underlying `GeolocationPositionError`.\n     * @type {string}\n     * @api\n     */\n    this.message = error.message;\n  }\n}\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [tracking=false] Start Tracking right after\n * instantiation.\n * @property {PositionOptions} [trackingOptions] Tracking options.\n * See https://www.w3.org/TR/geolocation-API/#position_options_interface.\n * @property {import(\"./proj.js\").ProjectionLike} [projection] The projection the position\n * is reported in.\n */\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:accuracy'|'change:accuracyGeometry'|'change:altitude'|\n *    'change:altitudeAccuracy'|'change:heading'|'change:position'|'change:projection'|'change:speed'|'change:tracking'|\n *    'change:trackingOptions'} GeolocationObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<GeolocationObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").OnSignature<'error', GeolocationError, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|GeolocationObjectEventTypes, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return>} GeolocationOnSignature\n */\n\n/**\n * @classdesc\n * Helper class for providing HTML5 Geolocation capabilities.\n * The [Geolocation API](https://www.w3.org/TR/geolocation-API/)\n * is used to locate a user's position.\n *\n * To get notified of position changes and errors, register listeners for the generic\n * `change` event and the `error` event on your instance of {@link module:ol/Geolocation~Geolocation}.\n *\n * Example:\n *\n *     const geolocation = new Geolocation({\n *       // take the projection to use from the map's view\n *       projection: view.getProjection()\n *     });\n *     // listen to changes in position\n *     geolocation.on('change', function(evt) {\n *       console.log(geolocation.getPosition());\n *     });\n *     // listen to error\n *     geolocation.on('error', function(evt) {\n *       window.console.log(evt.message);\n *     });\n *\n * @fires GeolocationError\n * @api\n */\nclass Geolocation extends BaseObject {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {GeolocationOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {GeolocationOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {GeolocationOnSignature<void>}\n     */\n    this.un;\n\n    options = options || {};\n\n    /**\n     * The unprojected (EPSG:4326) device position.\n     * @private\n     * @type {?import(\"./coordinate.js\").Coordinate}\n     */\n    this.position_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./proj.js\").TransformFunction}\n     */\n    this.transform_ = identityTransform;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.watchId_ = undefined;\n\n    this.addChangeListener(Property.PROJECTION, this.handleProjectionChanged_);\n    this.addChangeListener(Property.TRACKING, this.handleTrackingChanged_);\n\n    if (options.projection !== undefined) {\n      this.setProjection(options.projection);\n    }\n    if (options.trackingOptions !== undefined) {\n      this.setTrackingOptions(options.trackingOptions);\n    }\n\n    this.setTracking(options.tracking !== undefined ? options.tracking : false);\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.setTracking(false);\n    super.disposeInternal();\n  }\n\n  /**\n   * @private\n   */\n  handleProjectionChanged_() {\n    const projection = this.getProjection();\n    if (projection) {\n      this.transform_ = getTransformFromProjections(\n        getProjection('EPSG:4326'),\n        projection,\n      );\n      if (this.position_) {\n        this.set(Property.POSITION, this.transform_(this.position_));\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  handleTrackingChanged_() {\n    if ('geolocation' in navigator) {\n      const tracking = this.getTracking();\n      if (tracking && this.watchId_ === undefined) {\n        this.watchId_ = navigator.geolocation.watchPosition(\n          this.positionChange_.bind(this),\n          this.positionError_.bind(this),\n          this.getTrackingOptions(),\n        );\n      } else if (!tracking && this.watchId_ !== undefined) {\n        navigator.geolocation.clearWatch(this.watchId_);\n        this.watchId_ = undefined;\n      }\n    }\n  }\n\n  /**\n   * @private\n   * @param {GeolocationPosition} position position event.\n   */\n  positionChange_(position) {\n    const coords = position.coords;\n    this.set(Property.ACCURACY, coords.accuracy);\n    this.set(\n      Property.ALTITUDE,\n      coords.altitude === null ? undefined : coords.altitude,\n    );\n    this.set(\n      Property.ALTITUDE_ACCURACY,\n      coords.altitudeAccuracy === null ? undefined : coords.altitudeAccuracy,\n    );\n    this.set(\n      Property.HEADING,\n      coords.heading === null ? undefined : toRadians(coords.heading),\n    );\n    if (!this.position_) {\n      this.position_ = [coords.longitude, coords.latitude];\n    } else {\n      this.position_[0] = coords.longitude;\n      this.position_[1] = coords.latitude;\n    }\n    const projectedPosition = this.transform_(this.position_);\n    this.set(Property.POSITION, projectedPosition.slice());\n    this.set(Property.SPEED, coords.speed === null ? undefined : coords.speed);\n    const geometry = circularPolygon(this.position_, coords.accuracy);\n    geometry.applyTransform(this.transform_);\n    this.set(Property.ACCURACY_GEOMETRY, geometry);\n    this.changed();\n  }\n\n  /**\n   * @private\n   * @param {GeolocationPositionError} error error object.\n   */\n  positionError_(error) {\n    this.dispatchEvent(new GeolocationError(error));\n  }\n\n  /**\n   * Get the accuracy of the position in meters.\n   * @return {number|undefined} The accuracy of the position measurement in\n   *     meters.\n   * @observable\n   * @api\n   */\n  getAccuracy() {\n    return /** @type {number|undefined} */ (this.get(Property.ACCURACY));\n  }\n\n  /**\n   * Get a geometry of the position accuracy.\n   * @return {?import(\"./geom/Polygon.js\").default} A geometry of the position accuracy.\n   * @observable\n   * @api\n   */\n  getAccuracyGeometry() {\n    return /** @type {?import(\"./geom/Polygon.js\").default} */ (\n      this.get(Property.ACCURACY_GEOMETRY) || null\n    );\n  }\n\n  /**\n   * Get the altitude associated with the position.\n   * @return {number|undefined} The altitude of the position in meters above mean\n   *     sea level.\n   * @observable\n   * @api\n   */\n  getAltitude() {\n    return /** @type {number|undefined} */ (this.get(Property.ALTITUDE));\n  }\n\n  /**\n   * Get the altitude accuracy of the position.\n   * @return {number|undefined} The accuracy of the altitude measurement in\n   *     meters.\n   * @observable\n   * @api\n   */\n  getAltitudeAccuracy() {\n    return /** @type {number|undefined} */ (\n      this.get(Property.ALTITUDE_ACCURACY)\n    );\n  }\n\n  /**\n   * Get the heading as radians clockwise from North.\n   * Note: depending on the browser, the heading is only defined if the `enableHighAccuracy`\n   * is set to `true` in the tracking options.\n   * @return {number|undefined} The heading of the device in radians from north.\n   * @observable\n   * @api\n   */\n  getHeading() {\n    return /** @type {number|undefined} */ (this.get(Property.HEADING));\n  }\n\n  /**\n   * Get the position of the device.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The current position of the device reported\n   *     in the current projection.\n   * @observable\n   * @api\n   */\n  getPosition() {\n    return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (\n      this.get(Property.POSITION)\n    );\n  }\n\n  /**\n   * Get the projection associated with the position.\n   * @return {import(\"./proj/Projection.js\").default|undefined} The projection the position is\n   *     reported in.\n   * @observable\n   * @api\n   */\n  getProjection() {\n    return /** @type {import(\"./proj/Projection.js\").default|undefined} */ (\n      this.get(Property.PROJECTION)\n    );\n  }\n\n  /**\n   * Get the speed in meters per second.\n   * @return {number|undefined} The instantaneous speed of the device in meters\n   *     per second.\n   * @observable\n   * @api\n   */\n  getSpeed() {\n    return /** @type {number|undefined} */ (this.get(Property.SPEED));\n  }\n\n  /**\n   * Determine if the device location is being tracked.\n   * @return {boolean} The device location is being tracked.\n   * @observable\n   * @api\n   */\n  getTracking() {\n    return /** @type {boolean} */ (this.get(Property.TRACKING));\n  }\n\n  /**\n   * Get the tracking options.\n   * See https://www.w3.org/TR/geolocation-API/#position-options.\n   * @return {PositionOptions|undefined} PositionOptions as defined by\n   *     the [HTML5 Geolocation spec\n   *     ](https://www.w3.org/TR/geolocation-API/#position_options_interface).\n   * @observable\n   * @api\n   */\n  getTrackingOptions() {\n    return /** @type {PositionOptions|undefined} */ (\n      this.get(Property.TRACKING_OPTIONS)\n    );\n  }\n\n  /**\n   * Set the projection to use for transforming the coordinates.\n   * @param {import(\"./proj.js\").ProjectionLike} projection The projection the position is\n   *     reported in.\n   * @observable\n   * @api\n   */\n  setProjection(projection) {\n    this.set(Property.PROJECTION, getProjection(projection));\n  }\n\n  /**\n   * Enable or disable tracking.\n   * @param {boolean} tracking Enable tracking.\n   * @observable\n   * @api\n   */\n  setTracking(tracking) {\n    this.set(Property.TRACKING, tracking);\n  }\n\n  /**\n   * Set the tracking options.\n   * See http://www.w3.org/TR/geolocation-API/#position-options.\n   * @param {PositionOptions} options PositionOptions as defined by the\n   *     [HTML5 Geolocation spec\n   *     ](http://www.w3.org/TR/geolocation-API/#position_options_interface).\n   * @observable\n   * @api\n   */\n  setTrackingOptions(options) {\n    this.set(Property.TRACKING_OPTIONS, options);\n  }\n}\n\nexport default Geolocation;\n","/**\n * @module ol/render/EventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered before a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#prerender\n   * @api\n   */\n  PRERENDER: 'prerender',\n\n  /**\n   * Triggered after a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered before layers are composed.  When dispatched by the map, the event object will not have\n   * a `context` set.  When dispatched by a layer, the event object will have a `context` set.  Only\n   * WebGL layers currently dispatch this event.\n   * @event module:ol/render/Event~RenderEvent#precompose\n   * @api\n   */\n  PRECOMPOSE: 'precompose',\n\n  /**\n   * Triggered after layers are composed.  When dispatched by the map, the event object will not have\n   * a `context` set.  When dispatched by a layer, the event object will have a `context` set.  Only\n   * WebGL layers currently dispatch this event.\n   * @event module:ol/render/Event~RenderEvent#postcompose\n   * @api\n   */\n  POSTCOMPOSE: 'postcompose',\n\n  /**\n   * Triggered when rendering is complete, i.e. all sources and tiles have\n   * finished loading for the current viewport, and all tiles are faded in.\n   * The event object will not have a `context` set.\n   * @event module:ol/render/Event~RenderEvent#rendercomplete\n   * @api\n   */\n  RENDERCOMPLETE: 'rendercomplete',\n};\n\n/**\n * @typedef {'postrender'|'precompose'|'postcompose'|'rendercomplete'} MapRenderEventTypes\n */\n\n/**\n * @typedef {'postrender'|'prerender'} LayerRenderEventTypes\n */\n","/**\n * @module ol/ImageState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * RGB space.\n *\n * @module  color-space/rgb\n */\n\nexport default {\n\tname: 'rgb',\n\tmin: [0,0,0],\n\tmax: [255,255,255],\n\tchannel: ['red', 'green', 'blue'],\n\talias: ['RGB']\n};\n","/**\n * CIE XYZ\n *\n * @module  color-space/xyz\n */\nimport rgb from './rgb.js';\n\nvar xyz = {\n\tname: 'xyz',\n\tmin: [0,0,0],\n\tchannel: ['X','Y','Z'],\n\talias: ['XYZ', 'ciexyz', 'cie1931']\n};\n\n\n/**\n * Whitepoint reference values with observer/illuminant\n *\n * http://en.wikipedia.org/wiki/Standard_illuminant\n */\nxyz.whitepoint = {\n\t//1931 2°\n\t2: {\n\t\t//incadescent\n\t\tA:[109.85, 100, 35.585],\n\t\t// B:[],\n\t\tC: [98.074, 100, 118.232],\n\t\tD50: [96.422, 100, 82.521],\n\t\tD55: [95.682, 100, 92.149],\n\t\t//daylight\n\t\tD65: [95.045592705167, 100, 108.9057750759878],\n\t\tD75: [94.972, 100, 122.638],\n\t\t//flourescent\n\t\t// F1: [],\n\t\tF2: [99.187, 100, 67.395],\n\t\t// F3: [],\n\t\t// F4: [],\n\t\t// F5: [],\n\t\t// F6:[],\n\t\tF7: [95.044, 100, 108.755],\n\t\t// F8: [],\n\t\t// F9: [],\n\t\t// F10: [],\n\t\tF11: [100.966, 100, 64.370],\n\t\t// F12: [],\n\t\tE: [100,100,100]\n\t},\n\n\t//1964  10°\n\t10: {\n\t\t//incadescent\n\t\tA:[111.144, 100, 35.200],\n\t\tC: [97.285, 100, 116.145],\n\t\tD50: [96.720, 100, 81.427],\n\t\tD55: [95.799, 100, 90.926],\n\t\t//daylight\n\t\tD65: [94.811, 100, 107.304],\n\t\tD75: [94.416, 100, 120.641],\n\t\t//flourescent\n\t\tF2: [103.280, 100, 69.026],\n\t\tF7: [95.792, 100, 107.687],\n\t\tF11: [103.866, 100, 65.627],\n\t\tE: [100,100,100]\n\t}\n};\n\n\n/**\n * Top values are the whitepoint’s top values, default are D65\n */\nxyz.max = xyz.whitepoint[2].D65;\n\n\n/**\n * Transform xyz to rgb\n *\n * @param {Array} xyz Array of xyz values\n *\n * @return {Array} RGB values\n */\nxyz.rgb = function (_xyz, white) {\n\t//FIXME: make sure we have to divide like this. Probably we have to replace matrix as well then\n\twhite = white || xyz.whitepoint[2].E;\n\n\tvar x = _xyz[0] / white[0],\n\t\ty = _xyz[1] / white[1],\n\t\tz = _xyz[2] / white[2],\n\t\tr, g, b;\n\n\t// assume sRGB\n\t// http://www.brucelindbloom.com/index.html?Eqn_RGB_XYZ_Matrix.html\n\tr = (x * 3.240969941904521) + (y * -1.537383177570093) + (z * -0.498610760293);\n\tg = (x * -0.96924363628087) + (y * 1.87596750150772) + (z * 0.041555057407175);\n\tb = (x * 0.055630079696993) + (y * -0.20397695888897) + (z * 1.056971514242878);\n\n\tr = r > 0.0031308 ? ((1.055 * Math.pow(r, 1.0 / 2.4)) - 0.055)\n\t\t: r = (r * 12.92);\n\n\tg = g > 0.0031308 ? ((1.055 * Math.pow(g, 1.0 / 2.4)) - 0.055)\n\t\t: g = (g * 12.92);\n\n\tb = b > 0.0031308 ? ((1.055 * Math.pow(b, 1.0 / 2.4)) - 0.055)\n\t\t: b = (b * 12.92);\n\n\tr = Math.min(Math.max(0, r), 1);\n\tg = Math.min(Math.max(0, g), 1);\n\tb = Math.min(Math.max(0, b), 1);\n\n\treturn [r * 255, g * 255, b * 255];\n}\n\n\n\n/**\n * RGB to XYZ\n *\n * @param {Array} rgb RGB channels\n *\n * @return {Array} XYZ channels\n */\nrgb.xyz = function(rgb, white) {\n\tvar r = rgb[0] / 255,\n\t\t\tg = rgb[1] / 255,\n\t\t\tb = rgb[2] / 255;\n\n\t// assume sRGB\n\tr = r > 0.04045 ? Math.pow(((r + 0.055) / 1.055), 2.4) : (r / 12.92);\n\tg = g > 0.04045 ? Math.pow(((g + 0.055) / 1.055), 2.4) : (g / 12.92);\n\tb = b > 0.04045 ? Math.pow(((b + 0.055) / 1.055), 2.4) : (b / 12.92);\n\n\tvar x = (r * 0.41239079926595) + (g * 0.35758433938387) + (b * 0.18048078840183);\n\tvar y = (r * 0.21263900587151) + (g * 0.71516867876775) + (b * 0.072192315360733);\n\tvar z = (r * 0.019330818715591) + (g * 0.11919477979462) + (b * 0.95053215224966);\n\n\twhite = white || xyz.whitepoint[2].E;\n\n\treturn [x * white[0], y * white[1], z * white[2]];\n};\n\n\n\nexport default xyz;\n","/**\n * CIE LUV (C'est la vie)\n *\n * @module color-space/luv\n */\n import xyz from './xyz.js';\n\nexport default {\n\tname: 'luv',\n\t//NOTE: luv has no rigidly defined limits\n\t//easyrgb fails to get proper coords\n\t//boronine states no rigid limits\n\t//colorMine refers this ones:\n\tmin: [0,-134,-140],\n\tmax: [100,224,122],\n\tchannel: ['lightness', 'u', 'v'],\n\talias: ['LUV', 'cieluv', 'cie1976'],\n\n\txyz: function(arg, i, o){\n\t\tvar _u, _v, l, u, v, x, y, z, xn, yn, zn, un, vn;\n\t\tl = arg[0], u = arg[1], v = arg[2];\n\n\t\tif (l === 0) return [0,0,0];\n\n\t\t//get constants\n\t\t//var e = 0.008856451679035631; //(6/29)^3\n\t\tvar k = 0.0011070564598794539; //(3/29)^3\n\n\t\t//get illuminant/observer\n\t\ti = i || 'D65';\n\t\to = o || 2;\n\n\t\txn = xyz.whitepoint[o][i][0];\n\t\tyn = xyz.whitepoint[o][i][1];\n\t\tzn = xyz.whitepoint[o][i][2];\n\n\t\tun = (4 * xn) / (xn + (15 * yn) + (3 * zn));\n\t\tvn = (9 * yn) / (xn + (15 * yn) + (3 * zn));\n\t\t// un = 0.19783000664283;\n\t\t// vn = 0.46831999493879;\n\n\n\t\t_u = u / (13 * l) + un || 0;\n\t\t_v = v / (13 * l) + vn || 0;\n\n\t\ty = l > 8 ? yn * Math.pow( (l + 16) / 116 , 3) : yn * l * k;\n\n\t\t//wikipedia method\n\t\tx = y * 9 * _u / (4 * _v) || 0;\n\t\tz = y * (12 - 3 * _u - 20 * _v) / (4 * _v) || 0;\n\n\t\t//boronine method\n\t\t//https://github.com/boronine/husl/blob/master/husl.coffee#L201\n\t\t// x = 0 - (9 * y * _u) / ((_u - 4) * _v - _u * _v);\n\t\t// z = (9 * y - (15 * _v * y) - (_v * x)) / (3 * _v);\n\n\t\treturn [x, y, z];\n\t}\n};\n\n// http://www.brucelindbloom.com/index.html?Equations.html\n// https://github.com/boronine/husl/blob/master/husl.coffee\n//i - illuminant\n//o - observer\nxyz.luv = function(arg, i, o) {\n\tvar _u, _v, l, u, v, x, y, z, xn, yn, zn, un, vn;\n\n\t//get constants\n\tvar e = 0.008856451679035631; //(6/29)^3\n\tvar k = 903.2962962962961; //(29/3)^3\n\n\t//get illuminant/observer coords\n\ti = i || 'D65';\n\to = o || 2;\n\n\txn = xyz.whitepoint[o][i][0];\n\tyn = xyz.whitepoint[o][i][1];\n\tzn = xyz.whitepoint[o][i][2];\n\n\tun = (4 * xn) / (xn + (15 * yn) + (3 * zn));\n\tvn = (9 * yn) / (xn + (15 * yn) + (3 * zn));\n\n\n\tx = arg[0], y = arg[1], z = arg[2];\n\n\n\t_u = (4 * x) / (x + (15 * y) + (3 * z)) || 0;\n\t_v = (9 * y) / (x + (15 * y) + (3 * z)) || 0;\n\n\tvar yr = y/yn;\n\n\tl = yr <= e ? k * yr : 116 * Math.pow(yr, 1/3) - 16;\n\n\tu = 13 * l * (_u - un);\n\tv = 13 * l * (_v - vn);\n\n\treturn [l, u, v];\n};\n","/**\n * Cylindrical CIE LUV\n *\n * @module color-space/lchuv\n */\nimport luv from './luv.js';\nimport xyz from './xyz.js';\n\n//cylindrical luv\nvar lchuv = {\n\tname: 'lchuv',\n\tchannel: ['lightness', 'chroma', 'hue'],\n\talias: ['LCHuv', 'cielchuv'],\n\tmin: [0,0,0],\n\tmax: [100,100,360],\n\n\tluv: function(luv){\n\t\tvar l = luv[0],\n\t\tc = luv[1],\n\t\th = luv[2],\n\t\tu, v, hr;\n\n\t\thr = h / 360 * 2 * Math.PI;\n\t\tu = c * Math.cos(hr);\n\t\tv = c * Math.sin(hr);\n\t\treturn [l, u, v];\n\t},\n\n\txyz: function(arg) {\n\t\treturn luv.xyz(lchuv.luv(arg));\n\t}\n};\n\nexport default lchuv;\n\nluv.lchuv = function(luv){\n\tvar l = luv[0], u = luv[1], v = luv[2];\n\n\tvar c = Math.sqrt(u*u + v*v);\n\tvar hr = Math.atan2(v,u);\n\tvar h = hr * 360 / 2 / Math.PI;\n\tif (h < 0) {\n\t\th += 360;\n\t}\n\n\treturn [l,c,h]\n};\n\nxyz.lchuv = function(arg){\n  return luv.lchuv(xyz.luv(arg));\n};\n","export default {\n\taliceblue: [240, 248, 255],\n\tantiquewhite: [250, 235, 215],\n\taqua: [0, 255, 255],\n\taquamarine: [127, 255, 212],\n\tazure: [240, 255, 255],\n\tbeige: [245, 245, 220],\n\tbisque: [255, 228, 196],\n\tblack: [0, 0, 0],\n\tblanchedalmond: [255, 235, 205],\n\tblue: [0, 0, 255],\n\tblueviolet: [138, 43, 226],\n\tbrown: [165, 42, 42],\n\tburlywood: [222, 184, 135],\n\tcadetblue: [95, 158, 160],\n\tchartreuse: [127, 255, 0],\n\tchocolate: [210, 105, 30],\n\tcoral: [255, 127, 80],\n\tcornflowerblue: [100, 149, 237],\n\tcornsilk: [255, 248, 220],\n\tcrimson: [220, 20, 60],\n\tcyan: [0, 255, 255],\n\tdarkblue: [0, 0, 139],\n\tdarkcyan: [0, 139, 139],\n\tdarkgoldenrod: [184, 134, 11],\n\tdarkgray: [169, 169, 169],\n\tdarkgreen: [0, 100, 0],\n\tdarkgrey: [169, 169, 169],\n\tdarkkhaki: [189, 183, 107],\n\tdarkmagenta: [139, 0, 139],\n\tdarkolivegreen: [85, 107, 47],\n\tdarkorange: [255, 140, 0],\n\tdarkorchid: [153, 50, 204],\n\tdarkred: [139, 0, 0],\n\tdarksalmon: [233, 150, 122],\n\tdarkseagreen: [143, 188, 143],\n\tdarkslateblue: [72, 61, 139],\n\tdarkslategray: [47, 79, 79],\n\tdarkslategrey: [47, 79, 79],\n\tdarkturquoise: [0, 206, 209],\n\tdarkviolet: [148, 0, 211],\n\tdeeppink: [255, 20, 147],\n\tdeepskyblue: [0, 191, 255],\n\tdimgray: [105, 105, 105],\n\tdimgrey: [105, 105, 105],\n\tdodgerblue: [30, 144, 255],\n\tfirebrick: [178, 34, 34],\n\tfloralwhite: [255, 250, 240],\n\tforestgreen: [34, 139, 34],\n\tfuchsia: [255, 0, 255],\n\tgainsboro: [220, 220, 220],\n\tghostwhite: [248, 248, 255],\n\tgold: [255, 215, 0],\n\tgoldenrod: [218, 165, 32],\n\tgray: [128, 128, 128],\n\tgreen: [0, 128, 0],\n\tgreenyellow: [173, 255, 47],\n\tgrey: [128, 128, 128],\n\thoneydew: [240, 255, 240],\n\thotpink: [255, 105, 180],\n\tindianred: [205, 92, 92],\n\tindigo: [75, 0, 130],\n\tivory: [255, 255, 240],\n\tkhaki: [240, 230, 140],\n\tlavender: [230, 230, 250],\n\tlavenderblush: [255, 240, 245],\n\tlawngreen: [124, 252, 0],\n\tlemonchiffon: [255, 250, 205],\n\tlightblue: [173, 216, 230],\n\tlightcoral: [240, 128, 128],\n\tlightcyan: [224, 255, 255],\n\tlightgoldenrodyellow: [250, 250, 210],\n\tlightgray: [211, 211, 211],\n\tlightgreen: [144, 238, 144],\n\tlightgrey: [211, 211, 211],\n\tlightpink: [255, 182, 193],\n\tlightsalmon: [255, 160, 122],\n\tlightseagreen: [32, 178, 170],\n\tlightskyblue: [135, 206, 250],\n\tlightslategray: [119, 136, 153],\n\tlightslategrey: [119, 136, 153],\n\tlightsteelblue: [176, 196, 222],\n\tlightyellow: [255, 255, 224],\n\tlime: [0, 255, 0],\n\tlimegreen: [50, 205, 50],\n\tlinen: [250, 240, 230],\n\tmagenta: [255, 0, 255],\n\tmaroon: [128, 0, 0],\n\tmediumaquamarine: [102, 205, 170],\n\tmediumblue: [0, 0, 205],\n\tmediumorchid: [186, 85, 211],\n\tmediumpurple: [147, 112, 219],\n\tmediumseagreen: [60, 179, 113],\n\tmediumslateblue: [123, 104, 238],\n\tmediumspringgreen: [0, 250, 154],\n\tmediumturquoise: [72, 209, 204],\n\tmediumvioletred: [199, 21, 133],\n\tmidnightblue: [25, 25, 112],\n\tmintcream: [245, 255, 250],\n\tmistyrose: [255, 228, 225],\n\tmoccasin: [255, 228, 181],\n\tnavajowhite: [255, 222, 173],\n\tnavy: [0, 0, 128],\n\toldlace: [253, 245, 230],\n\tolive: [128, 128, 0],\n\tolivedrab: [107, 142, 35],\n\torange: [255, 165, 0],\n\torangered: [255, 69, 0],\n\torchid: [218, 112, 214],\n\tpalegoldenrod: [238, 232, 170],\n\tpalegreen: [152, 251, 152],\n\tpaleturquoise: [175, 238, 238],\n\tpalevioletred: [219, 112, 147],\n\tpapayawhip: [255, 239, 213],\n\tpeachpuff: [255, 218, 185],\n\tperu: [205, 133, 63],\n\tpink: [255, 192, 203],\n\tplum: [221, 160, 221],\n\tpowderblue: [176, 224, 230],\n\tpurple: [128, 0, 128],\n\trebeccapurple: [102, 51, 153],\n\tred: [255, 0, 0],\n\trosybrown: [188, 143, 143],\n\troyalblue: [65, 105, 225],\n\tsaddlebrown: [139, 69, 19],\n\tsalmon: [250, 128, 114],\n\tsandybrown: [244, 164, 96],\n\tseagreen: [46, 139, 87],\n\tseashell: [255, 245, 238],\n\tsienna: [160, 82, 45],\n\tsilver: [192, 192, 192],\n\tskyblue: [135, 206, 235],\n\tslateblue: [106, 90, 205],\n\tslategray: [112, 128, 144],\n\tslategrey: [112, 128, 144],\n\tsnow: [255, 250, 250],\n\tspringgreen: [0, 255, 127],\n\tsteelblue: [70, 130, 180],\n\ttan: [210, 180, 140],\n\tteal: [0, 128, 128],\n\tthistle: [216, 191, 216],\n\ttomato: [255, 99, 71],\n\tturquoise: [64, 224, 208],\n\tviolet: [238, 130, 238],\n\twheat: [245, 222, 179],\n\twhite: [255, 255, 255],\n\twhitesmoke: [245, 245, 245],\n\tyellow: [255, 255, 0],\n\tyellowgreen: [154, 205, 50]\n}\n","/**\n * @module color-parse\n */\nimport names from 'color-name'\n\nexport default parse\n\n/**\n * Base hues\n * http://dev.w3.org/csswg/css-color/#typedef-named-hue\n */\n//FIXME: use external hue detector\nvar baseHues = {\n\tred: 0,\n\torange: 60,\n\tyellow: 120,\n\tgreen: 180,\n\tblue: 240,\n\tpurple: 300\n}\n\n/**\n * Parse color from the string passed\n *\n * @return {Object} A space indicator `space`, an array `values` and `alpha`\n */\nfunction parse(cstr) {\n\tvar m, parts = [], alpha = 1, space\n\n\t//numeric case\n\tif (typeof cstr === 'number') {\n\t\treturn { space: 'rgb', values: [cstr >>> 16, (cstr & 0x00ff00) >>> 8, cstr & 0x0000ff], alpha: 1 }\n\t}\n\tif (typeof cstr === 'number') return { space: 'rgb', values: [cstr >>> 16, (cstr & 0x00ff00) >>> 8, cstr & 0x0000ff], alpha: 1 }\n\n\tcstr = String(cstr).toLowerCase();\n\n\t//keyword\n\tif (names[cstr]) {\n\t\tparts = names[cstr].slice()\n\t\tspace = 'rgb'\n\t}\n\n\t//reserved words\n\telse if (cstr === 'transparent') {\n\t\talpha = 0\n\t\tspace = 'rgb'\n\t\tparts = [0, 0, 0]\n\t}\n\n\t//hex\n\telse if (cstr[0] === '#') {\n\t\tvar base = cstr.slice(1)\n\t\tvar size = base.length\n\t\tvar isShort = size <= 4\n\t\talpha = 1\n\n\t\tif (isShort) {\n\t\t\tparts = [\n\t\t\t\tparseInt(base[0] + base[0], 16),\n\t\t\t\tparseInt(base[1] + base[1], 16),\n\t\t\t\tparseInt(base[2] + base[2], 16)\n\t\t\t]\n\t\t\tif (size === 4) {\n\t\t\t\talpha = parseInt(base[3] + base[3], 16) / 255\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tparts = [\n\t\t\t\tparseInt(base[0] + base[1], 16),\n\t\t\t\tparseInt(base[2] + base[3], 16),\n\t\t\t\tparseInt(base[4] + base[5], 16)\n\t\t\t]\n\t\t\tif (size === 8) {\n\t\t\t\talpha = parseInt(base[6] + base[7], 16) / 255\n\t\t\t}\n\t\t}\n\n\t\tif (!parts[0]) parts[0] = 0\n\t\tif (!parts[1]) parts[1] = 0\n\t\tif (!parts[2]) parts[2] = 0\n\n\t\tspace = 'rgb'\n\t}\n\n\t// color space\n\telse if (m = /^((?:rgba?|hs[lvb]a?|hwba?|cmyk?|xy[zy]|gray|lab|lchu?v?|[ly]uv|lms|oklch|oklab|color))\\s*\\(([^\\)]*)\\)/.exec(cstr)) {\n\t\tvar name = m[1]\n\t\tspace = name.replace(/a$/, '')\n\t\tvar dims = space === 'cmyk' ? 4 : space === 'gray' ? 1 : 3\n\t\tparts = m[2].trim().split(/\\s*[,\\/]\\s*|\\s+/)\n\n\t\t// color(srgb-linear x x x) -> srgb-linear(x x x)\n\t\tif (space === 'color') space = parts.shift()\n\n\t\tparts = parts.map(function (x, i) {\n\t\t\t//<percentage>\n\t\t\tif (x[x.length - 1] === '%') {\n\t\t\t\tx = parseFloat(x) / 100\n\t\t\t\t// alpha -> 0..1\n\t\t\t\tif (i === 3) return x\n\t\t\t\t// rgb -> 0..255\n\t\t\t\tif (space === 'rgb') return x * 255\n\t\t\t\t// hsl, hwb H -> 0..100\n\t\t\t\tif (space[0] === 'h') return x * 100\n\t\t\t\t// lch, lab L -> 0..100\n\t\t\t\tif (space[0] === 'l' && !i) return x * 100\n\t\t\t\t// lab A B -> -125..125\n\t\t\t\tif (space === 'lab') return x * 125\n\t\t\t\t// lch C -> 0..150, H -> 0..360\n\t\t\t\tif (space === 'lch') return i < 2 ? x * 150 : x * 360\n\t\t\t\t// oklch/oklab L -> 0..1\n\t\t\t\tif (space[0] === 'o' && !i) return x\n\t\t\t\t// oklab A B -> -0.4..0.4\n\t\t\t\tif (space === 'oklab') return x * 0.4\n\t\t\t\t// oklch C -> 0..0.4, H -> 0..360\n\t\t\t\tif (space === 'oklch') return i < 2 ? x * 0.4 : x * 360\n\t\t\t\t// color(xxx) -> 0..1\n\t\t\t\treturn x\n\t\t\t}\n\n\t\t\t//hue\n\t\t\tif (space[i] === 'h' || (i === 2 && space[space.length - 1] === 'h')) {\n\t\t\t\t//<base-hue>\n\t\t\t\tif (baseHues[x] !== undefined) return baseHues[x]\n\t\t\t\t//<deg>\n\t\t\t\tif (x.endsWith('deg')) return parseFloat(x)\n\t\t\t\t//<turn>\n\t\t\t\tif (x.endsWith('turn')) return parseFloat(x) * 360\n\t\t\t\tif (x.endsWith('grad')) return parseFloat(x) * 360 / 400\n\t\t\t\tif (x.endsWith('rad')) return parseFloat(x) * 180 / Math.PI\n\t\t\t}\n\t\t\tif (x === 'none') return 0\n\t\t\treturn parseFloat(x)\n\t\t});\n\n\t\talpha = parts.length > dims ? parts.pop() : 1\n\t}\n\n\t//named channels case\n\telse if (/[0-9](?:\\s|\\/|,)/.test(cstr)) {\n\t\tparts = cstr.match(/([0-9]+)/g).map(function (value) {\n\t\t\treturn parseFloat(value)\n\t\t})\n\n\t\tspace = cstr.match(/([a-z])/ig)?.join('')?.toLowerCase() || 'rgb'\n\t}\n\n\treturn {\n\t\tspace,\n\t\tvalues: parts,\n\t\talpha\n\t}\n}\n","/**\n * @module color-space/hsl\n */\nimport rgb from './rgb.js';\n\nexport default {\n\tname: 'hsl',\n\tmin: [0,0,0],\n\tmax: [360,100,100],\n\tchannel: ['hue', 'saturation', 'lightness'],\n\talias: ['HSL'],\n\n\trgb: function(hsl) {\n\t\tvar h = hsl[0]/360, s = hsl[1]/100, l = hsl[2]/100, t1, t2, t3, rgb, val, i=0;\n\n\t\tif (s === 0) return val = l * 255, [val, val, val];\n\n\t\tt2 = l < 0.5 ? l * (1 + s) : l + s - l * s;\n\t\tt1 = 2 * l - t2;\n\n\t\trgb = [0, 0, 0];\n\t\tfor (;i<3;) {\n\t\t\tt3 = h + 1 / 3 * - (i - 1);\n\t\t\tt3 < 0 ? t3++ : t3 > 1 && t3--;\n\t\t\tval = 6 * t3 < 1 ? t1 + (t2 - t1) * 6 * t3 :\n\t\t\t2 * t3 < 1 ? t2 :\n\t\t\t3 * t3 < 2 ?  t1 + (t2 - t1) * (2 / 3 - t3) * 6 :\n\t\t\tt1;\n\t\t\trgb[i++] = val * 255;\n\t\t}\n\n\t\treturn rgb;\n\t}\n};\n\n\n//extend rgb\nrgb.hsl = function(rgb) {\n\tvar r = rgb[0]/255,\n\t\t\tg = rgb[1]/255,\n\t\t\tb = rgb[2]/255,\n\t\t\tmin = Math.min(r, g, b),\n\t\t\tmax = Math.max(r, g, b),\n\t\t\tdelta = max - min,\n\t\t\th, s, l;\n\n\tif (max === min) {\n\t\th = 0;\n\t}\n\telse if (r === max) {\n\t\th = (g - b) / delta;\n\t}\n\telse if (g === max) {\n\t\th = 2 + (b - r) / delta;\n\t}\n\telse if (b === max) {\n\t\th = 4 + (r - g)/ delta;\n\t}\n\n\th = Math.min(h * 60, 360);\n\n\tif (h < 0) {\n\t\th += 360;\n\t}\n\n\tl = (min + max) / 2;\n\n\tif (max === min) {\n\t\ts = 0;\n\t}\n\telse if (l <= 0.5) {\n\t\ts = delta / (max + min);\n\t}\n\telse {\n\t\ts = delta / (2 - max - min);\n\t}\n\n\treturn [h, s * 100, l * 100];\n};\n","/** @module  color-rgba */\nimport parse from 'color-parse'\nimport rgb from 'color-space/rgb.js'\nimport hsl from 'color-space/hsl.js'\n\nexport default function rgba(color) {\n\t// template literals\n\tif (Array.isArray(color) && color.raw) color = String.raw(...arguments)\n\tif (color instanceof Number) color = +color\n\n\tvar values, i, l\n\n\t//attempt to parse non-array arguments\n\tvar parsed = parse(color)\n\n\tif (!parsed.space) return []\n\n\tconst min = parsed.space[0] === 'h' ? hsl.min : rgb.min\n\tconst max = parsed.space[0] === 'h' ? hsl.max : rgb.max\n\n\tvalues = Array(3)\n\tvalues[0] = Math.min(Math.max(parsed.values[0], min[0]), max[0])\n\tvalues[1] = Math.min(Math.max(parsed.values[1], min[1]), max[1])\n\tvalues[2] = Math.min(Math.max(parsed.values[2], min[2]), max[2])\n\n\tif (parsed.space[0] === 'h') {\n\t\tvalues = hsl.rgb(values)\n\t}\n\n\tvalues.push(Math.min(Math.max(parsed.alpha, 0), 1))\n\n\treturn values\n}\n","/**\n * @module ol/color\n */\nimport lchuv from 'color-space/lchuv.js';\nimport parseRgba from 'color-rgba';\nimport rgb from 'color-space/rgb.js';\nimport xyz from 'color-space/xyz.js';\nimport {clamp} from './math.js';\n\n/**\n * A color represented as a short array [red, green, blue, alpha].\n * red, green, and blue should be integers in the range 0..255 inclusive.\n * alpha should be a float in the range 0..1 inclusive. If no alpha value is\n * given then `1` will be used.\n * @typedef {Array<number>} Color\n * @api\n */\n\n/**\n * Return the color as an rgba string.\n * @param {Color|string} color Color.\n * @return {string} Rgba string.\n * @api\n */\nexport function asString(color) {\n  if (typeof color === 'string') {\n    return color;\n  }\n  return toString(color);\n}\n\n/**\n * @type {number}\n */\nconst MAX_CACHE_SIZE = 1024;\n\n/**\n * We maintain a small cache of parsed strings.  Whenever the cache grows too large,\n * we delete an arbitrary set of the entries.\n *\n * @type {Object<string, Color>}\n */\nconst cache = {};\n\n/**\n * @type {number}\n */\nlet cacheSize = 0;\n\n/**\n * @param {Color} color A color that may or may not have an alpha channel.\n * @return {Color} The input color with an alpha channel.  If the input color has\n * an alpha channel, the input color will be returned unchanged.  Otherwise, a new\n * array will be returned with the input color and an alpha channel of 1.\n */\nexport function withAlpha(color) {\n  if (color.length === 4) {\n    return color;\n  }\n  const output = color.slice();\n  output[3] = 1;\n  return output;\n}\n\n/**\n * @param {Color} color RGBA color.\n * @return {Color} LCHuv color with alpha.\n */\nexport function rgbaToLcha(color) {\n  const output = xyz.lchuv(rgb.xyz(color));\n  output[3] = color[3];\n  return output;\n}\n\n/**\n * @param {Color} color LCHuv color with alpha.\n * @return {Color} RGBA color.\n */\nexport function lchaToRgba(color) {\n  const output = xyz.rgb(lchuv.xyz(color));\n  output[3] = color[3];\n  return output;\n}\n\n/**\n * @param {string} s String.\n * @return {Color} Color.\n */\nexport function fromString(s) {\n  if (cache.hasOwnProperty(s)) {\n    return cache[s];\n  }\n  if (cacheSize >= MAX_CACHE_SIZE) {\n    let i = 0;\n    for (const key in cache) {\n      if ((i++ & 3) === 0) {\n        delete cache[key];\n        --cacheSize;\n      }\n    }\n  }\n\n  const color = parseRgba(s);\n  if (color.length !== 4) {\n    throw new Error('Failed to parse \"' + s + '\" as color');\n  }\n  for (const c of color) {\n    if (isNaN(c)) {\n      throw new Error('Failed to parse \"' + s + '\" as color');\n    }\n  }\n  normalize(color);\n  cache[s] = color;\n  ++cacheSize;\n  return color;\n}\n\n/**\n * Return the color as an array. This function maintains a cache of calculated\n * arrays which means the result should not be modified.\n * @param {Color|string} color Color.\n * @return {Color} Color.\n * @api\n */\nexport function asArray(color) {\n  if (Array.isArray(color)) {\n    return color;\n  }\n  return fromString(color);\n}\n\n/**\n * Exported for the tests.\n * @param {Color} color Color.\n * @return {Color} Clamped color.\n */\nexport function normalize(color) {\n  color[0] = clamp((color[0] + 0.5) | 0, 0, 255);\n  color[1] = clamp((color[1] + 0.5) | 0, 0, 255);\n  color[2] = clamp((color[2] + 0.5) | 0, 0, 255);\n  color[3] = clamp(color[3], 0, 1);\n  return color;\n}\n\n/**\n * @param {Color} color Color.\n * @return {string} String.\n */\nexport function toString(color) {\n  let r = color[0];\n  if (r != (r | 0)) {\n    r = (r + 0.5) | 0;\n  }\n  let g = color[1];\n  if (g != (g | 0)) {\n    g = (g + 0.5) | 0;\n  }\n  let b = color[2];\n  if (b != (b | 0)) {\n    b = (b + 0.5) | 0;\n  }\n  const a = color[3] === undefined ? 1 : Math.round(color[3] * 1000) / 1000;\n  return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\n}\n\n/**\n * @param {string} s String.\n * @return {boolean} Whether the string is actually a valid color\n */\nexport function isStringColor(s) {\n  try {\n    fromString(s);\n    return true;\n  } catch (_) {\n    return false;\n  }\n}\n","/**\n * @module ol/has\n */\n\nconst ua =\n  typeof navigator !== 'undefined' && typeof navigator.userAgent !== 'undefined'\n    ? navigator.userAgent.toLowerCase()\n    : '';\n\n/**\n * User agent string says we are dealing with Firefox as browser.\n * @type {boolean}\n */\nexport const FIREFOX = ua.includes('firefox');\n\n/**\n * User agent string says we are dealing with Safari as browser.\n * @type {boolean}\n */\nexport const SAFARI = ua.includes('safari') && !ua.includes('chrom');\n\n/**\n * https://bugs.webkit.org/show_bug.cgi?id=237906\n * @type {boolean}\n */\nexport const SAFARI_BUG_237906 =\n  SAFARI &&\n  (ua.includes('version/15.4') ||\n    /cpu (os|iphone os) 15_4 like mac os x/.test(ua));\n\n/**\n * User agent string says we are dealing with a WebKit engine.\n * @type {boolean}\n */\nexport const WEBKIT = ua.includes('webkit') && !ua.includes('edge');\n\n/**\n * User agent string says we are dealing with a Mac as platform.\n * @type {boolean}\n */\nexport const MAC = ua.includes('macintosh');\n\n/**\n * The ratio between physical pixels and device-independent pixels\n * (dips) on the device (`window.devicePixelRatio`).\n * @const\n * @type {number}\n * @api\n */\nexport const DEVICE_PIXEL_RATIO =\n  typeof devicePixelRatio !== 'undefined' ? devicePixelRatio : 1;\n\n/**\n * The execution context is a worker with OffscreenCanvas available.\n * @const\n * @type {boolean}\n */\nexport const WORKER_OFFSCREEN_CANVAS =\n  typeof WorkerGlobalScope !== 'undefined' &&\n  typeof OffscreenCanvas !== 'undefined' &&\n  self instanceof WorkerGlobalScope; //eslint-disable-line\n\n/**\n * Image.prototype.decode() is supported.\n * @type {boolean}\n */\nexport const IMAGE_DECODE =\n  typeof Image !== 'undefined' && Image.prototype.decode;\n\n/**\n * createImageBitmap() is supported.\n * @type {boolean}\n */\nexport const CREATE_IMAGE_BITMAP = typeof createImageBitmap === 'function';\n\n/**\n * @type {boolean}\n */\nexport const PASSIVE_EVENT_LISTENERS = (function () {\n  let passive = false;\n  try {\n    const options = Object.defineProperty({}, 'passive', {\n      get: function () {\n        passive = true;\n      },\n    });\n\n    // @ts-ignore Ignore invalid event type '_'\n    window.addEventListener('_', null, options);\n    // @ts-ignore Ignore invalid event type '_'\n    window.removeEventListener('_', null, options);\n  } catch (error) {\n    // passive not supported\n  }\n  return passive;\n})();\n","import {WORKER_OFFSCREEN_CANVAS} from './has.js';\n\n/**\n * @module ol/dom\n */\n\n//FIXME Move this function to the canvas module\n/**\n * Create an html canvas element and returns its 2d context.\n * @param {number} [width] Canvas width.\n * @param {number} [height] Canvas height.\n * @param {Array<HTMLCanvasElement>} [canvasPool] Canvas pool to take existing canvas from.\n * @param {CanvasRenderingContext2DSettings} [settings] CanvasRenderingContext2DSettings\n * @return {CanvasRenderingContext2D} The context.\n */\nexport function createCanvasContext2D(width, height, canvasPool, settings) {\n  /** @type {HTMLCanvasElement|OffscreenCanvas} */\n  let canvas;\n  if (canvasPool && canvasPool.length) {\n    canvas = /** @type {HTMLCanvasElement} */ (canvasPool.shift());\n  } else if (WORKER_OFFSCREEN_CANVAS) {\n    canvas = new OffscreenCanvas(width || 300, height || 300);\n  } else {\n    canvas = document.createElement('canvas');\n  }\n  if (width) {\n    canvas.width = width;\n  }\n  if (height) {\n    canvas.height = height;\n  }\n  //FIXME Allow OffscreenCanvasRenderingContext2D as return type\n  return /** @type {CanvasRenderingContext2D} */ (\n    canvas.getContext('2d', settings)\n  );\n}\n\n/** @type {CanvasRenderingContext2D} */\nlet sharedCanvasContext;\n\n/**\n * @return {CanvasRenderingContext2D} Shared canvas context.\n */\nexport function getSharedCanvasContext2D() {\n  if (!sharedCanvasContext) {\n    sharedCanvasContext = createCanvasContext2D(1, 1);\n  }\n  return sharedCanvasContext;\n}\n\n/**\n * Releases canvas memory to avoid exceeding memory limits in Safari.\n * See https://pqina.nl/blog/total-canvas-memory-use-exceeds-the-maximum-limit/\n * @param {CanvasRenderingContext2D} context Context.\n */\nexport function releaseCanvas(context) {\n  const canvas = context.canvas;\n  canvas.width = 1;\n  canvas.height = 1;\n  context.clearRect(0, 0, 1, 1);\n}\n\n/**\n * Get the current computed width for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerWidth(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The width.\n */\nexport function outerWidth(element) {\n  let width = element.offsetWidth;\n  const style = getComputedStyle(element);\n  width += parseInt(style.marginLeft, 10) + parseInt(style.marginRight, 10);\n\n  return width;\n}\n\n/**\n * Get the current computed height for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerHeight(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The height.\n */\nexport function outerHeight(element) {\n  let height = element.offsetHeight;\n  const style = getComputedStyle(element);\n  height += parseInt(style.marginTop, 10) + parseInt(style.marginBottom, 10);\n\n  return height;\n}\n\n/**\n * @param {Node} newNode Node to replace old node\n * @param {Node} oldNode The node to be replaced\n */\nexport function replaceNode(newNode, oldNode) {\n  const parent = oldNode.parentNode;\n  if (parent) {\n    parent.replaceChild(newNode, oldNode);\n  }\n}\n\n/**\n * @param {Node} node The node to remove.\n * @return {Node|null} The node that was removed or null.\n */\nexport function removeNode(node) {\n  return node && node.parentNode ? node.parentNode.removeChild(node) : null;\n}\n\n/**\n * @param {Node} node The node to remove the children from.\n */\nexport function removeChildren(node) {\n  while (node.lastChild) {\n    node.removeChild(node.lastChild);\n  }\n}\n\n/**\n * Transform the children of a parent node so they match the\n * provided list of children.  This function aims to efficiently\n * remove, add, and reorder child nodes while maintaining a simple\n * implementation (it is not guaranteed to minimize DOM operations).\n * @param {Node} node The parent node whose children need reworking.\n * @param {Array<Node>} children The desired children.\n */\nexport function replaceChildren(node, children) {\n  const oldChildren = node.childNodes;\n\n  for (let i = 0; true; ++i) {\n    const oldChild = oldChildren[i];\n    const newChild = children[i];\n\n    // check if our work is done\n    if (!oldChild && !newChild) {\n      break;\n    }\n\n    // check if children match\n    if (oldChild === newChild) {\n      continue;\n    }\n\n    // check if a new child needs to be added\n    if (!oldChild) {\n      node.appendChild(newChild);\n      continue;\n    }\n\n    // check if an old child needs to be removed\n    if (!newChild) {\n      node.removeChild(oldChild);\n      --i;\n      continue;\n    }\n\n    // reorder\n    node.insertBefore(newChild, oldChild);\n  }\n}\n","/**\n * @module ol/Image\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport ImageState from './ImageState.js';\nimport {CREATE_IMAGE_BITMAP, IMAGE_DECODE} from './has.js';\nimport {listenOnce, unlistenByKey} from './events.js';\nimport {toPromise} from './functions.js';\n\n/**\n * A function that takes an {@link module:ol/Image~ImageWrapper} for the image and a\n * `{string}` for the src as arguments. It is supposed to make it so the\n * underlying image {@link module:ol/Image~ImageWrapper#getImage} is assigned the\n * content specified by the src. If not specified, the default is\n *\n *     function(image, src) {\n *       image.getImage().src = src;\n *     }\n *\n * Providing a custom `imageLoadFunction` can be useful to load images with\n * post requests or - in general - through XHR requests, where the src of the\n * image element would be set to a data URI when the content is loaded.\n *\n * @typedef {function(import(\"./Image.js\").default, string): void} LoadFunction\n * @api\n */\n\n/**\n * @typedef {Object} ImageObject\n * @property {import(\"./extent.js\").Extent} [extent] Extent, if different from the requested one.\n * @property {import(\"./resolution.js\").ResolutionLike} [resolution] Resolution, if different from the requested one.\n * When x and y resolution are different, use the array type (`[xResolution, yResolution]`).\n * @property {number} [pixelRatio] Pixel ratio, if different from the requested one.\n * @property {import('./DataTile.js').ImageLike} image Image.\n */\n\n/**\n * Loader function used for image sources. Receives extent, resolution and pixel ratio as arguments.\n * For images that cover any extent and resolution (static images), the loader function should not accept\n * any arguments. The function returns an {@link import(\"./DataTile.js\").ImageLike image}, an\n * {@link import(\"./Image.js\").ImageObject image object}, or a promise for the same.\n * For loaders that generate images, the promise should not resolve until the image is loaded.\n * If the returned image does not match the extent, resolution or pixel ratio passed to the loader,\n * it has to return an {@link import(\"./Image.js\").ImageObject image object} with the `image` and the\n * correct `extent`, `resolution` and `pixelRatio`.\n *\n * @typedef {function(import(\"./extent.js\").Extent, number, number, (function(HTMLImageElement, string): void)=): import(\"./DataTile.js\").ImageLike|ImageObject|Promise<import(\"./DataTile.js\").ImageLike|ImageObject>} Loader\n * @api\n */\n\n/**\n * Loader function used for image sources. Receives extent, resolution and pixel ratio as arguments.\n * The function returns a promise for an  {@link import(\"./Image.js\").ImageObject image object}.\n *\n * @typedef {function(import(\"./extent.js\").Extent, number, number, (function(HTMLImageElement, string): void)=): import(\"./DataTile.js\").ImageLike|ImageObject|Promise<import(\"./DataTile.js\").ImageLike|ImageObject>} ImageObjectPromiseLoader\n */\n\nclass ImageWrapper extends EventTarget {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number|Array<number>|undefined} resolution Resolution. If provided as array, x and y\n   * resolution will be assumed.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"./ImageState.js\").default|import(\"./Image.js\").Loader} stateOrLoader State.\n   */\n  constructor(extent, resolution, pixelRatio, stateOrLoader) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.extent = extent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number|Array<number>|undefined}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @protected\n     * @type {import(\"./ImageState.js\").default}\n     */\n    this.state =\n      typeof stateOrLoader === 'function' ? ImageState.IDLE : stateOrLoader;\n\n    /**\n     * @private\n     * @type {import('./DataTile.js').ImageLike|null}\n     */\n    this.image_ = null;\n\n    /**\n     * @protected\n     * @type {import(\"./Image.js\").Loader}\n     */\n    this.loader = typeof stateOrLoader === 'function' ? stateOrLoader : null;\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  getExtent() {\n    return this.extent;\n  }\n\n  /**\n   * @return {import('./DataTile.js').ImageLike} Image.\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * @return {number} PixelRatio.\n   */\n  getPixelRatio() {\n    return this.pixelRatio_;\n  }\n\n  /**\n   * @return {number|Array<number>} Resolution.\n   */\n  getResolution() {\n    return /** @type {number} */ (this.resolution);\n  }\n\n  /**\n   * @return {import(\"./ImageState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == ImageState.IDLE) {\n      if (this.loader) {\n        this.state = ImageState.LOADING;\n        this.changed();\n        const resolution = this.getResolution();\n        const requestResolution = Array.isArray(resolution)\n          ? resolution[0]\n          : resolution;\n        toPromise(() =>\n          this.loader(\n            this.getExtent(),\n            requestResolution,\n            this.getPixelRatio(),\n          ),\n        )\n          .then((image) => {\n            if ('image' in image) {\n              this.image_ = image.image;\n            }\n            if ('extent' in image) {\n              this.extent = image.extent;\n            }\n            if ('resolution' in image) {\n              this.resolution = image.resolution;\n            }\n            if ('pixelRatio' in image) {\n              this.pixelRatio_ = image.pixelRatio;\n            }\n            if (\n              image instanceof HTMLImageElement ||\n              image instanceof ImageBitmap ||\n              image instanceof HTMLCanvasElement ||\n              image instanceof HTMLVideoElement\n            ) {\n              this.image_ = image;\n            }\n            this.state = ImageState.LOADED;\n          })\n          .catch((error) => {\n            this.state = ImageState.ERROR;\n            console.error(error); // eslint-disable-line no-console\n          })\n          .finally(() => this.changed());\n      }\n    }\n  }\n\n  /**\n   * @param {import('./DataTile.js').ImageLike} image The image.\n   */\n  setImage(image) {\n    this.image_ = image;\n  }\n\n  /**\n   * @param {number|Array<number>} resolution Resolution.\n   */\n  setResolution(resolution) {\n    this.resolution = resolution;\n  }\n}\n\n/**\n * @param {import('./DataTile.js').ImageLike} image Image element.\n * @param {function():any} loadHandler Load callback function.\n * @param {function():any} errorHandler Error callback function.\n * @return {function():void} Callback to stop listening.\n */\nexport function listenImage(image, loadHandler, errorHandler) {\n  const img = /** @type {HTMLImageElement} */ (image);\n  let listening = true;\n  let decoding = false;\n  let loaded = false;\n\n  const listenerKeys = [\n    listenOnce(img, EventType.LOAD, function () {\n      loaded = true;\n      if (!decoding) {\n        loadHandler();\n      }\n    }),\n  ];\n\n  if (img.src && IMAGE_DECODE) {\n    decoding = true;\n    img\n      .decode()\n      .then(function () {\n        if (listening) {\n          loadHandler();\n        }\n      })\n      .catch(function (error) {\n        if (listening) {\n          if (loaded) {\n            loadHandler();\n          } else {\n            errorHandler();\n          }\n        }\n      });\n  } else {\n    listenerKeys.push(listenOnce(img, EventType.ERROR, errorHandler));\n  }\n\n  return function unlisten() {\n    listening = false;\n    listenerKeys.forEach(unlistenByKey);\n  };\n}\n\n/**\n * Loads an image.\n * @param {HTMLImageElement} image Image, not yet loaded.\n * @param {string} [src] `src` attribute of the image. Optional, not required if already present.\n * @return {Promise<HTMLImageElement>} Promise resolving to an `HTMLImageElement`.\n * @api\n */\nexport function load(image, src) {\n  return new Promise((resolve, reject) => {\n    function handleLoad() {\n      unlisten();\n      resolve(image);\n    }\n    function handleError() {\n      unlisten();\n      reject(new Error('Image load error'));\n    }\n    function unlisten() {\n      image.removeEventListener('load', handleLoad);\n      image.removeEventListener('error', handleError);\n    }\n    image.addEventListener('load', handleLoad);\n    image.addEventListener('error', handleError);\n    if (src) {\n      image.src = src;\n    }\n  });\n}\n\n/**\n * @param {HTMLImageElement} image Image, not yet loaded.\n * @param {string} [src] `src` attribute of the image. Optional, not required if already present.\n * @return {Promise<HTMLImageElement>} Promise resolving to an `HTMLImageElement`.\n */\nexport function decodeFallback(image, src) {\n  if (src) {\n    image.src = src;\n  }\n  return image.src && IMAGE_DECODE\n    ? new Promise((resolve, reject) =>\n        image\n          .decode()\n          .then(() => resolve(image))\n          .catch((e) =>\n            image.complete && image.width ? resolve(image) : reject(e),\n          ),\n      )\n    : load(image);\n}\n\n/**\n * Loads an image and decodes it to an `ImageBitmap` if `createImageBitmap()` is supported. Returns\n * the loaded image otherwise.\n * @param {HTMLImageElement} image Image, not yet loaded.\n * @param {string} [src] `src` attribute of the image. Optional, not required if already present.\n * @return {Promise<ImageBitmap|HTMLImageElement>} Promise resolving to an `ImageBitmap` or an\n * `HTMLImageElement` if `createImageBitmap()` is not supported.\n * @api\n */\nexport function decode(image, src) {\n  if (src) {\n    image.src = src;\n  }\n  return image.src && IMAGE_DECODE && CREATE_IMAGE_BITMAP\n    ? image\n        .decode()\n        .then(() => createImageBitmap(image))\n        .catch((e) => {\n          if (image.complete && image.width) {\n            return image;\n          }\n          throw e;\n        })\n    : decodeFallback(image);\n}\n\nexport default ImageWrapper;\n","/**\n * @module ol/style/IconImageCache\n */\nimport ImageState from '../ImageState.js';\nimport {asArray} from '../color.js';\nimport {getSharedCanvasContext2D} from '../dom.js';\n\n/**\n * @classdesc\n * Singleton class. Available through {@link module:ol/style/IconImageCache.shared}.\n */\nclass IconImageCache {\n  constructor() {\n    /**\n     * @type {!Object<string, import(\"./IconImage.js\").default>}\n     * @private\n     */\n    this.cache_ = {};\n\n    /**\n     * @type {!Object<string, CanvasPattern>}\n     * @private\n     */\n    this.patternCache_ = {};\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.cacheSize_ = 0;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxCacheSize_ = 32;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.cache_ = {};\n    this.patternCache_ = {};\n    this.cacheSize_ = 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.cacheSize_ > this.maxCacheSize_;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  expire() {\n    if (this.canExpireCache()) {\n      let i = 0;\n      for (const key in this.cache_) {\n        const iconImage = this.cache_[key];\n        if ((i++ & 3) === 0 && !iconImage.hasListener()) {\n          delete this.cache_[key];\n          delete this.patternCache_[key];\n          --this.cacheSize_;\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color|string|null} color Color.\n   * @return {import(\"./IconImage.js\").default} Icon image.\n   */\n  get(src, crossOrigin, color) {\n    const key = getCacheKey(src, crossOrigin, color);\n    return key in this.cache_ ? this.cache_[key] : null;\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color|string|null} color Color.\n   * @return {CanvasPattern} Icon image.\n   */\n  getPattern(src, crossOrigin, color) {\n    const key = getCacheKey(src, crossOrigin, color);\n    return key in this.patternCache_ ? this.patternCache_[key] : null;\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color|string|null} color Color.\n   * @param {import(\"./IconImage.js\").default|null} iconImage Icon image.\n   * @param {boolean} [pattern] Also cache a `'repeat'` pattern with this `iconImage`.\n   */\n  set(src, crossOrigin, color, iconImage, pattern) {\n    const key = getCacheKey(src, crossOrigin, color);\n    const update = key in this.cache_;\n    this.cache_[key] = iconImage;\n    if (pattern) {\n      if (iconImage.getImageState() === ImageState.IDLE) {\n        iconImage.load();\n      }\n      if (iconImage.getImageState() === ImageState.LOADING) {\n        iconImage.ready().then(() => {\n          this.patternCache_[key] = getSharedCanvasContext2D().createPattern(\n            iconImage.getImage(1),\n            'repeat',\n          );\n        });\n      } else {\n        this.patternCache_[key] = getSharedCanvasContext2D().createPattern(\n          iconImage.getImage(1),\n          'repeat',\n        );\n      }\n    }\n    if (!update) {\n      ++this.cacheSize_;\n    }\n  }\n\n  /**\n   * Set the cache size of the icon cache. Default is `32`. Change this value when\n   * your map uses more than 32 different icon images and you are not caching icon\n   * styles on the application level.\n   * @param {number} maxCacheSize Cache max size.\n   * @api\n   */\n  setSize(maxCacheSize) {\n    this.maxCacheSize_ = maxCacheSize;\n    this.expire();\n  }\n}\n\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../color.js\").Color|string|null} color Color.\n * @return {string} Cache key.\n */\nexport function getCacheKey(src, crossOrigin, color) {\n  const colorString = color ? asArray(color) : 'null';\n  return crossOrigin + ':' + src + ':' + colorString;\n}\n\nexport default IconImageCache;\n\n/**\n * The {@link module:ol/style/IconImageCache~IconImageCache} for\n * {@link module:ol/style/Icon~Icon} images.\n * @api\n */\nexport const shared = new IconImageCache();\n","/**\n * @module ol/style/IconImage\n */\n\nimport EventTarget from '../events/Target.js';\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport {asString} from '../color.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {decodeFallback} from '../Image.js';\nimport {shared as iconImageCache} from './IconImageCache.js';\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet taintedTestContext = null;\n\nclass IconImage extends EventTarget {\n  /**\n   * @param {HTMLImageElement|HTMLCanvasElement|ImageBitmap|null} image Image.\n   * @param {string|undefined} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../ImageState.js\").default|undefined} imageState Image state.\n   * @param {import(\"../color.js\").Color|string|null} color Color.\n   */\n  constructor(image, src, crossOrigin, imageState, color) {\n    super();\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement|ImageBitmap}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement|ImageBitmap|null}\n     */\n    this.image_ = image;\n\n    /**\n     * @private\n     * @type {string|null}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvas_ = {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|string|null}\n     */\n    this.color_ = color;\n\n    /**\n     * @private\n     * @type {import(\"../ImageState.js\").default}\n     */\n    this.imageState_ = imageState === undefined ? ImageState.IDLE : imageState;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size|null}\n     */\n    this.size_ =\n      image && image.width && image.height ? [image.width, image.height] : null;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     */\n    this.tainted_;\n\n    /**\n     * @private\n     * @type {Promise<void>|null}\n     */\n    this.ready_ = null;\n  }\n\n  /**\n   * @private\n   */\n  initializeImage_() {\n    this.image_ = new Image();\n    if (this.crossOrigin_ !== null) {\n      this.image_.crossOrigin = this.crossOrigin_;\n    }\n  }\n\n  /**\n   * @private\n   * @return {boolean} The image canvas is tainted.\n   */\n  isTainted_() {\n    if (this.tainted_ === undefined && this.imageState_ === ImageState.LOADED) {\n      if (!taintedTestContext) {\n        taintedTestContext = createCanvasContext2D(1, 1, undefined, {\n          willReadFrequently: true,\n        });\n      }\n      taintedTestContext.drawImage(this.image_, 0, 0);\n      try {\n        taintedTestContext.getImageData(0, 0, 1, 1);\n        this.tainted_ = false;\n      } catch (e) {\n        taintedTestContext = null;\n        this.tainted_ = true;\n      }\n    }\n    return this.tainted_ === true;\n  }\n\n  /**\n   * @private\n   */\n  dispatchChangeEvent_() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @private\n   */\n  handleImageError_() {\n    this.imageState_ = ImageState.ERROR;\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @private\n   */\n  handleImageLoad_() {\n    this.imageState_ = ImageState.LOADED;\n    this.size_ = [this.image_.width, this.image_.height];\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image or Canvas element or image bitmap.\n   */\n  getImage(pixelRatio) {\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? this.canvas_[pixelRatio] : this.image_;\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Image or Canvas element.\n   */\n  getPixelRatio(pixelRatio) {\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? pixelRatio : 1;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.imageState_;\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image element.\n   */\n  getHitDetectionImage() {\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n    if (!this.hitDetectionImage_) {\n      if (this.isTainted_()) {\n        const width = this.size_[0];\n        const height = this.size_[1];\n        const context = createCanvasContext2D(width, height);\n        context.fillRect(0, 0, width, height);\n        this.hitDetectionImage_ = context.canvas;\n      } else {\n        this.hitDetectionImage_ = this.image_;\n      }\n    }\n    return this.hitDetectionImage_;\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {string|undefined} Image src.\n   */\n  getSrc() {\n    return this.src_;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.imageState_ !== ImageState.IDLE) {\n      return;\n    }\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n\n    this.imageState_ = ImageState.LOADING;\n    try {\n      if (this.src_ !== undefined) {\n        /** @type {HTMLImageElement} */ (this.image_).src = this.src_;\n      }\n    } catch (e) {\n      this.handleImageError_();\n    }\n    if (this.image_ instanceof HTMLImageElement) {\n      decodeFallback(this.image_, this.src_)\n        .then((image) => {\n          this.image_ = image;\n          this.handleImageLoad_();\n        })\n        .catch(this.handleImageError_.bind(this));\n    }\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @private\n   */\n  replaceColor_(pixelRatio) {\n    if (\n      !this.color_ ||\n      this.canvas_[pixelRatio] ||\n      this.imageState_ !== ImageState.LOADED\n    ) {\n      return;\n    }\n\n    const image = this.image_;\n    const canvas = document.createElement('canvas');\n    canvas.width = Math.ceil(image.width * pixelRatio);\n    canvas.height = Math.ceil(image.height * pixelRatio);\n\n    const ctx = canvas.getContext('2d');\n    ctx.scale(pixelRatio, pixelRatio);\n    ctx.drawImage(image, 0, 0);\n\n    ctx.globalCompositeOperation = 'multiply';\n    ctx.fillStyle = asString(this.color_);\n    ctx.fillRect(0, 0, canvas.width / pixelRatio, canvas.height / pixelRatio);\n\n    ctx.globalCompositeOperation = 'destination-in';\n    ctx.drawImage(image, 0, 0);\n\n    this.canvas_[pixelRatio] = canvas;\n  }\n\n  /**\n   * @return {Promise<void>} Promise that resolves when the image is loaded.\n   */\n  ready() {\n    if (!this.ready_) {\n      this.ready_ = new Promise((resolve) => {\n        if (\n          this.imageState_ === ImageState.LOADED ||\n          this.imageState_ === ImageState.ERROR\n        ) {\n          resolve();\n        } else {\n          this.addEventListener(EventType.CHANGE, function onChange() {\n            if (\n              this.imageState_ === ImageState.LOADED ||\n              this.imageState_ === ImageState.ERROR\n            ) {\n              this.removeEventListener(EventType.CHANGE, onChange);\n              resolve();\n            }\n          });\n        }\n      });\n    }\n    return this.ready_;\n  }\n}\n\n/**\n * @param {HTMLImageElement|HTMLCanvasElement|ImageBitmap|null} image Image.\n * @param {string|undefined} cacheKey Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../ImageState.js\").default|undefined} imageState Image state.\n * @param {import(\"../color.js\").Color|string|null} color Color.\n * @param {boolean} [pattern] Also cache a `repeat` pattern with the icon image.\n * @return {IconImage} Icon image.\n */\nexport function get(image, cacheKey, crossOrigin, imageState, color, pattern) {\n  let iconImage =\n    cacheKey === undefined\n      ? undefined\n      : iconImageCache.get(cacheKey, crossOrigin, color);\n  if (!iconImage) {\n    iconImage = new IconImage(\n      image,\n      image && 'src' in image ? image.src || undefined : cacheKey,\n      crossOrigin,\n      imageState,\n      color,\n    );\n    iconImageCache.set(cacheKey, crossOrigin, color, iconImage, pattern);\n  }\n  if (\n    pattern &&\n    iconImage &&\n    !iconImageCache.getPattern(cacheKey, crossOrigin, color)\n  ) {\n    iconImageCache.set(cacheKey, crossOrigin, color, iconImage, pattern);\n  }\n  return iconImage;\n}\n\nexport default IconImage;\n","/**\n * @module ol/style/Fill\n */\n\nimport ImageState from '../ImageState.js';\nimport {get as getIconImage} from './IconImage.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|import('../colorlike.js').PatternDescriptor|null} [color=null] A color,\n * gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats. For polygon fills (not for {@link import(\"./RegularShape.js\").default} fills),\n * a pattern can also be provided as {@link module:ol/colorlike~PatternDescriptor}.\n * Default null; if null, the Canvas/renderer default black will be used.\n */\n\n/**\n * @classdesc\n * Set fill style for vector features.\n * @api\n */\nclass Fill {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {import(\"./IconImage.js\").default|null}\n     */\n    this.patternImage_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|import('../colorlike.js').PatternDescriptor|null}\n     */\n    this.color_ = null;\n    if (options.color !== undefined) {\n      this.setColor(options.color);\n    }\n  }\n\n  /**\n   * Clones the style. The color is not cloned if it is an {@link module:ol/colorlike~ColorLike}.\n   * @return {Fill} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Fill({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n    });\n  }\n\n  /**\n   * Get the fill color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|import('../colorlike.js').PatternDescriptor|null} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|import('../colorlike.js').PatternDescriptor|null} color Color.\n   * @api\n   */\n  setColor(color) {\n    if (color !== null && typeof color === 'object' && 'src' in color) {\n      const patternImage = getIconImage(\n        null,\n        color.src,\n        'anonymous',\n        undefined,\n        color.offset ? null : color.color ? color.color : null,\n        !(color.offset && color.size),\n      );\n      patternImage.ready().then(() => {\n        this.patternImage_ = null;\n      });\n      if (patternImage.getImageState() === ImageState.IDLE) {\n        patternImage.load();\n      }\n      if (patternImage.getImageState() === ImageState.LOADING) {\n        this.patternImage_ = patternImage;\n      }\n    }\n    this.color_ = color;\n  }\n\n  /**\n   * @return {boolean} The fill style is loading an image pattern.\n   */\n  loading() {\n    return !!this.patternImage_;\n  }\n\n  /**\n   * @return {Promise<void>} `false` or a promise that resolves when the style is ready to use.\n   */\n  ready() {\n    return this.patternImage_ ? this.patternImage_.ready() : Promise.resolve();\n  }\n}\n\nexport default Fill;\n","/**\n * @module ol/geom/flat/interpolate\n */\nimport {binarySearch} from '../../array.js';\nimport {lerp} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} fraction Fraction.\n * @param {Array<number>} [dest] Destination.\n * @param {number} [dimension] Destination dimension (default is `2`)\n * @return {Array<number>} Destination.\n */\nexport function interpolatePoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  fraction,\n  dest,\n  dimension,\n) {\n  let o, t;\n  const n = (end - offset) / stride;\n  if (n === 1) {\n    o = offset;\n  } else if (n === 2) {\n    o = offset;\n    t = fraction;\n  } else if (n !== 0) {\n    let x1 = flatCoordinates[offset];\n    let y1 = flatCoordinates[offset + 1];\n    let length = 0;\n    const cumulativeLengths = [0];\n    for (let i = offset + stride; i < end; i += stride) {\n      const x2 = flatCoordinates[i];\n      const y2 = flatCoordinates[i + 1];\n      length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n      cumulativeLengths.push(length);\n      x1 = x2;\n      y1 = y2;\n    }\n    const target = fraction * length;\n    const index = binarySearch(cumulativeLengths, target);\n    if (index < 0) {\n      t =\n        (target - cumulativeLengths[-index - 2]) /\n        (cumulativeLengths[-index - 1] - cumulativeLengths[-index - 2]);\n      o = offset + (-index - 2) * stride;\n    } else {\n      o = offset + index * stride;\n    }\n  }\n  dimension = dimension > 1 ? dimension : 2;\n  dest = dest ? dest : new Array(dimension);\n  for (let i = 0; i < dimension; ++i) {\n    dest[i] =\n      o === undefined\n        ? NaN\n        : t === undefined\n          ? flatCoordinates[o + i]\n          : lerp(flatCoordinates[o + i], flatCoordinates[o + stride + i], t);\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @return {import(\"../../coordinate.js\").Coordinate|null} Coordinate.\n */\nexport function lineStringCoordinateAtM(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  m,\n  extrapolate,\n) {\n  if (end == offset) {\n    return null;\n  }\n  let coordinate;\n  if (m < flatCoordinates[offset + stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(offset, offset + stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  if (flatCoordinates[end - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(end - stride, end);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  // FIXME use O(1) search\n  if (m == flatCoordinates[offset + stride - 1]) {\n    return flatCoordinates.slice(offset, offset + stride);\n  }\n  let lo = offset / stride;\n  let hi = end / stride;\n  while (lo < hi) {\n    const mid = (lo + hi) >> 1;\n    if (m < flatCoordinates[(mid + 1) * stride - 1]) {\n      hi = mid;\n    } else {\n      lo = mid + 1;\n    }\n  }\n  const m0 = flatCoordinates[lo * stride - 1];\n  if (m == m0) {\n    return flatCoordinates.slice((lo - 1) * stride, (lo - 1) * stride + stride);\n  }\n  const m1 = flatCoordinates[(lo + 1) * stride - 1];\n  const t = (m - m0) / (m1 - m0);\n  coordinate = [];\n  for (let i = 0; i < stride - 1; ++i) {\n    coordinate.push(\n      lerp(\n        flatCoordinates[(lo - 1) * stride + i],\n        flatCoordinates[lo * stride + i],\n        t,\n      ),\n    );\n  }\n  coordinate.push(m);\n  return coordinate;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @param {boolean} interpolate Interpolate.\n * @return {import(\"../../coordinate.js\").Coordinate|null} Coordinate.\n */\nexport function lineStringsCoordinateAtM(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  m,\n  extrapolate,\n  interpolate,\n) {\n  if (interpolate) {\n    return lineStringCoordinateAtM(\n      flatCoordinates,\n      offset,\n      ends[ends.length - 1],\n      stride,\n      m,\n      extrapolate,\n    );\n  }\n  let coordinate;\n  if (m < flatCoordinates[stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(0, stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  if (flatCoordinates[flatCoordinates.length - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(flatCoordinates.length - stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    if (offset == end) {\n      continue;\n    }\n    if (m < flatCoordinates[offset + stride - 1]) {\n      return null;\n    }\n    if (m <= flatCoordinates[end - 1]) {\n      return lineStringCoordinateAtM(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        m,\n        false,\n      );\n    }\n    offset = end;\n  }\n  return null;\n}\n","/**\n * @module ol/geom/flat/length\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Length.\n */\nexport function lineStringLength(flatCoordinates, offset, end, stride) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  let length = 0;\n  for (let i = offset + stride; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n    x1 = x2;\n    y1 = y2;\n  }\n  return length;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Perimeter.\n */\nexport function linearRingLength(flatCoordinates, offset, end, stride) {\n  let perimeter = lineStringLength(flatCoordinates, offset, end, stride);\n  const dx = flatCoordinates[end - stride] - flatCoordinates[offset];\n  const dy = flatCoordinates[end - stride + 1] - flatCoordinates[offset + 1];\n  perimeter += Math.sqrt(dx * dx + dy * dy);\n  return perimeter;\n}\n","/**\n * @module ol/geom/LineString\n */\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\nimport {extend} from '../array.js';\nimport {forEach as forEachSegment} from './flat/segments.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {interpolatePoint, lineStringCoordinateAtM} from './flat/interpolate.js';\nimport {intersectsLineString} from './flat/intersectsextent.js';\nimport {lineStringLength} from './flat/length.js';\n\n/**\n * @classdesc\n * Linestring geometry.\n *\n * @api\n */\nclass LineString extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate|null}\n     */\n    this.flatMidpoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatMidpointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates),\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        layout,\n      );\n    }\n  }\n\n  /**\n   * Append the passed coordinate to the coordinates of the linestring.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @api\n   */\n  appendCoordinate(coordinate) {\n    extend(this.flatCoordinates, coordinate);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LineString} Clone.\n   * @api\n   */\n  clone() {\n    const lineString = new LineString(\n      this.flatCoordinates.slice(),\n      this.layout,\n    );\n    lineString.applyProperties(this);\n    return lineString;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0,\n        ),\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      false,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n    );\n  }\n\n  /**\n   * Iterate over each segment, calling the provided callback.\n   * If the callback returns a truthy value the function returns that\n   * value immediately. Otherwise the function returns `false`.\n   *\n   * @param {function(this: S, import(\"../coordinate.js\").Coordinate, import(\"../coordinate.js\").Coordinate): T} callback Function\n   *     called for each segment. The function will receive two arguments, the start and end coordinates of the segment.\n   * @return {T|boolean} Value.\n   * @template T,S\n   * @api\n   */\n  forEachSegment(callback) {\n    return forEachSegment(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      callback,\n    );\n  }\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * @param {number} m M.\n   * @param {boolean} [extrapolate] Extrapolate. Default is `false`.\n   * @return {import(\"../coordinate.js\").Coordinate|null} Coordinate.\n   * @api\n   */\n  getCoordinateAtM(m, extrapolate) {\n    if (this.layout != 'XYM' && this.layout != 'XYZM') {\n      return null;\n    }\n    extrapolate = extrapolate !== undefined ? extrapolate : false;\n    return lineStringCoordinateAtM(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      m,\n      extrapolate,\n    );\n  }\n\n  /**\n   * Return the coordinates of the linestring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n    );\n  }\n\n  /**\n   * Return the coordinate at the provided fraction along the linestring.\n   * The `fraction` is a number between 0 and 1, where 0 is the start of the\n   * linestring and 1 is the end.\n   * @param {number} fraction Fraction.\n   * @param {import(\"../coordinate.js\").Coordinate} [dest] Optional coordinate whose values will\n   *     be modified. If not provided, a new coordinate will be returned.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinate of the interpolated point.\n   * @api\n   */\n  getCoordinateAt(fraction, dest) {\n    return interpolatePoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      fraction,\n      dest,\n      this.stride,\n    );\n  }\n\n  /**\n   * Return the length of the linestring on projected plane.\n   * @return {number} Length (on projected plane).\n   * @api\n   */\n  getLength() {\n    return lineStringLength(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n    );\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoint.\n   */\n  getFlatMidpoint() {\n    if (this.flatMidpointRevision_ != this.getRevision()) {\n      this.flatMidpoint_ = this.getCoordinateAt(\n        0.5,\n        this.flatMidpoint_ ?? undefined,\n      );\n      this.flatMidpointRevision_ = this.getRevision();\n    }\n    return /** @type {Array<number>} */ (this.flatMidpoint_);\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LineString} Simplified LineString.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    /** @type {Array<number>} */\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0,\n    );\n    return new LineString(simplifiedFlatCoordinates, 'XY');\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'LineString';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLineString(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent,\n    );\n  }\n\n  /**\n   * Set the coordinates of the linestring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n    );\n    this.changed();\n  }\n}\n\nexport default LineString;\n","/**\n * @module ol/style/Stroke\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n * @property {CanvasLineCap} [lineCap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [lineJoin='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [lineDash] Line dash pattern. Default is `null` (no dash).\n * @property {number} [lineDashOffset=0] Line dash offset.\n * @property {number} [miterLimit=10] Miter limit.\n * @property {number} [width] Width.\n */\n\n/**\n * @classdesc\n * Set stroke style for vector features.\n * Note that the defaults given are the Canvas defaults, which will be used if\n * option is not defined. The `get` functions return whatever was entered in\n * the options; they will not return the default.\n * @api\n */\nclass Stroke {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n     */\n    this.color_ = options.color !== undefined ? options.color : null;\n\n    /**\n     * @private\n     * @type {CanvasLineCap|undefined}\n     */\n    this.lineCap_ = options.lineCap;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.lineDash_ = options.lineDash !== undefined ? options.lineDash : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lineDashOffset_ = options.lineDashOffset;\n\n    /**\n     * @private\n     * @type {CanvasLineJoin|undefined}\n     */\n    this.lineJoin_ = options.lineJoin;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.miterLimit_ = options.miterLimit;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = options.width;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Stroke} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Stroke({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n      lineCap: this.getLineCap(),\n      lineDash: this.getLineDash() ? this.getLineDash().slice() : undefined,\n      lineDashOffset: this.getLineDashOffset(),\n      lineJoin: this.getLineJoin(),\n      miterLimit: this.getMiterLimit(),\n      width: this.getWidth(),\n    });\n  }\n\n  /**\n   * Get the stroke color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the line cap type for the stroke.\n   * @return {CanvasLineCap|undefined} Line cap.\n   * @api\n   */\n  getLineCap() {\n    return this.lineCap_;\n  }\n\n  /**\n   * Get the line dash style for the stroke.\n   * @return {Array<number>|null} Line dash.\n   * @api\n   */\n  getLineDash() {\n    return this.lineDash_;\n  }\n\n  /**\n   * Get the line dash offset for the stroke.\n   * @return {number|undefined} Line dash offset.\n   * @api\n   */\n  getLineDashOffset() {\n    return this.lineDashOffset_;\n  }\n\n  /**\n   * Get the line join type for the stroke.\n   * @return {CanvasLineJoin|undefined} Line join.\n   * @api\n   */\n  getLineJoin() {\n    return this.lineJoin_;\n  }\n\n  /**\n   * Get the miter limit for the stroke.\n   * @return {number|undefined} Miter limit.\n   * @api\n   */\n  getMiterLimit() {\n    return this.miterLimit_;\n  }\n\n  /**\n   * Get the stroke width.\n   * @return {number|undefined} Width.\n   * @api\n   */\n  getWidth() {\n    return this.width_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n   * @api\n   */\n  setColor(color) {\n    this.color_ = color;\n  }\n\n  /**\n   * Set the line cap.\n   *\n   * @param {CanvasLineCap|undefined} lineCap Line cap.\n   * @api\n   */\n  setLineCap(lineCap) {\n    this.lineCap_ = lineCap;\n  }\n\n  /**\n   * Set the line dash.\n   *\n   * @param {Array<number>|null} lineDash Line dash.\n   * @api\n   */\n  setLineDash(lineDash) {\n    this.lineDash_ = lineDash;\n  }\n\n  /**\n   * Set the line dash offset.\n   *\n   * @param {number|undefined} lineDashOffset Line dash offset.\n   * @api\n   */\n  setLineDashOffset(lineDashOffset) {\n    this.lineDashOffset_ = lineDashOffset;\n  }\n\n  /**\n   * Set the line join.\n   *\n   * @param {CanvasLineJoin|undefined} lineJoin Line join.\n   * @api\n   */\n  setLineJoin(lineJoin) {\n    this.lineJoin_ = lineJoin;\n  }\n\n  /**\n   * Set the miter limit.\n   *\n   * @param {number|undefined} miterLimit Miter limit.\n   * @api\n   */\n  setMiterLimit(miterLimit) {\n    this.miterLimit_ = miterLimit;\n  }\n\n  /**\n   * Set the width.\n   *\n   * @param {number|undefined} width Width.\n   * @api\n   */\n  setWidth(width) {\n    this.width_ = width;\n  }\n}\n\nexport default Stroke;\n","/**\n * @module ol/size\n */\n\n/**\n * An array of numbers representing a size: `[width, height]`.\n * @typedef {Array<number>} Size\n * @api\n */\n\n/**\n * Returns a buffered size.\n * @param {Size} size Size.\n * @param {number} num The amount by which to buffer.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} The buffered size.\n */\nexport function buffer(size, num, dest) {\n  if (dest === undefined) {\n    dest = [0, 0];\n  }\n  dest[0] = size[0] + 2 * num;\n  dest[1] = size[1] + 2 * num;\n  return dest;\n}\n\n/**\n * Determines if a size has a positive area.\n * @param {Size} size The size to test.\n * @return {boolean} The size has a positive area.\n */\nexport function hasArea(size) {\n  return size[0] > 0 && size[1] > 0;\n}\n\n/**\n * Returns a size scaled by a ratio. The result will be an array of integers.\n * @param {Size} size Size.\n * @param {number} ratio Ratio.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} The scaled size.\n */\nexport function scale(size, ratio, dest) {\n  if (dest === undefined) {\n    dest = [0, 0];\n  }\n  dest[0] = (size[0] * ratio + 0.5) | 0;\n  dest[1] = (size[1] * ratio + 0.5) | 0;\n  return dest;\n}\n\n/**\n * Returns an `Size` array for the passed in number (meaning: square) or\n * `Size` array.\n * (meaning: non-square),\n * @param {number|Size} size Width and height.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} Size.\n * @api\n */\nexport function toSize(size, dest) {\n  if (Array.isArray(size)) {\n    return size;\n  }\n  if (dest === undefined) {\n    dest = [size, size];\n  } else {\n    dest[0] = size;\n    dest[1] = size;\n  }\n  return dest;\n}\n","/**\n * @module ol/style/Image\n */\nimport {abstract} from '../util.js';\nimport {toSize} from '../size.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} opacity Opacity.\n * @property {boolean} rotateWithView If the image should get rotated with the view.\n * @property {number} rotation Rotation.\n * @property {number|import(\"../size.js\").Size} scale Scale.\n * @property {Array<number>} displacement Displacement.\n * @property {import('../style/Style.js').DeclutterMode} declutterMode Declutter mode: `declutter`, `obstacle`, `none`.\n */\n\n/**\n * @classdesc\n * A base class used for creating subclasses and not instantiated in\n * apps. Base class for {@link module:ol/style/Icon~Icon}, {@link module:ol/style/Circle~CircleStyle} and\n * {@link module:ol/style/RegularShape~RegularShape}.\n * @abstract\n * @api\n */\nclass ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.opacity_ = options.opacity;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.displacement_ = options.displacement;\n\n    /**\n     * @private\n     * @type {import('../style/Style.js').DeclutterMode}\n     */\n    this.declutterMode_ = options.declutterMode;\n  }\n\n  /**\n   * Clones the style.\n   * @return {ImageStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new ImageStyle({\n      opacity: this.getOpacity(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n  }\n\n  /**\n   * Get the symbolizer opacity.\n   * @return {number} Opacity.\n   * @api\n   */\n  getOpacity() {\n    return this.opacity_;\n  }\n\n  /**\n   * Determine whether the symbolizer rotates with the map.\n   * @return {boolean} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Get the symoblizer rotation.\n   * @return {number} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the symbolizer scale.\n   * @return {number|import(\"../size.js\").Size} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the displacement of the shape\n   * @return {Array<number>} Shape's center displacement\n   * @api\n   */\n  getDisplacement() {\n    return this.displacement_;\n  }\n\n  /**\n   * Get the declutter mode of the shape\n   * @return {import(\"./Style.js\").DeclutterMode} Shape's declutter mode\n   * @api\n   */\n  getDeclutterMode() {\n    return this.declutterMode_;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @abstract\n   * @return {Array<number>} Anchor.\n   */\n  getAnchor() {\n    return abstract();\n  }\n\n  /**\n   * Get the image element for the symbolizer.\n   * @abstract\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {import('../DataTile.js').ImageLike} Image element.\n   */\n  getImage(pixelRatio) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {import('../DataTile.js').ImageLike} Image element.\n   */\n  getHitDetectionImage() {\n    return abstract();\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   */\n  getPixelRatio(pixelRatio) {\n    return 1;\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return abstract();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @abstract\n   * @return {Array<number>} Origin.\n   */\n  getOrigin() {\n    return abstract();\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @abstract\n   * @return {import(\"../size.js\").Size} Size.\n   */\n  getSize() {\n    return abstract();\n  }\n\n  /**\n   * Set the displacement.\n   *\n   * @param {Array<number>} displacement Displacement.\n   * @api\n   */\n  setDisplacement(displacement) {\n    this.displacement_ = displacement;\n  }\n\n  /**\n   * Set the opacity.\n   *\n   * @param {number} opacity Opacity.\n   * @api\n   */\n  setOpacity(opacity) {\n    this.opacity_ = opacity;\n  }\n\n  /**\n   * Set whether to rotate the style with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale);\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {\n    abstract();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @abstract\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {\n    abstract();\n  }\n\n  /**\n   * @return {Promise<void>} `false` or Promise that resolves when the style is ready to use.\n   */\n  ready() {\n    return Promise.resolve();\n  }\n}\n\nexport default ImageStyle;\n","/**\n * @module ol/colorlike\n */\nimport ImageState from './ImageState.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {get as getIconImage} from './style/IconImage.js';\nimport {shared as iconCache} from './style/IconImageCache.js';\nimport {toString} from './color.js';\n\n/**\n * @typedef {Object} PatternDescriptor\n * @property {string} src Pattern image URL\n * @property {import(\"./color.js\").Color|string} [color] Color to tint the pattern with.\n * @property {import(\"./size.js\").Size} [size] Size of the desired slice from the pattern image.\n * Use this together with `offset` when the pattern image is a sprite sheet.\n * @property {import(\"./size.js\").Size} [offset] Offset of the desired slice from the pattern image.\n * Use this together with `size` when the pattern image is a sprite sheet.\n */\n\n/**\n * A type accepted by CanvasRenderingContext2D.fillStyle\n * or CanvasRenderingContext2D.strokeStyle.\n * Represents a color, [CanvasPattern](https://developer.mozilla.org/en-US/docs/Web/API/CanvasPattern),\n * or [CanvasGradient](https://developer.mozilla.org/en-US/docs/Web/API/CanvasGradient). The origin for\n * patterns and gradients as fill style is an increment of 512 css pixels from map coordinate\n * `[0, 0]`. For seamless repeat patterns, width and height of the pattern image\n * must be a factor of two (2, 4, 8, ..., 512).\n *\n * @typedef {string|CanvasPattern|CanvasGradient} ColorLike\n * @api\n */\n\n/**\n * @param {import(\"./color.js\").Color|ColorLike|PatternDescriptor|null} color Color.\n * @return {ColorLike|null} The color as an {@link ol/colorlike~ColorLike}.\n * @api\n */\nexport function asColorLike(color) {\n  if (!color) {\n    return null;\n  }\n  if (Array.isArray(color)) {\n    return toString(color);\n  }\n  if (typeof color === 'object' && 'src' in color) {\n    return asCanvasPattern(color);\n  }\n  return color;\n}\n\n/**\n * @param {PatternDescriptor} pattern Pattern descriptor.\n * @return {CanvasPattern|null} Canvas pattern or null if the pattern referenced in the\n * PatternDescriptor was not found in the icon image cache.\n */\nfunction asCanvasPattern(pattern) {\n  if (!pattern.offset || !pattern.size) {\n    return iconCache.getPattern(pattern.src, 'anonymous', pattern.color);\n  }\n\n  const cacheKey = pattern.src + ':' + pattern.offset;\n\n  const canvasPattern = iconCache.getPattern(\n    cacheKey,\n    undefined,\n    pattern.color,\n  );\n  if (canvasPattern) {\n    return canvasPattern;\n  }\n\n  const iconImage = iconCache.get(pattern.src, 'anonymous', null);\n  if (iconImage.getImageState() !== ImageState.LOADED) {\n    return null;\n  }\n  const patternCanvasContext = createCanvasContext2D(\n    pattern.size[0],\n    pattern.size[1],\n  );\n  patternCanvasContext.drawImage(\n    iconImage.getImage(1),\n    pattern.offset[0],\n    pattern.offset[1],\n    pattern.size[0],\n    pattern.size[1],\n    0,\n    0,\n    pattern.size[0],\n    pattern.size[1],\n  );\n  getIconImage(\n    patternCanvasContext.canvas,\n    cacheKey,\n    undefined,\n    ImageState.LOADED,\n    pattern.color,\n    true,\n  );\n  return iconCache.getPattern(cacheKey, undefined, pattern.color);\n}\n","/**\n * @module ol/css\n */\n\n/**\n * @typedef {Object} FontParameters\n * @property {string} style Style.\n * @property {string} variant Variant.\n * @property {string} weight Weight.\n * @property {string} size Size.\n * @property {string} lineHeight LineHeight.\n * @property {string} family Family.\n * @property {Array<string>} families Families.\n */\n\n/**\n * The CSS class for hidden feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_HIDDEN = 'ol-hidden';\n\n/**\n * The CSS class that we'll give the DOM elements to have them selectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_SELECTABLE = 'ol-selectable';\n\n/**\n * The CSS class that we'll give the DOM elements to have them unselectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSELECTABLE = 'ol-unselectable';\n\n/**\n * The CSS class for unsupported feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSUPPORTED = 'ol-unsupported';\n\n/**\n * The CSS class for controls.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_CONTROL = 'ol-control';\n\n/**\n * The CSS class that we'll give the DOM elements that are collapsed, i.e.\n * to those elements which usually can be expanded.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_COLLAPSED = 'ol-collapsed';\n\n/**\n * From https://stackoverflow.com/questions/10135697/regex-to-parse-any-css-font\n * @type {RegExp}\n */\nconst fontRegEx = new RegExp(\n  [\n    '^\\\\s*(?=(?:(?:[-a-z]+\\\\s*){0,2}(italic|oblique))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(small-caps))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(bold(?:er)?|lighter|[1-9]00 ))?)',\n    '(?:(?:normal|\\\\1|\\\\2|\\\\3)\\\\s*){0,3}((?:xx?-)?',\n    '(?:small|large)|medium|smaller|larger|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx]))',\n    '(?:\\\\s*\\\\/\\\\s*(normal|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx])?))',\n    '?\\\\s*([-,\\\\\"\\\\\\'\\\\sa-z]+?)\\\\s*$',\n  ].join(''),\n  'i',\n);\n/** @type {Array<'style'|'variant'|'weight'|'size'|'lineHeight'|'family'>} */\nconst fontRegExMatchIndex = [\n  'style',\n  'variant',\n  'weight',\n  'size',\n  'lineHeight',\n  'family',\n];\n\n/**\n * Get the list of font families from a font spec.  Note that this doesn't work\n * for font families that have commas in them.\n * @param {string} fontSpec The CSS font property.\n * @return {FontParameters|null} The font parameters (or null if the input spec is invalid).\n */\nexport const getFontParameters = function (fontSpec) {\n  const match = fontSpec.match(fontRegEx);\n  if (!match) {\n    return null;\n  }\n  const style = /** @type {FontParameters} */ ({\n    lineHeight: 'normal',\n    size: '1.2em',\n    style: 'normal',\n    weight: 'normal',\n    variant: 'normal',\n  });\n  for (let i = 0, ii = fontRegExMatchIndex.length; i < ii; ++i) {\n    const value = match[i + 1];\n    if (value !== undefined) {\n      style[fontRegExMatchIndex[i]] = value;\n    }\n  }\n  style.families = style.family.split(/,\\s?/);\n  return style;\n};\n","/**\n * @module ol/render/canvas\n */\nimport BaseObject from '../Object.js';\nimport {WORKER_OFFSCREEN_CANVAS} from '../has.js';\nimport {clear} from '../obj.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {getFontParameters} from '../css.js';\n\n/**\n * @typedef {'Circle' | 'Image' | 'LineString' | 'Polygon' | 'Text' | 'Default'} BuilderType\n */\n\n/**\n * @typedef {Object} FillState\n * @property {import(\"../colorlike.js\").ColorLike} fillStyle FillStyle.\n */\n\n/**\n * @typedef Label\n * @property {number} width Width.\n * @property {number} height Height.\n * @property {Array<string|number>} contextInstructions ContextInstructions.\n */\n\n/**\n * @typedef {Object} FillStrokeState\n * @property {import(\"../colorlike.js\").ColorLike} [currentFillStyle] Current FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [currentStrokeStyle] Current StrokeStyle.\n * @property {CanvasLineCap} [currentLineCap] Current LineCap.\n * @property {Array<number>} currentLineDash Current LineDash.\n * @property {number} [currentLineDashOffset] Current LineDashOffset.\n * @property {CanvasLineJoin} [currentLineJoin] Current LineJoin.\n * @property {number} [currentLineWidth] Current LineWidth.\n * @property {number} [currentMiterLimit] Current MiterLimit.\n * @property {number} [lastStroke] Last stroke.\n * @property {import(\"../colorlike.js\").ColorLike} [fillStyle] FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n * @property {CanvasLineCap} [lineCap] LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} [lineDashOffset] LineDashOffset.\n * @property {CanvasLineJoin} [lineJoin] LineJoin.\n * @property {number} [lineWidth] LineWidth.\n * @property {number} [miterLimit] MiterLimit.\n * @property {number} [fillPatternScale] Fill pattern scale.\n */\n\n/**\n * @typedef {Object} StrokeState\n * @property {CanvasLineCap} lineCap LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} lineWidth LineWidth.\n * @property {number} miterLimit MiterLimit.\n * @property {import(\"../colorlike.js\").ColorLike} strokeStyle StrokeStyle.\n */\n\n/**\n * @typedef {Object} TextState\n * @property {string} font Font.\n * @property {CanvasTextAlign} [textAlign] TextAlign.\n * @property {number} [repeat] Repeat.\n * @property {import(\"../style/Text.js\").TextJustify} [justify] Justify.\n * @property {CanvasTextBaseline} textBaseline TextBaseline.\n * @property {import(\"../style/Text.js\").TextPlacement} [placement] Placement.\n * @property {number} [maxAngle] MaxAngle.\n * @property {boolean} [overflow] Overflow.\n * @property {import(\"../style/Fill.js\").default} [backgroundFill] BackgroundFill.\n * @property {import(\"../style/Stroke.js\").default} [backgroundStroke] BackgroundStroke.\n * @property {import(\"../size.js\").Size} [scale] Scale.\n * @property {Array<number>} [padding] Padding.\n */\n\n/**\n * @typedef {Object} SerializableInstructions\n * @property {Array<*>} instructions The rendering instructions.\n * @property {Array<*>} hitDetectionInstructions The rendering hit detection instructions.\n * @property {Array<number>} coordinates The array of all coordinates.\n * @property {!Object<string, TextState>} [textStates] The text states (decluttering).\n * @property {!Object<string, FillState>} [fillStates] The fill states (decluttering).\n * @property {!Object<string, StrokeState>} [strokeStates] The stroke states (decluttering).\n */\n\n/**\n * @typedef {Object<number, import(\"./canvas/Executor.js\").ReplayImageOrLabelArgs>} DeclutterImageWithText\n */\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultFont = '10px sans-serif';\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultFillStyle = '#000';\n\n/**\n * @const\n * @type {CanvasLineCap}\n */\nexport const defaultLineCap = 'round';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultLineDash = [];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineDashOffset = 0;\n\n/**\n * @const\n * @type {CanvasLineJoin}\n */\nexport const defaultLineJoin = 'round';\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultMiterLimit = 10;\n\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport const defaultStrokeStyle = '#000';\n\n/**\n * @const\n * @type {CanvasTextAlign}\n */\nexport const defaultTextAlign = 'center';\n\n/**\n * @const\n * @type {CanvasTextBaseline}\n */\nexport const defaultTextBaseline = 'middle';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultPadding = [0, 0, 0, 0];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineWidth = 1;\n\n/**\n * @type {BaseObject}\n */\nexport const checkedFonts = new BaseObject();\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet measureContext = null;\n\n/**\n * @type {string}\n */\nlet measureFont;\n\n/**\n * @type {!Object<string, number>}\n */\nexport const textHeights = {};\n\n/**\n * Clears the label cache when a font becomes available.\n * @param {string} fontSpec CSS font spec.\n */\nexport const registerFont = (function () {\n  const retries = 100;\n  const size = '32px ';\n  const referenceFonts = ['monospace', 'serif'];\n  const len = referenceFonts.length;\n  const text = 'wmytzilWMYTZIL@#/&?$%10\\uF013';\n  let interval, referenceWidth;\n\n  /**\n   * @param {string} fontStyle Css font-style\n   * @param {string} fontWeight Css font-weight\n   * @param {*} fontFamily Css font-family\n   * @return {boolean} Font with style and weight is available\n   */\n  function isAvailable(fontStyle, fontWeight, fontFamily) {\n    let available = true;\n    for (let i = 0; i < len; ++i) {\n      const referenceFont = referenceFonts[i];\n      referenceWidth = measureTextWidth(\n        fontStyle + ' ' + fontWeight + ' ' + size + referenceFont,\n        text,\n      );\n      if (fontFamily != referenceFont) {\n        const width = measureTextWidth(\n          fontStyle +\n            ' ' +\n            fontWeight +\n            ' ' +\n            size +\n            fontFamily +\n            ',' +\n            referenceFont,\n          text,\n        );\n        // If width and referenceWidth are the same, then the fallback was used\n        // instead of the font we wanted, so the font is not available.\n        available = available && width != referenceWidth;\n      }\n    }\n    if (available) {\n      return true;\n    }\n    return false;\n  }\n\n  function check() {\n    let done = true;\n    const fonts = checkedFonts.getKeys();\n    for (let i = 0, ii = fonts.length; i < ii; ++i) {\n      const font = fonts[i];\n      if (checkedFonts.get(font) < retries) {\n        if (isAvailable.apply(this, font.split('\\n'))) {\n          clear(textHeights);\n          // Make sure that loaded fonts are picked up by Safari\n          measureContext = null;\n          measureFont = undefined;\n          checkedFonts.set(font, retries);\n        } else {\n          checkedFonts.set(font, checkedFonts.get(font) + 1, true);\n          done = false;\n        }\n      }\n    }\n    if (done) {\n      clearInterval(interval);\n      interval = undefined;\n    }\n  }\n\n  return function (fontSpec) {\n    const font = getFontParameters(fontSpec);\n    if (!font) {\n      return;\n    }\n    const families = font.families;\n    for (let i = 0, ii = families.length; i < ii; ++i) {\n      const family = families[i];\n      const key = font.style + '\\n' + font.weight + '\\n' + family;\n      if (checkedFonts.get(key) === undefined) {\n        checkedFonts.set(key, retries, true);\n        if (!isAvailable(font.style, font.weight, family)) {\n          checkedFonts.set(key, 0, true);\n          if (interval === undefined) {\n            interval = setInterval(check, 32);\n          }\n        }\n      }\n    }\n  };\n})();\n\n/**\n * @param {string} font Font to use for measuring.\n * @return {import(\"../size.js\").Size} Measurement.\n */\nexport const measureTextHeight = (function () {\n  /**\n   * @type {HTMLDivElement}\n   */\n  let measureElement;\n  return function (fontSpec) {\n    let height = textHeights[fontSpec];\n    if (height == undefined) {\n      if (WORKER_OFFSCREEN_CANVAS) {\n        const font = getFontParameters(fontSpec);\n        const metrics = measureText(fontSpec, 'Žg');\n        const lineHeight = isNaN(Number(font.lineHeight))\n          ? 1.2\n          : Number(font.lineHeight);\n        height =\n          lineHeight *\n          (metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent);\n      } else {\n        if (!measureElement) {\n          measureElement = document.createElement('div');\n          measureElement.innerHTML = 'M';\n          measureElement.style.minHeight = '0';\n          measureElement.style.maxHeight = 'none';\n          measureElement.style.height = 'auto';\n          measureElement.style.padding = '0';\n          measureElement.style.border = 'none';\n          measureElement.style.position = 'absolute';\n          measureElement.style.display = 'block';\n          measureElement.style.left = '-99999px';\n        }\n        measureElement.style.font = fontSpec;\n        document.body.appendChild(measureElement);\n        height = measureElement.offsetHeight;\n        document.body.removeChild(measureElement);\n      }\n      textHeights[fontSpec] = height;\n    }\n    return height;\n  };\n})();\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {TextMetrics} Text metrics.\n */\nfunction measureText(font, text) {\n  if (!measureContext) {\n    measureContext = createCanvasContext2D(1, 1);\n  }\n  if (font != measureFont) {\n    measureContext.font = font;\n    measureFont = measureContext.font;\n  }\n  return measureContext.measureText(text);\n}\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {number} Width.\n */\nexport function measureTextWidth(font, text) {\n  return measureText(font, text).width;\n}\n\n/**\n * Measure text width using a cache.\n * @param {string} font The font.\n * @param {string} text The text to measure.\n * @param {Object<string, number>} cache A lookup of cached widths by text.\n * @return {number} The text width.\n */\nexport function measureAndCacheTextWidth(font, text, cache) {\n  if (text in cache) {\n    return cache[text];\n  }\n  const width = text\n    .split('\\n')\n    .reduce((prev, curr) => Math.max(prev, measureTextWidth(font, curr)), 0);\n  cache[text] = width;\n  return width;\n}\n\n/**\n * @param {TextState} baseStyle Base style.\n * @param {Array<string>} chunks Text chunks to measure.\n * @return {{width: number, height: number, widths: Array<number>, heights: Array<number>, lineWidths: Array<number>}}} Text metrics.\n */\nexport function getTextDimensions(baseStyle, chunks) {\n  const widths = [];\n  const heights = [];\n  const lineWidths = [];\n  let width = 0;\n  let lineWidth = 0;\n  let height = 0;\n  let lineHeight = 0;\n  for (let i = 0, ii = chunks.length; i <= ii; i += 2) {\n    const text = chunks[i];\n    if (text === '\\n' || i === ii) {\n      width = Math.max(width, lineWidth);\n      lineWidths.push(lineWidth);\n      lineWidth = 0;\n      height += lineHeight;\n      lineHeight = 0;\n      continue;\n    }\n    const font = chunks[i + 1] || baseStyle.font;\n    const currentWidth = measureTextWidth(font, text);\n    widths.push(currentWidth);\n    lineWidth += currentWidth;\n    const currentHeight = measureTextHeight(font);\n    heights.push(currentHeight);\n    lineHeight = Math.max(lineHeight, currentHeight);\n  }\n  return {width, height, widths, heights, lineWidths};\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} offsetX X offset.\n * @param {number} offsetY Y offset.\n */\nexport function rotateAtOffset(context, rotation, offsetX, offsetY) {\n  if (rotation !== 0) {\n    context.translate(offsetX, offsetY);\n    context.rotate(rotation);\n    context.translate(-offsetX, -offsetY);\n  }\n}\n\n/**\n * @param {CanvasRenderingContext2D|import(\"../render/canvas/ZIndexContext.js\").ZIndexContextProxy} context Context.\n * @param {import(\"../transform.js\").Transform|null} transform Transform.\n * @param {number} opacity Opacity.\n * @param {Label|HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} labelOrImage Label.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} w Width.\n * @param {number} h Height.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {import(\"../size.js\").Size} scale Scale.\n */\nexport function drawImageOrLabel(\n  context,\n  transform,\n  opacity,\n  labelOrImage,\n  originX,\n  originY,\n  w,\n  h,\n  x,\n  y,\n  scale,\n) {\n  context.save();\n\n  if (opacity !== 1) {\n    if (context.globalAlpha === undefined) {\n      context.globalAlpha = (context) => (context.globalAlpha *= opacity);\n    } else {\n      context.globalAlpha *= opacity;\n    }\n  }\n  if (transform) {\n    context.transform.apply(context, transform);\n  }\n\n  if (/** @type {*} */ (labelOrImage).contextInstructions) {\n    // label\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    executeLabelInstructions(/** @type {Label} */ (labelOrImage), context);\n  } else if (scale[0] < 0 || scale[1] < 0) {\n    // flipped image\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      0,\n      0,\n      w,\n      h,\n    );\n  } else {\n    // if image not flipped translate and scale can be avoided\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      x,\n      y,\n      w * scale[0],\n      h * scale[1],\n    );\n  }\n\n  context.restore();\n}\n\n/**\n * @param {Label} label Label.\n * @param {CanvasRenderingContext2D} context Context.\n */\nfunction executeLabelInstructions(label, context) {\n  const contextInstructions = label.contextInstructions;\n  for (let i = 0, ii = contextInstructions.length; i < ii; i += 2) {\n    if (Array.isArray(contextInstructions[i + 1])) {\n      context[contextInstructions[i]].apply(\n        context,\n        contextInstructions[i + 1],\n      );\n    } else {\n      context[contextInstructions[i]] = contextInstructions[i + 1];\n    }\n  }\n}\n","/**\n * @module ol/style/RegularShape\n */\n\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport {asArray} from '../color.js';\nimport {asColorLike} from '../colorlike.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {\n  defaultFillStyle,\n  defaultLineCap,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../render/canvas.js';\n\n/**\n * Specify radius for regular polygons, or both radius and radius2 for stars.\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} points Number of points for stars and regular polygons. In case of a polygon, the number of points\n * is the number of sides.\n * @property {number} radius Radius of a regular polygon.\n * @property {number} [radius2] Second radius to make a star instead of a regular polygon.\n * @property {number} [angle=0] Shape's angle in radians. A value of 0 will have one of the shape's points facing up.\n * @property {Array<number>} [displacement=[0, 0]] Displacement of the shape in pixels.\n * Positive values will shift the shape right and up.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. Unless two dimensional scaling is required a better\n * result may be obtained with appropriate settings for `radius` and `radius2`.\n * @property {import('./Style.js').DeclutterMode} [declutterMode] Declutter mode.\n */\n\n/**\n * @typedef {Object} RenderOptions\n * @property {import(\"../colorlike.js\").ColorLike|undefined} strokeStyle StrokeStyle.\n * @property {number} strokeWidth StrokeWidth.\n * @property {number} size Size.\n * @property {CanvasLineCap} lineCap LineCap.\n * @property {Array<number>|null} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} miterLimit MiterLimit.\n */\n\n/**\n * @classdesc\n * Set regular shape style for vector features. The resulting shape will be\n * a regular polygon when `radius` is provided, or a star when both `radius` and\n * `radius2` are provided.\n * @api\n */\nclass RegularShape extends ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    super({\n      opacity: 1,\n      rotateWithView:\n        options.rotateWithView !== undefined ? options.rotateWithView : false,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      scale: options.scale !== undefined ? options.scale : 1,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      declutterMode: options.declutterMode,\n    });\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvases_;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|null}\n     */\n    this.hitDetectionCanvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default|null}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.points_ = options.points;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.radius_ = options.radius;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.radius2_ = options.radius2;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = options.angle !== undefined ? options.angle : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default|null}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_;\n\n    /**\n     * @private\n     * @type {RenderOptions}\n     */\n    this.renderOptions_;\n\n    this.imageState_ =\n      this.fill_ && this.fill_.loading()\n        ? ImageState.LOADING\n        : ImageState.LOADED;\n    if (this.imageState_ === ImageState.LOADING) {\n      this.ready().then(() => (this.imageState_ = ImageState.LOADED));\n    }\n    this.render();\n  }\n\n  /**\n   * Clones the style.\n   * @return {RegularShape} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new RegularShape({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      points: this.getPoints(),\n      radius: this.getRadius(),\n      radius2: this.getRadius2(),\n      angle: this.getAngle(),\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   */\n  getAnchor() {\n    const size = this.size_;\n    const displacement = this.getDisplacement();\n    const scale = this.getScaleArray();\n    // anchor is scaled by renderer but displacement should not be scaled\n    // so divide by scale here\n    return [\n      size[0] / 2 - displacement[0] / scale[0],\n      size[1] / 2 + displacement[1] / scale[1],\n    ];\n  }\n\n  /**\n   * Get the angle used in generating the shape.\n   * @return {number} Shape's rotation in radians.\n   * @api\n   */\n  getAngle() {\n    return this.angle_;\n  }\n\n  /**\n   * Get the fill style for the shape.\n   * @return {import(\"./Fill.js\").default|null} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Set the fill style.\n   * @param {import(\"./Fill.js\").default|null} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n    this.render();\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    if (!this.hitDetectionCanvas_) {\n      this.hitDetectionCanvas_ = this.createHitDetectionCanvas_(\n        this.renderOptions_,\n      );\n    }\n    return this.hitDetectionCanvas_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLCanvasElement} Image or Canvas element.\n   * @api\n   */\n  getImage(pixelRatio) {\n    let image = this.canvases_[pixelRatio];\n    if (!image) {\n      const renderOptions = this.renderOptions_;\n      const context = createCanvasContext2D(\n        renderOptions.size * pixelRatio,\n        renderOptions.size * pixelRatio,\n      );\n      this.draw_(renderOptions, context, pixelRatio);\n\n      image = context.canvas;\n      this.canvases_[pixelRatio] = image;\n    }\n    return image;\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   */\n  getPixelRatio(pixelRatio) {\n    return pixelRatio;\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.imageState_;\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   */\n  getOrigin() {\n    return this.origin_;\n  }\n\n  /**\n   * Get the number of points for generating the shape.\n   * @return {number} Number of points for stars and regular polygons.\n   * @api\n   */\n  getPoints() {\n    return this.points_;\n  }\n\n  /**\n   * Get the (primary) radius for the shape.\n   * @return {number} Radius.\n   * @api\n   */\n  getRadius() {\n    return this.radius_;\n  }\n\n  /**\n   * Get the secondary radius for the shape.\n   * @return {number|undefined} Radius2.\n   * @api\n   */\n  getRadius2() {\n    return this.radius2_;\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @return {import(\"../size.js\").Size} Size.\n   * @api\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * Get the stroke style for the shape.\n   * @return {import(\"./Stroke.js\").default|null} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Set the stroke style.\n   * @param {import(\"./Stroke.js\").default|null} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n    this.render();\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {}\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {}\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {}\n\n  /**\n   * Calculate additional canvas size needed for the miter.\n   * @param {string} lineJoin Line join\n   * @param {number} strokeWidth Stroke width\n   * @param {number} miterLimit Miter limit\n   * @return {number} Additional canvas size needed\n   * @private\n   */\n  calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit) {\n    if (\n      strokeWidth === 0 ||\n      this.points_ === Infinity ||\n      (lineJoin !== 'bevel' && lineJoin !== 'miter')\n    ) {\n      return strokeWidth;\n    }\n    // m  | ^\n    // i  | |\\                  .\n    // t >|  #\\\n    // e  | |\\ \\              .\n    // r      \\s\\\n    //      |  \\t\\          .                 .\n    //          \\r\\                      .   .\n    //      |    \\o\\      .          .  . . .\n    //          e \\k\\            .  .    . .\n    //      |      \\e\\  .    .  .       . .\n    //       d      \\ \\  .  .          . .\n    //      | _ _a_ _\\#  .            . .\n    //   r1          / `             . .\n    //      |                       . .\n    //       b     /               . .\n    //      |                     . .\n    //           / r2            . .\n    //      |                        .   .\n    //         /                           .   .\n    //      |α                                   .   .\n    //       /                                         .   .\n    //      ° center\n    let r1 = this.radius_;\n    let r2 = this.radius2_ === undefined ? r1 : this.radius2_;\n    if (r1 < r2) {\n      const tmp = r1;\n      r1 = r2;\n      r2 = tmp;\n    }\n    const points =\n      this.radius2_ === undefined ? this.points_ : this.points_ * 2;\n    const alpha = (2 * Math.PI) / points;\n    const a = r2 * Math.sin(alpha);\n    const b = Math.sqrt(r2 * r2 - a * a);\n    const d = r1 - b;\n    const e = Math.sqrt(a * a + d * d);\n    const miterRatio = e / a;\n    if (lineJoin === 'miter' && miterRatio <= miterLimit) {\n      return miterRatio * strokeWidth;\n    }\n    // Calculate the distance from center to the stroke corner where\n    // it was cut short because of the miter limit.\n    //              l\n    //        ----+---- <= distance from center to here is maxr\n    //       /####|k ##\\\n    //      /#####^#####\\\n    //     /#### /+\\# s #\\\n    //    /### h/+++\\# t #\\\n    //   /### t/+++++\\# r #\\\n    //  /### a/+++++++\\# o #\\\n    // /### p/++ fill +\\# k #\\\n    ///#### /+++++^+++++\\# e #\\\n    //#####/+++++/+\\+++++\\#####\\\n    const k = strokeWidth / 2 / miterRatio;\n    const l = (strokeWidth / 2) * (d / e);\n    const maxr = Math.sqrt((r1 + k) * (r1 + k) + l * l);\n    const bevelAdd = maxr - r1;\n    if (this.radius2_ === undefined || lineJoin === 'bevel') {\n      return bevelAdd * 2;\n    }\n    // If outer miter is over the miter limit the inner miter may reach through the\n    // center and be longer than the bevel, same calculation as above but swap r1 / r2.\n    const aa = r1 * Math.sin(alpha);\n    const bb = Math.sqrt(r1 * r1 - aa * aa);\n    const dd = r2 - bb;\n    const ee = Math.sqrt(aa * aa + dd * dd);\n    const innerMiterRatio = ee / aa;\n    if (innerMiterRatio <= miterLimit) {\n      const innerLength = (innerMiterRatio * strokeWidth) / 2 - r2 - r1;\n      return 2 * Math.max(bevelAdd, innerLength);\n    }\n    return bevelAdd * 2;\n  }\n\n  /**\n   * @return {RenderOptions}  The render options\n   * @protected\n   */\n  createRenderOptions() {\n    let lineCap = defaultLineCap;\n    let lineJoin = defaultLineJoin;\n    let miterLimit = 0;\n    let lineDash = null;\n    let lineDashOffset = 0;\n    let strokeStyle;\n    let strokeWidth = 0;\n\n    if (this.stroke_) {\n      strokeStyle = asColorLike(this.stroke_.getColor() ?? defaultStrokeStyle);\n      strokeWidth = this.stroke_.getWidth() ?? defaultLineWidth;\n      lineDash = this.stroke_.getLineDash();\n      lineDashOffset = this.stroke_.getLineDashOffset() ?? 0;\n      lineJoin = this.stroke_.getLineJoin() ?? defaultLineJoin;\n      lineCap = this.stroke_.getLineCap() ?? defaultLineCap;\n      miterLimit = this.stroke_.getMiterLimit() ?? defaultMiterLimit;\n    }\n\n    const add = this.calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit);\n    const maxRadius = Math.max(this.radius_, this.radius2_ || 0);\n    const size = Math.ceil(2 * maxRadius + add);\n\n    return {\n      strokeStyle: strokeStyle,\n      strokeWidth: strokeWidth,\n      size: size,\n      lineCap: lineCap,\n      lineDash: lineDash,\n      lineDashOffset: lineDashOffset,\n      lineJoin: lineJoin,\n      miterLimit: miterLimit,\n    };\n  }\n\n  /**\n   * @protected\n   */\n  render() {\n    this.renderOptions_ = this.createRenderOptions();\n    const size = this.renderOptions_.size;\n    this.canvases_ = {};\n    this.hitDetectionCanvas_ = null;\n    this.size_ = [size, size];\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The rendering context.\n   * @param {number} pixelRatio The pixel ratio.\n   */\n  draw_(renderOptions, context, pixelRatio) {\n    context.scale(pixelRatio, pixelRatio);\n    // set origin to canvas center\n    context.translate(renderOptions.size / 2, renderOptions.size / 2);\n\n    this.createPath_(context);\n\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n      if (color === null) {\n        color = defaultFillStyle;\n      }\n      context.fillStyle = asColorLike(color);\n      context.fill();\n    }\n    if (renderOptions.strokeStyle) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineCap = renderOptions.lineCap;\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @return {HTMLCanvasElement} Canvas containing the icon\n   */\n  createHitDetectionCanvas_(renderOptions) {\n    let context;\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n\n      // determine if fill is transparent (or pattern or gradient)\n      let opacity = 0;\n      if (typeof color === 'string') {\n        color = asArray(color);\n      }\n      if (color === null) {\n        opacity = 1;\n      } else if (Array.isArray(color)) {\n        opacity = color.length === 4 ? color[3] : 1;\n      }\n      if (opacity === 0) {\n        // if a transparent fill style is set, create an extra hit-detection image\n        // with a default fill style\n        context = createCanvasContext2D(renderOptions.size, renderOptions.size);\n        this.drawHitDetectionCanvas_(renderOptions, context);\n      }\n    }\n    return context ? context.canvas : this.getImage(1);\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context The context to draw in.\n   */\n  createPath_(context) {\n    let points = this.points_;\n    const radius = this.radius_;\n    if (points === Infinity) {\n      context.arc(0, 0, radius, 0, 2 * Math.PI);\n    } else {\n      const radius2 = this.radius2_ === undefined ? radius : this.radius2_;\n      if (this.radius2_ !== undefined) {\n        points *= 2;\n      }\n      const startAngle = this.angle_ - Math.PI / 2;\n      const step = (2 * Math.PI) / points;\n      for (let i = 0; i < points; i++) {\n        const angle0 = startAngle + i * step;\n        const radiusC = i % 2 === 0 ? radius : radius2;\n        context.lineTo(radiusC * Math.cos(angle0), radiusC * Math.sin(angle0));\n      }\n      context.closePath();\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The context.\n   */\n  drawHitDetectionCanvas_(renderOptions, context) {\n    // set origin to canvas center\n    context.translate(renderOptions.size / 2, renderOptions.size / 2);\n\n    this.createPath_(context);\n\n    context.fillStyle = defaultFillStyle;\n    context.fill();\n    if (renderOptions.strokeStyle) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n  }\n\n  ready() {\n    return this.fill_ ? this.fill_.ready() : Promise.resolve();\n  }\n}\n\nexport default RegularShape;\n","/**\n * @module ol/style/Circle\n */\n\nimport RegularShape from './RegularShape.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} radius Circle radius.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {Array<number>} [displacement=[0,0]] displacement\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. A two dimensional scale will produce an ellipse.\n * Unless two dimensional scaling is required a better result may be obtained with an appropriate setting for `radius`.\n * @property {number} [rotation=0] Rotation in radians\n * (positive rotation clockwise, meaningful only when used in conjunction with a two dimensional scale).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view\n * (meaningful only when used in conjunction with a two dimensional scale).\n * @property {import('./Style.js').DeclutterMode} [declutterMode] Declutter mode\n */\n\n/**\n * @classdesc\n * Set circle style for vector features.\n * @api\n */\nclass CircleStyle extends RegularShape {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {radius: 5};\n\n    super({\n      points: Infinity,\n      fill: options.fill,\n      radius: options.radius,\n      stroke: options.stroke,\n      scale: options.scale !== undefined ? options.scale : 1,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      rotateWithView:\n        options.rotateWithView !== undefined ? options.rotateWithView : false,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      declutterMode: options.declutterMode,\n    });\n  }\n\n  /**\n   * Clones the style.\n   * @return {CircleStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new CircleStyle({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      radius: this.getRadius(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Set the circle radius.\n   *\n   * @param {number} radius Circle radius.\n   * @api\n   */\n  setRadius(radius) {\n    this.radius_ = radius;\n    this.render();\n  }\n}\n\nexport default CircleStyle;\n","/**\n * @module ol/style/Style\n */\n\nimport CircleStyle from './Circle.js';\nimport Fill from './Fill.js';\nimport Stroke from './Stroke.js';\nimport {assert} from '../asserts.js';\n\n/**\n * Defines how symbols and text are decluttered on layers ith `declutter` set to `true`\n * * **declutter**: Overlapping symbols and text are decluttered.\n * * **obstacle**: Symbols and text are rendered, but serve as obstacle for subsequent attempts\n *   to place a symbol or text at the same location.\n * * **none**: No decluttering is done.\n *\n * @typedef {\"declutter\"|\"obstacle\"|\"none\"} DeclutterMode\n */\n\n/**\n * A function that takes an {@link module:ol/Feature~Feature} and a `{number}`\n * representing the view's resolution. The function should return a\n * {@link module:ol/style/Style~Style} or an array of them. This way e.g. a\n * vector layer can be styled. If the function returns `undefined`, the\n * feature will not be rendered.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike, number):(Style|Array<Style>|void)} StyleFunction\n */\n\n/**\n * A {@link Style}, an array of {@link Style}, or a {@link StyleFunction}.\n * @typedef {Style|Array<Style>|StyleFunction} StyleLike\n */\n\n/**\n * A function that takes an {@link module:ol/Feature~Feature} as argument and returns an\n * {@link module:ol/geom/Geometry~Geometry} that will be rendered and styled for the feature.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike):\n *     (import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined)} GeometryFunction\n */\n\n/**\n * Custom renderer function. Takes two arguments:\n *\n * 1. The pixel coordinates of the geometry in GeoJSON notation.\n * 2. The {@link module:ol/render~State} of the layer renderer.\n *\n * @typedef {function((import(\"../coordinate.js\").Coordinate|Array<import(\"../coordinate.js\").Coordinate>|Array<Array<import(\"../coordinate.js\").Coordinate>>|Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>),import(\"../render.js\").State): void} RenderFunction\n */\n\n/**\n * @typedef {Object} Options\n * @property {string|import(\"../geom/Geometry.js\").default|GeometryFunction} [geometry] Feature property or geometry\n * or function returning a geometry to render for this style.\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {import(\"./Image.js\").default} [image] Image style.\n * @property {RenderFunction} [renderer] Custom renderer. When configured, `fill`, `stroke` and `image` will be\n * ignored, and the provided function will be called with each render frame for each geometry.\n * @property {RenderFunction} [hitDetectionRenderer] Custom renderer for hit detection. If provided will be used\n * in hit detection rendering.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Text.js\").default} [text] Text style.\n * @property {number} [zIndex] Z index.\n */\n\n/**\n * @classdesc\n * Container for vector feature rendering styles. Any changes made to the style\n * or its children through `set*()` methods will not take effect until the\n * feature or layer that uses the style is re-rendered.\n *\n * ## Feature styles\n *\n * If no style is defined, the following default style is used:\n * ```js\n *  import {Circle, Fill, Stroke, Style} from 'ol/style.js';\n *\n *  const fill = new Fill({\n *    color: 'rgba(255,255,255,0.4)',\n *  });\n *  const stroke = new Stroke({\n *    color: '#3399CC',\n *    width: 1.25,\n *  });\n *  const styles = [\n *    new Style({\n *      image: new Circle({\n *        fill: fill,\n *        stroke: stroke,\n *        radius: 5,\n *      }),\n *      fill: fill,\n *      stroke: stroke,\n *    }),\n *  ];\n * ```\n *\n * A separate editing style has the following defaults:\n * ```js\n *  import {Circle, Fill, Stroke, Style} from 'ol/style.js';\n *\n *  const styles = {};\n *  const white = [255, 255, 255, 1];\n *  const blue = [0, 153, 255, 1];\n *  const width = 3;\n *  styles['Polygon'] = [\n *    new Style({\n *      fill: new Fill({\n *        color: [255, 255, 255, 0.5],\n *      }),\n *    }),\n *  ];\n *  styles['MultiPolygon'] =\n *      styles['Polygon'];\n *  styles['LineString'] = [\n *    new Style({\n *      stroke: new Stroke({\n *        color: white,\n *        width: width + 2,\n *      }),\n *    }),\n *    new Style({\n *      stroke: new Stroke({\n *        color: blue,\n *        width: width,\n *      }),\n *    }),\n *  ];\n *  styles['MultiLineString'] = styles['LineString'];\n *\n *  styles['Circle'] = styles['Polygon'].concat(\n *    styles['LineString']\n *  );\n *\n *  styles['Point'] = [\n *    new Style({\n *      image: new Circle({\n *        radius: width * 2,\n *        fill: new Fill({\n *          color: blue,\n *        }),\n *        stroke: new Stroke({\n *          color: white,\n *          width: width / 2,\n *        }),\n *      }),\n *      zIndex: Infinity,\n *    }),\n *  ];\n *  styles['MultiPoint'] =\n *      styles['Point'];\n *  styles['GeometryCollection'] =\n *      styles['Polygon'].concat(\n *          styles['LineString'],\n *          styles['Point']\n *      );\n * ```\n *\n * @api\n */\nclass Style {\n  /**\n   * @param {Options} [options] Style options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {string|import(\"../geom/Geometry.js\").default|GeometryFunction|null}\n     */\n    this.geometry_ = null;\n\n    /**\n     * @private\n     * @type {!GeometryFunction}\n     */\n    this.geometryFunction_ = defaultGeometryFunction;\n\n    if (options.geometry !== undefined) {\n      this.setGeometry(options.geometry);\n    }\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default|null}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {import(\"./Image.js\").default|null}\n     */\n    this.image_ = options.image !== undefined ? options.image : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.renderer_ = options.renderer !== undefined ? options.renderer : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.hitDetectionRenderer_ =\n      options.hitDetectionRenderer !== undefined\n        ? options.hitDetectionRenderer\n        : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default|null}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {import(\"./Text.js\").default|null}\n     */\n    this.text_ = options.text !== undefined ? options.text : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zIndex_ = options.zIndex;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Style} The cloned style.\n   * @api\n   */\n  clone() {\n    let geometry = this.getGeometry();\n    if (geometry && typeof geometry === 'object') {\n      geometry = /** @type {import(\"../geom/Geometry.js\").default} */ (\n        geometry\n      ).clone();\n    }\n    return new Style({\n      geometry: geometry ?? undefined,\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      image: this.getImage() ? this.getImage().clone() : undefined,\n      renderer: this.getRenderer() ?? undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      text: this.getText() ? this.getText().clone() : undefined,\n      zIndex: this.getZIndex(),\n    });\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setRenderer} or the `renderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Sets a custom renderer function for this style. When set, `fill`, `stroke`\n   * and `image` options of the style will be ignored.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setRenderer(renderer) {\n    this.renderer_ = renderer;\n  }\n\n  /**\n   * Sets a custom renderer function for this style used\n   * in hit detection.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setHitDetectionRenderer(renderer) {\n    this.hitDetectionRenderer_ = renderer;\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setHitDetectionRenderer} or the `hitDetectionRenderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getHitDetectionRenderer() {\n    return this.hitDetectionRenderer_;\n  }\n\n  /**\n   * Get the geometry to be rendered.\n   * @return {string|import(\"../geom/Geometry.js\").default|GeometryFunction|null}\n   * Feature property or geometry or function that returns the geometry that will\n   * be rendered with this style.\n   * @api\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n\n  /**\n   * Get the function used to generate a geometry for rendering.\n   * @return {!GeometryFunction} Function that is called with a feature\n   * and returns the geometry to render instead of the feature's geometry.\n   * @api\n   */\n  getGeometryFunction() {\n    return this.geometryFunction_;\n  }\n\n  /**\n   * Get the fill style.\n   * @return {import(\"./Fill.js\").default|null} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Set the fill style.\n   * @param {import(\"./Fill.js\").default|null} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Get the image style.\n   * @return {import(\"./Image.js\").default|null} Image style.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Set the image style.\n   * @param {import(\"./Image.js\").default} image Image style.\n   * @api\n   */\n  setImage(image) {\n    this.image_ = image;\n  }\n\n  /**\n   * Get the stroke style.\n   * @return {import(\"./Stroke.js\").default|null} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Set the stroke style.\n   * @param {import(\"./Stroke.js\").default|null} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Get the text style.\n   * @return {import(\"./Text.js\").default|null} Text style.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Set the text style.\n   * @param {import(\"./Text.js\").default} text Text style.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Get the z-index for the style.\n   * @return {number|undefined} ZIndex.\n   * @api\n   */\n  getZIndex() {\n    return this.zIndex_;\n  }\n\n  /**\n   * Set a geometry that is rendered instead of the feature's geometry.\n   *\n   * @param {string|import(\"../geom/Geometry.js\").default|GeometryFunction} geometry\n   *     Feature property or geometry or function returning a geometry to render\n   *     for this style.\n   * @api\n   */\n  setGeometry(geometry) {\n    if (typeof geometry === 'function') {\n      this.geometryFunction_ = geometry;\n    } else if (typeof geometry === 'string') {\n      this.geometryFunction_ = function (feature) {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (\n          feature.get(geometry)\n        );\n      };\n    } else if (!geometry) {\n      this.geometryFunction_ = defaultGeometryFunction;\n    } else if (geometry !== undefined) {\n      this.geometryFunction_ = function () {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (geometry);\n      };\n    }\n    this.geometry_ = geometry;\n  }\n\n  /**\n   * Set the z-index.\n   *\n   * @param {number|undefined} zIndex ZIndex.\n   * @api\n   */\n  setZIndex(zIndex) {\n    this.zIndex_ = zIndex;\n  }\n}\n\n/**\n * Convert the provided object into a style function.  Functions passed through\n * unchanged.  Arrays of Style or single style objects wrapped in a\n * new style function.\n * @param {StyleFunction|Array<Style>|Style} obj\n *     A style function, a single style, or an array of styles.\n * @return {StyleFunction} A style function.\n */\nexport function toFunction(obj) {\n  let styleFunction;\n\n  if (typeof obj === 'function') {\n    styleFunction = obj;\n  } else {\n    /**\n     * @type {Array<Style>}\n     */\n    let styles;\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      assert(\n        typeof (/** @type {?} */ (obj).getZIndex) === 'function',\n        'Expected an `Style` or an array of `Style`',\n      );\n      const style = /** @type {Style} */ (obj);\n      styles = [style];\n    }\n    styleFunction = function () {\n      return styles;\n    };\n  }\n  return styleFunction;\n}\n\n/**\n * @type {Array<Style>|null}\n */\nlet defaultStyles = null;\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array<Style>} Style.\n */\nexport function createDefaultStyle(feature, resolution) {\n  // We don't use an immediately-invoked function\n  // and a closure so we don't get an error at script evaluation time in\n  // browsers that do not support Canvas. (import(\"./Circle.js\").CircleStyle does\n  // canvas.getContext('2d') at construction time, which will cause an.error\n  // in such browsers.)\n  if (!defaultStyles) {\n    const fill = new Fill({\n      color: 'rgba(255,255,255,0.4)',\n    });\n    const stroke = new Stroke({\n      color: '#3399CC',\n      width: 1.25,\n    });\n    defaultStyles = [\n      new Style({\n        image: new CircleStyle({\n          fill: fill,\n          stroke: stroke,\n          radius: 5,\n        }),\n        fill: fill,\n        stroke: stroke,\n      }),\n    ];\n  }\n  return defaultStyles;\n}\n\n/**\n * Default styles for editing features.\n * @return {Object<import(\"../geom/Geometry.js\").Type, Array<Style>>} Styles\n */\nexport function createEditingStyle() {\n  /** @type {Object<import(\"../geom/Geometry.js\").Type, Array<Style>>} */\n  const styles = {};\n  const white = [255, 255, 255, 1];\n  const blue = [0, 153, 255, 1];\n  const width = 3;\n  styles['Polygon'] = [\n    new Style({\n      fill: new Fill({\n        color: [255, 255, 255, 0.5],\n      }),\n    }),\n  ];\n  styles['MultiPolygon'] = styles['Polygon'];\n\n  styles['LineString'] = [\n    new Style({\n      stroke: new Stroke({\n        color: white,\n        width: width + 2,\n      }),\n    }),\n    new Style({\n      stroke: new Stroke({\n        color: blue,\n        width: width,\n      }),\n    }),\n  ];\n  styles['MultiLineString'] = styles['LineString'];\n\n  styles['Circle'] = styles['Polygon'].concat(styles['LineString']);\n\n  styles['Point'] = [\n    new Style({\n      image: new CircleStyle({\n        radius: width * 2,\n        fill: new Fill({\n          color: blue,\n        }),\n        stroke: new Stroke({\n          color: white,\n          width: width / 2,\n        }),\n      }),\n      zIndex: Infinity,\n    }),\n  ];\n  styles['MultiPoint'] = styles['Point'];\n\n  styles['GeometryCollection'] = styles['Polygon'].concat(\n    styles['LineString'],\n    styles['Point'],\n  );\n\n  return styles;\n}\n\n/**\n * Function that is called with a feature and returns its default geometry.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature to get the geometry for.\n * @return {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined} Geometry to render.\n */\nfunction defaultGeometryFunction(feature) {\n  return feature.getGeometry();\n}\n\nexport default Style;\n","/**\n * @module ol/style/Text\n */\nimport Fill from './Fill.js';\nimport {toSize} from '../size.js';\n\n/**\n * @typedef {'point' | 'line'} TextPlacement\n * Default text placement is `'point'`. Note that\n * `'line'` requires the underlying geometry to be a {@link module:ol/geom/LineString~LineString},\n * {@link module:ol/geom/Polygon~Polygon}, {@link module:ol/geom/MultiLineString~MultiLineString} or\n * {@link module:ol/geom/MultiPolygon~MultiPolygon}.\n */\n\n/**\n * @typedef {'left' | 'center' | 'right'} TextJustify\n */\n\n/**\n * The default fill color to use if no fill was set at construction time; a\n * blackish `#333`.\n *\n * @const {string}\n */\nconst DEFAULT_FILL_COLOR = '#333';\n\n/**\n * @typedef {Object} Options\n * @property {string} [font] Font style as CSS `font` value, see:\n * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/font. Default is `'10px sans-serif'`\n * @property {number} [maxAngle=Math.PI/4] When `placement` is set to `'line'`, allow a maximum angle between adjacent characters.\n * The expected value is in radians, and the default is 45° (`Math.PI / 4`).\n * @property {number} [offsetX=0] Horizontal text offset in pixels. A positive will shift the text right.\n * @property {number} [offsetY=0] Vertical text offset in pixels. A positive will shift the text down.\n * @property {boolean} [overflow=false] For polygon labels or when `placement` is set to `'line'`, allow text to exceed\n * the width of the polygon at the label position or the length of the path that it follows.\n * @property {TextPlacement} [placement='point'] Text placement.\n * @property {number} [repeat] Repeat interval. When set, the text will be repeated at this interval, which specifies\n * the distance between two text anchors in pixels. Only available when `placement` is set to `'line'`. Overrides 'textAlign'.\n * @property {number|import(\"../size.js\").Size} [scale] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the text with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {string|Array<string>} [text] Text content or rich text content. For plain text provide a string, which can\n * contain line breaks (`\\n`). For rich text provide an array of text/font tuples. A tuple consists of the text to\n * render and the font to use (or `''` to use the text style's font). A line break has to be a separate tuple (i.e. `'\\n', ''`).\n * **Example:** `['foo', 'bold 10px sans-serif', ' bar', 'italic 10px sans-serif', ' baz', '']` will yield \"**foo** *bar* baz\".\n * **Note:** Rich text is not supported for `placement: 'line'` or the immediate rendering API.\n * @property {CanvasTextAlign} [textAlign] Text alignment. Possible values: `'left'`, `'right'`, `'center'`, `'end'` or `'start'`.\n * Default is `'center'` for `placement: 'point'`. For `placement: 'line'`, the default is to let the renderer choose a\n * placement where `maxAngle` is not exceeded.\n * @property {TextJustify} [justify] Text justification within the text box.\n * If not set, text is justified towards the `textAlign` anchor.\n * Otherwise, use options `'left'`, `'center'`, or `'right'` to justify the text within the text box.\n * **Note:** `justify` is ignored for immediate rendering and also for `placement: 'line'`.\n * @property {CanvasTextBaseline} [textBaseline='middle'] Text base line. Possible values: `'bottom'`, `'top'`, `'middle'`, `'alphabetic'`,\n * `'hanging'`, `'ideographic'`.\n * @property {import(\"./Fill.js\").default|null} [fill] Fill style. If none is provided, we'll use a dark fill-style (#333). Specify `null` for no fill.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Fill.js\").default} [backgroundFill] Fill style for the text background when `placement` is\n * `'point'`. Default is no fill.\n * @property {import(\"./Stroke.js\").default} [backgroundStroke] Stroke style for the text background  when `placement`\n * is `'point'`. Default is no stroke.\n * @property {Array<number>} [padding=[0, 0, 0, 0]] Padding in pixels around the text for decluttering and background. The order of\n * values in the array is `[top, right, bottom, left]`.\n * @property {import('../style/Style.js').DeclutterMode} [declutterMode] Declutter mode: `declutter`, `obstacle`, `none`\n */\n\n/**\n * @classdesc\n * Set text style for vector features.\n * @api\n */\nclass Text {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.font_ = options.font;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size|undefined}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale !== undefined ? options.scale : 1);\n\n    /**\n     * @private\n     * @type {string|Array<string>|undefined}\n     */\n    this.text_ = options.text;\n\n    /**\n     * @private\n     * @type {CanvasTextAlign|undefined}\n     */\n    this.textAlign_ = options.textAlign;\n\n    /**\n     * @private\n     * @type {TextJustify|undefined}\n     */\n    this.justify_ = options.justify;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.repeat_ = options.repeat;\n\n    /**\n     * @private\n     * @type {CanvasTextBaseline|undefined}\n     */\n    this.textBaseline_ = options.textBaseline;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default|null}\n     */\n    this.fill_ =\n      options.fill !== undefined\n        ? options.fill\n        : new Fill({color: DEFAULT_FILL_COLOR});\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxAngle_ =\n      options.maxAngle !== undefined ? options.maxAngle : Math.PI / 4;\n\n    /**\n     * @private\n     * @type {TextPlacement}\n     */\n    this.placement_ =\n      options.placement !== undefined ? options.placement : 'point';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overflow_ = !!options.overflow;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default|null}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offsetX_ = options.offsetX !== undefined ? options.offsetX : 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offsetY_ = options.offsetY !== undefined ? options.offsetY : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default|null}\n     */\n    this.backgroundFill_ = options.backgroundFill\n      ? options.backgroundFill\n      : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default|null}\n     */\n    this.backgroundStroke_ = options.backgroundStroke\n      ? options.backgroundStroke\n      : null;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.padding_ = options.padding === undefined ? null : options.padding;\n\n    /**\n     * @private\n     * @type {import('../style/Style.js').DeclutterMode}\n     */\n    this.declutterMode_ = options.declutterMode;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Text} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new Text({\n      font: this.getFont(),\n      placement: this.getPlacement(),\n      repeat: this.getRepeat(),\n      maxAngle: this.getMaxAngle(),\n      overflow: this.getOverflow(),\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      text: this.getText(),\n      textAlign: this.getTextAlign(),\n      justify: this.getJustify(),\n      textBaseline: this.getTextBaseline(),\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      offsetX: this.getOffsetX(),\n      offsetY: this.getOffsetY(),\n      backgroundFill: this.getBackgroundFill()\n        ? this.getBackgroundFill().clone()\n        : undefined,\n      backgroundStroke: this.getBackgroundStroke()\n        ? this.getBackgroundStroke().clone()\n        : undefined,\n      padding: this.getPadding() || undefined,\n      declutterMode: this.getDeclutterMode(),\n    });\n  }\n\n  /**\n   * Get the `overflow` configuration.\n   * @return {boolean} Let text overflow the length of the path they follow.\n   * @api\n   */\n  getOverflow() {\n    return this.overflow_;\n  }\n\n  /**\n   * Get the font name.\n   * @return {string|undefined} Font.\n   * @api\n   */\n  getFont() {\n    return this.font_;\n  }\n\n  /**\n   * Get the maximum angle between adjacent characters.\n   * @return {number} Angle in radians.\n   * @api\n   */\n  getMaxAngle() {\n    return this.maxAngle_;\n  }\n\n  /**\n   * Get the label placement.\n   * @return {TextPlacement} Text placement.\n   * @api\n   */\n  getPlacement() {\n    return this.placement_;\n  }\n\n  /**\n   * Get the repeat interval of the text.\n   * @return {number|undefined} Repeat interval in pixels.\n   * @api\n   */\n  getRepeat() {\n    return this.repeat_;\n  }\n\n  /**\n   * Get the x-offset for the text.\n   * @return {number} Horizontal text offset.\n   * @api\n   */\n  getOffsetX() {\n    return this.offsetX_;\n  }\n\n  /**\n   * Get the y-offset for the text.\n   * @return {number} Vertical text offset.\n   * @api\n   */\n  getOffsetY() {\n    return this.offsetY_;\n  }\n\n  /**\n   * Get the fill style for the text.\n   * @return {import(\"./Fill.js\").default|null} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Determine whether the text rotates with the map.\n   * @return {boolean|undefined} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Get the text rotation.\n   * @return {number|undefined} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the text scale.\n   * @return {number|import(\"../size.js\").Size|undefined} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the stroke style for the text.\n   * @return {import(\"./Stroke.js\").default|null} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Get the text to be rendered.\n   * @return {string|Array<string>|undefined} Text.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Get the text alignment.\n   * @return {CanvasTextAlign|undefined} Text align.\n   * @api\n   */\n  getTextAlign() {\n    return this.textAlign_;\n  }\n\n  /**\n   * Get the justification.\n   * @return {TextJustify|undefined} Justification.\n   * @api\n   */\n  getJustify() {\n    return this.justify_;\n  }\n\n  /**\n   * Get the text baseline.\n   * @return {CanvasTextBaseline|undefined} Text baseline.\n   * @api\n   */\n  getTextBaseline() {\n    return this.textBaseline_;\n  }\n\n  /**\n   * Get the background fill style for the text.\n   * @return {import(\"./Fill.js\").default|null} Fill style.\n   * @api\n   */\n  getBackgroundFill() {\n    return this.backgroundFill_;\n  }\n\n  /**\n   * Get the background stroke style for the text.\n   * @return {import(\"./Stroke.js\").default|null} Stroke style.\n   * @api\n   */\n  getBackgroundStroke() {\n    return this.backgroundStroke_;\n  }\n\n  /**\n   * Get the padding for the text.\n   * @return {Array<number>|null} Padding.\n   * @api\n   */\n  getPadding() {\n    return this.padding_;\n  }\n\n  /**\n   * Get the declutter mode of the shape\n   * @return {import(\"./Style.js\").DeclutterMode} Shape's declutter mode\n   * @api\n   */\n  getDeclutterMode() {\n    return this.declutterMode_;\n  }\n\n  /**\n   * Set the `overflow` property.\n   *\n   * @param {boolean} overflow Let text overflow the path that it follows.\n   * @api\n   */\n  setOverflow(overflow) {\n    this.overflow_ = overflow;\n  }\n\n  /**\n   * Set the font.\n   *\n   * @param {string|undefined} font Font.\n   * @api\n   */\n  setFont(font) {\n    this.font_ = font;\n  }\n\n  /**\n   * Set the maximum angle between adjacent characters.\n   *\n   * @param {number} maxAngle Angle in radians.\n   * @api\n   */\n  setMaxAngle(maxAngle) {\n    this.maxAngle_ = maxAngle;\n  }\n\n  /**\n   * Set the x offset.\n   *\n   * @param {number} offsetX Horizontal text offset.\n   * @api\n   */\n  setOffsetX(offsetX) {\n    this.offsetX_ = offsetX;\n  }\n\n  /**\n   * Set the y offset.\n   *\n   * @param {number} offsetY Vertical text offset.\n   * @api\n   */\n  setOffsetY(offsetY) {\n    this.offsetY_ = offsetY;\n  }\n\n  /**\n   * Set the text placement.\n   *\n   * @param {TextPlacement} placement Placement.\n   * @api\n   */\n  setPlacement(placement) {\n    this.placement_ = placement;\n  }\n\n  /**\n   * Set the repeat interval of the text.\n   * @param {number|undefined} [repeat] Repeat interval in pixels.\n   * @api\n   */\n  setRepeat(repeat) {\n    this.repeat_ = repeat;\n  }\n\n  /**\n   * Set whether to rotate the text with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set the fill.\n   *\n   * @param {import(\"./Fill.js\").default|null} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number|undefined} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size|undefined} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale !== undefined ? scale : 1);\n  }\n\n  /**\n   * Set the stroke.\n   *\n   * @param {import(\"./Stroke.js\").default|null} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Set the text.\n   *\n   * @param {string|Array<string>|undefined} text Text.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Set the text alignment.\n   *\n   * @param {CanvasTextAlign|undefined} textAlign Text align.\n   * @api\n   */\n  setTextAlign(textAlign) {\n    this.textAlign_ = textAlign;\n  }\n\n  /**\n   * Set the justification.\n   *\n   * @param {TextJustify|undefined} justify Justification.\n   * @api\n   */\n  setJustify(justify) {\n    this.justify_ = justify;\n  }\n\n  /**\n   * Set the text baseline.\n   *\n   * @param {CanvasTextBaseline|undefined} textBaseline Text baseline.\n   * @api\n   */\n  setTextBaseline(textBaseline) {\n    this.textBaseline_ = textBaseline;\n  }\n\n  /**\n   * Set the background fill.\n   *\n   * @param {import(\"./Fill.js\").default|null} fill Fill style.\n   * @api\n   */\n  setBackgroundFill(fill) {\n    this.backgroundFill_ = fill;\n  }\n\n  /**\n   * Set the background stroke.\n   *\n   * @param {import(\"./Stroke.js\").default|null} stroke Stroke style.\n   * @api\n   */\n  setBackgroundStroke(stroke) {\n    this.backgroundStroke_ = stroke;\n  }\n\n  /**\n   * Set the padding (`[top, right, bottom, left]`).\n   *\n   * @param {Array<number>|null} padding Padding.\n   * @api\n   */\n  setPadding(padding) {\n    this.padding_ = padding;\n  }\n}\n\nexport default Text;\n","/**\n * @module ol/layer/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  OPACITY: 'opacity',\n  VISIBLE: 'visible',\n  EXTENT: 'extent',\n  Z_INDEX: 'zIndex',\n  MAX_RESOLUTION: 'maxResolution',\n  MIN_RESOLUTION: 'minResolution',\n  MAX_ZOOM: 'maxZoom',\n  MIN_ZOOM: 'minZoom',\n  SOURCE: 'source',\n  MAP: 'map',\n};\n","/**\n * @module ol/layer/Base\n */\nimport BaseObject from '../Object.js';\nimport LayerProperty from './Property.js';\nimport {abstract} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {clamp} from '../math.js';\n\n/**\n * A css color, or a function called with a view resolution returning a css color.\n *\n * @typedef {string|function(number):string} BackgroundColor\n * @api\n */\n\n/**\n * @typedef {import(\"../ObjectEventType\").Types|'change:extent'|'change:maxResolution'|'change:maxZoom'|\n *    'change:minResolution'|'change:minZoom'|'change:opacity'|'change:visible'|'change:zIndex'} BaseLayerObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<BaseLayerObjectEventTypes, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|BaseLayerObjectEventTypes, Return>} BaseLayerOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number | undefined} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Note that with {@link module:ol/layer/Base~BaseLayer} and all its subclasses, any property set in\n * the options is set as a {@link module:ol/Object~BaseObject} property on the layer object, so\n * is observable, and has get/set accessors.\n *\n * @api\n */\nclass BaseLayer extends BaseObject {\n  /**\n   * @param {Options} options Layer options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {BaseLayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @type {BackgroundColor|false}\n     * @private\n     */\n    this.background_ = options.background;\n\n    /**\n     * @type {Object<string, *>}\n     */\n    const properties = Object.assign({}, options);\n    if (typeof options.properties === 'object') {\n      delete properties.properties;\n      Object.assign(properties, options.properties);\n    }\n\n    properties[LayerProperty.OPACITY] =\n      options.opacity !== undefined ? options.opacity : 1;\n    assert(\n      typeof properties[LayerProperty.OPACITY] === 'number',\n      'Layer opacity must be a number',\n    );\n\n    properties[LayerProperty.VISIBLE] =\n      options.visible !== undefined ? options.visible : true;\n    properties[LayerProperty.Z_INDEX] = options.zIndex;\n    properties[LayerProperty.MAX_RESOLUTION] =\n      options.maxResolution !== undefined ? options.maxResolution : Infinity;\n    properties[LayerProperty.MIN_RESOLUTION] =\n      options.minResolution !== undefined ? options.minResolution : 0;\n    properties[LayerProperty.MIN_ZOOM] =\n      options.minZoom !== undefined ? options.minZoom : -Infinity;\n    properties[LayerProperty.MAX_ZOOM] =\n      options.maxZoom !== undefined ? options.maxZoom : Infinity;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.className_ =\n      properties.className !== undefined ? properties.className : 'ol-layer';\n    delete properties.className;\n\n    this.setProperties(properties);\n\n    /**\n     * @type {import(\"./Layer.js\").State}\n     * @private\n     */\n    this.state_ = null;\n  }\n\n  /**\n   * Get the background for this layer.\n   * @return {BackgroundColor|false} Layer background.\n   */\n  getBackground() {\n    return this.background_;\n  }\n\n  /**\n   * @return {string} CSS class name.\n   */\n  getClassName() {\n    return this.className_;\n  }\n\n  /**\n   * This method is not meant to be called by layers or layer renderers because the state\n   * is incorrect if the layer is included in a layer group.\n   *\n   * @param {boolean} [managed] Layer is managed.\n   * @return {import(\"./Layer.js\").State} Layer state.\n   */\n  getLayerState(managed) {\n    /** @type {import(\"./Layer.js\").State} */\n    const state =\n      this.state_ ||\n      /** @type {?} */ ({\n        layer: this,\n        managed: managed === undefined ? true : managed,\n      });\n    const zIndex = this.getZIndex();\n    state.opacity = clamp(Math.round(this.getOpacity() * 100) / 100, 0, 1);\n    state.visible = this.getVisible();\n    state.extent = this.getExtent();\n    state.zIndex = zIndex === undefined && !state.managed ? Infinity : zIndex;\n    state.maxResolution = this.getMaxResolution();\n    state.minResolution = Math.max(this.getMinResolution(), 0);\n    state.minZoom = this.getMinZoom();\n    state.maxZoom = this.getMaxZoom();\n    this.state_ = state;\n\n    return state;\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be\n   *     modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(array) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").State>} [states] Optional list of layer\n   *     states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(states) {\n    return abstract();\n  }\n\n  /**\n   * Return the {@link module:ol/extent~Extent extent} of the layer or `undefined` if it\n   * will be visible regardless of extent.\n   * @return {import(\"../extent.js\").Extent|undefined} The layer extent.\n   * @observable\n   * @api\n   */\n  getExtent() {\n    return /** @type {import(\"../extent.js\").Extent|undefined} */ (\n      this.get(LayerProperty.EXTENT)\n    );\n  }\n\n  /**\n   * Return the maximum resolution of the layer. Returns Infinity if\n   * the layer has no maximum resolution set.\n   * @return {number} The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMaxResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum resolution of the layer. Returns 0 if\n   * the layer has no minimum resolution set.\n   * @return {number} The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMinResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum zoom level of the layer. Returns -Infinity if\n   * the layer has no minimum zoom set.\n   * @return {number} The minimum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_ZOOM));\n  }\n\n  /**\n   * Return the maximum zoom level of the layer. Returns Infinity if\n   * the layer has no maximum zoom set.\n   * @return {number} The maximum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_ZOOM));\n  }\n\n  /**\n   * Return the opacity of the layer (between 0 and 1).\n   * @return {number} The opacity of the layer.\n   * @observable\n   * @api\n   */\n  getOpacity() {\n    return /** @type {number} */ (this.get(LayerProperty.OPACITY));\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    return abstract();\n  }\n\n  /**\n   * Return the value of this layer's `visible` property. To find out whether the layer\n   * is visible on a map, use `isVisible()` instead.\n   * @return {boolean} The value of the `visible` property of the layer.\n   * @observable\n   * @api\n   */\n  getVisible() {\n    return /** @type {boolean} */ (this.get(LayerProperty.VISIBLE));\n  }\n\n  /**\n   * Return the Z-index of the layer, which is used to order layers before\n   * rendering. Returns undefined if the layer is unmanaged.\n   * @return {number|undefined} The Z-index of the layer.\n   * @observable\n   * @api\n   */\n  getZIndex() {\n    return /** @type {number|undefined} */ (this.get(LayerProperty.Z_INDEX));\n  }\n\n  /**\n   * Sets the background color.\n   * @param {BackgroundColor} [background] Background color.\n   */\n  setBackground(background) {\n    this.background_ = background;\n    this.changed();\n  }\n\n  /**\n   * Set the extent at which the layer is visible.  If `undefined`, the layer\n   * will be visible at all extents.\n   * @param {import(\"../extent.js\").Extent|undefined} extent The extent of the layer.\n   * @observable\n   * @api\n   */\n  setExtent(extent) {\n    this.set(LayerProperty.EXTENT, extent);\n  }\n\n  /**\n   * Set the maximum resolution at which the layer is visible.\n   * @param {number} maxResolution The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMaxResolution(maxResolution) {\n    this.set(LayerProperty.MAX_RESOLUTION, maxResolution);\n  }\n\n  /**\n   * Set the minimum resolution at which the layer is visible.\n   * @param {number} minResolution The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMinResolution(minResolution) {\n    this.set(LayerProperty.MIN_RESOLUTION, minResolution);\n  }\n\n  /**\n   * Set the maximum zoom (exclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} maxZoom The maximum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMaxZoom(maxZoom) {\n    this.set(LayerProperty.MAX_ZOOM, maxZoom);\n  }\n\n  /**\n   * Set the minimum zoom (inclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} minZoom The minimum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMinZoom(minZoom) {\n    this.set(LayerProperty.MIN_ZOOM, minZoom);\n  }\n\n  /**\n   * Set the opacity of the layer, allowed values range from 0 to 1.\n   * @param {number} opacity The opacity of the layer.\n   * @observable\n   * @api\n   */\n  setOpacity(opacity) {\n    assert(typeof opacity === 'number', 'Layer opacity must be a number');\n    this.set(LayerProperty.OPACITY, opacity);\n  }\n\n  /**\n   * Set the visibility of the layer (`true` or `false`).\n   * @param {boolean} visible The visibility of the layer.\n   * @observable\n   * @api\n   */\n  setVisible(visible) {\n    this.set(LayerProperty.VISIBLE, visible);\n  }\n\n  /**\n   * Set Z-index of the layer, which is used to order layers before rendering.\n   * The default Z-index is 0.\n   * @param {number} zindex The z-index of the layer.\n   * @observable\n   * @api\n   */\n  setZIndex(zindex) {\n    this.set(LayerProperty.Z_INDEX, zindex);\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.state_) {\n      this.state_.layer = null;\n      this.state_ = null;\n    }\n    super.disposeInternal();\n  }\n}\n\nexport default BaseLayer;\n","/**\n * @module ol/ViewHint\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  ANIMATING: 0,\n  INTERACTING: 1,\n};\n","/**\n * @module ol/ViewProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CENTER: 'center',\n  RESOLUTION: 'resolution',\n  ROTATION: 'rotation',\n};\n","/**\n * @module ol/tilegrid/common\n */\n\n/**\n * Default maximum zoom for default tile grids.\n * @type {number}\n */\nexport const DEFAULT_MAX_ZOOM = 42;\n\n/**\n * Default tile size.\n * @type {number}\n */\nexport const DEFAULT_TILE_SIZE = 256;\n","/**\n * @module ol/centerconstraint\n */\nimport {clamp} from './math.js';\n\n/**\n * @typedef {function((import(\"./coordinate.js\").Coordinate|undefined), number, import(\"./size.js\").Size, boolean=, Array<number>=): (import(\"./coordinate.js\").Coordinate|undefined)} Type\n */\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {boolean} onlyCenter If true, the constraint will only apply to the view center.\n * @param {boolean} smooth If true, the view will be able to go slightly out of the given extent\n * (only during interaction and animation).\n * @return {Type} The constraint.\n */\nexport function createExtent(extent, onlyCenter, smooth) {\n  return (\n    /**\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} center Center.\n     * @param {number|undefined} resolution Resolution.\n     * @param {import(\"./size.js\").Size} size Viewport size; unused if `onlyCenter` was specified.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @param {Array<number>} [centerShift] Shift between map center and viewport center.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n     */\n    function (center, resolution, size, isMoving, centerShift) {\n      if (!center) {\n        return undefined;\n      }\n      if (!resolution && !onlyCenter) {\n        return center;\n      }\n      const viewWidth = onlyCenter ? 0 : size[0] * resolution;\n      const viewHeight = onlyCenter ? 0 : size[1] * resolution;\n      const shiftX = centerShift ? centerShift[0] : 0;\n      const shiftY = centerShift ? centerShift[1] : 0;\n      let minX = extent[0] + viewWidth / 2 + shiftX;\n      let maxX = extent[2] - viewWidth / 2 + shiftX;\n      let minY = extent[1] + viewHeight / 2 + shiftY;\n      let maxY = extent[3] - viewHeight / 2 + shiftY;\n\n      // note: when zooming out of bounds, min and max values for x and y may\n      // end up inverted (min > max); this has to be accounted for\n      if (minX > maxX) {\n        minX = (maxX + minX) / 2;\n        maxX = minX;\n      }\n      if (minY > maxY) {\n        minY = (maxY + minY) / 2;\n        maxY = minY;\n      }\n\n      let x = clamp(center[0], minX, maxX);\n      let y = clamp(center[1], minY, maxY);\n\n      // during an interaction, allow some overscroll\n      if (isMoving && smooth && resolution) {\n        const ratio = 30 * resolution;\n        x +=\n          -ratio * Math.log(1 + Math.max(0, minX - center[0]) / ratio) +\n          ratio * Math.log(1 + Math.max(0, center[0] - maxX) / ratio);\n        y +=\n          -ratio * Math.log(1 + Math.max(0, minY - center[1]) / ratio) +\n          ratio * Math.log(1 + Math.max(0, center[1] - maxY) / ratio);\n      }\n\n      return [x, y];\n    }\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} [center] Center.\n * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n */\nexport function none(center) {\n  return center;\n}\n","/**\n * @module ol/resolutionconstraint\n */\nimport {clamp} from './math.js';\nimport {getHeight, getWidth} from './extent.js';\nimport {linearFindNearest} from './array.js';\n\n/**\n * @typedef {function((number|undefined), number, import(\"./size.js\").Size, boolean=): (number|undefined)} Type\n */\n\n/**\n * Returns a modified resolution taking into account the viewport size and maximum\n * allowed extent.\n * @param {number} resolution Resolution\n * @param {import(\"./extent.js\").Extent} maxExtent Maximum allowed extent.\n * @param {import(\"./size.js\").Size} viewportSize Viewport size.\n * @param {boolean} showFullExtent Whether to show the full extent.\n * @return {number} Capped resolution.\n */\nfunction getViewportClampedResolution(\n  resolution,\n  maxExtent,\n  viewportSize,\n  showFullExtent,\n) {\n  const xResolution = getWidth(maxExtent) / viewportSize[0];\n  const yResolution = getHeight(maxExtent) / viewportSize[1];\n\n  if (showFullExtent) {\n    return Math.min(resolution, Math.max(xResolution, yResolution));\n  }\n  return Math.min(resolution, Math.min(xResolution, yResolution));\n}\n\n/**\n * Returns a modified resolution to be between maxResolution and minResolution while\n * still allowing the value to be slightly out of bounds.\n * Note: the computation is based on the logarithm function (ln):\n *  - at 1, ln(x) is 0\n *  - above 1, ln(x) keeps increasing but at a much slower pace than x\n * The final result is clamped to prevent getting too far away from bounds.\n * @param {number} resolution Resolution.\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @return {number} Smoothed resolution.\n */\nfunction getSmoothClampedResolution(resolution, maxResolution, minResolution) {\n  let result = Math.min(resolution, maxResolution);\n  const ratio = 50;\n\n  result *=\n    Math.log(1 + ratio * Math.max(0, resolution / maxResolution - 1)) / ratio +\n    1;\n  if (minResolution) {\n    result = Math.max(result, minResolution);\n    result /=\n      Math.log(1 + ratio * Math.max(0, minResolution / resolution - 1)) /\n        ratio +\n      1;\n  }\n  return clamp(result, minResolution / 2, maxResolution * 2);\n}\n\n/**\n * @param {Array<number>} resolutions Resolutions.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToResolutions(\n  resolutions,\n  smooth,\n  maxExtent,\n  showFullExtent,\n) {\n  smooth = smooth !== undefined ? smooth : true;\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const maxResolution = resolutions[0];\n        const minResolution = resolutions[resolutions.length - 1];\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent,\n            )\n          : maxResolution;\n\n        // during interacting or animating, allow intermediary values\n        if (isMoving) {\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution,\n          );\n        }\n\n        const capped = Math.min(cappedMaxRes, resolution);\n        const z = Math.floor(linearFindNearest(resolutions, capped, direction));\n        if (resolutions[z] > cappedMaxRes && z < resolutions.length - 1) {\n          return resolutions[z + 1];\n        }\n        return resolutions[z];\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} power Power.\n * @param {number} maxResolution Maximum resolution.\n * @param {number} [minResolution] Minimum resolution.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToPower(\n  power,\n  maxResolution,\n  minResolution,\n  smooth,\n  maxExtent,\n  showFullExtent,\n) {\n  smooth = smooth !== undefined ? smooth : true;\n  minResolution = minResolution !== undefined ? minResolution : 0;\n\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent,\n            )\n          : maxResolution;\n\n        // during interacting or animating, allow intermediary values\n        if (isMoving) {\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution,\n          );\n        }\n\n        const tolerance = 1e-9;\n        const minZoomLevel = Math.ceil(\n          Math.log(maxResolution / cappedMaxRes) / Math.log(power) - tolerance,\n        );\n        const offset = -direction * (0.5 - tolerance) + 0.5;\n        const capped = Math.min(cappedMaxRes, resolution);\n        const cappedZoomLevel = Math.floor(\n          Math.log(maxResolution / capped) / Math.log(power) + offset,\n        );\n        const zoomLevel = Math.max(minZoomLevel, cappedZoomLevel);\n        const newResolution = maxResolution / Math.pow(power, zoomLevel);\n        return clamp(newResolution, minResolution, cappedMaxRes);\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createMinMaxResolution(\n  maxResolution,\n  minResolution,\n  smooth,\n  maxExtent,\n  showFullExtent,\n) {\n  smooth = smooth !== undefined ? smooth : true;\n\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent,\n            )\n          : maxResolution;\n\n        if (!smooth || !isMoving) {\n          return clamp(resolution, minResolution, cappedMaxRes);\n        }\n        return getSmoothClampedResolution(\n          resolution,\n          cappedMaxRes,\n          minResolution,\n        );\n      }\n      return undefined;\n    }\n  );\n}\n","/**\n * @module ol/rotationconstraint\n */\nimport {toRadians} from './math.js';\n\n/**\n * @typedef {function((number|undefined), boolean=): (number|undefined)} Type\n */\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function disable(rotation) {\n  if (rotation !== undefined) {\n    return 0;\n  }\n  return undefined;\n}\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function none(rotation) {\n  if (rotation !== undefined) {\n    return rotation;\n  }\n  return undefined;\n}\n\n/**\n * @param {number} n N.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToN(n) {\n  const theta = (2 * Math.PI) / n;\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, isMoving) {\n      if (isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        rotation = Math.floor(rotation / theta + 0.5) * theta;\n        return rotation;\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} [tolerance] Tolerance.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToZero(tolerance) {\n  const t = tolerance === undefined ? toRadians(5) : tolerance;\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, isMoving) {\n      if (isMoving || rotation === undefined) {\n        return rotation;\n      }\n\n      if (Math.abs(rotation) <= t) {\n        return 0;\n      }\n      return rotation;\n    }\n  );\n}\n","/**\n * @module ol/easing\n */\n\n/**\n * Start slow and speed up.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeIn(t) {\n  return Math.pow(t, 3);\n}\n\n/**\n * Start fast and slow down.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeOut(t) {\n  return 1 - easeIn(1 - t);\n}\n\n/**\n * Start slow, speed up, and then slow down again.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function inAndOut(t) {\n  return 3 * t * t - 2 * t * t * t;\n}\n\n/**\n * Maintain a constant speed over time.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function linear(t) {\n  return t;\n}\n\n/**\n * Start slow, speed up, and at the very end slow down again.  This has the\n * same general behavior as {@link module:ol/easing.inAndOut}, but the final\n * slowdown is delayed.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function upAndDown(t) {\n  if (t < 0.5) {\n    return inAndOut(2 * t);\n  }\n  return 1 - inAndOut(2 * (t - 0.5));\n}\n","/**\n * @module ol/View\n */\nimport BaseObject from './Object.js';\nimport ViewHint from './ViewHint.js';\nimport ViewProperty from './ViewProperty.js';\nimport {DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {\n  METERS_PER_UNIT,\n  createProjection,\n  disableCoordinateWarning,\n  fromUserCoordinate,\n  fromUserExtent,\n  getUserProjection,\n  toUserCoordinate,\n  toUserExtent,\n} from './proj.js';\nimport {VOID} from './functions.js';\nimport {\n  add as addCoordinate,\n  equals as coordinatesEqual,\n  equals,\n  rotate as rotateCoordinate,\n} from './coordinate.js';\nimport {assert} from './asserts.js';\nimport {none as centerNone, createExtent} from './centerconstraint.js';\nimport {clamp, modulo} from './math.js';\nimport {\n  createMinMaxResolution,\n  createSnapToPower,\n  createSnapToResolutions,\n} from './resolutionconstraint.js';\nimport {\n  createSnapToN,\n  createSnapToZero,\n  disable,\n  none as rotationNone,\n} from './rotationconstraint.js';\nimport {easeOut, inAndOut} from './easing.js';\nimport {\n  getCenter,\n  getForViewAndSize,\n  getHeight,\n  getWidth,\n  isEmpty,\n} from './extent.js';\nimport {linearFindNearest} from './array.js';\nimport {fromExtent as polygonFromExtent} from './geom/Polygon.js';\n\n/**\n * An animation configuration\n *\n * @typedef {Object} Animation\n * @property {import(\"./coordinate.js\").Coordinate} [sourceCenter] Source center.\n * @property {import(\"./coordinate.js\").Coordinate} [targetCenter] Target center.\n * @property {number} [sourceResolution] Source resolution.\n * @property {number} [targetResolution] Target resolution.\n * @property {number} [sourceRotation] Source rotation.\n * @property {number} [targetRotation] Target rotation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Anchor.\n * @property {number} start Start.\n * @property {number} duration Duration.\n * @property {boolean} complete Complete.\n * @property {function(number):number} easing Easing.\n * @property {function(boolean):void} callback Callback.\n */\n\n/**\n * @typedef {Object} Constraints\n * @property {import(\"./centerconstraint.js\").Type} center Center.\n * @property {import(\"./resolutionconstraint.js\").Type} resolution Resolution.\n * @property {import(\"./rotationconstraint.js\").Type} rotation Rotation.\n */\n\n/**\n * @typedef {Object} FitOptions\n * @property {import(\"./size.js\").Size} [size] The size in pixels of the box to\n * fit the extent into. Defaults to the size of the map the view is associated with.\n * If no map or multiple maps are connected to the view, provide the desired box size\n * (e.g. `map.getSize()`).\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in pixels) to be\n * cleared inside the view. Values in the array are top, right, bottom and left\n * padding.\n * @property {boolean} [nearest=false] If the view `constrainResolution` option is `true`,\n * get the nearest extent instead of the closest that actually fits the view.\n * @property {number} [minResolution=0] Minimum resolution that we zoom to.\n * @property {number} [maxZoom] Maximum zoom level that we zoom to. If\n * `minResolution` is given, this property is ignored.\n * @property {number} [duration] The duration of the animation in milliseconds.\n * By default, there is no animation to the target extent.\n * @property {function(number):number} [easing] The easing function used during\n * the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n * @property {function(boolean):void} [callback] Function called when the view is in\n * its final position. The callback will be called with `true` if the animation\n * series completed on its own or `false` if it was cancelled.\n */\n\n/**\n * @typedef {Object} ViewOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The initial center for\n * the view. If a user projection is not set, the coordinate system for the center is\n * specified with the `projection` option. Layer sources will not be fetched if this\n * is not set, but the center can be set later with {@link #setCenter}.\n * @property {boolean|number} [constrainRotation=true] Rotation constraint.\n * `false` means no constraint. `true` means no constraint, but snap to zero\n * near zero. A number constrains the rotation to that number of values. For\n * example, `4` will constrain the rotation to 0, 90, 180, and 270 degrees.\n * @property {boolean} [enableRotation=true] Enable rotation.\n * If `false`, a rotation constraint that always sets the rotation to zero is\n * used. The `constrainRotation` option has no effect if `enableRotation` is\n * `false`.\n * @property {import(\"./extent.js\").Extent} [extent] The extent that constrains the\n * view, in other words, nothing outside of this extent can be visible on the map.\n * @property {boolean} [constrainOnlyCenter=false] If true, the extent\n * constraint will only apply to the view center and not the whole extent.\n * @property {boolean} [smoothExtentConstraint=true] If true, the extent\n * constraint will be applied smoothly, i.e. allow the view to go slightly outside\n * of the given `extent`.\n * @property {number} [maxResolution] The maximum resolution used to determine\n * the resolution constraint. It is used together with `minResolution` (or\n * `maxZoom`) and `zoomFactor`. If unspecified it is calculated in such a way\n * that the projection's validity extent fits in a 256x256 px tile. If the\n * projection is Spherical Mercator (the default) then `maxResolution` defaults\n * to `40075016.68557849 / 256 = 156543.03392804097`.\n * @property {number} [minResolution] The minimum resolution used to determine\n * the resolution constraint.  It is used together with `maxResolution` (or\n * `minZoom`) and `zoomFactor`.  If unspecified it is calculated assuming 29\n * zoom levels (with a factor of 2). If the projection is Spherical Mercator\n * (the default) then `minResolution` defaults to\n * `40075016.68557849 / 256 / Math.pow(2, 28) = 0.0005831682455839253`.\n * @property {number} [maxZoom=28] The maximum zoom level used to determine the\n * resolution constraint. It is used together with `minZoom` (or\n * `maxResolution`) and `zoomFactor`.  Note that if `minResolution` is also\n * provided, it is given precedence over `maxZoom`.\n * @property {number} [minZoom=0] The minimum zoom level used to determine the\n * resolution constraint. It is used together with `maxZoom` (or\n * `minResolution`) and `zoomFactor`.  Note that if `maxResolution` is also\n * provided, it is given precedence over `minZoom`.\n * @property {boolean} [multiWorld=false] If `false` the view is constrained so\n * only one world is visible, and you cannot pan off the edge.  If `true` the map\n * may show multiple worlds at low zoom levels.  Only used if the `projection` is\n * global.  Note that if `extent` is also provided it is given precedence.\n * @property {boolean} [constrainResolution=false] If true, the view will always\n * animate to the closest zoom level after an interaction; false means\n * intermediary zoom levels are allowed.\n * @property {boolean} [smoothResolutionConstraint=true] If true, the resolution\n * min/max values will be applied smoothly, i. e. allow the view to exceed slightly\n * the given resolution or zoom bounds.\n * @property {boolean} [showFullExtent=false] Allow the view to be zoomed out to\n * show the full configured extent. By default, when a view is configured with an\n * extent, users will not be able to zoom out so the viewport exceeds the extent in\n * either dimension. This means the full extent may not be visible if the viewport\n * is taller or wider than the aspect ratio of the configured extent. If\n * showFullExtent is true, the user will be able to zoom out so that the viewport\n * exceeds the height or width of the configured extent, but not both, allowing the\n * full extent to be shown.\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857'] The\n * projection. The default is Spherical Mercator.\n * @property {number} [resolution] The initial resolution for the view. The\n * units are `projection` units per pixel (e.g. meters per pixel). An\n * alternative to setting this is to set `zoom`. Layer sources will not be\n * fetched if neither this nor `zoom` are defined, but they can be set later\n * with {@link #setZoom} or {@link #setResolution}.\n * @property {Array<number>} [resolutions] Resolutions that determine the\n * zoom levels if specified. The index in the array corresponds to the zoom level,\n * therefore the resolution values have to be in descending order. It also constrains\n * the resolution by the minimum and maximum value. If set the `maxResolution`,\n * `minResolution`, `minZoom`, `maxZoom`, and `zoomFactor` options are ignored.\n * @property {number} [rotation=0] The initial rotation for the view in radians\n * (positive rotation clockwise, 0 means North).\n * @property {number} [zoom] Only used if `resolution` is not defined. Zoom\n * level used to calculate the initial resolution for the view.\n * @property {number} [zoomFactor=2] The zoom factor used to compute the\n * corresponding resolution.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in css pixels).\n * If the map viewport is partially covered with other content (overlays) along\n * its edges, this setting allows to shift the center of the viewport away from\n * that content. The order of the values is top, right, bottom, left.\n */\n\n/**\n * @typedef {Object} AnimationOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The center of the view at the end of\n * the animation.\n * @property {number} [zoom] The zoom level of the view at the end of the\n * animation. This takes precedence over `resolution`.\n * @property {number} [resolution] The resolution of the view at the end\n * of the animation.  If `zoom` is also provided, this option will be ignored.\n * @property {number} [rotation] The rotation of the view at the end of\n * the animation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Optional anchor to remain fixed\n * during a rotation or resolution animation.\n * @property {number} [duration=1000] The duration of the animation in milliseconds.\n * @property {function(number):number} [easing] The easing function used\n * during the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./coordinate.js\").Coordinate} center Center (in view projection coordinates).\n * @property {import(\"./proj/Projection.js\").default} projection Projection.\n * @property {number} resolution Resolution.\n * @property {import(\"./coordinate.js\").Coordinate} [nextCenter] The next center during an animation series.\n * @property {number} [nextResolution] The next resolution during an animation series.\n * @property {number} [nextRotation] The next rotation during an animation series.\n * @property {number} rotation Rotation.\n * @property {number} zoom Zoom.\n */\n\n/**\n * Like {@link import(\"./Map.js\").FrameState}, but just `viewState` and `extent`.\n * @typedef {Object} ViewStateLayerStateExtent\n * @property {State} viewState View state.\n * @property {import(\"./extent.js\").Extent} extent Extent (in user projection coordinates).\n * @property {Array<import(\"./layer/Layer.js\").State>} [layerStatesArray] Layer states.\n */\n\n/**\n * Default min zoom level for the map view.\n * @type {number}\n */\nconst DEFAULT_MIN_ZOOM = 0;\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:center'|'change:resolution'|'change:rotation'} ViewObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<ViewObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|ViewObjectEventTypes, Return>} ViewOnSignature\n */\n\n/**\n * @classdesc\n * A View object represents a simple 2D view of the map.\n *\n * This is the object to act upon to change the center, resolution,\n * and rotation of the map.\n *\n * A View has a `projection`. The projection determines the\n * coordinate system of the center, and its units determine the units of the\n * resolution (projection units per pixel). The default projection is\n * Web Mercator (EPSG:3857).\n *\n * ### The view states\n *\n * A View is determined by three states: `center`, `resolution`,\n * and `rotation`. Each state has a corresponding getter and setter, e.g.\n * `getCenter` and `setCenter` for the `center` state.\n *\n * The `zoom` state is actually not saved on the view: all computations\n * internally use the `resolution` state. Still, the `setZoom` and `getZoom`\n * methods are available, as well as `getResolutionForZoom` and\n * `getZoomForResolution` to switch from one system to the other.\n *\n * ### The constraints\n *\n * `setCenter`, `setResolution` and `setRotation` can be used to change the\n * states of the view, but any constraint defined in the constructor will\n * be applied along the way.\n *\n * A View object can have a *resolution constraint*, a *rotation constraint*\n * and a *center constraint*.\n *\n * The *resolution constraint* typically restricts min/max values and\n * snaps to specific resolutions. It is determined by the following\n * options: `resolutions`, `maxResolution`, `maxZoom` and `zoomFactor`.\n * If `resolutions` is set, the other three options are ignored. See\n * documentation for each option for more information. By default, the view\n * only has a min/max restriction and allow intermediary zoom levels when\n * pinch-zooming for example.\n *\n * The *rotation constraint* snaps to specific angles. It is determined\n * by the following options: `enableRotation` and `constrainRotation`.\n * By default rotation is allowed and its value is snapped to zero when approaching the\n * horizontal.\n *\n * The *center constraint* is determined by the `extent` option. By\n * default the view center is not constrained at all.\n *\n * ### Changing the view state\n *\n * It is important to note that `setZoom`, `setResolution`, `setCenter` and\n * `setRotation` are subject to the above mentioned constraints. As such, it\n * may sometimes not be possible to know in advance the resulting state of the\n * View. For example, calling `setResolution(10)` does not guarantee that\n * `getResolution()` will return `10`.\n *\n * A consequence of this is that, when applying a delta on the view state, one\n * should use `adjustCenter`, `adjustRotation`, `adjustZoom` and `adjustResolution`\n * rather than the corresponding setters. This will let view do its internal\n * computations. Besides, the `adjust*` methods also take an `anchor`\n * argument which allows specifying an origin for the transformation.\n *\n * ### Interacting with the view\n *\n * View constraints are usually only applied when the view is *at rest*, meaning that\n * no interaction or animation is ongoing. As such, if the user puts the view in a\n * state that is not equivalent to a constrained one (e.g. rotating the view when\n * the snap angle is 0), an animation will be triggered at the interaction end to\n * put back the view to a stable state;\n *\n * @api\n */\nclass View extends BaseObject {\n  /**\n   * @param {ViewOptions} [options] View options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ViewOnSignature<void>}\n     */\n    this.un;\n\n    options = Object.assign({}, options);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.hints_ = [0, 0];\n\n    /**\n     * @private\n     * @type {Array<Array<Animation>>}\n     */\n    this.animations_ = [];\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.updateAnimationKey_;\n\n    /**\n     * @private\n     * @const\n     * @type {import(\"./proj/Projection.js\").default}\n     */\n    this.projection_ = createProjection(options.projection, 'EPSG:3857');\n\n    /**\n     * @private\n     * @type {import(\"./size.js\").Size}\n     */\n    this.viewportSize_ = [100, 100];\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.targetCenter_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetResolution_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate}\n     */\n    this.nextCenter_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.nextResolution_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.nextRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.cancelAnchor_ = undefined;\n\n    if (options.projection) {\n      disableCoordinateWarning();\n    }\n    if (options.center) {\n      options.center = fromUserCoordinate(options.center, this.projection_);\n    }\n    if (options.extent) {\n      options.extent = fromUserExtent(options.extent, this.projection_);\n    }\n\n    this.applyOptions_(options);\n  }\n\n  /**\n   * Set up the view with the given options.\n   * @param {ViewOptions} options View options.\n   */\n  applyOptions_(options) {\n    const properties = Object.assign({}, options);\n    for (const key in ViewProperty) {\n      delete properties[key];\n    }\n    this.setProperties(properties, true);\n\n    const resolutionConstraintInfo = createResolutionConstraint(options);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxResolution_ = resolutionConstraintInfo.maxResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minResolution_ = resolutionConstraintInfo.minResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.zoomFactor_ = resolutionConstraintInfo.zoomFactor;\n\n    /**\n     * @private\n     * @type {Array<number>|undefined}\n     */\n    this.resolutions_ = options.resolutions;\n\n    /**\n     * @type {Array<number>|undefined}\n     * @private\n     */\n    this.padding_ = options.padding;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minZoom_ = resolutionConstraintInfo.minZoom;\n\n    const centerConstraint = createCenterConstraint(options);\n    const resolutionConstraint = resolutionConstraintInfo.constraint;\n    const rotationConstraint = createRotationConstraint(options);\n\n    /**\n     * @private\n     * @type {Constraints}\n     */\n    this.constraints_ = {\n      center: centerConstraint,\n      resolution: resolutionConstraint,\n      rotation: rotationConstraint,\n    };\n\n    this.setRotation(options.rotation !== undefined ? options.rotation : 0);\n    this.setCenterInternal(\n      options.center !== undefined ? options.center : null,\n    );\n    if (options.resolution !== undefined) {\n      this.setResolution(options.resolution);\n    } else if (options.zoom !== undefined) {\n      this.setZoom(options.zoom);\n    }\n  }\n\n  /**\n   * Padding (in css pixels).\n   * If the map viewport is partially covered with other content (overlays) along\n   * its edges, this setting allows to shift the center of the viewport away from that\n   * content. The order of the values in the array is top, right, bottom, left.\n   * The default is no padding, which is equivalent to `[0, 0, 0, 0]`.\n   * @type {Array<number>|undefined}\n   * @api\n   */\n  get padding() {\n    return this.padding_;\n  }\n  set padding(padding) {\n    let oldPadding = this.padding_;\n    this.padding_ = padding;\n    const center = this.getCenterInternal();\n    if (center) {\n      const newPadding = padding || [0, 0, 0, 0];\n      oldPadding = oldPadding || [0, 0, 0, 0];\n      const resolution = this.getResolution();\n      const offsetX =\n        (resolution / 2) *\n        (newPadding[3] - oldPadding[3] + oldPadding[1] - newPadding[1]);\n      const offsetY =\n        (resolution / 2) *\n        (newPadding[0] - oldPadding[0] + oldPadding[2] - newPadding[2]);\n      this.setCenterInternal([center[0] + offsetX, center[1] - offsetY]);\n    }\n  }\n\n  /**\n   * Get an updated version of the view options used to construct the view.  The\n   * current resolution (or zoom), center, and rotation are applied to any stored\n   * options.  The provided options can be used to apply new min/max zoom or\n   * resolution limits.\n   * @param {ViewOptions} newOptions New options to be applied.\n   * @return {ViewOptions} New options updated with the current view state.\n   */\n  getUpdatedOptions_(newOptions) {\n    const options = this.getProperties();\n\n    // preserve resolution (or zoom)\n    if (options.resolution !== undefined) {\n      options.resolution = this.getResolution();\n    } else {\n      options.zoom = this.getZoom();\n    }\n\n    // preserve center\n    options.center = this.getCenterInternal();\n\n    // preserve rotation\n    options.rotation = this.getRotation();\n\n    return Object.assign({}, options, newOptions);\n  }\n\n  /**\n   * Animate the view.  The view's center, zoom (or resolution), and rotation\n   * can be animated for smooth transitions between view states.  For example,\n   * to animate the view to a new zoom level:\n   *\n   *     view.animate({zoom: view.getZoom() + 1});\n   *\n   * By default, the animation lasts one second and uses in-and-out easing.  You\n   * can customize this behavior by including `duration` (in milliseconds) and\n   * `easing` options (see {@link module:ol/easing}).\n   *\n   * To chain together multiple animations, call the method with multiple\n   * animation objects.  For example, to first zoom and then pan:\n   *\n   *     view.animate({zoom: 10}, {center: [0, 0]});\n   *\n   * If you provide a function as the last argument to the animate method, it\n   * will get called at the end of an animation series.  The callback will be\n   * called with `true` if the animation series completed on its own or `false`\n   * if it was cancelled.\n   *\n   * Animations are cancelled by user interactions (e.g. dragging the map) or by\n   * calling `view.setCenter()`, `view.setResolution()`, or `view.setRotation()`\n   * (or another method that calls one of these).\n   *\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation\n   *     options.  Multiple animations can be run in series by passing multiple\n   *     options objects.  To run multiple animations in parallel, call the method\n   *     multiple times.  An optional callback can be provided as a final\n   *     argument.  The callback will be called with a boolean indicating whether\n   *     the animation completed without being cancelled.\n   * @api\n   */\n  animate(var_args) {\n    if (this.isDef() && !this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n    const args = new Array(arguments.length);\n    for (let i = 0; i < args.length; ++i) {\n      let options = arguments[i];\n      if (options.center) {\n        options = Object.assign({}, options);\n        options.center = fromUserCoordinate(\n          options.center,\n          this.getProjection(),\n        );\n      }\n      if (options.anchor) {\n        options = Object.assign({}, options);\n        options.anchor = fromUserCoordinate(\n          options.anchor,\n          this.getProjection(),\n        );\n      }\n      args[i] = options;\n    }\n    this.animateInternal.apply(this, args);\n  }\n\n  /**\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation options.\n   */\n  animateInternal(var_args) {\n    let animationCount = arguments.length;\n    let callback;\n    if (\n      animationCount > 1 &&\n      typeof arguments[animationCount - 1] === 'function'\n    ) {\n      callback = arguments[animationCount - 1];\n      --animationCount;\n    }\n\n    let i = 0;\n    for (; i < animationCount && !this.isDef(); ++i) {\n      // if view properties are not yet set, shortcut to the final state\n      const state = arguments[i];\n      if (state.center) {\n        this.setCenterInternal(state.center);\n      }\n      if (state.zoom !== undefined) {\n        this.setZoom(state.zoom);\n      } else if (state.resolution) {\n        this.setResolution(state.resolution);\n      }\n      if (state.rotation !== undefined) {\n        this.setRotation(state.rotation);\n      }\n    }\n    if (i === animationCount) {\n      if (callback) {\n        animationCallback(callback, true);\n      }\n      return;\n    }\n\n    let start = Date.now();\n    let center = this.targetCenter_.slice();\n    let resolution = this.targetResolution_;\n    let rotation = this.targetRotation_;\n    const series = [];\n    for (; i < animationCount; ++i) {\n      const options = /** @type {AnimationOptions} */ (arguments[i]);\n\n      const animation = {\n        start: start,\n        complete: false,\n        anchor: options.anchor,\n        duration: options.duration !== undefined ? options.duration : 1000,\n        easing: options.easing || inAndOut,\n        callback: callback,\n      };\n\n      if (options.center) {\n        animation.sourceCenter = center;\n        animation.targetCenter = options.center.slice();\n        center = animation.targetCenter;\n      }\n\n      if (options.zoom !== undefined) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = this.getResolutionForZoom(options.zoom);\n        resolution = animation.targetResolution;\n      } else if (options.resolution) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = options.resolution;\n        resolution = animation.targetResolution;\n      }\n\n      if (options.rotation !== undefined) {\n        animation.sourceRotation = rotation;\n        const delta =\n          modulo(options.rotation - rotation + Math.PI, 2 * Math.PI) - Math.PI;\n        animation.targetRotation = rotation + delta;\n        rotation = animation.targetRotation;\n      }\n\n      // check if animation is a no-op\n      if (isNoopAnimation(animation)) {\n        animation.complete = true;\n        // we still push it onto the series for callback handling\n      } else {\n        start += animation.duration;\n      }\n      series.push(animation);\n    }\n    this.animations_.push(series);\n    this.setHint(ViewHint.ANIMATING, 1);\n    this.updateAnimations_();\n  }\n\n  /**\n   * Determine if the view is being animated.\n   * @return {boolean} The view is being animated.\n   * @api\n   */\n  getAnimating() {\n    return this.hints_[ViewHint.ANIMATING] > 0;\n  }\n\n  /**\n   * Determine if the user is interacting with the view, such as panning or zooming.\n   * @return {boolean} The view is being interacted with.\n   * @api\n   */\n  getInteracting() {\n    return this.hints_[ViewHint.INTERACTING] > 0;\n  }\n\n  /**\n   * Cancel any ongoing animations.\n   * @api\n   */\n  cancelAnimations() {\n    this.setHint(ViewHint.ANIMATING, -this.hints_[ViewHint.ANIMATING]);\n    let anchor;\n    for (let i = 0, ii = this.animations_.length; i < ii; ++i) {\n      const series = this.animations_[i];\n      if (series[0].callback) {\n        animationCallback(series[0].callback, false);\n      }\n      if (!anchor) {\n        for (let j = 0, jj = series.length; j < jj; ++j) {\n          const animation = series[j];\n          if (!animation.complete) {\n            anchor = animation.anchor;\n            break;\n          }\n        }\n      }\n    }\n    this.animations_.length = 0;\n    this.cancelAnchor_ = anchor;\n    this.nextCenter_ = null;\n    this.nextResolution_ = NaN;\n    this.nextRotation_ = NaN;\n  }\n\n  /**\n   * Update all animations.\n   */\n  updateAnimations_() {\n    if (this.updateAnimationKey_ !== undefined) {\n      cancelAnimationFrame(this.updateAnimationKey_);\n      this.updateAnimationKey_ = undefined;\n    }\n    if (!this.getAnimating()) {\n      return;\n    }\n    const now = Date.now();\n    let more = false;\n    for (let i = this.animations_.length - 1; i >= 0; --i) {\n      const series = this.animations_[i];\n      let seriesComplete = true;\n      for (let j = 0, jj = series.length; j < jj; ++j) {\n        const animation = series[j];\n        if (animation.complete) {\n          continue;\n        }\n        const elapsed = now - animation.start;\n        let fraction =\n          animation.duration > 0 ? elapsed / animation.duration : 1;\n        if (fraction >= 1) {\n          animation.complete = true;\n          fraction = 1;\n        } else {\n          seriesComplete = false;\n        }\n        const progress = animation.easing(fraction);\n        if (animation.sourceCenter) {\n          const x0 = animation.sourceCenter[0];\n          const y0 = animation.sourceCenter[1];\n          const x1 = animation.targetCenter[0];\n          const y1 = animation.targetCenter[1];\n          this.nextCenter_ = animation.targetCenter;\n          const x = x0 + progress * (x1 - x0);\n          const y = y0 + progress * (y1 - y0);\n          this.targetCenter_ = [x, y];\n        }\n        if (animation.sourceResolution && animation.targetResolution) {\n          const resolution =\n            progress === 1\n              ? animation.targetResolution\n              : animation.sourceResolution +\n                progress *\n                  (animation.targetResolution - animation.sourceResolution);\n          if (animation.anchor) {\n            const size = this.getViewportSize_(this.getRotation());\n            const constrainedResolution = this.constraints_.resolution(\n              resolution,\n              0,\n              size,\n              true,\n            );\n            this.targetCenter_ = this.calculateCenterZoom(\n              constrainedResolution,\n              animation.anchor,\n            );\n          }\n          this.nextResolution_ = animation.targetResolution;\n          this.targetResolution_ = resolution;\n          this.applyTargetState_(true);\n        }\n        if (\n          animation.sourceRotation !== undefined &&\n          animation.targetRotation !== undefined\n        ) {\n          const rotation =\n            progress === 1\n              ? modulo(animation.targetRotation + Math.PI, 2 * Math.PI) -\n                Math.PI\n              : animation.sourceRotation +\n                progress *\n                  (animation.targetRotation - animation.sourceRotation);\n          if (animation.anchor) {\n            const constrainedRotation = this.constraints_.rotation(\n              rotation,\n              true,\n            );\n            this.targetCenter_ = this.calculateCenterRotate(\n              constrainedRotation,\n              animation.anchor,\n            );\n          }\n          this.nextRotation_ = animation.targetRotation;\n          this.targetRotation_ = rotation;\n        }\n        this.applyTargetState_(true);\n        more = true;\n        if (!animation.complete) {\n          break;\n        }\n      }\n      if (seriesComplete) {\n        this.animations_[i] = null;\n        this.setHint(ViewHint.ANIMATING, -1);\n        this.nextCenter_ = null;\n        this.nextResolution_ = NaN;\n        this.nextRotation_ = NaN;\n        const callback = series[0].callback;\n        if (callback) {\n          animationCallback(callback, true);\n        }\n      }\n    }\n    // prune completed series\n    this.animations_ = this.animations_.filter(Boolean);\n    if (more && this.updateAnimationKey_ === undefined) {\n      this.updateAnimationKey_ = requestAnimationFrame(\n        this.updateAnimations_.bind(this),\n      );\n    }\n  }\n\n  /**\n   * @param {number} rotation Target rotation.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Rotation anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for rotation and anchor.\n   */\n  calculateCenterRotate(rotation, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    if (currentCenter !== undefined) {\n      center = [currentCenter[0] - anchor[0], currentCenter[1] - anchor[1]];\n      rotateCoordinate(center, rotation - this.getRotation());\n      addCoordinate(center, anchor);\n    }\n    return center;\n  }\n\n  /**\n   * @param {number} resolution Target resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Zoom anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for resolution and anchor.\n   */\n  calculateCenterZoom(resolution, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    const currentResolution = this.getResolution();\n    if (currentCenter !== undefined && currentResolution !== undefined) {\n      const x =\n        anchor[0] -\n        (resolution * (anchor[0] - currentCenter[0])) / currentResolution;\n      const y =\n        anchor[1] -\n        (resolution * (anchor[1] - currentCenter[1])) / currentResolution;\n      center = [x, y];\n    }\n    return center;\n  }\n\n  /**\n   * Returns the current viewport size.\n   * @private\n   * @param {number} [rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size or `[100, 100]` when no viewport is found.\n   */\n  getViewportSize_(rotation) {\n    const size = this.viewportSize_;\n    if (rotation) {\n      const w = size[0];\n      const h = size[1];\n      return [\n        Math.abs(w * Math.cos(rotation)) + Math.abs(h * Math.sin(rotation)),\n        Math.abs(w * Math.sin(rotation)) + Math.abs(h * Math.cos(rotation)),\n      ];\n    }\n    return size;\n  }\n\n  /**\n   * Stores the viewport size on the view. The viewport size is not read every time from the DOM\n   * to avoid performance hit and layout reflow.\n   * This should be done on map size change.\n   * Note: the constraints are not resolved during an animation to avoid stopping it\n   * @param {import(\"./size.js\").Size} [size] Viewport size; if undefined, [100, 100] is assumed\n   */\n  setViewportSize(size) {\n    this.viewportSize_ = Array.isArray(size) ? size.slice() : [100, 100];\n    if (!this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n  }\n\n  /**\n   * Get the view center.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   * @observable\n   * @api\n   */\n  getCenter() {\n    const center = this.getCenterInternal();\n    if (!center) {\n      return center;\n    }\n    return toUserCoordinate(center, this.getProjection());\n  }\n\n  /**\n   * Get the view center without transforming to user projection.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   */\n  getCenterInternal() {\n    return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (\n      this.get(ViewProperty.CENTER)\n    );\n  }\n\n  /**\n   * @return {Constraints} Constraints.\n   */\n  getConstraints() {\n    return this.constraints_;\n  }\n\n  /**\n   * @return {boolean} Resolution constraint is set\n   */\n  getConstrainResolution() {\n    return this.get('constrainResolution');\n  }\n\n  /**\n   * @param {Array<number>} [hints] Destination array.\n   * @return {Array<number>} Hint.\n   */\n  getHints(hints) {\n    if (hints !== undefined) {\n      hints[0] = this.hints_[0];\n      hints[1] = this.hints_[1];\n      return hints;\n    }\n    return this.hints_.slice();\n  }\n\n  /**\n   * Calculate the extent for the current view state and the passed box size.\n   * @param {import(\"./size.js\").Size} [size] The pixel dimensions of the box\n   * into which the calculated extent should fit. Defaults to the size of the\n   * map the view is associated with.\n   * If no map or multiple maps are connected to the view, provide the desired\n   * box size (e.g. `map.getSize()`).\n   * @return {import(\"./extent.js\").Extent} Extent.\n   * @api\n   */\n  calculateExtent(size) {\n    const extent = this.calculateExtentInternal(size);\n    return toUserExtent(extent, this.getProjection());\n  }\n\n  /**\n   * @param {import(\"./size.js\").Size} [size] Box pixel size. If not provided,\n   * the map's last known viewport size will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  calculateExtentInternal(size) {\n    size = size || this.getViewportSizeMinusPadding_();\n    const center = /** @type {!import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    assert(center, 'The view center is not defined');\n    const resolution = /** @type {!number} */ (this.getResolution());\n    assert(resolution !== undefined, 'The view resolution is not defined');\n    const rotation = /** @type {!number} */ (this.getRotation());\n    assert(rotation !== undefined, 'The view rotation is not defined');\n\n    return getForViewAndSize(center, resolution, rotation, size);\n  }\n\n  /**\n   * Get the maximum resolution of the view.\n   * @return {number} The maximum resolution of the view.\n   * @api\n   */\n  getMaxResolution() {\n    return this.maxResolution_;\n  }\n\n  /**\n   * Get the minimum resolution of the view.\n   * @return {number} The minimum resolution of the view.\n   * @api\n   */\n  getMinResolution() {\n    return this.minResolution_;\n  }\n\n  /**\n   * Get the maximum zoom level for the view.\n   * @return {number} The maximum zoom level.\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.minResolution_)\n    );\n  }\n\n  /**\n   * Set a new maximum zoom level for the view.\n   * @param {number} zoom The maximum zoom level.\n   * @api\n   */\n  setMaxZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({maxZoom: zoom}));\n  }\n\n  /**\n   * Get the minimum zoom level for the view.\n   * @return {number} The minimum zoom level.\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.maxResolution_)\n    );\n  }\n\n  /**\n   * Set a new minimum zoom level for the view.\n   * @param {number} zoom The minimum zoom level.\n   * @api\n   */\n  setMinZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({minZoom: zoom}));\n  }\n\n  /**\n   * Set whether the view should allow intermediary zoom levels.\n   * @param {boolean} enabled Whether the resolution is constrained.\n   * @api\n   */\n  setConstrainResolution(enabled) {\n    this.applyOptions_(this.getUpdatedOptions_({constrainResolution: enabled}));\n  }\n\n  /**\n   * Get the view projection.\n   * @return {import(\"./proj/Projection.js\").default} The projection of the view.\n   * @api\n   */\n  getProjection() {\n    return this.projection_;\n  }\n\n  /**\n   * Get the view resolution.\n   * @return {number|undefined} The resolution of the view.\n   * @observable\n   * @api\n   */\n  getResolution() {\n    return /** @type {number|undefined} */ (this.get(ViewProperty.RESOLUTION));\n  }\n\n  /**\n   * Get the resolutions for the view. This returns the array of resolutions\n   * passed to the constructor of the View, or undefined if none were given.\n   * @return {Array<number>|undefined} The resolutions of the view.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   * @api\n   */\n  getResolutionForExtent(extent, size) {\n    return this.getResolutionForExtentInternal(\n      fromUserExtent(extent, this.getProjection()),\n      size,\n    );\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   */\n  getResolutionForExtentInternal(extent, size) {\n    size = size || this.getViewportSizeMinusPadding_();\n    const xResolution = getWidth(extent) / size[0];\n    const yResolution = getHeight(extent) / size[1];\n    return Math.max(xResolution, yResolution);\n  }\n\n  /**\n   * Return a function that returns a value between 0 and 1 for a\n   * resolution. Exponential scaling is assumed.\n   * @param {number} [power] Power.\n   * @return {function(number): number} Resolution for value function.\n   */\n  getResolutionForValueFunction(power) {\n    power = power || 2;\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / Math.log(power);\n    return (\n      /**\n       * @param {number} value Value.\n       * @return {number} Resolution.\n       */\n      function (value) {\n        const resolution = maxResolution / Math.pow(power, value * max);\n        return resolution;\n      }\n    );\n  }\n\n  /**\n   * Get the view rotation.\n   * @return {number} The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  getRotation() {\n    return /** @type {number} */ (this.get(ViewProperty.ROTATION));\n  }\n\n  /**\n   * Return a function that returns a resolution for a value between\n   * 0 and 1. Exponential scaling is assumed.\n   * @param {number} [power] Power.\n   * @return {function(number): number} Value for resolution function.\n   */\n  getValueForResolutionFunction(power) {\n    const logPower = Math.log(power || 2);\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / logPower;\n    return (\n      /**\n       * @param {number} resolution Resolution.\n       * @return {number} Value.\n       */\n      function (resolution) {\n        const value = Math.log(maxResolution / resolution) / logPower / max;\n        return value;\n      }\n    );\n  }\n\n  /**\n   * Returns the size of the viewport minus padding.\n   * @private\n   * @param {number} [rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size reduced by the padding.\n   */\n  getViewportSizeMinusPadding_(rotation) {\n    let size = this.getViewportSize_(rotation);\n    const padding = this.padding_;\n    if (padding) {\n      size = [\n        size[0] - padding[1] - padding[3],\n        size[1] - padding[0] - padding[2],\n      ];\n    }\n    return size;\n  }\n\n  /**\n   * @return {State} View state.\n   */\n  getState() {\n    const projection = this.getProjection();\n    const resolution = this.getResolution();\n    const rotation = this.getRotation();\n    let center = /** @type {import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    const padding = this.padding_;\n    if (padding) {\n      const reducedSize = this.getViewportSizeMinusPadding_();\n      center = calculateCenterOn(\n        center,\n        this.getViewportSize_(),\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation,\n      );\n    }\n    return {\n      center: center.slice(0),\n      projection: projection !== undefined ? projection : null,\n      resolution: resolution,\n      nextCenter: this.nextCenter_,\n      nextResolution: this.nextResolution_,\n      nextRotation: this.nextRotation_,\n      rotation: rotation,\n      zoom: this.getZoom(),\n    };\n  }\n\n  /**\n   * @return {ViewStateLayerStateExtent} Like `FrameState`, but just `viewState` and `extent`.\n   */\n  getViewStateAndExtent() {\n    return {\n      viewState: this.getState(),\n      extent: this.calculateExtent(),\n    };\n  }\n\n  /**\n   * Get the current zoom level. This method may return non-integer zoom levels\n   * if the view does not constrain the resolution, or if an interaction or\n   * animation is underway.\n   * @return {number|undefined} Zoom.\n   * @api\n   */\n  getZoom() {\n    let zoom;\n    const resolution = this.getResolution();\n    if (resolution !== undefined) {\n      zoom = this.getZoomForResolution(resolution);\n    }\n    return zoom;\n  }\n\n  /**\n   * Get the zoom level for a resolution.\n   * @param {number} resolution The resolution.\n   * @return {number|undefined} The zoom level for the provided resolution.\n   * @api\n   */\n  getZoomForResolution(resolution) {\n    let offset = this.minZoom_ || 0;\n    let max, zoomFactor;\n    if (this.resolutions_) {\n      const nearest = linearFindNearest(this.resolutions_, resolution, 1);\n      offset = nearest;\n      max = this.resolutions_[nearest];\n      if (nearest == this.resolutions_.length - 1) {\n        zoomFactor = 2;\n      } else {\n        zoomFactor = max / this.resolutions_[nearest + 1];\n      }\n    } else {\n      max = this.maxResolution_;\n      zoomFactor = this.zoomFactor_;\n    }\n    return offset + Math.log(max / resolution) / Math.log(zoomFactor);\n  }\n\n  /**\n   * Get the resolution for a zoom level.\n   * @param {number} zoom Zoom level.\n   * @return {number} The view resolution for the provided zoom level.\n   * @api\n   */\n  getResolutionForZoom(zoom) {\n    if (this.resolutions_) {\n      if (this.resolutions_.length <= 1) {\n        return 0;\n      }\n      const baseLevel = clamp(\n        Math.floor(zoom),\n        0,\n        this.resolutions_.length - 2,\n      );\n      const zoomFactor =\n        this.resolutions_[baseLevel] / this.resolutions_[baseLevel + 1];\n      return (\n        this.resolutions_[baseLevel] /\n        Math.pow(zoomFactor, clamp(zoom - baseLevel, 0, 1))\n      );\n    }\n    return (\n      this.maxResolution_ / Math.pow(this.zoomFactor_, zoom - this.minZoom_)\n    );\n  }\n\n  /**\n   * Fit the given geometry or extent based on the given map size and border.\n   * The size is pixel dimensions of the box to fit the extent into.\n   * In most cases you will want to use the map size, that is `map.getSize()`.\n   * Takes care of the map angle.\n   * @param {import(\"./geom/SimpleGeometry.js\").default|import(\"./extent.js\").Extent} geometryOrExtent The geometry or\n   *     extent to fit the view to.\n   * @param {FitOptions} [options] Options.\n   * @api\n   */\n  fit(geometryOrExtent, options) {\n    /** @type {import(\"./geom/SimpleGeometry.js\").default} */\n    let geometry;\n    assert(\n      Array.isArray(geometryOrExtent) ||\n        typeof (/** @type {?} */ (geometryOrExtent).getSimplifiedGeometry) ===\n          'function',\n      'Invalid extent or geometry provided as `geometry`',\n    );\n    if (Array.isArray(geometryOrExtent)) {\n      assert(\n        !isEmpty(geometryOrExtent),\n        'Cannot fit empty extent provided as `geometry`',\n      );\n      const extent = fromUserExtent(geometryOrExtent, this.getProjection());\n      geometry = polygonFromExtent(extent);\n    } else if (geometryOrExtent.getType() === 'Circle') {\n      const extent = fromUserExtent(\n        geometryOrExtent.getExtent(),\n        this.getProjection(),\n      );\n      geometry = polygonFromExtent(extent);\n      geometry.rotate(this.getRotation(), getCenter(extent));\n    } else {\n      const userProjection = getUserProjection();\n      if (userProjection) {\n        geometry = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n          geometryOrExtent\n            .clone()\n            .transform(userProjection, this.getProjection())\n        );\n      } else {\n        geometry = geometryOrExtent;\n      }\n    }\n\n    this.fitInternal(geometry, options);\n  }\n\n  /**\n   * Calculate rotated extent\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @return {import(\"./extent\").Extent} The rotated extent for the geometry.\n   */\n  rotatedExtentForGeometry(geometry) {\n    const rotation = this.getRotation();\n    const cosAngle = Math.cos(rotation);\n    const sinAngle = Math.sin(-rotation);\n    const coords = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    let minRotX = +Infinity;\n    let minRotY = +Infinity;\n    let maxRotX = -Infinity;\n    let maxRotY = -Infinity;\n    for (let i = 0, ii = coords.length; i < ii; i += stride) {\n      const rotX = coords[i] * cosAngle - coords[i + 1] * sinAngle;\n      const rotY = coords[i] * sinAngle + coords[i + 1] * cosAngle;\n      minRotX = Math.min(minRotX, rotX);\n      minRotY = Math.min(minRotY, rotY);\n      maxRotX = Math.max(maxRotX, rotX);\n      maxRotY = Math.max(maxRotY, rotY);\n    }\n    return [minRotX, minRotY, maxRotX, maxRotY];\n  }\n\n  /**\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @param {FitOptions} [options] Options.\n   */\n  fitInternal(geometry, options) {\n    options = options || {};\n    let size = options.size;\n    if (!size) {\n      size = this.getViewportSizeMinusPadding_();\n    }\n    const padding =\n      options.padding !== undefined ? options.padding : [0, 0, 0, 0];\n    const nearest = options.nearest !== undefined ? options.nearest : false;\n    let minResolution;\n    if (options.minResolution !== undefined) {\n      minResolution = options.minResolution;\n    } else if (options.maxZoom !== undefined) {\n      minResolution = this.getResolutionForZoom(options.maxZoom);\n    } else {\n      minResolution = 0;\n    }\n\n    const rotatedExtent = this.rotatedExtentForGeometry(geometry);\n\n    // calculate resolution\n    let resolution = this.getResolutionForExtentInternal(rotatedExtent, [\n      size[0] - padding[1] - padding[3],\n      size[1] - padding[0] - padding[2],\n    ]);\n    resolution = isNaN(resolution)\n      ? minResolution\n      : Math.max(resolution, minResolution);\n    resolution = this.getConstrainedResolution(resolution, nearest ? 0 : 1);\n\n    // calculate center\n    const rotation = this.getRotation();\n    const sinAngle = Math.sin(rotation);\n    const cosAngle = Math.cos(rotation);\n    const centerRot = getCenter(rotatedExtent);\n    centerRot[0] += ((padding[1] - padding[3]) / 2) * resolution;\n    centerRot[1] += ((padding[0] - padding[2]) / 2) * resolution;\n    const centerX = centerRot[0] * cosAngle - centerRot[1] * sinAngle;\n    const centerY = centerRot[1] * cosAngle + centerRot[0] * sinAngle;\n    const center = this.getConstrainedCenter([centerX, centerY], resolution);\n    const callback = options.callback ? options.callback : VOID;\n\n    if (options.duration !== undefined) {\n      this.animateInternal(\n        {\n          resolution: resolution,\n          center: center,\n          duration: options.duration,\n          easing: options.easing,\n        },\n        callback,\n      );\n    } else {\n      this.targetResolution_ = resolution;\n      this.targetCenter_ = center;\n      this.applyTargetState_(false, true);\n      animationCallback(callback, true);\n    }\n  }\n\n  /**\n   * Center on coordinate and view position.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   * @api\n   */\n  centerOn(coordinate, size, position) {\n    this.centerOnInternal(\n      fromUserCoordinate(coordinate, this.getProjection()),\n      size,\n      position,\n    );\n  }\n\n  /**\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   */\n  centerOnInternal(coordinate, size, position) {\n    this.setCenterInternal(\n      calculateCenterOn(\n        coordinate,\n        size,\n        position,\n        this.getResolution(),\n        this.getRotation(),\n      ),\n    );\n  }\n\n  /**\n   * Calculates the shift between map and viewport center.\n   * @param {import(\"./coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {import(\"./size.js\").Size} size Size.\n   * @return {Array<number>|undefined} Center shift.\n   */\n  calculateCenterShift(center, resolution, rotation, size) {\n    let centerShift;\n    const padding = this.padding_;\n    if (padding && center) {\n      const reducedSize = this.getViewportSizeMinusPadding_(-rotation);\n      const shiftedCenter = calculateCenterOn(\n        center,\n        size,\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation,\n      );\n      centerShift = [\n        center[0] - shiftedCenter[0],\n        center[1] - shiftedCenter[1],\n      ];\n    }\n    return centerShift;\n  }\n\n  /**\n   * @return {boolean} Is defined.\n   */\n  isDef() {\n    return !!this.getCenterInternal() && this.getResolution() !== undefined;\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   * @api\n   */\n  adjustCenter(deltaCoordinates) {\n    const center = toUserCoordinate(this.targetCenter_, this.getProjection());\n    this.setCenter([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   */\n  adjustCenterInternal(deltaCoordinates) {\n    const center = this.targetCenter_;\n    this.setCenterInternal([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  adjustResolution(ratio, anchor) {\n    anchor = anchor && fromUserCoordinate(anchor, this.getProjection());\n    this.adjustResolutionInternal(ratio, anchor);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  adjustResolutionInternal(ratio, anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const size = this.getViewportSize_(this.getRotation());\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_ * ratio,\n      0,\n      size,\n      isMoving,\n    );\n\n    if (anchor) {\n      this.targetCenter_ = this.calculateCenterZoom(newResolution, anchor);\n    }\n\n    this.targetResolution_ *= ratio;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Adds a value to the view zoom level, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom level.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  adjustZoom(delta, anchor) {\n    this.adjustResolution(Math.pow(this.zoomFactor_, -delta), anchor);\n  }\n\n  /**\n   * Adds a value to the view rotation, optionally using an anchor. Any rotation\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The rotation center.\n   * @api\n   */\n  adjustRotation(delta, anchor) {\n    if (anchor) {\n      anchor = fromUserCoordinate(anchor, this.getProjection());\n    }\n    this.adjustRotationInternal(delta, anchor);\n  }\n\n  /**\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The rotation center.\n   */\n  adjustRotationInternal(delta, anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_ + delta,\n      isMoving,\n    );\n    if (anchor) {\n      this.targetCenter_ = this.calculateCenterRotate(newRotation, anchor);\n    }\n    this.targetRotation_ += delta;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the center of the current view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   * @observable\n   * @api\n   */\n  setCenter(center) {\n    this.setCenterInternal(\n      center ? fromUserCoordinate(center, this.getProjection()) : center,\n    );\n  }\n\n  /**\n   * Set the center using the view projection (not the user projection).\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   */\n  setCenterInternal(center) {\n    this.targetCenter_ = center;\n    this.applyTargetState_();\n  }\n\n  /**\n   * @param {import(\"./ViewHint.js\").default} hint Hint.\n   * @param {number} delta Delta.\n   * @return {number} New value.\n   */\n  setHint(hint, delta) {\n    this.hints_[hint] += delta;\n    this.changed();\n    return this.hints_[hint];\n  }\n\n  /**\n   * Set the resolution for this view. Any resolution constraint will apply.\n   * @param {number|undefined} resolution The resolution of the view.\n   * @observable\n   * @api\n   */\n  setResolution(resolution) {\n    this.targetResolution_ = resolution;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the rotation for this view. Any rotation constraint will apply.\n   * @param {number} rotation The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  setRotation(rotation) {\n    this.targetRotation_ = rotation;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Zoom to a specific zoom level. Any resolution constrain will apply.\n   * @param {number} zoom Zoom level.\n   * @api\n   */\n  setZoom(zoom) {\n    this.setResolution(this.getResolutionForZoom(zoom));\n  }\n\n  /**\n   * Recompute rotation/resolution/center based on target values.\n   * Note: we have to compute rotation first, then resolution and center considering that\n   * parameters can influence one another in case a view extent constraint is present.\n   * @param {boolean} [doNotCancelAnims] Do not cancel animations.\n   * @param {boolean} [forceMoving] Apply constraints as if the view is moving.\n   * @private\n   */\n  applyTargetState_(doNotCancelAnims, forceMoving) {\n    const isMoving =\n      this.getAnimating() || this.getInteracting() || forceMoving;\n\n    // compute rotation\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_,\n      isMoving,\n    );\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      0,\n      size,\n      isMoving,\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      isMoving,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size,\n      ),\n    );\n\n    if (this.get(ViewProperty.ROTATION) !== newRotation) {\n      this.set(ViewProperty.ROTATION, newRotation);\n    }\n    if (this.get(ViewProperty.RESOLUTION) !== newResolution) {\n      this.set(ViewProperty.RESOLUTION, newResolution);\n      this.set('zoom', this.getZoom(), true);\n    }\n    if (\n      !newCenter ||\n      !this.get(ViewProperty.CENTER) ||\n      !equals(this.get(ViewProperty.CENTER), newCenter)\n    ) {\n      this.set(ViewProperty.CENTER, newCenter);\n    }\n\n    if (this.getAnimating() && !doNotCancelAnims) {\n      this.cancelAnimations();\n    }\n    this.cancelAnchor_ = undefined;\n  }\n\n  /**\n   * If any constraints need to be applied, an animation will be triggered.\n   * This is typically done on interaction end.\n   * Note: calling this with a duration of 0 will apply the constrained values straight away,\n   * without animation.\n   * @param {number} [duration] The animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  resolveConstraints(duration, resolutionDirection, anchor) {\n    duration = duration !== undefined ? duration : 200;\n    const direction = resolutionDirection || 0;\n\n    const newRotation = this.constraints_.rotation(this.targetRotation_);\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      direction,\n      size,\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      false,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size,\n      ),\n    );\n\n    if (duration === 0 && !this.cancelAnchor_) {\n      this.targetResolution_ = newResolution;\n      this.targetRotation_ = newRotation;\n      this.targetCenter_ = newCenter;\n      this.applyTargetState_();\n      return;\n    }\n\n    anchor = anchor || (duration === 0 ? this.cancelAnchor_ : undefined);\n    this.cancelAnchor_ = undefined;\n\n    if (\n      this.getResolution() !== newResolution ||\n      this.getRotation() !== newRotation ||\n      !this.getCenterInternal() ||\n      !equals(this.getCenterInternal(), newCenter)\n    ) {\n      if (this.getAnimating()) {\n        this.cancelAnimations();\n      }\n\n      this.animateInternal({\n        rotation: newRotation,\n        center: newCenter,\n        resolution: newResolution,\n        duration: duration,\n        easing: easeOut,\n        anchor: anchor,\n      });\n    }\n  }\n\n  /**\n   * Notify the View that an interaction has started.\n   * The view state will be resolved to a stable one if needed\n   * (depending on its constraints).\n   * @api\n   */\n  beginInteraction() {\n    this.resolveConstraints(0);\n\n    this.setHint(ViewHint.INTERACTING, 1);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [duration] Animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  endInteraction(duration, resolutionDirection, anchor) {\n    anchor = anchor && fromUserCoordinate(anchor, this.getProjection());\n    this.endInteractionInternal(duration, resolutionDirection, anchor);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [duration] Animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  endInteractionInternal(duration, resolutionDirection, anchor) {\n    if (!this.getInteracting()) {\n      return;\n    }\n    this.setHint(ViewHint.INTERACTING, -1);\n    this.resolveConstraints(duration, resolutionDirection, anchor);\n  }\n\n  /**\n   * Get a valid position for the view center according to the current constraints.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} targetCenter Target center position.\n   * @param {number} [targetResolution] Target resolution. If not supplied, the current one will be used.\n   * This is useful to guess a valid center position at a different zoom level.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Valid center position.\n   */\n  getConstrainedCenter(targetCenter, targetResolution) {\n    const size = this.getViewportSize_(this.getRotation());\n    return this.constraints_.center(\n      targetCenter,\n      targetResolution || this.getResolution(),\n      size,\n    );\n  }\n\n  /**\n   * Get a valid zoom level according to the current view constraints.\n   * @param {number|undefined} targetZoom Target zoom.\n   * @param {number} [direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid zoom level.\n   */\n  getConstrainedZoom(targetZoom, direction) {\n    const targetRes = this.getResolutionForZoom(targetZoom);\n    return this.getZoomForResolution(\n      this.getConstrainedResolution(targetRes, direction),\n    );\n  }\n\n  /**\n   * Get a valid resolution according to the current view constraints.\n   * @param {number|undefined} targetResolution Target resolution.\n   * @param {number} [direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid resolution.\n   */\n  getConstrainedResolution(targetResolution, direction) {\n    direction = direction || 0;\n    const size = this.getViewportSize_(this.getRotation());\n\n    return this.constraints_.resolution(targetResolution, direction, size);\n  }\n}\n\n/**\n * @param {Function} callback Callback.\n * @param {*} returnValue Return value.\n */\nfunction animationCallback(callback, returnValue) {\n  setTimeout(function () {\n    callback(returnValue);\n  }, 0);\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./centerconstraint.js\").Type} The constraint.\n */\nexport function createCenterConstraint(options) {\n  if (options.extent !== undefined) {\n    const smooth =\n      options.smoothExtentConstraint !== undefined\n        ? options.smoothExtentConstraint\n        : true;\n    return createExtent(options.extent, options.constrainOnlyCenter, smooth);\n  }\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  if (options.multiWorld !== true && projection.isGlobal()) {\n    const extent = projection.getExtent().slice();\n    extent[0] = -Infinity;\n    extent[2] = Infinity;\n    return createExtent(extent, false, false);\n  }\n\n  return centerNone;\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {{constraint: import(\"./resolutionconstraint.js\").Type, maxResolution: number,\n *     minResolution: number, minZoom: number, zoomFactor: number}} The constraint.\n */\nexport function createResolutionConstraint(options) {\n  let resolutionConstraint;\n  let maxResolution;\n  let minResolution;\n\n  // TODO: move these to be ol constants\n  // see https://github.com/openlayers/openlayers/issues/2076\n  const defaultMaxZoom = 28;\n  const defaultZoomFactor = 2;\n\n  let minZoom =\n    options.minZoom !== undefined ? options.minZoom : DEFAULT_MIN_ZOOM;\n\n  let maxZoom =\n    options.maxZoom !== undefined ? options.maxZoom : defaultMaxZoom;\n\n  const zoomFactor =\n    options.zoomFactor !== undefined ? options.zoomFactor : defaultZoomFactor;\n\n  const multiWorld =\n    options.multiWorld !== undefined ? options.multiWorld : false;\n\n  const smooth =\n    options.smoothResolutionConstraint !== undefined\n      ? options.smoothResolutionConstraint\n      : true;\n\n  const showFullExtent =\n    options.showFullExtent !== undefined ? options.showFullExtent : false;\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  const projExtent = projection.getExtent();\n  let constrainOnlyCenter = options.constrainOnlyCenter;\n  let extent = options.extent;\n  if (!multiWorld && !extent && projection.isGlobal()) {\n    constrainOnlyCenter = false;\n    extent = projExtent;\n  }\n\n  if (options.resolutions !== undefined) {\n    const resolutions = options.resolutions;\n    maxResolution = resolutions[minZoom];\n    minResolution =\n      resolutions[maxZoom] !== undefined\n        ? resolutions[maxZoom]\n        : resolutions[resolutions.length - 1];\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToResolutions(\n        resolutions,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent,\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent,\n      );\n    }\n  } else {\n    // calculate the default min and max resolution\n    const size = !projExtent\n      ? // use an extent that can fit the whole world if need be\n        (360 * METERS_PER_UNIT.degrees) / projection.getMetersPerUnit()\n      : Math.max(getWidth(projExtent), getHeight(projExtent));\n\n    const defaultMaxResolution =\n      size / DEFAULT_TILE_SIZE / Math.pow(defaultZoomFactor, DEFAULT_MIN_ZOOM);\n\n    const defaultMinResolution =\n      defaultMaxResolution /\n      Math.pow(defaultZoomFactor, defaultMaxZoom - DEFAULT_MIN_ZOOM);\n\n    // user provided maxResolution takes precedence\n    maxResolution = options.maxResolution;\n    if (maxResolution !== undefined) {\n      minZoom = 0;\n    } else {\n      maxResolution = defaultMaxResolution / Math.pow(zoomFactor, minZoom);\n    }\n\n    // user provided minResolution takes precedence\n    minResolution = options.minResolution;\n    if (minResolution === undefined) {\n      if (options.maxZoom !== undefined) {\n        if (options.maxResolution !== undefined) {\n          minResolution = maxResolution / Math.pow(zoomFactor, maxZoom);\n        } else {\n          minResolution = defaultMaxResolution / Math.pow(zoomFactor, maxZoom);\n        }\n      } else {\n        minResolution = defaultMinResolution;\n      }\n    }\n\n    // given discrete zoom levels, minResolution may be different than provided\n    maxZoom =\n      minZoom +\n      Math.floor(\n        Math.log(maxResolution / minResolution) / Math.log(zoomFactor),\n      );\n    minResolution = maxResolution / Math.pow(zoomFactor, maxZoom - minZoom);\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToPower(\n        zoomFactor,\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent,\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent,\n      );\n    }\n  }\n  return {\n    constraint: resolutionConstraint,\n    maxResolution: maxResolution,\n    minResolution: minResolution,\n    minZoom: minZoom,\n    zoomFactor: zoomFactor,\n  };\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./rotationconstraint.js\").Type} Rotation constraint.\n */\nexport function createRotationConstraint(options) {\n  const enableRotation =\n    options.enableRotation !== undefined ? options.enableRotation : true;\n  if (enableRotation) {\n    const constrainRotation = options.constrainRotation;\n    if (constrainRotation === undefined || constrainRotation === true) {\n      return createSnapToZero();\n    }\n    if (constrainRotation === false) {\n      return rotationNone;\n    }\n    if (typeof constrainRotation === 'number') {\n      return createSnapToN(constrainRotation);\n    }\n    return rotationNone;\n  }\n  return disable;\n}\n\n/**\n * Determine if an animation involves no view change.\n * @param {Animation} animation The animation.\n * @return {boolean} The animation involves no view change.\n */\nexport function isNoopAnimation(animation) {\n  if (animation.sourceCenter && animation.targetCenter) {\n    if (!coordinatesEqual(animation.sourceCenter, animation.targetCenter)) {\n      return false;\n    }\n  }\n  if (animation.sourceResolution !== animation.targetResolution) {\n    return false;\n  }\n  if (animation.sourceRotation !== animation.targetRotation) {\n    return false;\n  }\n  return true;\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {import(\"./size.js\").Size} size Box pixel size.\n * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {import(\"./coordinate.js\").Coordinate} Shifted center.\n */\nfunction calculateCenterOn(coordinate, size, position, resolution, rotation) {\n  // calculate rotated position\n  const cosAngle = Math.cos(-rotation);\n  let sinAngle = Math.sin(-rotation);\n  let rotX = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  let rotY = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  rotX += (size[0] / 2 - position[0]) * resolution;\n  rotY += (position[1] - size[1] / 2) * resolution;\n\n  // go back to original angle\n  sinAngle = -sinAngle; // go back to original rotation\n  const centerX = rotX * cosAngle - rotY * sinAngle;\n  const centerY = rotY * cosAngle + rotX * sinAngle;\n\n  return [centerX, centerY];\n}\n\nexport default View;\n","/**\n * @module ol/layer/Layer\n */\nimport BaseLayer from './Base.js';\nimport EventType from '../events/EventType.js';\nimport LayerProperty from './Property.js';\nimport RenderEventType from '../render/EventType.js';\nimport View from '../View.js';\nimport {assert} from '../asserts.js';\nimport {intersects} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {function(import(\"../Map.js\").FrameState):HTMLElement} RenderFunction\n */\n\n/**\n * @typedef {'sourceready'|'change:source'} LayerEventType\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     LayerEventType, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|LayerEventType|\n *     import(\"../render/EventType\").LayerRenderEventTypes, Return>} LayerOnSignature\n */\n\n/**\n * @template {import(\"../source/Source.js\").default} [SourceType=import(\"../source/Source.js\").default]\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {SourceType} [source] Source for this layer.  If not provided to the constructor,\n * the source can be set by calling {@link module:ol/layer/Layer~Layer#setSource layer.setSource(source)} after\n * construction.\n * @property {import(\"../Map.js\").default|null} [map] Map.\n * @property {RenderFunction} [render] Render function. Takes the frame state as input and is expected to return an\n * HTML element. Will overwrite the default rendering for the layer.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./Layer.js\").default} layer Layer.\n * @property {number} opacity Opacity, the value is rounded to two digits to appear after the decimal point.\n * @property {boolean} visible Visible.\n * @property {boolean} managed Managed.\n * @property {import(\"../extent.js\").Extent} [extent] Extent.\n * @property {number | undefined} zIndex ZIndex.\n * @property {number} maxResolution Maximum resolution.\n * @property {number} minResolution Minimum resolution.\n * @property {number} minZoom Minimum zoom.\n * @property {number} maxZoom Maximum zoom.\n */\n\n/**\n * @classdesc\n * Base class from which all layer types are derived. This should only be instantiated\n * in the case where a custom layer is added to the map with a custom `render` function.\n * Such a function can be specified in the `options` object, and is expected to return an HTML element.\n *\n * A visual representation of raster or vector map data.\n * Layers group together those properties that pertain to how the data is to be\n * displayed, irrespective of the source of that data.\n *\n * Layers are usually added to a map with [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * Components like {@link module:ol/interaction/Draw~Draw} use unmanaged layers\n * internally. These unmanaged layers are associated with the map using\n * [layer.setMap()]{@link module:ol/layer/Layer~Layer#setMap} instead.\n *\n * A generic `change` event is fired when the state of the source changes.\n * A `sourceready` event is fired when the layer's source is ready.\n *\n * @fires import(\"../render/Event.js\").RenderEvent#prerender\n * @fires import(\"../render/Event.js\").RenderEvent#postrender\n * @fires import(\"../events/Event.js\").BaseEvent#sourceready\n *\n * @template {import(\"../source/Source.js\").default} [SourceType=import(\"../source/Source.js\").default]\n * @template {import(\"../renderer/Layer.js\").default} [RendererType=import(\"../renderer/Layer.js\").default]\n * @api\n */\nclass Layer extends BaseLayer {\n  /**\n   * @param {Options<SourceType>} options Layer options.\n   */\n  constructor(options) {\n    const baseOptions = Object.assign({}, options);\n    delete baseOptions.source;\n\n    super(baseOptions);\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {LayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapPrecomposeKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapRenderKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.sourceChangeKey_ = null;\n\n    /**\n     * @private\n     * @type {RendererType}\n     */\n    this.renderer_ = null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.sourceReady_ = false;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.rendered = false;\n\n    // Overwrite default render method with a custom one\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.map) {\n      this.setMap(options.map);\n    }\n\n    this.addChangeListener(\n      LayerProperty.SOURCE,\n      this.handleSourcePropertyChange_,\n    );\n\n    const source = options.source\n      ? /** @type {SourceType} */ (options.source)\n      : null;\n    this.setSource(source);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(array) {\n    array = array ? array : [];\n    array.push(this);\n    return array;\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").State>} [states] Optional list of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(states) {\n    states = states ? states : [];\n    states.push(this.getLayerState());\n    return states;\n  }\n\n  /**\n   * Get the layer source.\n   * @return {SourceType|null} The layer source (or `null` if not yet set).\n   * @observable\n   * @api\n   */\n  getSource() {\n    return /** @type {SourceType} */ (this.get(LayerProperty.SOURCE)) || null;\n  }\n\n  /**\n   * @return {SourceType|null} The source being rendered.\n   */\n  getRenderSource() {\n    return this.getSource();\n  }\n\n  /**\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    const source = this.getSource();\n    return !source ? 'undefined' : source.getState();\n  }\n\n  /**\n   * @private\n   */\n  handleSourceChange_() {\n    this.changed();\n    if (this.sourceReady_ || this.getSource().getState() !== 'ready') {\n      return;\n    }\n    this.sourceReady_ = true;\n    this.dispatchEvent('sourceready');\n  }\n\n  /**\n   * @private\n   */\n  handleSourcePropertyChange_() {\n    if (this.sourceChangeKey_) {\n      unlistenByKey(this.sourceChangeKey_);\n      this.sourceChangeKey_ = null;\n    }\n    this.sourceReady_ = false;\n    const source = this.getSource();\n    if (source) {\n      this.sourceChangeKey_ = listen(\n        source,\n        EventType.CHANGE,\n        this.handleSourceChange_,\n        this,\n      );\n      if (source.getState() === 'ready') {\n        this.sourceReady_ = true;\n        setTimeout(() => {\n          this.dispatchEvent('sourceready');\n        }, 0);\n      }\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    if (!this.renderer_) {\n      return Promise.resolve([]);\n    }\n    return this.renderer_.getFeatures(pixel);\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   */\n  getData(pixel) {\n    if (!this.renderer_ || !this.rendered) {\n      return null;\n    }\n    return this.renderer_.getData(pixel);\n  }\n\n  /**\n   * The layer is visible on the map view, i.e. within its min/max resolution or zoom and\n   * extent, not set to `visible: false`, and not inside a layer group that is set\n   * to `visible: false`.\n   * @param {View|import(\"../View.js\").ViewStateLayerStateExtent} [view] View or {@link import(\"../Map.js\").FrameState}.\n   * Only required when the layer is not added to a map.\n   * @return {boolean} The layer is visible in the map view.\n   * @api\n   */\n  isVisible(view) {\n    let frameState;\n    const map = this.getMapInternal();\n    if (!view && map) {\n      view = map.getView();\n    }\n    if (view instanceof View) {\n      frameState = {\n        viewState: view.getState(),\n        extent: view.calculateExtent(),\n      };\n    } else {\n      frameState = view;\n    }\n    if (!frameState.layerStatesArray && map) {\n      frameState.layerStatesArray = map.getLayerGroup().getLayerStatesArray();\n    }\n    let layerState;\n    if (frameState.layerStatesArray) {\n      layerState = frameState.layerStatesArray.find(\n        (layerState) => layerState.layer === this,\n      );\n    } else {\n      layerState = this.getLayerState();\n    }\n\n    const layerExtent = this.getExtent();\n\n    return (\n      inView(layerState, frameState.viewState) &&\n      (!layerExtent || intersects(layerExtent, frameState.extent))\n    );\n  }\n\n  /**\n   * Get the attributions of the source of this layer for the given view.\n   * @param {View|import(\"../View.js\").ViewStateLayerStateExtent} [view] View or {@link import(\"../Map.js\").FrameState}.\n   * Only required when the layer is not added to a map.\n   * @return {Array<string>} Attributions for this layer at the given view.\n   * @api\n   */\n  getAttributions(view) {\n    if (!this.isVisible(view)) {\n      return [];\n    }\n    let getAttributions;\n    const source = this.getSource();\n    if (source) {\n      getAttributions = source.getAttributions();\n    }\n    if (!getAttributions) {\n      return [];\n    }\n    const frameState =\n      view instanceof View ? view.getViewStateAndExtent() : view;\n    let attributions = getAttributions(frameState);\n    if (!Array.isArray(attributions)) {\n      attributions = [attributions];\n    }\n    return attributions;\n  }\n\n  /**\n   * In charge to manage the rendering of the layer. One layer type is\n   * bounded with one layer renderer.\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target which the renderer may (but need not) use\n   * for rendering its content.\n   * @return {HTMLElement|null} The rendered element.\n   */\n  render(frameState, target) {\n    const layerRenderer = this.getRenderer();\n\n    if (layerRenderer.prepareFrame(frameState)) {\n      this.rendered = true;\n      return layerRenderer.renderFrame(frameState, target);\n    }\n    return null;\n  }\n\n  /**\n   * Called when a layer is not visible during a map render.\n   */\n  unrender() {\n    this.rendered = false;\n  }\n\n  /** @return {string} Declutter */\n  getDeclutter() {\n    return undefined;\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../layer/Layer.js\").State} layerState Layer state.\n   */\n  renderDeclutter(frameState, layerState) {}\n\n  /**\n   * When the renderer follows a layout -> render approach, do the final rendering here.\n   * @param {import('../Map.js').FrameState} frameState Frame state\n   */\n  renderDeferred(frameState) {\n    const layerRenderer = this.getRenderer();\n    if (!layerRenderer) {\n      return;\n    }\n    layerRenderer.renderDeferred(frameState);\n  }\n\n  /**\n   * For use inside the library only.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMapInternal(map) {\n    if (!map) {\n      this.unrender();\n    }\n    this.set(LayerProperty.MAP, map);\n  }\n\n  /**\n   * For use inside the library only.\n   * @return {import(\"../Map.js\").default|null} Map.\n   */\n  getMapInternal() {\n    return this.get(LayerProperty.MAP);\n  }\n\n  /**\n   * Sets the layer to be rendered on top of other layers on a map. The map will\n   * not manage this layer in its layers collection. This\n   * is useful for temporary layers. To remove an unmanaged layer from the map,\n   * use `#setMap(null)`.\n   *\n   * To add the layer to a map and have it managed by the map, use\n   * {@link module:ol/Map~Map#addLayer} instead.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.mapPrecomposeKey_) {\n      unlistenByKey(this.mapPrecomposeKey_);\n      this.mapPrecomposeKey_ = null;\n    }\n    if (!map) {\n      this.changed();\n    }\n    if (this.mapRenderKey_) {\n      unlistenByKey(this.mapRenderKey_);\n      this.mapRenderKey_ = null;\n    }\n    if (map) {\n      this.mapPrecomposeKey_ = listen(\n        map,\n        RenderEventType.PRECOMPOSE,\n        function (evt) {\n          const renderEvent =\n            /** @type {import(\"../render/Event.js\").default} */ (evt);\n          const layerStatesArray = renderEvent.frameState.layerStatesArray;\n          const layerState = this.getLayerState(false);\n          assert(\n            !layerStatesArray.some(function (arrayLayerState) {\n              return arrayLayerState.layer === layerState.layer;\n            }),\n            'A layer can only be added to the map once. Use either `layer.setMap()` or `map.addLayer()`, not both.',\n          );\n          layerStatesArray.push(layerState);\n        },\n        this,\n      );\n      this.mapRenderKey_ = listen(this, EventType.CHANGE, map.render, map);\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the layer source.\n   * @param {SourceType|null} source The layer source.\n   * @observable\n   * @api\n   */\n  setSource(source) {\n    this.set(LayerProperty.SOURCE, source);\n  }\n\n  /**\n   * Get the renderer for this layer.\n   * @return {RendererType|null} The layer renderer.\n   */\n  getRenderer() {\n    if (!this.renderer_) {\n      this.renderer_ = this.createRenderer();\n    }\n    return this.renderer_;\n  }\n\n  /**\n   * @return {boolean} The layer has a renderer.\n   */\n  hasRenderer() {\n    return !!this.renderer_;\n  }\n\n  /**\n   * Create a renderer for this layer.\n   * @return {RendererType} A layer renderer.\n   * @protected\n   */\n  createRenderer() {\n    return null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.renderer_) {\n      this.renderer_.dispose();\n      delete this.renderer_;\n    }\n\n    this.setSource(null);\n    super.disposeInternal();\n  }\n}\n\n/**\n * Return `true` if the layer is visible and if the provided view state\n * has resolution and zoom levels that are in range of the layer's min/max.\n * @param {State} layerState Layer state.\n * @param {import(\"../View.js\").State} viewState View state.\n * @return {boolean} The layer is visible at the given view state.\n */\nexport function inView(layerState, viewState) {\n  if (!layerState.visible) {\n    return false;\n  }\n  const resolution = viewState.resolution;\n  if (\n    resolution < layerState.minResolution ||\n    resolution >= layerState.maxResolution\n  ) {\n    return false;\n  }\n  const zoom = viewState.zoom;\n  return zoom > layerState.minZoom && zoom <= layerState.maxZoom;\n}\n\nexport default Layer;\n","!function(t,i){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=i():\"function\"==typeof define&&define.amd?define(i):(t=t||self).RBush=i()}(this,function(){\"use strict\";function t(t,r,e,a,h){!function t(n,r,e,a,h){for(;a>e;){if(a-e>600){var o=a-e+1,s=r-e+1,l=Math.log(o),f=.5*Math.exp(2*l/3),u=.5*Math.sqrt(l*f*(o-f)/o)*(s-o/2<0?-1:1),m=Math.max(e,Math.floor(r-s*f/o+u)),c=Math.min(a,Math.floor(r+(o-s)*f/o+u));t(n,r,m,c,h)}var p=n[r],d=e,x=a;for(i(n,e,r),h(n[a],p)>0&&i(n,e,a);d<x;){for(i(n,d,x),d++,x--;h(n[d],p)<0;)d++;for(;h(n[x],p)>0;)x--}0===h(n[e],p)?i(n,e,x):i(n,++x,a),x<=r&&(e=x+1),r<=x&&(a=x-1)}}(t,r,e||0,a||t.length-1,h||n)}function i(t,i,n){var r=t[i];t[i]=t[n],t[n]=r}function n(t,i){return t<i?-1:t>i?1:0}var r=function(t){void 0===t&&(t=9),this._maxEntries=Math.max(4,t),this._minEntries=Math.max(2,Math.ceil(.4*this._maxEntries)),this.clear()};function e(t,i,n){if(!n)return i.indexOf(t);for(var r=0;r<i.length;r++)if(n(t,i[r]))return r;return-1}function a(t,i){h(t,0,t.children.length,i,t)}function h(t,i,n,r,e){e||(e=p(null)),e.minX=1/0,e.minY=1/0,e.maxX=-1/0,e.maxY=-1/0;for(var a=i;a<n;a++){var h=t.children[a];o(e,t.leaf?r(h):h)}return e}function o(t,i){return t.minX=Math.min(t.minX,i.minX),t.minY=Math.min(t.minY,i.minY),t.maxX=Math.max(t.maxX,i.maxX),t.maxY=Math.max(t.maxY,i.maxY),t}function s(t,i){return t.minX-i.minX}function l(t,i){return t.minY-i.minY}function f(t){return(t.maxX-t.minX)*(t.maxY-t.minY)}function u(t){return t.maxX-t.minX+(t.maxY-t.minY)}function m(t,i){return t.minX<=i.minX&&t.minY<=i.minY&&i.maxX<=t.maxX&&i.maxY<=t.maxY}function c(t,i){return i.minX<=t.maxX&&i.minY<=t.maxY&&i.maxX>=t.minX&&i.maxY>=t.minY}function p(t){return{children:t,height:1,leaf:!0,minX:1/0,minY:1/0,maxX:-1/0,maxY:-1/0}}function d(i,n,r,e,a){for(var h=[n,r];h.length;)if(!((r=h.pop())-(n=h.pop())<=e)){var o=n+Math.ceil((r-n)/e/2)*e;t(i,o,n,r,a),h.push(n,o,o,r)}}return r.prototype.all=function(){return this._all(this.data,[])},r.prototype.search=function(t){var i=this.data,n=[];if(!c(t,i))return n;for(var r=this.toBBox,e=[];i;){for(var a=0;a<i.children.length;a++){var h=i.children[a],o=i.leaf?r(h):h;c(t,o)&&(i.leaf?n.push(h):m(t,o)?this._all(h,n):e.push(h))}i=e.pop()}return n},r.prototype.collides=function(t){var i=this.data;if(!c(t,i))return!1;for(var n=[];i;){for(var r=0;r<i.children.length;r++){var e=i.children[r],a=i.leaf?this.toBBox(e):e;if(c(t,a)){if(i.leaf||m(t,a))return!0;n.push(e)}}i=n.pop()}return!1},r.prototype.load=function(t){if(!t||!t.length)return this;if(t.length<this._minEntries){for(var i=0;i<t.length;i++)this.insert(t[i]);return this}var n=this._build(t.slice(),0,t.length-1,0);if(this.data.children.length)if(this.data.height===n.height)this._splitRoot(this.data,n);else{if(this.data.height<n.height){var r=this.data;this.data=n,n=r}this._insert(n,this.data.height-n.height-1,!0)}else this.data=n;return this},r.prototype.insert=function(t){return t&&this._insert(t,this.data.height-1),this},r.prototype.clear=function(){return this.data=p([]),this},r.prototype.remove=function(t,i){if(!t)return this;for(var n,r,a,h=this.data,o=this.toBBox(t),s=[],l=[];h||s.length;){if(h||(h=s.pop(),r=s[s.length-1],n=l.pop(),a=!0),h.leaf){var f=e(t,h.children,i);if(-1!==f)return h.children.splice(f,1),s.push(h),this._condense(s),this}a||h.leaf||!m(h,o)?r?(n++,h=r.children[n],a=!1):h=null:(s.push(h),l.push(n),n=0,r=h,h=h.children[0])}return this},r.prototype.toBBox=function(t){return t},r.prototype.compareMinX=function(t,i){return t.minX-i.minX},r.prototype.compareMinY=function(t,i){return t.minY-i.minY},r.prototype.toJSON=function(){return this.data},r.prototype.fromJSON=function(t){return this.data=t,this},r.prototype._all=function(t,i){for(var n=[];t;)t.leaf?i.push.apply(i,t.children):n.push.apply(n,t.children),t=n.pop();return i},r.prototype._build=function(t,i,n,r){var e,h=n-i+1,o=this._maxEntries;if(h<=o)return a(e=p(t.slice(i,n+1)),this.toBBox),e;r||(r=Math.ceil(Math.log(h)/Math.log(o)),o=Math.ceil(h/Math.pow(o,r-1))),(e=p([])).leaf=!1,e.height=r;var s=Math.ceil(h/o),l=s*Math.ceil(Math.sqrt(o));d(t,i,n,l,this.compareMinX);for(var f=i;f<=n;f+=l){var u=Math.min(f+l-1,n);d(t,f,u,s,this.compareMinY);for(var m=f;m<=u;m+=s){var c=Math.min(m+s-1,u);e.children.push(this._build(t,m,c,r-1))}}return a(e,this.toBBox),e},r.prototype._chooseSubtree=function(t,i,n,r){for(;r.push(i),!i.leaf&&r.length-1!==n;){for(var e=1/0,a=1/0,h=void 0,o=0;o<i.children.length;o++){var s=i.children[o],l=f(s),u=(m=t,c=s,(Math.max(c.maxX,m.maxX)-Math.min(c.minX,m.minX))*(Math.max(c.maxY,m.maxY)-Math.min(c.minY,m.minY))-l);u<a?(a=u,e=l<e?l:e,h=s):u===a&&l<e&&(e=l,h=s)}i=h||i.children[0]}var m,c;return i},r.prototype._insert=function(t,i,n){var r=n?t:this.toBBox(t),e=[],a=this._chooseSubtree(r,this.data,i,e);for(a.children.push(t),o(a,r);i>=0&&e[i].children.length>this._maxEntries;)this._split(e,i),i--;this._adjustParentBBoxes(r,e,i)},r.prototype._split=function(t,i){var n=t[i],r=n.children.length,e=this._minEntries;this._chooseSplitAxis(n,e,r);var h=this._chooseSplitIndex(n,e,r),o=p(n.children.splice(h,n.children.length-h));o.height=n.height,o.leaf=n.leaf,a(n,this.toBBox),a(o,this.toBBox),i?t[i-1].children.push(o):this._splitRoot(n,o)},r.prototype._splitRoot=function(t,i){this.data=p([t,i]),this.data.height=t.height+1,this.data.leaf=!1,a(this.data,this.toBBox)},r.prototype._chooseSplitIndex=function(t,i,n){for(var r,e,a,o,s,l,u,m=1/0,c=1/0,p=i;p<=n-i;p++){var d=h(t,0,p,this.toBBox),x=h(t,p,n,this.toBBox),v=(e=d,a=x,o=void 0,s=void 0,l=void 0,u=void 0,o=Math.max(e.minX,a.minX),s=Math.max(e.minY,a.minY),l=Math.min(e.maxX,a.maxX),u=Math.min(e.maxY,a.maxY),Math.max(0,l-o)*Math.max(0,u-s)),M=f(d)+f(x);v<m?(m=v,r=p,c=M<c?M:c):v===m&&M<c&&(c=M,r=p)}return r||n-i},r.prototype._chooseSplitAxis=function(t,i,n){var r=t.leaf?this.compareMinX:s,e=t.leaf?this.compareMinY:l;this._allDistMargin(t,i,n,r)<this._allDistMargin(t,i,n,e)&&t.children.sort(r)},r.prototype._allDistMargin=function(t,i,n,r){t.children.sort(r);for(var e=this.toBBox,a=h(t,0,i,e),s=h(t,n-i,n,e),l=u(a)+u(s),f=i;f<n-i;f++){var m=t.children[f];o(a,t.leaf?e(m):m),l+=u(a)}for(var c=n-i-1;c>=i;c--){var p=t.children[c];o(s,t.leaf?e(p):p),l+=u(s)}return l},r.prototype._adjustParentBBoxes=function(t,i,n){for(var r=n;r>=0;r--)o(i[r],t)},r.prototype._condense=function(t){for(var i=t.length-1,n=void 0;i>=0;i--)0===t[i].children.length?i>0?(n=t[i-1].children).splice(n.indexOf(t[i]),1):this.clear():a(t[i],this.toBBox)},r});\n","/**\n * @module ol/style/Icon\n */\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport {asArray} from '../color.js';\nimport {assert} from '../asserts.js';\nimport {get as getIconImage} from './IconImage.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {'fraction' | 'pixels'} IconAnchorUnits\n * Anchor unit can be either a fraction of the icon size or in pixels.\n */\n\n/**\n * @typedef {'bottom-left' | 'bottom-right' | 'top-left' | 'top-right'} IconOrigin\n * Icon origin. One of 'bottom-left', 'bottom-right', 'top-left', 'top-right'.\n */\n\n/**\n * @typedef {Object} Options\n * @property {Array<number>} [anchor=[0.5, 0.5]] Anchor. Default value is the icon center.\n * @property {IconOrigin} [anchorOrigin='top-left'] Origin of the anchor: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {IconAnchorUnits} [anchorXUnits='fraction'] Units in which the anchor x value is\n * specified. A value of `'fraction'` indicates the x value is a fraction of the icon. A value of `'pixels'` indicates\n * the x value in pixels.\n * @property {IconAnchorUnits} [anchorYUnits='fraction'] Units in which the anchor y value is\n * specified. A value of `'fraction'` indicates the y value is a fraction of the icon. A value of `'pixels'` indicates\n * the y value in pixels.\n * @property {import(\"../color.js\").Color|string} [color] Color to tint the icon. If not specified,\n * the icon will be left as is.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {HTMLImageElement|HTMLCanvasElement|ImageBitmap} [img] Image object for the icon.\n * @property {Array<number>} [displacement=[0, 0]] Displacement of the icon in pixels.\n * Positive values will shift the icon right and up.\n * @property {number} [opacity=1] Opacity of the icon.\n * @property {number} [width] The width of the icon in pixels. This can't be used together with `scale`.\n * @property {number} [height] The height of the icon in pixels. This can't be used together with `scale`.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the icon with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {Array<number>} [offset=[0, 0]] Offset which, together with `size` and `offsetOrigin`, defines the\n * sub-rectangle to use from the original (sprite) image.\n * @property {IconOrigin} [offsetOrigin='top-left'] Origin of the offset: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {import(\"../size.js\").Size} [size] Icon size in pixels. Used together with `offset` to define the\n * sub-rectangle to use from the original (sprite) image.\n * @property {string} [src] Image source URI.\n * @property {import(\"./Style.js\").DeclutterMode} [declutterMode] Declutter mode.\n */\n\n/**\n * @param {number} width The width.\n * @param {number} height The height.\n * @param {number|undefined} wantedWidth The wanted width.\n * @param {number|undefined} wantedHeight The wanted height.\n * @return {number|Array<number>} The scale.\n */\nfunction calculateScale(width, height, wantedWidth, wantedHeight) {\n  if (wantedWidth !== undefined && wantedHeight !== undefined) {\n    return [wantedWidth / width, wantedHeight / height];\n  }\n  if (wantedWidth !== undefined) {\n    return wantedWidth / width;\n  }\n  if (wantedHeight !== undefined) {\n    return wantedHeight / height;\n  }\n  return 1;\n}\n\n/**\n * @classdesc\n * Set icon style for vector features.\n * @api\n */\nclass Icon extends ImageStyle {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @type {number}\n     */\n    const opacity = options.opacity !== undefined ? options.opacity : 1;\n\n    /**\n     * @type {number}\n     */\n    const rotation = options.rotation !== undefined ? options.rotation : 0;\n\n    /**\n     * @type {number|import(\"../size.js\").Size}\n     */\n    const scale = options.scale !== undefined ? options.scale : 1;\n\n    /**\n     * @type {boolean}\n     */\n    const rotateWithView =\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\n\n    super({\n      opacity: opacity,\n      rotation: rotation,\n      scale: scale,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      rotateWithView: rotateWithView,\n      declutterMode: options.declutterMode,\n    });\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.anchor_ = options.anchor !== undefined ? options.anchor : [0.5, 0.5];\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.normalizedAnchor_ = null;\n\n    /**\n     * @private\n     * @type {IconOrigin}\n     */\n    this.anchorOrigin_ =\n      options.anchorOrigin !== undefined ? options.anchorOrigin : 'top-left';\n\n    /**\n     * @private\n     * @type {IconAnchorUnits}\n     */\n    this.anchorXUnits_ =\n      options.anchorXUnits !== undefined ? options.anchorXUnits : 'fraction';\n\n    /**\n     * @private\n     * @type {IconAnchorUnits}\n     */\n    this.anchorYUnits_ =\n      options.anchorYUnits !== undefined ? options.anchorYUnits : 'fraction';\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    const image = options.img !== undefined ? options.img : null;\n\n    let cacheKey = options.src;\n\n    assert(\n      !(cacheKey !== undefined && image),\n      '`image` and `src` cannot be provided at the same time',\n    );\n\n    if ((cacheKey === undefined || cacheKey.length === 0) && image) {\n      cacheKey = /** @type {HTMLImageElement} */ (image).src || getUid(image);\n    }\n    assert(\n      cacheKey !== undefined && cacheKey.length > 0,\n      'A defined and non-empty `src` or `image` must be provided',\n    );\n\n    assert(\n      !(\n        (options.width !== undefined || options.height !== undefined) &&\n        options.scale !== undefined\n      ),\n      '`width` or `height` cannot be provided together with `scale`',\n    );\n\n    let imageState;\n    if (options.src !== undefined) {\n      imageState = ImageState.IDLE;\n    } else if (image !== undefined) {\n      if ('complete' in image) {\n        if (image.complete) {\n          imageState = image.src ? ImageState.LOADED : ImageState.IDLE;\n        } else {\n          imageState = ImageState.LOADING;\n        }\n      } else {\n        imageState = ImageState.LOADED;\n      }\n    }\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = options.color !== undefined ? asArray(options.color) : null;\n\n    /**\n     * @private\n     * @type {import(\"./IconImage.js\").default}\n     */\n    this.iconImage_ = getIconImage(\n      image,\n      /** @type {string} */ (cacheKey),\n      this.crossOrigin_,\n      imageState,\n      this.color_,\n    );\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.offset_ = options.offset !== undefined ? options.offset : [0, 0];\n    /**\n     * @private\n     * @type {IconOrigin}\n     */\n    this.offsetOrigin_ =\n      options.offsetOrigin !== undefined ? options.offsetOrigin : 'top-left';\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = options.size !== undefined ? options.size : null;\n\n    /**\n     * Calculate the scale if width or height were given.\n     */\n    if (options.width !== undefined || options.height !== undefined) {\n      let width, height;\n      if (options.size) {\n        [width, height] = options.size;\n      } else {\n        const image = this.getImage(1);\n        if (image.width && image.height) {\n          width = image.width;\n          height = image.height;\n        } else if (image instanceof HTMLImageElement) {\n          this.initialOptions_ = options;\n          const onload = () => {\n            this.unlistenImageChange(onload);\n            if (!this.initialOptions_) {\n              return;\n            }\n            const imageSize = this.iconImage_.getSize();\n            this.setScale(\n              calculateScale(\n                imageSize[0],\n                imageSize[1],\n                options.width,\n                options.height,\n              ),\n            );\n          };\n          this.listenImageChange(onload);\n          return;\n        }\n      }\n      if (width !== undefined) {\n        this.setScale(\n          calculateScale(width, height, options.width, options.height),\n        );\n      }\n    }\n  }\n\n  /**\n   * Clones the style. The underlying Image/HTMLCanvasElement is not cloned.\n   * @return {Icon} The cloned style.\n   * @api\n   */\n  clone() {\n    let scale, width, height;\n    if (this.initialOptions_) {\n      width = this.initialOptions_.width;\n      height = this.initialOptions_.height;\n    } else {\n      scale = this.getScale();\n      scale = Array.isArray(scale) ? scale.slice() : scale;\n    }\n    return new Icon({\n      anchor: this.anchor_.slice(),\n      anchorOrigin: this.anchorOrigin_,\n      anchorXUnits: this.anchorXUnits_,\n      anchorYUnits: this.anchorYUnits_,\n      color:\n        this.color_ && this.color_.slice\n          ? this.color_.slice()\n          : this.color_ || undefined,\n      crossOrigin: this.crossOrigin_,\n      offset: this.offset_.slice(),\n      offsetOrigin: this.offsetOrigin_,\n      opacity: this.getOpacity(),\n      rotateWithView: this.getRotateWithView(),\n      rotation: this.getRotation(),\n      scale,\n      width,\n      height,\n      size: this.size_ !== null ? this.size_.slice() : undefined,\n      src: this.getSrc(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   */\n  getAnchor() {\n    let anchor = this.normalizedAnchor_;\n    if (!anchor) {\n      anchor = this.anchor_;\n      const size = this.getSize();\n      if (\n        this.anchorXUnits_ == 'fraction' ||\n        this.anchorYUnits_ == 'fraction'\n      ) {\n        if (!size) {\n          return null;\n        }\n        anchor = this.anchor_.slice();\n        if (this.anchorXUnits_ == 'fraction') {\n          anchor[0] *= size[0];\n        }\n        if (this.anchorYUnits_ == 'fraction') {\n          anchor[1] *= size[1];\n        }\n      }\n\n      if (this.anchorOrigin_ != 'top-left') {\n        if (!size) {\n          return null;\n        }\n        if (anchor === this.anchor_) {\n          anchor = this.anchor_.slice();\n        }\n        if (\n          this.anchorOrigin_ == 'top-right' ||\n          this.anchorOrigin_ == 'bottom-right'\n        ) {\n          anchor[0] = -anchor[0] + size[0];\n        }\n        if (\n          this.anchorOrigin_ == 'bottom-left' ||\n          this.anchorOrigin_ == 'bottom-right'\n        ) {\n          anchor[1] = -anchor[1] + size[1];\n        }\n      }\n      this.normalizedAnchor_ = anchor;\n    }\n    const displacement = this.getDisplacement();\n    const scale = this.getScaleArray();\n    // anchor is scaled by renderer but displacement should not be scaled\n    // so divide by scale here\n    return [\n      anchor[0] - displacement[0] / scale[0],\n      anchor[1] + displacement[1] / scale[1],\n    ];\n  }\n\n  /**\n   * Set the anchor point. The anchor determines the center point for the\n   * symbolizer.\n   *\n   * @param {Array<number>} anchor Anchor.\n   * @api\n   */\n  setAnchor(anchor) {\n    this.anchor_ = anchor;\n    this.normalizedAnchor_ = null;\n  }\n\n  /**\n   * Get the icon color.\n   * @return {import(\"../color.js\").Color} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image or Canvas element. If the Icon\n   * style was configured with `src` or with a not let loaded `img`, an `ImageBitmap` will be returned.\n   * @api\n   */\n  getImage(pixelRatio) {\n    return this.iconImage_.getImage(pixelRatio);\n  }\n\n  /**\n   * Get the pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} The pixel ratio of the image.\n   * @api\n   */\n  getPixelRatio(pixelRatio) {\n    return this.iconImage_.getPixelRatio(pixelRatio);\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return this.iconImage_.getSize();\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.iconImage_.getImageState();\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image element.\n   */\n  getHitDetectionImage() {\n    return this.iconImage_.getHitDetectionImage();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   */\n  getOrigin() {\n    if (this.origin_) {\n      return this.origin_;\n    }\n    let offset = this.offset_;\n\n    if (this.offsetOrigin_ != 'top-left') {\n      const size = this.getSize();\n      const iconImageSize = this.iconImage_.getSize();\n      if (!size || !iconImageSize) {\n        return null;\n      }\n      offset = offset.slice();\n      if (\n        this.offsetOrigin_ == 'top-right' ||\n        this.offsetOrigin_ == 'bottom-right'\n      ) {\n        offset[0] = iconImageSize[0] - size[0] - offset[0];\n      }\n      if (\n        this.offsetOrigin_ == 'bottom-left' ||\n        this.offsetOrigin_ == 'bottom-right'\n      ) {\n        offset[1] = iconImageSize[1] - size[1] - offset[1];\n      }\n    }\n    this.origin_ = offset;\n    return this.origin_;\n  }\n\n  /**\n   * Get the image URL.\n   * @return {string|undefined} Image src.\n   * @api\n   */\n  getSrc() {\n    return this.iconImage_.getSrc();\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   * @api\n   */\n  getSize() {\n    return !this.size_ ? this.iconImage_.getSize() : this.size_;\n  }\n\n  /**\n   * Get the width of the icon (in pixels). Will return undefined when the icon image is not yet loaded.\n   * @return {number} Icon width (in pixels).\n   * @api\n   */\n  getWidth() {\n    const scale = this.getScaleArray();\n    if (this.size_) {\n      return this.size_[0] * scale[0];\n    }\n    if (this.iconImage_.getImageState() == ImageState.LOADED) {\n      return this.iconImage_.getSize()[0] * scale[0];\n    }\n    return undefined;\n  }\n\n  /**\n   * Get the height of the icon (in pixels). Will return undefined when the icon image is not yet loaded.\n   * @return {number} Icon height (in pixels).\n   * @api\n   */\n  getHeight() {\n    const scale = this.getScaleArray();\n    if (this.size_) {\n      return this.size_[1] * scale[1];\n    }\n    if (this.iconImage_.getImageState() == ImageState.LOADED) {\n      return this.iconImage_.getSize()[1] * scale[1];\n    }\n    return undefined;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    delete this.initialOptions_;\n    super.setScale(scale);\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {\n    this.iconImage_.addEventListener(EventType.CHANGE, listener);\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * When rendering a feature with an icon style, the vector renderer will\n   * automatically call this method. However, you might want to call this\n   * method yourself for preloading or other purposes.\n   * @api\n   */\n  load() {\n    this.iconImage_.load();\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {\n    this.iconImage_.removeEventListener(EventType.CHANGE, listener);\n  }\n\n  ready() {\n    return this.iconImage_.ready();\n  }\n}\n\nexport default Icon;\n","/**\n * @module ol/expr/expression\n */\nimport {ascending} from '../array.js';\nimport {isStringColor} from '../color.js';\n\n/**\n * @fileoverview This module includes types and functions for parsing array encoded expressions.\n * The result of parsing an encoded expression is one of the specific expression classes.\n * During parsing, information is added to the parsing context about the data accessed by the\n * expression.\n */\n\n/**\n * Base type used for literal style parameters; can be a number literal or the output of an operator,\n * which in turns takes {@link import(\"./expression.js\").ExpressionValue} arguments.\n *\n * See below for details on the available operators (with notes for those that are WebGL or Canvas only).\n *\n * * Reading operators:\n *   * `['band', bandIndex, xOffset, yOffset]` For tile layers only. Fetches pixel values from band\n *     `bandIndex` of the source's data. The first `bandIndex` of the source data is `1`. Fetched values\n *     are in the 0..1 range. {@link import(\"../source/TileImage.js\").default} sources have 4 bands: red,\n *     green, blue and alpha. {@link import(\"../source/DataTile.js\").default} sources can have any number\n *     of bands, depending on the underlying data source and\n *     {@link import(\"../source/GeoTIFF.js\").Options configuration}. `xOffset` and `yOffset` are optional\n *     and allow specifying pixel offsets for x and y. This is used for sampling data from neighboring pixels (WebGL only).\n *   * `['get', 'attributeName', typeHint]` fetches a feature property value, similar to `feature.get('attributeName')`\n *     A type hint can optionally be specified, in case the resulting expression contains a type ambiguity which\n *     will make it invalid. Type hints can be one of: 'string', 'color', 'number', 'boolean', 'number[]'\n *   * `['geometry-type']` returns a feature's geometry type as string, either: 'LineString', 'Point' or 'Polygon'\n *     `Multi*` values are returned as their singular equivalent\n *     `Circle` geometries are returned as 'Polygon'\n *     `GeometryCollection` geometries are returned as the type of the first geometry found in the collection (WebGL only).\n *   * `['resolution']` returns the current resolution\n *   * `['time']` The time in seconds since the creation of the layer (WebGL only).\n *   * `['var', 'varName']` fetches a value from the style variables; will throw an error if that variable is undefined\n *   * `['zoom']` The current zoom level (WebGL only).\n *\n * * Math operators:\n *   * `['*', value1, value2, ...]` multiplies the values (either numbers or colors)\n *   * `['/', value1, value2]` divides `value1` by `value2`\n *   * `['+', value1, value2, ...]` adds the values\n *   * `['-', value1, value2]` subtracts `value2` from `value1`\n *   * `['clamp', value, low, high]` clamps `value` between `low` and `high`\n *   * `['%', value1, value2]` returns the result of `value1 % value2` (modulo)\n *   * `['^', value1, value2]` returns the value of `value1` raised to the `value2` power\n *   * `['abs', value1]` returns the absolute value of `value1`\n *   * `['floor', value1]` returns the nearest integer less than or equal to `value1`\n *   * `['round', value1]` returns the nearest integer to `value1`\n *   * `['ceil', value1]` returns the nearest integer greater than or equal to `value1`\n *   * `['sin', value1]` returns the sine of `value1`\n *   * `['cos', value1]` returns the cosine of `value1`\n *   * `['atan', value1, value2]` returns `atan2(value1, value2)`. If `value2` is not provided, returns `atan(value1)`\n *   * `['sqrt', value1]` returns the square root of `value1`\n *\n * * Transform operators:\n *   * `['case', condition1, output1, ...conditionN, outputN, fallback]` selects the first output whose corresponding\n *     condition evaluates to `true`. If no match is found, returns the `fallback` value.\n *     All conditions should be `boolean`, output and fallback can be any kind.\n *   * `['match', input, match1, output1, ...matchN, outputN, fallback]` compares the `input` value against all\n *     provided `matchX` values, returning the output associated with the first valid match. If no match is found,\n *     returns the `fallback` value.\n *     `input` and `matchX` values must all be of the same type, and can be `number` or `string`. `outputX` and\n *     `fallback` values must be of the same type, and can be of any kind.\n *   * `['interpolate', interpolation, input, stop1, output1, ...stopN, outputN]` returns a value by interpolating between\n *     pairs of inputs and outputs; `interpolation` can either be `['linear']` or `['exponential', base]` where `base` is\n *     the rate of increase from stop A to stop B (i.e. power to which the interpolation ratio is raised); a value\n *     of 1 is equivalent to `['linear']`.\n *     `input` and `stopX` values must all be of type `number`. `outputX` values can be `number` or `color` values.\n *     Note: `input` will be clamped between `stop1` and `stopN`, meaning that all output values will be comprised\n *     between `output1` and `outputN`.\n *   * `['string', value1, value2, ...]` returns the first value in the list that evaluates to a string.\n *     An example would be to provide a default value for get: `['string', ['get', 'propertyname'], 'default value']]`\n *     (Canvas only).\n *   * `['number', value1, value2, ...]` returns the first value in the list that evaluates to a number.\n *     An example would be to provide a default value for get: `['string', ['get', 'propertyname'], 42]]`\n *     (Canvas only).\n *   * `['coalesce', value1, value2, ...]` returns the first value in the list which is not null or undefined.\n *     An example would be to provide a default value for get: `['coalesce', ['get','propertyname'], 'default value']]`\n *     (Canvas only).\n *\n * * Logical operators:\n *   * `['<', value1, value2]` returns `true` if `value1` is strictly lower than `value2`, or `false` otherwise.\n *   * `['<=', value1, value2]` returns `true` if `value1` is lower than or equals `value2`, or `false` otherwise.\n *   * `['>', value1, value2]` returns `true` if `value1` is strictly greater than `value2`, or `false` otherwise.\n *   * `['>=', value1, value2]` returns `true` if `value1` is greater than or equals `value2`, or `false` otherwise.\n *   * `['==', value1, value2]` returns `true` if `value1` equals `value2`, or `false` otherwise.\n *   * `['!=', value1, value2]` returns `true` if `value1` does not equal `value2`, or `false` otherwise.\n *   * `['!', value1]` returns `false` if `value1` is `true` or greater than `0`, or `true` otherwise.\n *   * `['all', value1, value2, ...]` returns `true` if all the inputs are `true`, `false` otherwise.\n *   * `['any', value1, value2, ...]` returns `true` if any of the inputs are `true`, `false` otherwise.\n *   * `['between', value1, value2, value3]` returns `true` if `value1` is contained between `value2` and `value3`\n *     (inclusively), or `false` otherwise.\n *   * `['in', needle, haystack]` returns `true` if `needle` is found in `haystack`, and\n *     `false` otherwise.\n *     This operator has the following limitations:\n *     * `haystack` has to be an array of numbers or strings (searching for a substring in a string is not supported yet)\n *     * Only literal arrays are supported as `haystack` for now; this means that `haystack` cannot be the result of an\n *     expression. If `haystack` is an array of strings, use the `literal` operator to disambiguate from an expression:\n *     `['literal', ['abc', 'def', 'ghi']]`\n *\n * * Conversion operators:\n *   * `['array', value1, ...valueN]` creates a numerical array from `number` values; please note that the amount of\n *     values can currently only be 2, 3 or 4 (WebGL only).\n *   * `['color', red, green, blue, alpha]` or `['color', shade, alpha]` creates a `color` value from `number` values;\n *     the `alpha` parameter is optional; if not specified, it will be set to 1 (WebGL only).\n *     Note: `red`, `green` and `blue` or `shade` components must be values between 0 and 255; `alpha` between 0 and 1.\n *   * `['palette', index, colors]` picks a `color` value from an array of colors using the given index; the `index`\n *     expression must evaluate to a number; the items in the `colors` array must be strings with hex colors\n *     (e.g. `'#86A136'`), colors using the rgba[a] functional notation (e.g. `'rgb(134, 161, 54)'` or `'rgba(134, 161, 54, 1)'`),\n *     named colors (e.g. `'red'`), or array literals with 3 ([r, g, b]) or 4 ([r, g, b, a]) values (with r, g, and b\n *     in the 0-255 range and a in the 0-1 range) (WebGL only).\n *   * `['to-string', value]` converts the input value to a string. If the input is a boolean, the result is \"true\" or \"false\".\n *     If the input is a number, it is converted to a string as specified by the \"NumberToString\" algorithm of the ECMAScript\n *     Language Specification. If the input is a color, it is converted to a string of the form \"rgba(r,g,b,a)\". (Canvas only)\n *\n * Values can either be literals or another operator, as they will be evaluated recursively.\n * Literal values can be of the following types:\n * * `boolean`\n * * `number`\n * * `number[]` (number arrays can only have a length of 2, 3 or 4)\n * * `string`\n * * {@link module:ol/color~Color}\n *\n * @typedef {Array<*>|import(\"../color.js\").Color|string|number|boolean} ExpressionValue\n * @api\n */\n\nlet numTypes = 0;\nexport const NoneType = 0;\nexport const BooleanType = 1 << numTypes++;\nexport const NumberType = 1 << numTypes++;\nexport const StringType = 1 << numTypes++;\nexport const ColorType = 1 << numTypes++;\nexport const NumberArrayType = 1 << numTypes++;\nexport const SizeType = 1 << numTypes++;\nexport const AnyType = Math.pow(2, numTypes) - 1;\n\nconst typeNames = {\n  [BooleanType]: 'boolean',\n  [NumberType]: 'number',\n  [StringType]: 'string',\n  [ColorType]: 'color',\n  [NumberArrayType]: 'number[]',\n  [SizeType]: 'size',\n};\n\nconst namedTypes = Object.keys(typeNames).map(Number).sort(ascending);\n\n/**\n * Get a string representation for a type.\n * @param {number} type The type.\n * @return {string} The type name.\n */\nexport function typeName(type) {\n  const names = [];\n  for (const namedType of namedTypes) {\n    if (includesType(type, namedType)) {\n      names.push(typeNames[namedType]);\n    }\n  }\n  if (names.length === 0) {\n    return 'untyped';\n  }\n  if (names.length < 3) {\n    return names.join(' or ');\n  }\n  return names.slice(0, -1).join(', ') + ', or ' + names[names.length - 1];\n}\n\n/**\n * @param {number} broad The broad type.\n * @param {number} specific The specific type.\n * @return {boolean} The broad type includes the specific type.\n */\nexport function includesType(broad, specific) {\n  return (broad & specific) === specific;\n}\n\n/**\n * @param {number} oneType One type.\n * @param {number} otherType Another type.\n * @return {boolean} The set of types overlap (share a common specific type)\n */\nexport function overlapsType(oneType, otherType) {\n  return !!(oneType & otherType);\n}\n\n/**\n * @param {number} type The type.\n * @param {number} expected The expected type.\n * @return {boolean} The given type is exactly the expected type.\n */\nexport function isType(type, expected) {\n  return type === expected;\n}\n\n/**\n * @typedef {boolean|number|string|Array<number>} LiteralValue\n */\n\nexport class LiteralExpression {\n  /**\n   * @param {number} type The value type.\n   * @param {LiteralValue} value The literal value.\n   */\n  constructor(type, value) {\n    this.type = type;\n    this.value = value;\n  }\n}\n\nexport class CallExpression {\n  /**\n   * @param {number} type The return type.\n   * @param {string} operator The operator.\n   * @param {...Expression} args The arguments.\n   */\n  constructor(type, operator, ...args) {\n    this.type = type;\n    this.operator = operator;\n    this.args = args;\n  }\n}\n\n/**\n * @typedef {LiteralExpression|CallExpression} Expression\n */\n\n/**\n * @typedef {Object} ParsingContext\n * @property {Set<string>} variables Variables referenced with the 'var' operator.\n * @property {Set<string>} properties Properties referenced with the 'get' operator.\n * @property {boolean} featureId The style uses the feature id.\n * @property {boolean} geometryType The style uses the feature geometry type.\n * @property {import(\"../style/flat.js\").FlatStyle|import(\"../style/webgl.js\").WebGLStyle} style The style being parsed\n */\n\n/**\n * @return {ParsingContext} A new parsing context.\n */\nexport function newParsingContext() {\n  return {\n    variables: new Set(),\n    properties: new Set(),\n    featureId: false,\n    geometryType: false,\n    style: {},\n  };\n}\n\n/**\n * @param {string} typeHint Type hint\n * @return {number} Resulting value type (will be a single type)\n */\nfunction getTypeFromHint(typeHint) {\n  switch (typeHint) {\n    case 'string':\n      return StringType;\n    case 'color':\n      return ColorType;\n    case 'number':\n      return NumberType;\n    case 'boolean':\n      return BooleanType;\n    case 'number[]':\n      return NumberArrayType;\n    default:\n      throw new Error(`Unrecognized type hint: ${typeHint}`);\n  }\n}\n\n/**\n * @typedef {LiteralValue|Array} EncodedExpression\n */\n\n/**\n * @param {EncodedExpression} encoded The encoded expression.\n * @param {ParsingContext} context The parsing context.\n * @param {number} [typeHint] Optional type hint\n * @return {Expression} The parsed expression result.\n */\nexport function parse(encoded, context, typeHint) {\n  switch (typeof encoded) {\n    case 'boolean': {\n      return new LiteralExpression(BooleanType, encoded);\n    }\n    case 'number': {\n      return new LiteralExpression(\n        typeHint === SizeType ? SizeType : NumberType,\n        encoded,\n      );\n    }\n    case 'string': {\n      let type = StringType;\n      if (isStringColor(encoded)) {\n        type |= ColorType;\n      }\n      // apply the given type hint only if it won't result in an empty type\n      if (!isType(type & typeHint, NoneType)) {\n        type &= typeHint;\n      }\n      return new LiteralExpression(type, encoded);\n    }\n    default: {\n      // pass\n    }\n  }\n\n  if (!Array.isArray(encoded)) {\n    throw new Error('Expression must be an array or a primitive value');\n  }\n\n  if (encoded.length === 0) {\n    throw new Error('Empty expression');\n  }\n\n  if (typeof encoded[0] === 'string') {\n    return parseCallExpression(encoded, context, typeHint);\n  }\n\n  for (const item of encoded) {\n    if (typeof item !== 'number') {\n      throw new Error('Expected an array of numbers');\n    }\n  }\n\n  let type = NumberArrayType;\n  if (encoded.length === 2) {\n    type |= SizeType;\n  } else if (encoded.length === 3 || encoded.length === 4) {\n    type |= ColorType;\n  }\n  if (typeHint) {\n    type &= typeHint;\n  }\n  return new LiteralExpression(type, encoded);\n}\n\n/**\n * @type {Object<string, string>}\n */\nexport const Ops = {\n  Get: 'get',\n  Var: 'var',\n  Concat: 'concat',\n  GeometryType: 'geometry-type',\n  Any: 'any',\n  All: 'all',\n  Not: '!',\n  Resolution: 'resolution',\n  Zoom: 'zoom',\n  Time: 'time',\n  Equal: '==',\n  NotEqual: '!=',\n  GreaterThan: '>',\n  GreaterThanOrEqualTo: '>=',\n  LessThan: '<',\n  LessThanOrEqualTo: '<=',\n  Multiply: '*',\n  Divide: '/',\n  Add: '+',\n  Subtract: '-',\n  Clamp: 'clamp',\n  Mod: '%',\n  Pow: '^',\n  Abs: 'abs',\n  Floor: 'floor',\n  Ceil: 'ceil',\n  Round: 'round',\n  Sin: 'sin',\n  Cos: 'cos',\n  Atan: 'atan',\n  Sqrt: 'sqrt',\n  Match: 'match',\n  Between: 'between',\n  Interpolate: 'interpolate',\n  Coalesce: 'coalesce',\n  Case: 'case',\n  In: 'in',\n  Number: 'number',\n  String: 'string',\n  Array: 'array',\n  Color: 'color',\n  Id: 'id',\n  Band: 'band',\n  Palette: 'palette',\n  ToString: 'to-string',\n};\n\n/**\n * @typedef {function(Array, ParsingContext, number):Expression} Parser\n * Third argument is a type hint\n */\n\n/**\n * @type {Object<string, Parser>}\n */\nconst parsers = {\n  [Ops.Get]: createParser(\n    ([_, typeHint]) => {\n      if (typeHint !== undefined) {\n        return getTypeFromHint(\n          /** @type {string} */ (\n            /** @type {LiteralExpression} */ (typeHint).value\n          ),\n        );\n      }\n      return AnyType;\n    },\n    withArgsCount(1, 2),\n    withGetArgs,\n  ),\n  [Ops.Var]: createParser(\n    ([firstArg]) => firstArg.type,\n    withArgsCount(1, 1),\n    withVarArgs,\n  ),\n  [Ops.Id]: createParser(NumberType | StringType, withNoArgs, usesFeatureId),\n  [Ops.Concat]: createParser(\n    StringType,\n    withArgsCount(2, Infinity),\n    parseArgsOfType(AnyType),\n  ),\n  [Ops.GeometryType]: createParser(StringType, withNoArgs, usesGeometryType),\n  [Ops.Resolution]: createParser(NumberType, withNoArgs),\n  [Ops.Zoom]: createParser(NumberType, withNoArgs),\n  [Ops.Time]: createParser(NumberType, withNoArgs),\n  [Ops.Any]: createParser(\n    BooleanType,\n    withArgsCount(2, Infinity),\n    parseArgsOfType(BooleanType),\n  ),\n  [Ops.All]: createParser(\n    BooleanType,\n    withArgsCount(2, Infinity),\n    parseArgsOfType(BooleanType),\n  ),\n  [Ops.Not]: createParser(\n    BooleanType,\n    withArgsCount(1, 1),\n    parseArgsOfType(BooleanType),\n  ),\n  [Ops.Equal]: createParser(\n    BooleanType,\n    withArgsCount(2, 2),\n    parseArgsOfType(AnyType),\n    narrowArgsType,\n  ),\n  [Ops.NotEqual]: createParser(\n    BooleanType,\n    withArgsCount(2, 2),\n    parseArgsOfType(AnyType),\n    narrowArgsType,\n  ),\n  [Ops.GreaterThan]: createParser(\n    BooleanType,\n    withArgsCount(2, 2),\n    parseArgsOfType(AnyType),\n    narrowArgsType,\n  ),\n  [Ops.GreaterThanOrEqualTo]: createParser(\n    BooleanType,\n    withArgsCount(2, 2),\n    parseArgsOfType(AnyType),\n    narrowArgsType,\n  ),\n  [Ops.LessThan]: createParser(\n    BooleanType,\n    withArgsCount(2, 2),\n    parseArgsOfType(AnyType),\n    narrowArgsType,\n  ),\n  [Ops.LessThanOrEqualTo]: createParser(\n    BooleanType,\n    withArgsCount(2, 2),\n    parseArgsOfType(AnyType),\n    narrowArgsType,\n  ),\n  [Ops.Multiply]: createParser(\n    (parsedArgs) => {\n      let outputType = NumberType | ColorType;\n      for (let i = 0; i < parsedArgs.length; i++) {\n        outputType &= parsedArgs[i].type;\n      }\n      return outputType;\n    },\n    withArgsCount(2, Infinity),\n    parseArgsOfType(NumberType | ColorType),\n    narrowArgsType,\n  ),\n  [Ops.Coalesce]: createParser(\n    (parsedArgs) => {\n      let type = AnyType;\n      for (let i = 1; i < parsedArgs.length; i += 2) {\n        type &= parsedArgs[i].type;\n      }\n      type &= parsedArgs[parsedArgs.length - 1].type;\n      return type;\n    },\n    withArgsCount(2, Infinity),\n    parseArgsOfType(AnyType),\n    narrowArgsType,\n  ),\n  [Ops.Divide]: createParser(\n    NumberType,\n    withArgsCount(2, 2),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Add]: createParser(\n    NumberType,\n    withArgsCount(2, Infinity),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Subtract]: createParser(\n    NumberType,\n    withArgsCount(2, 2),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Clamp]: createParser(\n    NumberType,\n    withArgsCount(3, 3),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Mod]: createParser(\n    NumberType,\n    withArgsCount(2, 2),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Pow]: createParser(\n    NumberType,\n    withArgsCount(2, 2),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Abs]: createParser(\n    NumberType,\n    withArgsCount(1, 1),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Floor]: createParser(\n    NumberType,\n    withArgsCount(1, 1),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Ceil]: createParser(\n    NumberType,\n    withArgsCount(1, 1),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Round]: createParser(\n    NumberType,\n    withArgsCount(1, 1),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Sin]: createParser(\n    NumberType,\n    withArgsCount(1, 1),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Cos]: createParser(\n    NumberType,\n    withArgsCount(1, 1),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Atan]: createParser(\n    NumberType,\n    withArgsCount(1, 2),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Sqrt]: createParser(\n    NumberType,\n    withArgsCount(1, 1),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Match]: createParser(\n    (parsedArgs) => {\n      let type = AnyType;\n      for (let i = 2; i < parsedArgs.length; i += 2) {\n        type &= parsedArgs[i].type;\n      }\n      type &= parsedArgs[parsedArgs.length - 1].type;\n      return type;\n    },\n    withArgsCount(4, Infinity),\n    withEvenArgs,\n    parseMatchArgs,\n  ),\n  [Ops.Between]: createParser(\n    BooleanType,\n    withArgsCount(3, 3),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Interpolate]: createParser(\n    (parsedArgs) => {\n      let type = ColorType | NumberType;\n      for (let i = 3; i < parsedArgs.length; i += 2) {\n        type &= parsedArgs[i].type;\n      }\n      return type;\n    },\n    withArgsCount(6, Infinity),\n    withEvenArgs,\n    parseInterpolateArgs,\n  ),\n  [Ops.Case]: createParser(\n    (parsedArgs) => {\n      let type = AnyType;\n      for (let i = 1; i < parsedArgs.length; i += 2) {\n        type &= parsedArgs[i].type;\n      }\n      type &= parsedArgs[parsedArgs.length - 1].type;\n      return type;\n    },\n    withArgsCount(3, Infinity),\n    withOddArgs,\n    parseCaseArgs,\n  ),\n  [Ops.In]: createParser(BooleanType, withArgsCount(2, 2), parseInArgs),\n  [Ops.Number]: createParser(\n    NumberType,\n    withArgsCount(1, Infinity),\n    parseArgsOfType(AnyType),\n  ),\n  [Ops.String]: createParser(\n    StringType,\n    withArgsCount(1, Infinity),\n    parseArgsOfType(AnyType),\n  ),\n  [Ops.Array]: createParser(\n    (parsedArgs) => {\n      return parsedArgs.length === 2\n        ? NumberArrayType | SizeType\n        : parsedArgs.length === 3 || parsedArgs.length === 4\n          ? NumberArrayType | ColorType\n          : NumberArrayType;\n    },\n    withArgsCount(1, Infinity),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Color]: createParser(\n    ColorType,\n    withArgsCount(1, 4),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Band]: createParser(\n    NumberType,\n    withArgsCount(1, 3),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Palette]: createParser(ColorType, withArgsCount(2, 2), parsePaletteArgs),\n  [Ops.ToString]: createParser(\n    StringType,\n    withArgsCount(1, 1),\n    parseArgsOfType(BooleanType | NumberType | StringType | ColorType),\n  ),\n};\n\n/**\n * @typedef {function(Array<EncodedExpression>, ParsingContext, Array<Expression>, number?):Array<Expression>|void} ArgValidator\n * An argument validator applies various checks to an encoded expression arguments\n * Returns the parsed arguments if any.\n * Third argument is the array of parsed arguments from previous validators\n * Fourth argument is an optional type hint\n */\n\n/**\n * @type ArgValidator\n */\nfunction withGetArgs(encoded, context) {\n  const arg = parse(encoded[1], context);\n  if (!(arg instanceof LiteralExpression)) {\n    throw new Error('Expected a literal argument for get operation');\n  }\n  if (typeof arg.value !== 'string') {\n    throw new Error('Expected a string argument for get operation');\n  }\n  context.properties.add(arg.value);\n  if (encoded.length === 3) {\n    const hint = parse(encoded[2], context);\n    return [arg, hint];\n  }\n  return [arg];\n}\n\n/**\n * @type ArgValidator\n */\nfunction withVarArgs(encoded, context, parsedArgs, typeHint) {\n  const varName = encoded[1];\n  if (typeof varName !== 'string') {\n    throw new Error('Expected a string argument for var operation');\n  }\n  context.variables.add(varName);\n  if (\n    !('variables' in context.style) ||\n    context.style.variables[varName] === undefined\n  ) {\n    return [new LiteralExpression(AnyType, varName)];\n  }\n  const initialValue = context.style.variables[varName];\n  const arg = /** @type {LiteralExpression} */ (parse(initialValue, context));\n  arg.value = varName;\n  if (typeHint && !overlapsType(typeHint, arg.type)) {\n    throw new Error(\n      `The variable ${varName} has type ${typeName(\n        arg.type,\n      )} but the following type was expected: ${typeName(typeHint)}`,\n    );\n  }\n  return [arg];\n}\n\n/**\n * @type ArgValidator\n */\nfunction usesFeatureId(encoded, context) {\n  context.featureId = true;\n}\n\n/**\n * @type ArgValidator\n */\nfunction usesGeometryType(encoded, context) {\n  context.geometryType = true;\n}\n\n/**\n * @type ArgValidator\n */\nfunction withNoArgs(encoded, context) {\n  const operation = encoded[0];\n  if (encoded.length !== 1) {\n    throw new Error(`Expected no arguments for ${operation} operation`);\n  }\n  return [];\n}\n\n/**\n * @param {number} minArgs The minimum number of arguments.\n * @param {number} maxArgs The maximum number of arguments.\n * @return {ArgValidator} The argument validator\n */\nfunction withArgsCount(minArgs, maxArgs) {\n  return function (encoded, context) {\n    const operation = encoded[0];\n    const argCount = encoded.length - 1;\n    if (minArgs === maxArgs) {\n      if (argCount !== minArgs) {\n        const plural = minArgs === 1 ? '' : 's';\n        throw new Error(\n          `Expected ${minArgs} argument${plural} for ${operation}, got ${argCount}`,\n        );\n      }\n    } else if (argCount < minArgs || argCount > maxArgs) {\n      const range =\n        maxArgs === Infinity\n          ? `${minArgs} or more`\n          : `${minArgs} to ${maxArgs}`;\n      throw new Error(\n        `Expected ${range} arguments for ${operation}, got ${argCount}`,\n      );\n    }\n  };\n}\n\n/**\n * @param {number} argType The argument type.\n * @return {ArgValidator} The argument validator\n */\nfunction parseArgsOfType(argType) {\n  return function (encoded, context) {\n    const operation = encoded[0];\n    const argCount = encoded.length - 1;\n    /**\n     * @type {Array<Expression>}\n     */\n    const args = new Array(argCount);\n    for (let i = 0; i < argCount; ++i) {\n      const expression = parse(encoded[i + 1], context);\n      if (!overlapsType(argType, expression.type)) {\n        const gotType = typeName(argType);\n        const expectedType = typeName(expression.type);\n        throw new Error(\n          `Unexpected type for argument ${i} of ${operation} operation` +\n            `, got ${gotType} but expected ${expectedType}`,\n        );\n      }\n      expression.type &= argType;\n      args[i] = expression;\n    }\n    return args;\n  };\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction narrowArgsType(encoded, context, parsedArgs) {\n  const operation = encoded[0];\n  const argCount = encoded.length - 1;\n\n  // first pass to determine a narrowed down type\n  let sameType = AnyType;\n  for (let i = 0; i < parsedArgs.length; ++i) {\n    sameType &= parsedArgs[i].type;\n  }\n\n  if (sameType === NoneType) {\n    throw new Error(\n      `No common type could be found for arguments of ${operation} operation`,\n    );\n  }\n\n  // re-parse args\n  const args = new Array(argCount);\n  for (let i = 0; i < argCount; ++i) {\n    args[i] = parse(encoded[i + 1], context, sameType);\n  }\n  return args;\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction withOddArgs(encoded, context) {\n  const operation = encoded[0];\n  const argCount = encoded.length - 1;\n  if (argCount % 2 === 0) {\n    throw new Error(\n      `An odd amount of arguments was expected for operation ${operation}, got ${JSON.stringify(\n        argCount,\n      )} instead`,\n    );\n  }\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction withEvenArgs(encoded, context) {\n  const operation = encoded[0];\n  const argCount = encoded.length - 1;\n  if (argCount % 2 === 1) {\n    throw new Error(\n      `An even amount of arguments was expected for operation ${operation}, got ${JSON.stringify(\n        argCount,\n      )} instead`,\n    );\n  }\n}\n\n/**\n * @type ArgValidator\n */\nfunction parseMatchArgs(encoded, context, parsedArgs, typeHint) {\n  const argsCount = encoded.length - 1;\n\n  const input = parse(encoded[1], context);\n  let inputType = input.type;\n  const fallback = parse(encoded[encoded.length - 1], context);\n  let outputType =\n    typeHint !== undefined ? typeHint & fallback.type : fallback.type;\n\n  // first parse args to figure out possible types\n  const args = new Array(argsCount - 2);\n  for (let i = 0; i < argsCount - 2; i += 2) {\n    const match = parse(encoded[i + 2], context);\n    const output = parse(encoded[i + 3], context);\n    inputType &= match.type;\n    outputType &= output.type;\n    args[i] = match;\n    args[i + 1] = output;\n  }\n\n  // check input and output types validity\n  const expectedInputType = StringType | NumberType | BooleanType;\n  if (!overlapsType(expectedInputType, inputType)) {\n    throw new Error(\n      `Expected an input of type ${typeName(\n        expectedInputType,\n      )} for the interpolate operation` +\n        `, got ${typeName(inputType)} instead`,\n    );\n  }\n  inputType &= expectedInputType;\n  if (isType(outputType, NoneType)) {\n    throw new Error(\n      `Could not find a common output type for the following match operation: ` +\n        JSON.stringify(encoded),\n    );\n  }\n\n  // parse again inputs and outputs with common type\n  for (let i = 0; i < argsCount - 2; i += 2) {\n    const match = parse(encoded[i + 2], context, inputType);\n    const output = parse(encoded[i + 3], context, outputType);\n    args[i] = match;\n    args[i + 1] = output;\n  }\n\n  return [\n    parse(encoded[1], context, inputType),\n    ...args,\n    parse(encoded[encoded.length - 1], context, outputType),\n  ];\n}\n\n/**\n * @type ArgValidator\n */\nfunction parseInterpolateArgs(encoded, context, parsedArgs, typeHint) {\n  const interpolationType = encoded[1];\n  let interpolation;\n  switch (interpolationType[0]) {\n    case 'linear':\n      interpolation = 1;\n      break;\n    case 'exponential':\n      interpolation = interpolationType[1];\n      if (typeof interpolation !== 'number') {\n        throw new Error(\n          `Expected a number base for exponential interpolation` +\n            `, got ${JSON.stringify(interpolation)} instead`,\n        );\n      }\n      break;\n    default:\n      interpolation = null;\n  }\n  if (!interpolation) {\n    throw new Error(\n      `Invalid interpolation type: ${JSON.stringify(interpolationType)}`,\n    );\n  }\n  interpolation = parse(interpolation, context);\n\n  // check input types\n  let input = parse(encoded[2], context);\n  if (!overlapsType(NumberType, input.type)) {\n    throw new Error(\n      `Expected an input of type number for the interpolate operation` +\n        `, got ${typeName(input.type)} instead`,\n    );\n  }\n  input = parse(encoded[2], context, NumberType); // parse again with narrower output\n\n  const args = new Array(encoded.length - 3);\n  for (let i = 0; i < args.length; i += 2) {\n    let stop = parse(encoded[i + 3], context);\n    if (!overlapsType(NumberType, stop.type)) {\n      throw new Error(\n        `Expected all stop input values in the interpolate operation to be of type number` +\n          `, got ${typeName(stop.type)} at position ${i + 2} instead`,\n      );\n    }\n    let output = parse(encoded[i + 4], context);\n    if (!overlapsType(NumberType | ColorType, output.type)) {\n      throw new Error(\n        `Expected all stop output values in the interpolate operation to be a number or color` +\n          `, got ${typeName(output.type)} at position ${i + 3} instead`,\n      );\n    }\n    // parse again with narrower types\n    stop = parse(encoded[i + 3], context, NumberType);\n    output = parse(encoded[i + 4], context, NumberType | ColorType);\n    args[i] = stop;\n    args[i + 1] = output;\n  }\n\n  return [interpolation, input, ...args];\n}\n\n/**\n * @type ArgValidator\n */\nfunction parseCaseArgs(encoded, context, parsedArgs, typeHint) {\n  const fallback = parse(encoded[encoded.length - 1], context, typeHint);\n  let outputType =\n    typeHint !== undefined ? typeHint & fallback.type : fallback.type;\n\n  // first parse args to figure out possible types\n  const args = new Array(encoded.length - 1);\n  for (let i = 0; i < args.length - 1; i += 2) {\n    const condition = parse(encoded[i + 1], context);\n    const output = parse(encoded[i + 2], context, typeHint);\n    if (!overlapsType(BooleanType, condition.type)) {\n      throw new Error(\n        `Expected all conditions in the case operation to be of type boolean` +\n          `, got ${typeName(condition.type)} at position ${i} instead`,\n      );\n    }\n    outputType &= output.type;\n    args[i] = condition;\n    args[i + 1] = output;\n  }\n\n  if (isType(outputType, NoneType)) {\n    throw new Error(\n      `Could not find a common output type for the following case operation: ` +\n        JSON.stringify(encoded),\n    );\n  }\n\n  // parse again args with common output type\n  for (let i = 0; i < args.length - 1; i += 2) {\n    args[i + 1] = parse(encoded[i + 2], context, outputType);\n  }\n  args[args.length - 1] = parse(\n    encoded[encoded.length - 1],\n    context,\n    outputType,\n  );\n\n  return args;\n}\n\n/**\n * @type ArgValidator\n */\nfunction parseInArgs(encoded, context) {\n  /** @type {Array<number|string>} */\n  let haystack = /** @type {any} */ (encoded[2]);\n  if (!Array.isArray(haystack)) {\n    throw new Error(\n      `The \"in\" operator was provided a literal value which was not an array as second argument.`,\n    );\n  }\n  if (typeof haystack[0] === 'string') {\n    if (haystack[0] !== 'literal') {\n      throw new Error(\n        `For the \"in\" operator, a string array should be wrapped in a \"literal\" operator to disambiguate from expressions.`,\n      );\n    }\n    if (!Array.isArray(haystack[1])) {\n      throw new Error(\n        `The \"in\" operator was provided a literal value which was not an array as second argument.`,\n      );\n    }\n    haystack = haystack[1];\n  }\n\n  let needleType = StringType | NumberType;\n  const args = new Array(haystack.length);\n  for (let i = 0; i < args.length; i++) {\n    const arg = parse(haystack[i], context);\n    needleType &= arg.type;\n    args[i] = arg;\n  }\n  if (isType(needleType, NoneType)) {\n    throw new Error(\n      `Could not find a common type for the following in operation: ` +\n        JSON.stringify(encoded),\n    );\n  }\n\n  const needle = parse(encoded[1], context, needleType);\n  return [needle, ...args];\n}\n\n/**\n * @type ArgValidator\n */\nfunction parsePaletteArgs(encoded, context) {\n  const index = parse(encoded[1], context, NumberType);\n  if (index.type !== NumberType) {\n    throw new Error(\n      `The first argument of palette must be an number, got ${typeName(\n        index.type,\n      )} instead`,\n    );\n  }\n  const colors = encoded[2];\n  if (!Array.isArray(colors)) {\n    throw new Error('The second argument of palette must be an array');\n  }\n  const parsedColors = new Array(colors.length);\n  for (let i = 0; i < parsedColors.length; i++) {\n    const color = parse(colors[i], context, ColorType);\n    if (!(color instanceof LiteralExpression)) {\n      throw new Error(\n        `The palette color at index ${i} must be a literal value`,\n      );\n    }\n    if (!overlapsType(color.type, ColorType)) {\n      throw new Error(\n        `The palette color at index ${i} should be of type color, got ${typeName(\n          color.type,\n        )} instead`,\n      );\n    }\n    parsedColors[i] = color;\n  }\n  return [index, ...parsedColors];\n}\n\n/**\n * @param {number|function(Array<Expression>):number} returnType The return type of the operator; can be a fixed value or a callback taking the parsed\n * arguments\n * @param {Array<ArgValidator>} argValidators A chain of argument validators; the return value of the last validator\n * will be used as parsed arguments\n * @return {Parser} The parser.\n */\nfunction createParser(returnType, ...argValidators) {\n  return function (encoded, context, typeHint) {\n    const operator = encoded[0];\n    let parsedArgs = [];\n    for (let i = 0; i < argValidators.length; i++) {\n      parsedArgs =\n        argValidators[i](encoded, context, parsedArgs, typeHint) || parsedArgs;\n    }\n    let actualType =\n      typeof returnType === 'function' ? returnType(parsedArgs) : returnType;\n    if (typeHint !== undefined) {\n      if (!overlapsType(actualType, typeHint)) {\n        throw new Error(\n          `The following expression was expected to return ${typeName(\n            typeHint,\n          )}, but returns ${typeName(actualType)} instead: ${JSON.stringify(\n            encoded,\n          )}`,\n        );\n      }\n      actualType &= typeHint;\n    }\n    if (actualType === NoneType) {\n      throw new Error(\n        `No matching type was found for the following expression: ${JSON.stringify(\n          encoded,\n        )}`,\n      );\n    }\n    return new CallExpression(actualType, operator, ...parsedArgs);\n  };\n}\n\n/**\n * @param {Array} encoded The encoded expression.\n * @param {ParsingContext} context The parsing context.\n * @param {number} [typeHint] Optional type hint\n * @return {Expression} The parsed expression.\n */\nfunction parseCallExpression(encoded, context, typeHint) {\n  const operator = encoded[0];\n\n  const parser = parsers[operator];\n  if (!parser) {\n    throw new Error(`Unknown operator: ${operator}`);\n  }\n  return parser(encoded, context, typeHint);\n}\n\n/**\n * Returns a simplified geometry type suited for the `geometry-type` operator\n * @param {import('../geom/Geometry.js').default|import('../render/Feature.js').default} geometry Geometry object\n * @return {'Point'|'LineString'|'Polygon'|''} Simplified geometry type; empty string of no geometry found\n */\nexport function computeGeometryType(geometry) {\n  if (!geometry) {\n    return '';\n  }\n  const type = geometry.getType();\n  switch (type) {\n    case 'Point':\n    case 'LineString':\n    case 'Polygon':\n      return type;\n    case 'MultiPoint':\n    case 'MultiLineString':\n    case 'MultiPolygon':\n      return /** @type {'Point'|'LineString'|'Polygon'} */ (type.substring(5));\n    case 'Circle':\n      return 'Polygon';\n    case 'GeometryCollection':\n      return computeGeometryType(\n        /** @type {import(\"../geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries()[0],\n      );\n    default:\n      return '';\n  }\n}\n","/**\n * @module ol/expr/cpu\n */\n\nimport {\n  ColorType,\n  LiteralExpression,\n  Ops,\n  overlapsType,\n  parse,\n  typeName,\n} from './expression.js';\nimport {\n  fromString,\n  lchaToRgba,\n  normalize,\n  rgbaToLcha,\n  toString,\n  withAlpha,\n} from '../color.js';\n\n/**\n * @fileoverview This module includes functions to build expressions for evaluation on the CPU.\n * Building is composed of two steps: parsing and compiling.  The parsing step takes an encoded\n * expression and returns an instance of one of the expression classes.  The compiling step takes\n * the expression instance and returns a function that can be evaluated in to return a literal\n * value.  The evaluator function should do as little allocation and work as possible.\n */\n\n/**\n * @typedef {Object} EvaluationContext\n * @property {Object} properties The values for properties used in 'get' expressions.\n * @property {Object} variables The values for variables used in 'var' expressions.\n * @property {number} resolution The map resolution.\n * @property {string|number|null} featureId The feature id.\n * @property {string} geometryType Geometry type of the current object.\n */\n\n/**\n * @return {EvaluationContext} A new evaluation context.\n */\nexport function newEvaluationContext() {\n  return {\n    variables: {},\n    properties: {},\n    resolution: NaN,\n    featureId: null,\n    geometryType: '',\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):import(\"./expression.js\").LiteralValue} ExpressionEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):boolean} BooleanEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):number} NumberEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):string} StringEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):(Array<number>|string)} ColorLikeEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):Array<number>} NumberArrayEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):Array<number>} CoordinateEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):(Array<number>)} SizeEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):(Array<number>|number)} SizeLikeEvaluator\n */\n\n/**\n * @param {import('./expression.js').EncodedExpression} encoded The encoded expression.\n * @param {number} type The expected type.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The expression evaluator.\n */\nexport function buildExpression(encoded, type, context) {\n  const expression = parse(encoded, context);\n  if (!overlapsType(type, expression.type)) {\n    const expected = typeName(type);\n    const actual = typeName(expression.type);\n    throw new Error(\n      `Expected expression to be of type ${expected}, got ${actual}`,\n    );\n  }\n  return compileExpression(expression, context);\n}\n\n/**\n * @param {import(\"./expression.js\").Expression} expression The expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileExpression(expression, context) {\n  if (expression instanceof LiteralExpression) {\n    // convert colors to array if possible\n    if (expression.type === ColorType && typeof expression.value === 'string') {\n      const colorValue = fromString(expression.value);\n      return function () {\n        return colorValue;\n      };\n    }\n    return function () {\n      return expression.value;\n    };\n  }\n  const operator = expression.operator;\n  switch (operator) {\n    case Ops.Number:\n    case Ops.String:\n    case Ops.Coalesce: {\n      return compileAssertionExpression(expression, context);\n    }\n    case Ops.Get:\n    case Ops.Var: {\n      return compileAccessorExpression(expression, context);\n    }\n    case Ops.Id: {\n      return (context) => context.featureId;\n    }\n    case Ops.GeometryType: {\n      return (context) => context.geometryType;\n    }\n    case Ops.Concat: {\n      const args = expression.args.map((e) => compileExpression(e, context));\n      return (context) =>\n        ''.concat(...args.map((arg) => arg(context).toString()));\n    }\n    case Ops.Resolution: {\n      return (context) => context.resolution;\n    }\n    case Ops.Any:\n    case Ops.All:\n    case Ops.Between:\n    case Ops.In:\n    case Ops.Not: {\n      return compileLogicalExpression(expression, context);\n    }\n    case Ops.Equal:\n    case Ops.NotEqual:\n    case Ops.LessThan:\n    case Ops.LessThanOrEqualTo:\n    case Ops.GreaterThan:\n    case Ops.GreaterThanOrEqualTo: {\n      return compileComparisonExpression(expression, context);\n    }\n    case Ops.Multiply:\n    case Ops.Divide:\n    case Ops.Add:\n    case Ops.Subtract:\n    case Ops.Clamp:\n    case Ops.Mod:\n    case Ops.Pow:\n    case Ops.Abs:\n    case Ops.Floor:\n    case Ops.Ceil:\n    case Ops.Round:\n    case Ops.Sin:\n    case Ops.Cos:\n    case Ops.Atan:\n    case Ops.Sqrt: {\n      return compileNumericExpression(expression, context);\n    }\n    case Ops.Case: {\n      return compileCaseExpression(expression, context);\n    }\n    case Ops.Match: {\n      return compileMatchExpression(expression, context);\n    }\n    case Ops.Interpolate: {\n      return compileInterpolateExpression(expression, context);\n    }\n    case Ops.ToString: {\n      return compileConvertExpression(expression, context);\n    }\n    default: {\n      throw new Error(`Unsupported operator ${operator}`);\n    }\n    // TODO: unimplemented\n    // Ops.Zoom\n    // Ops.Time\n    // Ops.Array\n    // Ops.Color\n    // Ops.Band\n    // Ops.Palette\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileAssertionExpression(expression, context) {\n  const type = expression.operator;\n  const length = expression.args.length;\n\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  switch (type) {\n    case Ops.Coalesce: {\n      return (context) => {\n        for (let i = 0; i < length; ++i) {\n          const value = args[i](context);\n          if (typeof value !== 'undefined' && value !== null) {\n            return value;\n          }\n        }\n        throw new Error('Expected one of the values to be non-null');\n      };\n    }\n    case Ops.Number:\n    case Ops.String: {\n      return (context) => {\n        for (let i = 0; i < length; ++i) {\n          const value = args[i](context);\n          if (typeof value === type) {\n            return value;\n          }\n        }\n        throw new Error(`Expected one of the values to be a ${type}`);\n      };\n    }\n    default: {\n      throw new Error(`Unsupported assertion operator ${type}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileAccessorExpression(expression, context) {\n  const nameExpression = /** @type {LiteralExpression} */ (expression.args[0]);\n  const name = /** @type {string} */ (nameExpression.value);\n  switch (expression.operator) {\n    case Ops.Get: {\n      return (context) => context.properties[name];\n    }\n    case Ops.Var: {\n      return (context) => context.variables[name];\n    }\n    default: {\n      throw new Error(`Unsupported accessor operator ${expression.operator}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {BooleanEvaluator} The evaluator function.\n */\nfunction compileComparisonExpression(expression, context) {\n  const op = expression.operator;\n  const left = compileExpression(expression.args[0], context);\n  const right = compileExpression(expression.args[1], context);\n  switch (op) {\n    case Ops.Equal: {\n      return (context) => left(context) === right(context);\n    }\n    case Ops.NotEqual: {\n      return (context) => left(context) !== right(context);\n    }\n    case Ops.LessThan: {\n      return (context) => left(context) < right(context);\n    }\n    case Ops.LessThanOrEqualTo: {\n      return (context) => left(context) <= right(context);\n    }\n    case Ops.GreaterThan: {\n      return (context) => left(context) > right(context);\n    }\n    case Ops.GreaterThanOrEqualTo: {\n      return (context) => left(context) >= right(context);\n    }\n    default: {\n      throw new Error(`Unsupported comparison operator ${op}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {BooleanEvaluator} The evaluator function.\n */\nfunction compileLogicalExpression(expression, context) {\n  const op = expression.operator;\n  const length = expression.args.length;\n\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  switch (op) {\n    case Ops.Any: {\n      return (context) => {\n        for (let i = 0; i < length; ++i) {\n          if (args[i](context)) {\n            return true;\n          }\n        }\n        return false;\n      };\n    }\n    case Ops.All: {\n      return (context) => {\n        for (let i = 0; i < length; ++i) {\n          if (!args[i](context)) {\n            return false;\n          }\n        }\n        return true;\n      };\n    }\n    case Ops.Between: {\n      return (context) => {\n        const value = args[0](context);\n        const min = args[1](context);\n        const max = args[2](context);\n        return value >= min && value <= max;\n      };\n    }\n    case Ops.In: {\n      return (context) => {\n        const value = args[0](context);\n        for (let i = 1; i < length; ++i) {\n          if (value === args[i](context)) {\n            return true;\n          }\n        }\n        return false;\n      };\n    }\n    case Ops.Not: {\n      return (context) => !args[0](context);\n    }\n    default: {\n      throw new Error(`Unsupported logical operator ${op}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {NumberEvaluator} The evaluator function.\n */\nfunction compileNumericExpression(expression, context) {\n  const op = expression.operator;\n  const length = expression.args.length;\n\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  switch (op) {\n    case Ops.Multiply: {\n      return (context) => {\n        let value = 1;\n        for (let i = 0; i < length; ++i) {\n          value *= args[i](context);\n        }\n        return value;\n      };\n    }\n    case Ops.Divide: {\n      return (context) => args[0](context) / args[1](context);\n    }\n    case Ops.Add: {\n      return (context) => {\n        let value = 0;\n        for (let i = 0; i < length; ++i) {\n          value += args[i](context);\n        }\n        return value;\n      };\n    }\n    case Ops.Subtract: {\n      return (context) => args[0](context) - args[1](context);\n    }\n    case Ops.Clamp: {\n      return (context) => {\n        const value = args[0](context);\n        const min = args[1](context);\n        if (value < min) {\n          return min;\n        }\n        const max = args[2](context);\n        if (value > max) {\n          return max;\n        }\n        return value;\n      };\n    }\n    case Ops.Mod: {\n      return (context) => args[0](context) % args[1](context);\n    }\n    case Ops.Pow: {\n      return (context) => Math.pow(args[0](context), args[1](context));\n    }\n    case Ops.Abs: {\n      return (context) => Math.abs(args[0](context));\n    }\n    case Ops.Floor: {\n      return (context) => Math.floor(args[0](context));\n    }\n    case Ops.Ceil: {\n      return (context) => Math.ceil(args[0](context));\n    }\n    case Ops.Round: {\n      return (context) => Math.round(args[0](context));\n    }\n    case Ops.Sin: {\n      return (context) => Math.sin(args[0](context));\n    }\n    case Ops.Cos: {\n      return (context) => Math.cos(args[0](context));\n    }\n    case Ops.Atan: {\n      if (length === 2) {\n        return (context) => Math.atan2(args[0](context), args[1](context));\n      }\n      return (context) => Math.atan(args[0](context));\n    }\n    case Ops.Sqrt: {\n      return (context) => Math.sqrt(args[0](context));\n    }\n    default: {\n      throw new Error(`Unsupported numeric operator ${op}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileCaseExpression(expression, context) {\n  const length = expression.args.length;\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  return (context) => {\n    for (let i = 0; i < length - 1; i += 2) {\n      const condition = args[i](context);\n      if (condition) {\n        return args[i + 1](context);\n      }\n    }\n    return args[length - 1](context);\n  };\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileMatchExpression(expression, context) {\n  const length = expression.args.length;\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  return (context) => {\n    const value = args[0](context);\n    for (let i = 1; i < length; i += 2) {\n      if (value === args[i](context)) {\n        return args[i + 1](context);\n      }\n    }\n    return args[length - 1](context);\n  };\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileInterpolateExpression(expression, context) {\n  const length = expression.args.length;\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  return (context) => {\n    const base = args[0](context);\n    const value = args[1](context);\n\n    let previousInput;\n    let previousOutput;\n    for (let i = 2; i < length; i += 2) {\n      const input = args[i](context);\n      let output = args[i + 1](context);\n      const isColor = Array.isArray(output);\n      if (isColor) {\n        output = withAlpha(output);\n      }\n      if (input >= value) {\n        if (i === 2) {\n          return output;\n        }\n        if (isColor) {\n          return interpolateColor(\n            base,\n            value,\n            previousInput,\n            previousOutput,\n            input,\n            output,\n          );\n        }\n        return interpolateNumber(\n          base,\n          value,\n          previousInput,\n          previousOutput,\n          input,\n          output,\n        );\n      }\n      previousInput = input;\n      previousOutput = output;\n    }\n    return previousOutput;\n  };\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileConvertExpression(expression, context) {\n  const op = expression.operator;\n  const length = expression.args.length;\n\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  switch (op) {\n    case Ops.ToString: {\n      return (context) => {\n        const value = args[0](context);\n        if (expression.args[0].type === ColorType) {\n          return toString(value);\n        }\n        return value.toString();\n      };\n    }\n    default: {\n      throw new Error(`Unsupported convert operator ${op}`);\n    }\n  }\n}\n\n/**\n * @param {number} base The base.\n * @param {number} value The value.\n * @param {number} input1 The first input value.\n * @param {number} output1 The first output value.\n * @param {number} input2 The second input value.\n * @param {number} output2 The second output value.\n * @return {number} The interpolated value.\n */\nfunction interpolateNumber(base, value, input1, output1, input2, output2) {\n  const delta = input2 - input1;\n  if (delta === 0) {\n    return output1;\n  }\n  const along = value - input1;\n  const factor =\n    base === 1\n      ? along / delta\n      : (Math.pow(base, along) - 1) / (Math.pow(base, delta) - 1);\n  return output1 + factor * (output2 - output1);\n}\n\n/**\n * @param {number} base The base.\n * @param {number} value The value.\n * @param {number} input1 The first input value.\n * @param {import('../color.js').Color} rgba1 The first output value.\n * @param {number} input2 The second input value.\n * @param {import('../color.js').Color} rgba2 The second output value.\n * @return {import('../color.js').Color} The interpolated color.\n */\nfunction interpolateColor(base, value, input1, rgba1, input2, rgba2) {\n  const delta = input2 - input1;\n  if (delta === 0) {\n    return rgba1;\n  }\n  const lcha1 = rgbaToLcha(rgba1);\n  const lcha2 = rgbaToLcha(rgba2);\n  let deltaHue = lcha2[2] - lcha1[2];\n  if (deltaHue > 180) {\n    deltaHue -= 360;\n  } else if (deltaHue < -180) {\n    deltaHue += 360;\n  }\n\n  const lcha = [\n    interpolateNumber(base, value, input1, lcha1[0], input2, lcha2[0]),\n    interpolateNumber(base, value, input1, lcha1[1], input2, lcha2[1]),\n    lcha1[2] + interpolateNumber(base, value, input1, 0, input2, deltaHue),\n    interpolateNumber(base, value, input1, rgba1[3], input2, rgba2[3]),\n  ];\n  return normalize(lchaToRgba(lcha));\n}\n","/**\n * @module ol/render/canvas/style\n */\n\nimport Circle from '../../style/Circle.js';\nimport Fill from '../../style/Fill.js';\nimport Icon from '../../style/Icon.js';\nimport RegularShape from '../../style/RegularShape.js';\nimport Stroke from '../../style/Stroke.js';\nimport Style from '../../style/Style.js';\nimport Text from '../../style/Text.js';\nimport {\n  BooleanType,\n  ColorType,\n  NumberArrayType,\n  NumberType,\n  StringType,\n  computeGeometryType,\n  newParsingContext,\n} from '../../expr/expression.js';\nimport {buildExpression, newEvaluationContext} from '../../expr/cpu.js';\nimport {isEmpty} from '../../obj.js';\nimport {toSize} from '../../size.js';\n\n/**\n * @fileoverview This module includes functions to build styles for the canvas renderer.  Building\n * is composed of two steps: parsing and compiling.  The parsing step takes an encoded expression\n * and returns an instance of one of the expression classes.  The compiling step takes the\n * expression instance and returns a function that can be evaluated to return a literal value.  The\n * evaluator function should do as little allocation and work as possible.\n */\n\n/**\n * @typedef {import(\"../../style/flat.js\").FlatStyle} FlatStyle\n */\n\n/**\n * @typedef {import(\"../../expr/expression.js\").EncodedExpression} EncodedExpression\n */\n\n/**\n * @typedef {import(\"../../expr/expression.js\").ParsingContext} ParsingContext\n */\n\n/**\n * @typedef {import(\"../../expr/expression.js\").CallExpression} CallExpression\n */\n\n/**\n * @typedef {import(\"../../expr/cpu.js\").EvaluationContext} EvaluationContext\n */\n\n/**\n * @typedef {import(\"../../expr/cpu.js\").ExpressionEvaluator} ExpressionEvaluator\n */\n\n/**\n * @param {EvaluationContext} context The evaluation context.\n * @return {boolean} Always true.\n */\nfunction always(context) {\n  return true;\n}\n\n/**\n * This function adapts a rule evaluator to the existing style function interface.\n * After we have deprecated the style function, we can use the compiled rules directly\n * and pass a more complete evaluation context (variables, zoom, time, etc.).\n *\n * @param {Array<import('../../style/flat.js').Rule>} rules The rules.\n * @return {import('../../style/Style.js').StyleFunction} A style function.\n */\nexport function rulesToStyleFunction(rules) {\n  const parsingContext = newParsingContext();\n  const evaluator = buildRuleSet(rules, parsingContext);\n  const evaluationContext = newEvaluationContext();\n  return function (feature, resolution) {\n    evaluationContext.properties = feature.getPropertiesInternal();\n    evaluationContext.resolution = resolution;\n    if (parsingContext.featureId) {\n      const id = feature.getId();\n      if (id !== undefined) {\n        evaluationContext.featureId = id;\n      } else {\n        evaluationContext.featureId = null;\n      }\n    }\n    if (parsingContext.geometryType) {\n      evaluationContext.geometryType = computeGeometryType(\n        feature.getGeometry(),\n      );\n    }\n    return evaluator(evaluationContext);\n  };\n}\n\n/**\n * This function adapts a style evaluator to the existing style function interface.\n * After we have deprecated the style function, we can use the compiled rules directly\n * and pass a more complete evaluation context (variables, zoom, time, etc.).\n *\n * @param {Array<import('../../style/flat.js').FlatStyle>} flatStyles The flat styles.\n * @return {import('../../style/Style.js').StyleFunction} A style function.\n */\nexport function flatStylesToStyleFunction(flatStyles) {\n  const parsingContext = newParsingContext();\n  const length = flatStyles.length;\n\n  /**\n   * @type {Array<StyleEvaluator>}\n   */\n  const evaluators = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    evaluators[i] = buildStyle(flatStyles[i], parsingContext);\n  }\n  const evaluationContext = newEvaluationContext();\n\n  /**\n   * @type {Array<Style>}\n   */\n  const styles = new Array(length);\n\n  return function (feature, resolution) {\n    evaluationContext.properties = feature.getPropertiesInternal();\n    evaluationContext.resolution = resolution;\n    if (parsingContext.featureId) {\n      const id = feature.getId();\n      if (id !== undefined) {\n        evaluationContext.featureId = id;\n      } else {\n        evaluationContext.featureId = null;\n      }\n    }\n    let nonNullCount = 0;\n    for (let i = 0; i < length; ++i) {\n      const style = evaluators[i](evaluationContext);\n      if (style) {\n        styles[nonNullCount] = style;\n        nonNullCount += 1;\n      }\n    }\n    styles.length = nonNullCount;\n    return styles;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Array<Style>} RuleSetEvaluator\n */\n\n/**\n * @typedef {Object} CompiledRule\n * @property {ExpressionEvaluator} filter The compiled filter evaluator.\n * @property {Array<StyleEvaluator>} styles The list of compiled style evaluators.\n */\n\n/**\n * @param {Array<import('../../style/flat.js').Rule>} rules The rules.\n * @param {ParsingContext} context The parsing context.\n * @return {RuleSetEvaluator} The evaluator function.\n */\nexport function buildRuleSet(rules, context) {\n  const length = rules.length;\n\n  /**\n   * @type {Array<CompiledRule>}\n   */\n  const compiledRules = new Array(length);\n\n  for (let i = 0; i < length; ++i) {\n    const rule = rules[i];\n    const filter =\n      'filter' in rule\n        ? buildExpression(rule.filter, BooleanType, context)\n        : always;\n\n    /**\n     * @type {Array<StyleEvaluator>}\n     */\n    let styles;\n    if (Array.isArray(rule.style)) {\n      const styleLength = rule.style.length;\n      styles = new Array(styleLength);\n      for (let j = 0; j < styleLength; ++j) {\n        styles[j] = buildStyle(rule.style[j], context);\n      }\n    } else {\n      styles = [buildStyle(rule.style, context)];\n    }\n\n    compiledRules[i] = {filter, styles};\n  }\n\n  return function (context) {\n    /**\n     * @type {Array<Style>}\n     */\n    const styles = [];\n\n    let someMatched = false;\n    for (let i = 0; i < length; ++i) {\n      const filterEvaluator = compiledRules[i].filter;\n      if (!filterEvaluator(context)) {\n        continue;\n      }\n      if (rules[i].else && someMatched) {\n        continue;\n      }\n      someMatched = true;\n      for (const styleEvaluator of compiledRules[i].styles) {\n        const style = styleEvaluator(context);\n        if (!style) {\n          continue;\n        }\n        styles.push(style);\n      }\n    }\n\n    return styles;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Style|null} StyleEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle A flat style literal.\n * @param {ParsingContext} context The parsing context.\n * @return {StyleEvaluator} A function that evaluates to a style.  The style returned by\n * this function will be reused between invocations.\n */\nexport function buildStyle(flatStyle, context) {\n  const evaluateFill = buildFill(flatStyle, '', context);\n  const evaluateStroke = buildStroke(flatStyle, '', context);\n  const evaluateText = buildText(flatStyle, context);\n  const evaluateImage = buildImage(flatStyle, context);\n  const evaluateZIndex = numberEvaluator(flatStyle, 'z-index', context);\n\n  if (\n    !evaluateFill &&\n    !evaluateStroke &&\n    !evaluateText &&\n    !evaluateImage &&\n    !isEmpty(flatStyle)\n  ) {\n    // assume this is a user error\n    // would be nice to check the properties and suggest \"did you mean...\"\n    throw new Error(\n      'No fill, stroke, point, or text symbolizer properties in style: ' +\n        JSON.stringify(flatStyle),\n    );\n  }\n\n  const style = new Style();\n  return function (context) {\n    let empty = true;\n    if (evaluateFill) {\n      const fill = evaluateFill(context);\n      if (fill) {\n        empty = false;\n      }\n      style.setFill(fill);\n    }\n    if (evaluateStroke) {\n      const stroke = evaluateStroke(context);\n      if (stroke) {\n        empty = false;\n      }\n      style.setStroke(stroke);\n    }\n    if (evaluateText) {\n      const text = evaluateText(context);\n      if (text) {\n        empty = false;\n      }\n      style.setText(text);\n    }\n    if (evaluateImage) {\n      const image = evaluateImage(context);\n      if (image) {\n        empty = false;\n      }\n      style.setImage(image);\n    }\n    if (evaluateZIndex) {\n      style.setZIndex(evaluateZIndex(context));\n    }\n    if (empty) {\n      return null;\n    }\n    return style;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Fill|null} FillEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} prefix The property prefix.\n * @param {ParsingContext} context The parsing context.\n * @return {FillEvaluator?} A function that evaluates to a fill.\n */\nfunction buildFill(flatStyle, prefix, context) {\n  let evaluateColor;\n  if (prefix + 'fill-pattern-src' in flatStyle) {\n    evaluateColor = patternEvaluator(flatStyle, prefix + 'fill-', context);\n  } else {\n    evaluateColor = colorLikeEvaluator(\n      flatStyle,\n      prefix + 'fill-color',\n      context,\n    );\n  }\n  if (!evaluateColor) {\n    return null;\n  }\n\n  const fill = new Fill();\n  return function (context) {\n    const color = evaluateColor(context);\n    if (color === 'none') {\n      return null;\n    }\n    fill.setColor(color);\n    return fill;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Stroke|null} StrokeEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} prefix The property prefix.\n * @param {ParsingContext} context The parsing context.\n * @return {StrokeEvaluator?} A function the evaluates to a stroke.\n */\nfunction buildStroke(flatStyle, prefix, context) {\n  const evaluateWidth = numberEvaluator(\n    flatStyle,\n    prefix + 'stroke-width',\n    context,\n  );\n\n  const evaluateColor = colorLikeEvaluator(\n    flatStyle,\n    prefix + 'stroke-color',\n    context,\n  );\n\n  if (!evaluateWidth && !evaluateColor) {\n    return null;\n  }\n\n  const evaluateLineCap = stringEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-cap',\n    context,\n  );\n\n  const evaluateLineJoin = stringEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-join',\n    context,\n  );\n\n  const evaluateLineDash = numberArrayEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-dash',\n    context,\n  );\n\n  const evaluateLineDashOffset = numberEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-dash-offset',\n    context,\n  );\n\n  const evaluateMiterLimit = numberEvaluator(\n    flatStyle,\n    prefix + 'stroke-miter-limit',\n    context,\n  );\n\n  const stroke = new Stroke();\n  return function (context) {\n    if (evaluateColor) {\n      const color = evaluateColor(context);\n      if (color === 'none') {\n        return null;\n      }\n      stroke.setColor(color);\n    }\n\n    if (evaluateWidth) {\n      stroke.setWidth(evaluateWidth(context));\n    }\n\n    if (evaluateLineCap) {\n      const lineCap = evaluateLineCap(context);\n      if (lineCap !== 'butt' && lineCap !== 'round' && lineCap !== 'square') {\n        throw new Error('Expected butt, round, or square line cap');\n      }\n      stroke.setLineCap(lineCap);\n    }\n\n    if (evaluateLineJoin) {\n      const lineJoin = evaluateLineJoin(context);\n      if (\n        lineJoin !== 'bevel' &&\n        lineJoin !== 'round' &&\n        lineJoin !== 'miter'\n      ) {\n        throw new Error('Expected bevel, round, or miter line join');\n      }\n      stroke.setLineJoin(lineJoin);\n    }\n\n    if (evaluateLineDash) {\n      stroke.setLineDash(evaluateLineDash(context));\n    }\n\n    if (evaluateLineDashOffset) {\n      stroke.setLineDashOffset(evaluateLineDashOffset(context));\n    }\n\n    if (evaluateMiterLimit) {\n      stroke.setMiterLimit(evaluateMiterLimit(context));\n    }\n\n    return stroke;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Text} TextEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {TextEvaluator?} A function that evaluates to a text symbolizer.\n */\nfunction buildText(flatStyle, context) {\n  const prefix = 'text-';\n\n  // Currently, an Array<string> may be used for rich text support.  This doesn't\n  // work with our expression syntax where arrays of strings are interpreted as\n  // call expressions.  To support rich text, we could add a 'strings' operator\n  // where all the following arguments would be string values.\n  const evaluateValue = stringEvaluator(flatStyle, prefix + 'value', context);\n  if (!evaluateValue) {\n    return null;\n  }\n\n  const evaluateFill = buildFill(flatStyle, prefix, context);\n\n  const evaluateBackgroundFill = buildFill(\n    flatStyle,\n    prefix + 'background-',\n    context,\n  );\n\n  const evaluateStroke = buildStroke(flatStyle, prefix, context);\n\n  const evaluateBackgroundStroke = buildStroke(\n    flatStyle,\n    prefix + 'background-',\n    context,\n  );\n\n  const evaluateFont = stringEvaluator(flatStyle, prefix + 'font', context);\n\n  const evaluateMaxAngle = numberEvaluator(\n    flatStyle,\n    prefix + 'max-angle',\n    context,\n  );\n\n  const evaluateOffsetX = numberEvaluator(\n    flatStyle,\n    prefix + 'offset-x',\n    context,\n  );\n\n  const evaluateOffsetY = numberEvaluator(\n    flatStyle,\n    prefix + 'offset-y',\n    context,\n  );\n\n  const evaluateOverflow = booleanEvaluator(\n    flatStyle,\n    prefix + 'overflow',\n    context,\n  );\n\n  const evaluatePlacement = stringEvaluator(\n    flatStyle,\n    prefix + 'placement',\n    context,\n  );\n\n  const evaluateRepeat = numberEvaluator(flatStyle, prefix + 'repeat', context);\n\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context,\n  );\n\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context,\n  );\n\n  const evaluateAlign = stringEvaluator(flatStyle, prefix + 'align', context);\n\n  const evaluateJustify = stringEvaluator(\n    flatStyle,\n    prefix + 'justify',\n    context,\n  );\n\n  const evaluateBaseline = stringEvaluator(\n    flatStyle,\n    prefix + 'baseline',\n    context,\n  );\n\n  const evaluatePadding = numberArrayEvaluator(\n    flatStyle,\n    prefix + 'padding',\n    context,\n  );\n\n  // The following properties are not currently settable\n  const declutterMode = optionalDeclutterMode(\n    flatStyle,\n    prefix + 'declutter-mode',\n  );\n\n  const text = new Text({declutterMode});\n\n  return function (context) {\n    text.setText(evaluateValue(context));\n\n    if (evaluateFill) {\n      text.setFill(evaluateFill(context));\n    }\n\n    if (evaluateBackgroundFill) {\n      text.setBackgroundFill(evaluateBackgroundFill(context));\n    }\n\n    if (evaluateStroke) {\n      text.setStroke(evaluateStroke(context));\n    }\n\n    if (evaluateBackgroundStroke) {\n      text.setBackgroundStroke(evaluateBackgroundStroke(context));\n    }\n\n    if (evaluateFont) {\n      text.setFont(evaluateFont(context));\n    }\n\n    if (evaluateMaxAngle) {\n      text.setMaxAngle(evaluateMaxAngle(context));\n    }\n\n    if (evaluateOffsetX) {\n      text.setOffsetX(evaluateOffsetX(context));\n    }\n\n    if (evaluateOffsetY) {\n      text.setOffsetY(evaluateOffsetY(context));\n    }\n\n    if (evaluateOverflow) {\n      text.setOverflow(evaluateOverflow(context));\n    }\n\n    if (evaluatePlacement) {\n      const placement = evaluatePlacement(context);\n      if (placement !== 'point' && placement !== 'line') {\n        throw new Error('Expected point or line for text-placement');\n      }\n      text.setPlacement(placement);\n    }\n\n    if (evaluateRepeat) {\n      text.setRepeat(evaluateRepeat(context));\n    }\n\n    if (evaluateScale) {\n      text.setScale(evaluateScale(context));\n    }\n\n    if (evaluateRotateWithView) {\n      text.setRotateWithView(evaluateRotateWithView(context));\n    }\n\n    if (evaluateRotation) {\n      text.setRotation(evaluateRotation(context));\n    }\n\n    if (evaluateAlign) {\n      const textAlign = evaluateAlign(context);\n      if (\n        textAlign !== 'left' &&\n        textAlign !== 'center' &&\n        textAlign !== 'right' &&\n        textAlign !== 'end' &&\n        textAlign !== 'start'\n      ) {\n        throw new Error(\n          'Expected left, right, center, start, or end for text-align',\n        );\n      }\n      text.setTextAlign(textAlign);\n    }\n\n    if (evaluateJustify) {\n      const justify = evaluateJustify(context);\n      if (justify !== 'left' && justify !== 'right' && justify !== 'center') {\n        throw new Error('Expected left, right, or center for text-justify');\n      }\n      text.setJustify(justify);\n    }\n\n    if (evaluateBaseline) {\n      const textBaseline = evaluateBaseline(context);\n      if (\n        textBaseline !== 'bottom' &&\n        textBaseline !== 'top' &&\n        textBaseline !== 'middle' &&\n        textBaseline !== 'alphabetic' &&\n        textBaseline !== 'hanging'\n      ) {\n        throw new Error(\n          'Expected bottom, top, middle, alphabetic, or hanging for text-baseline',\n        );\n      }\n      text.setTextBaseline(textBaseline);\n    }\n\n    if (evaluatePadding) {\n      text.setPadding(evaluatePadding(context));\n    }\n\n    return text;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):import(\"../../style/Image.js\").default} ImageEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator?} A function that evaluates to an image symbolizer.\n */\nfunction buildImage(flatStyle, context) {\n  if ('icon-src' in flatStyle) {\n    return buildIcon(flatStyle, context);\n  }\n\n  if ('shape-points' in flatStyle) {\n    return buildShape(flatStyle, context);\n  }\n\n  if ('circle-radius' in flatStyle) {\n    return buildCircle(flatStyle, context);\n  }\n\n  return null;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator} A function that evaluates to an image symbolizer.\n */\nfunction buildIcon(flatStyle, context) {\n  const prefix = 'icon-';\n\n  // required property\n  const srcName = prefix + 'src';\n  const src = requireString(flatStyle[srcName], srcName);\n\n  // settable properties\n  const evaluateAnchor = coordinateEvaluator(\n    flatStyle,\n    prefix + 'anchor',\n    context,\n  );\n\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n\n  const evaluateOpacity = numberEvaluator(\n    flatStyle,\n    prefix + 'opacity',\n    context,\n  );\n\n  const evaluateDisplacement = coordinateEvaluator(\n    flatStyle,\n    prefix + 'displacement',\n    context,\n  );\n\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context,\n  );\n\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context,\n  );\n\n  // the remaining symbolizer properties are not currently settable\n  const anchorOrigin = optionalIconOrigin(flatStyle, prefix + 'anchor-origin');\n  const anchorXUnits = optionalIconAnchorUnits(\n    flatStyle,\n    prefix + 'anchor-x-units',\n  );\n  const anchorYUnits = optionalIconAnchorUnits(\n    flatStyle,\n    prefix + 'anchor-y-units',\n  );\n  const color = optionalColorLike(flatStyle, prefix + 'color');\n  const crossOrigin = optionalString(flatStyle, prefix + 'cross-origin');\n  const offset = optionalNumberArray(flatStyle, prefix + 'offset');\n  const offsetOrigin = optionalIconOrigin(flatStyle, prefix + 'offset-origin');\n  const width = optionalNumber(flatStyle, prefix + 'width');\n  const height = optionalNumber(flatStyle, prefix + 'height');\n  const size = optionalSize(flatStyle, prefix + 'size');\n  const declutterMode = optionalDeclutterMode(\n    flatStyle,\n    prefix + 'declutter-mode',\n  );\n\n  const icon = new Icon({\n    src,\n    anchorOrigin,\n    anchorXUnits,\n    anchorYUnits,\n    color,\n    crossOrigin,\n    offset,\n    offsetOrigin,\n    height,\n    width,\n    size,\n    declutterMode,\n  });\n\n  return function (context) {\n    if (evaluateOpacity) {\n      icon.setOpacity(evaluateOpacity(context));\n    }\n\n    if (evaluateDisplacement) {\n      icon.setDisplacement(evaluateDisplacement(context));\n    }\n\n    if (evaluateRotation) {\n      icon.setRotation(evaluateRotation(context));\n    }\n\n    if (evaluateRotateWithView) {\n      icon.setRotateWithView(evaluateRotateWithView(context));\n    }\n\n    if (evaluateScale) {\n      icon.setScale(evaluateScale(context));\n    }\n\n    if (evaluateAnchor) {\n      icon.setAnchor(evaluateAnchor(context));\n    }\n    return icon;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator} A function that evaluates to an icon symbolizer.\n */\nfunction buildShape(flatStyle, context) {\n  const prefix = 'shape-';\n\n  // required property\n  const pointsName = prefix + 'points';\n  const radiusName = prefix + 'radius';\n  const points = requireNumber(flatStyle[pointsName], pointsName);\n  const radius = requireNumber(flatStyle[radiusName], radiusName);\n\n  // settable properties\n  const evaluateFill = buildFill(flatStyle, prefix, context);\n  const evaluateStroke = buildStroke(flatStyle, prefix, context);\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n  const evaluateDisplacement = coordinateEvaluator(\n    flatStyle,\n    prefix + 'displacement',\n    context,\n  );\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context,\n  );\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context,\n  );\n\n  // the remaining properties are not currently settable\n  const radius2 = optionalNumber(flatStyle, prefix + 'radius2');\n  const angle = optionalNumber(flatStyle, prefix + 'angle');\n  const declutterMode = optionalDeclutterMode(\n    flatStyle,\n    prefix + 'declutter-mode',\n  );\n\n  const shape = new RegularShape({\n    points,\n    radius,\n    radius2,\n    angle,\n    declutterMode,\n  });\n\n  return function (context) {\n    if (evaluateFill) {\n      shape.setFill(evaluateFill(context));\n    }\n    if (evaluateStroke) {\n      shape.setStroke(evaluateStroke(context));\n    }\n    if (evaluateDisplacement) {\n      shape.setDisplacement(evaluateDisplacement(context));\n    }\n    if (evaluateRotation) {\n      shape.setRotation(evaluateRotation(context));\n    }\n    if (evaluateRotateWithView) {\n      shape.setRotateWithView(evaluateRotateWithView(context));\n    }\n    if (evaluateScale) {\n      shape.setScale(evaluateScale(context));\n    }\n\n    return shape;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator} A function that evaluates to a circle symbolizer.\n */\nfunction buildCircle(flatStyle, context) {\n  const prefix = 'circle-';\n\n  // settable properties\n  const evaluateFill = buildFill(flatStyle, prefix, context);\n  const evaluateStroke = buildStroke(flatStyle, prefix, context);\n  const evaluateRadius = numberEvaluator(flatStyle, prefix + 'radius', context);\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n  const evaluateDisplacement = coordinateEvaluator(\n    flatStyle,\n    prefix + 'displacement',\n    context,\n  );\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context,\n  );\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context,\n  );\n\n  // the remaining properties are not currently settable\n  const declutterMode = optionalDeclutterMode(\n    flatStyle,\n    prefix + 'declutter-mode',\n  );\n\n  const circle = new Circle({\n    radius: 5, // this is arbitrary, but required - the evaluated radius is used below\n    declutterMode,\n  });\n\n  return function (context) {\n    if (evaluateRadius) {\n      circle.setRadius(evaluateRadius(context));\n    }\n    if (evaluateFill) {\n      circle.setFill(evaluateFill(context));\n    }\n    if (evaluateStroke) {\n      circle.setStroke(evaluateStroke(context));\n    }\n    if (evaluateDisplacement) {\n      circle.setDisplacement(evaluateDisplacement(context));\n    }\n    if (evaluateRotation) {\n      circle.setRotation(evaluateRotation(context));\n    }\n    if (evaluateRotateWithView) {\n      circle.setRotateWithView(evaluateRotateWithView(context));\n    }\n    if (evaluateScale) {\n      circle.setScale(evaluateScale(context));\n    }\n\n    return circle;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').NumberEvaluator|undefined} The expression evaluator or undefined.\n */\nfunction numberEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return undefined;\n  }\n  const evaluator = buildExpression(flatStyle[name], NumberType, context);\n  return function (context) {\n    return requireNumber(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').StringEvaluator?} The expression evaluator.\n */\nfunction stringEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], StringType, context);\n  return function (context) {\n    return requireString(evaluator(context), name);\n  };\n}\n\nfunction patternEvaluator(flatStyle, prefix, context) {\n  const srcEvaluator = stringEvaluator(\n    flatStyle,\n    prefix + 'pattern-src',\n    context,\n  );\n  const offsetEvaluator = sizeEvaluator(\n    flatStyle,\n    prefix + 'pattern-offset',\n    context,\n  );\n  const patternSizeEvaluator = sizeEvaluator(\n    flatStyle,\n    prefix + 'pattern-size',\n    context,\n  );\n  const colorEvaluator = colorLikeEvaluator(\n    flatStyle,\n    prefix + 'color',\n    context,\n  );\n  return function (context) {\n    return {\n      src: srcEvaluator(context),\n      offset: offsetEvaluator && offsetEvaluator(context),\n      size: patternSizeEvaluator && patternSizeEvaluator(context),\n      color: colorEvaluator && colorEvaluator(context),\n    };\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').BooleanEvaluator?} The expression evaluator.\n */\nfunction booleanEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], BooleanType, context);\n  return function (context) {\n    const value = evaluator(context);\n    if (typeof value !== 'boolean') {\n      throw new Error(`Expected a boolean for ${name}`);\n    }\n    return value;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').ColorLikeEvaluator?} The expression evaluator.\n */\nfunction colorLikeEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(\n    flatStyle[name],\n    ColorType | StringType,\n    context,\n  );\n  return function (context) {\n    return requireColorLike(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').NumberArrayEvaluator?} The expression evaluator.\n */\nfunction numberArrayEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], NumberArrayType, context);\n  return function (context) {\n    return requireNumberArray(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').CoordinateEvaluator?} The expression evaluator.\n */\nfunction coordinateEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], NumberArrayType, context);\n  return function (context) {\n    const array = requireNumberArray(evaluator(context), name);\n    if (array.length !== 2) {\n      throw new Error(`Expected two numbers for ${name}`);\n    }\n    return array;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').SizeEvaluator?} The expression evaluator.\n */\nfunction sizeEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], NumberArrayType, context);\n  return function (context) {\n    return requireSize(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').SizeLikeEvaluator?} The expression evaluator.\n */\nfunction sizeLikeEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(\n    flatStyle[name],\n    NumberArrayType | NumberType,\n    context,\n  );\n  return function (context) {\n    return requireSizeLike(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {number|undefined} A number or undefined.\n */\nfunction optionalNumber(flatStyle, property) {\n  const value = flatStyle[property];\n  if (value === undefined) {\n    return undefined;\n  }\n  if (typeof value !== 'number') {\n    throw new Error(`Expected a number for ${property}`);\n  }\n  return value;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {import(\"../../size.js\").Size|undefined} A size or undefined.\n */\nfunction optionalSize(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (typeof encoded === 'number') {\n    return toSize(encoded);\n  }\n  if (!Array.isArray(encoded)) {\n    throw new Error(`Expected a number or size array for ${property}`);\n  }\n  if (\n    encoded.length !== 2 ||\n    typeof encoded[0] !== 'number' ||\n    typeof encoded[1] !== 'number'\n  ) {\n    throw new Error(`Expected a number or size array for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {string|undefined} A string or undefined.\n */\nfunction optionalString(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (typeof encoded !== 'string') {\n    throw new Error(`Expected a string for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {import(\"../../style/Icon.js\").IconOrigin|undefined} An icon origin or undefined.\n */\nfunction optionalIconOrigin(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (\n    encoded !== 'bottom-left' &&\n    encoded !== 'bottom-right' &&\n    encoded !== 'top-left' &&\n    encoded !== 'top-right'\n  ) {\n    throw new Error(\n      `Expected bottom-left, bottom-right, top-left, or top-right for ${property}`,\n    );\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {import(\"../../style/Icon.js\").IconAnchorUnits|undefined} Icon anchor units or undefined.\n */\nfunction optionalIconAnchorUnits(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (encoded !== 'pixels' && encoded !== 'fraction') {\n    throw new Error(`Expected pixels or fraction for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {Array<number>|undefined} An array of numbers or undefined.\n */\nfunction optionalNumberArray(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  return requireNumberArray(encoded, property);\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {import('../../style/Style.js').DeclutterMode} Icon declutter mode.\n */\nfunction optionalDeclutterMode(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (typeof encoded !== 'string') {\n    throw new Error(`Expected a string for ${property}`);\n  }\n  if (encoded !== 'declutter' && encoded !== 'obstacle' && encoded !== 'none') {\n    throw new Error(`Expected declutter, obstacle, or none for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {string|Array<number>|undefined} A string or an array of color values or undefined.\n */\nfunction optionalColorLike(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  return requireColorLike(encoded, property);\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {Array<number>} An array of numbers.\n */\nfunction requireNumberArray(value, property) {\n  if (!Array.isArray(value)) {\n    throw new Error(`Expected an array for ${property}`);\n  }\n  const length = value.length;\n  for (let i = 0; i < length; ++i) {\n    if (typeof value[i] !== 'number') {\n      throw new Error(`Expected an array of numbers for ${property}`);\n    }\n  }\n  return value;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {string} A string.\n */\nfunction requireString(value, property) {\n  if (typeof value !== 'string') {\n    throw new Error(`Expected a string for ${property}`);\n  }\n  return value;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {number} A number.\n */\nfunction requireNumber(value, property) {\n  if (typeof value !== 'number') {\n    throw new Error(`Expected a number for ${property}`);\n  }\n  return value;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {Array<number>|string} A color.\n */\nfunction requireColorLike(value, property) {\n  if (typeof value === 'string') {\n    return value;\n  }\n  const array = requireNumberArray(value, property);\n  const length = array.length;\n  if (length < 3 || length > 4) {\n    throw new Error(`Expected a color with 3 or 4 values for ${property}`);\n  }\n  return array;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {Array<number>} A number or an array of two numbers.\n */\nfunction requireSize(value, property) {\n  const size = requireNumberArray(value, property);\n  if (size.length !== 2) {\n    throw new Error(`Expected an array of two numbers for ${property}`);\n  }\n  return size;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {number|Array<number>} A number or an array of two numbers.\n */\nfunction requireSizeLike(value, property) {\n  if (typeof value === 'number') {\n    return value;\n  }\n  return requireSize(value, property);\n}\n","/**\n * @module ol/layer/BaseVector\n */\nimport Layer from './Layer.js';\nimport RBush from 'rbush';\nimport Style, {\n  createDefaultStyle,\n  toFunction as toStyleFunction,\n} from '../style/Style.js';\nimport {\n  flatStylesToStyleFunction,\n  rulesToStyleFunction,\n} from '../render/canvas/style.js';\n\n/**\n * @template {import(\"../source/Vector.js\").default<import('../Feature').FeatureLike>|import(\"../source/VectorTile.js\").default<import('../Feature').FeatureLike>} VectorSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the\n * renderer when getting features from the vector source for the rendering or hit-detection.\n * Recommended value: the size of the largest symbol, line width or label.\n * @property {VectorSourceType} [source] Source.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * @property {boolean|string|number} [declutter=false] Declutter images and text. Any truthy value will enable\n * decluttering. Within a layer, a feature rendered before another has higher priority. All layers with the\n * same `declutter` value will be decluttered together. The priority is determined by the drawing order of the\n * layers with the same `declutter` value. Higher in the layer stack means higher priority. To declutter distinct\n * layers or groups of layers separately, use different truthy values for `declutter`.\n * @property {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style. When set to `null`, only\n * features that have their own style will be rendered. See {@link module:ol/style/Style~Style} for the default style\n * which will be used if this is not set.\n * @property {import(\"./Base.js\").BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will\n * be recreated during animations. This means that no vectors will be shown clipped, but the\n * setting will have a performance impact for large amounts of vector data. When set to `false`,\n * batches will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will\n * be recreated during interactions. See also `updateWhileAnimating`.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  RENDER_ORDER: 'renderOrder',\n};\n\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default<import('../Feature').FeatureLike>|import(\"../source/VectorTile.js\").default<import('../Feature').FeatureLike>} VectorSourceType\n * @template {import(\"../renderer/canvas/VectorLayer.js\").default|import(\"../renderer/canvas/VectorTileLayer.js\").default|import(\"../renderer/canvas/VectorImageLayer.js\").default|import(\"../renderer/webgl/PointsLayer.js\").default} RendererType\n * @extends {Layer<VectorSourceType, RendererType>}\n * @api\n */\nclass BaseVectorLayer extends Layer {\n  /**\n   * @param {Options<VectorSourceType>} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = Object.assign({}, options);\n\n    delete baseOptions.style;\n    delete baseOptions.renderBuffer;\n    delete baseOptions.updateWhileAnimating;\n    delete baseOptions.updateWhileInteracting;\n    super(baseOptions);\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.declutter_ = options.declutter ? String(options.declutter) : undefined;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.renderBuffer_ =\n      options.renderBuffer !== undefined ? options.renderBuffer : 100;\n\n    /**\n     * User provided style.\n     * @type {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike}\n     * @private\n     */\n    this.style_ = null;\n\n    /**\n     * Style function for use within the library.\n     * @type {import(\"../style/Style.js\").StyleFunction|undefined}\n     * @private\n     */\n    this.styleFunction_ = undefined;\n\n    this.setStyle(options.style);\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileAnimating_ =\n      options.updateWhileAnimating !== undefined\n        ? options.updateWhileAnimating\n        : false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileInteracting_ =\n      options.updateWhileInteracting !== undefined\n        ? options.updateWhileInteracting\n        : false;\n  }\n\n  /**\n   * @return {string} Declutter group.\n   */\n  getDeclutter() {\n    return this.declutter_;\n  }\n\n  /**\n   * Get the topmost feature that intersects the given pixel on the viewport. Returns a promise\n   * that resolves with an array of features. The array will either contain the topmost feature\n   * when a hit was detected, or it will be empty.\n   *\n   * The hit detection algorithm used for this method is optimized for performance, but is less\n   * accurate than the one used in [map.getFeaturesAtPixel()]{@link import(\"../Map.js\").default#getFeaturesAtPixel}.\n   * Text is not considered, and icons are only represented by their bounding box instead of the exact\n   * image.\n   *\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with an array of features.\n   * @api\n   */\n  getFeatures(pixel) {\n    return super.getFeatures(pixel);\n  }\n\n  /**\n   * @return {number|undefined} Render buffer.\n   */\n  getRenderBuffer() {\n    return this.renderBuffer_;\n  }\n\n  /**\n   * @return {function(import(\"../Feature.js\").default, import(\"../Feature.js\").default): number|null|undefined} Render\n   *     order.\n   */\n  getRenderOrder() {\n    return /** @type {import(\"../render.js\").OrderFunction|null|undefined} */ (\n      this.get(Property.RENDER_ORDER)\n    );\n  }\n\n  /**\n   * Get the style for features.  This returns whatever was passed to the `style`\n   * option at construction or to the `setStyle` method.\n   * @return {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null|undefined} Layer style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the style function.\n   * @return {import(\"../style/Style.js\").StyleFunction|undefined} Layer style function.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     animating.\n   */\n  getUpdateWhileAnimating() {\n    return this.updateWhileAnimating_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     interacting.\n   */\n  getUpdateWhileInteracting() {\n    return this.updateWhileInteracting_;\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../layer/Layer.js\").State} layerState Layer state.\n   */\n  renderDeclutter(frameState, layerState) {\n    const declutterGroup = this.getDeclutter();\n    if (declutterGroup in frameState.declutter === false) {\n      frameState.declutter[declutterGroup] = new RBush(9);\n    }\n    this.getRenderer().renderDeclutter(frameState, layerState);\n  }\n\n  /**\n   * @param {import(\"../render.js\").OrderFunction|null|undefined} renderOrder\n   *     Render order.\n   */\n  setRenderOrder(renderOrder) {\n    this.set(Property.RENDER_ORDER, renderOrder);\n  }\n\n  /**\n   * Set the style for features.  This can be a single style object, an array\n   * of styles, or a function that takes a feature and resolution and returns\n   * an array of styles. If set to `null`, the layer has no style (a `null` style),\n   * so only features that have their own styles will be rendered in the layer. Call\n   * `setStyle()` without arguments to reset to the default style. See\n   * [the ol/style/Style module]{@link module:ol/style/Style~Style} for information on the default style.\n   *\n   * If your layer has a static style, you can use [flat style]{@link module:ol/style/flat~FlatStyle} object\n   * literals instead of using the `Style` and symbolizer constructors (`Fill`, `Stroke`, etc.):\n   * ```js\n   * vectorLayer.setStyle({\n   *   \"fill-color\": \"yellow\",\n   *   \"stroke-color\": \"black\",\n   *   \"stroke-width\": 4\n   * })\n   * ```\n   *\n   * @param {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style.\n   * @api\n   */\n  setStyle(style) {\n    this.style_ = style === undefined ? createDefaultStyle : style;\n    const styleLike = toStyleLike(style);\n    this.styleFunction_ =\n      style === null ? undefined : toStyleFunction(styleLike);\n    this.changed();\n  }\n}\n\n/**\n * Coerce the allowed style types into a shorter list of types.  Flat styles, arrays of flat\n * styles, and arrays of rules are converted into style functions.\n *\n * @param {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style.\n * @return {import(\"../style/Style.js\").StyleLike|null} The style.\n */\nfunction toStyleLike(style) {\n  if (style === undefined) {\n    return createDefaultStyle;\n  }\n  if (!style) {\n    return null;\n  }\n  if (typeof style === 'function') {\n    return style;\n  }\n  if (style instanceof Style) {\n    return style;\n  }\n  if (!Array.isArray(style)) {\n    return flatStylesToStyleFunction([style]);\n  }\n  if (style.length === 0) {\n    return [];\n  }\n\n  const length = style.length;\n  const first = style[0];\n\n  if (first instanceof Style) {\n    /**\n     * @type {Array<Style>}\n     */\n    const styles = new Array(length);\n    for (let i = 0; i < length; ++i) {\n      const candidate = style[i];\n      if (!(candidate instanceof Style)) {\n        throw new Error('Expected a list of style instances');\n      }\n      styles[i] = candidate;\n    }\n    return styles;\n  }\n\n  if ('style' in first) {\n    /**\n     * @type Array<import(\"../style/flat.js\").Rule>\n     */\n    const rules = new Array(length);\n    for (let i = 0; i < length; ++i) {\n      const candidate = style[i];\n      if (!('style' in candidate)) {\n        throw new Error('Expected a list of rules with a style property');\n      }\n      rules[i] = candidate;\n    }\n    return rulesToStyleFunction(rules);\n  }\n\n  const flatStyles =\n    /** @type {Array<import(\"../style/flat.js\").FlatStyle>} */ (style);\n  return flatStylesToStyleFunction(flatStyles);\n}\n\nexport default BaseVectorLayer;\n","/**\n * @module ol/render/canvas/Instruction\n */\n\n/**\n * @enum {number}\n */\nconst Instruction = {\n  BEGIN_GEOMETRY: 0,\n  BEGIN_PATH: 1,\n  CIRCLE: 2,\n  CLOSE_PATH: 3,\n  CUSTOM: 4,\n  DRAW_CHARS: 5,\n  DRAW_IMAGE: 6,\n  END_GEOMETRY: 7,\n  FILL: 8,\n  MOVE_TO_LINE_TO: 9,\n  SET_FILL_STYLE: 10,\n  SET_STROKE_STYLE: 11,\n  STROKE: 12,\n};\n\n/**\n * @type {Array<Instruction>}\n */\nexport const fillInstruction = [Instruction.FILL];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const strokeInstruction = [Instruction.STROKE];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const beginPathInstruction = [Instruction.BEGIN_PATH];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const closePathInstruction = [Instruction.CLOSE_PATH];\n\nexport default Instruction;\n","/**\n * @module ol/render/VectorContext\n */\n\n/**\n * @classdesc\n * Context for drawing geometries.  A vector context is available on render\n * events and does not need to be constructed directly.\n * @api\n */\nclass VectorContext {\n  /**\n   * Render a geometry with a custom renderer.\n   *\n   * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   * @param {Function} hitDetectionRenderer Renderer.\n   * @param {number} [index] Render order index.\n   */\n  drawCustom(geometry, feature, renderer, hitDetectionRenderer, index) {}\n\n  /**\n   * Render a geometry.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry The geometry to render.\n   */\n  drawGeometry(geometry) {}\n\n  /**\n   * Set the rendering style.\n   *\n   * @param {import(\"../style/Style.js\").default} style The rendering style.\n   */\n  setStyle(style) {}\n\n  /**\n   * @param {import(\"../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawCircle(circleGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"../style/Style.js\").default} style Style.\n   * @param {number} [index] Render order index.\n   */\n  drawFeature(feature, style, index) {}\n\n  /**\n   * @param {import(\"../geom/GeometryCollection.js\").default} geometryCollectionGeometry Geometry collection.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawGeometryCollection(geometryCollectionGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/LineString.js\").default|import(\"./Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawLineString(lineStringGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/MultiLineString.js\").default|import(\"./Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawMultiLineString(multiLineStringGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/MultiPoint.js\").default|import(\"./Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawMultiPoint(multiPointGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/Point.js\").default|import(\"./Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawPoint(pointGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/Polygon.js\").default|import(\"./Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawPolygon(polygonGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/SimpleGeometry.js\").default|import(\"./Feature.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawText(geometry, feature, index) {}\n\n  /**\n   * @param {import(\"../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {}\n\n  /**\n   * @param {import(\"../style/Image.js\").default} imageStyle Image style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [declutterImageWithText] Shared data for combined decluttering with a text style.\n   */\n  setImageStyle(imageStyle, declutterImageWithText) {}\n\n  /**\n   * @param {import(\"../style/Text.js\").default} textStyle Text style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [declutterImageWithText] Shared data for combined decluttering with an image style.\n   */\n  setTextStyle(textStyle, declutterImageWithText) {}\n}\n\nexport default VectorContext;\n","/**\n * @module ol/render/canvas/Builder\n */\nimport CanvasInstruction from './Instruction.js';\nimport Relationship from '../../extent/Relationship.js';\nimport VectorContext from '../VectorContext.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  buffer,\n  clone,\n  containsCoordinate,\n  coordinateRelationship,\n} from '../../extent.js';\nimport {\n  defaultFillStyle,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../canvas.js';\nimport {equals, reverseSubArray} from '../../array.js';\nimport {\n  inflateCoordinates,\n  inflateCoordinatesArray,\n  inflateMultiCoordinatesArray,\n} from '../../geom/flat/inflate.js';\n\nclass CanvasBuilder extends VectorContext {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super();\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.tolerance = tolerance;\n\n    /**\n     * @protected\n     * @const\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent = maxExtent;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxLineWidth = 0;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction1_ = null;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction2_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.bufferedMaxExtent_ = null;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = [];\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = [];\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate.js\").Coordinate}\n     */\n    this.tmpCoordinate_ = [];\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = [];\n\n    /**\n     * @protected\n     * @type {import(\"../canvas.js\").FillStrokeState}\n     */\n    this.state = /** @type {import(\"../canvas.js\").FillStrokeState} */ ({});\n  }\n\n  /**\n   * @protected\n   * @param {Array<number>} dashArray Dash array.\n   * @return {Array<number>} Dash array with pixel ratio applied\n   */\n  applyPixelRatio(dashArray) {\n    const pixelRatio = this.pixelRatio;\n    return pixelRatio == 1\n      ? dashArray\n      : dashArray.map(function (dash) {\n          return dash * pixelRatio;\n        });\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} stride Stride.\n   * @protected\n   * @return {number} My end\n   */\n  appendFlatPointCoordinates(flatCoordinates, stride) {\n    const extent = this.getBufferedMaxExtent();\n    const tmpCoord = this.tmpCoordinate_;\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      tmpCoord[0] = flatCoordinates[i];\n      tmpCoord[1] = flatCoordinates[i + 1];\n      if (containsCoordinate(extent, tmpCoord)) {\n        coordinates[myEnd++] = tmpCoord[0];\n        coordinates[myEnd++] = tmpCoord[1];\n      }\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} closed Last input coordinate equals first.\n   * @param {boolean} skipFirst Skip first coordinate.\n   * @protected\n   * @return {number} My end.\n   */\n  appendFlatLineCoordinates(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    closed,\n    skipFirst,\n  ) {\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    const extent = this.getBufferedMaxExtent();\n    if (skipFirst) {\n      offset += stride;\n    }\n    let lastXCoord = flatCoordinates[offset];\n    let lastYCoord = flatCoordinates[offset + 1];\n    const nextCoord = this.tmpCoordinate_;\n    let skipped = true;\n\n    let i, lastRel, nextRel;\n    for (i = offset + stride; i < end; i += stride) {\n      nextCoord[0] = flatCoordinates[i];\n      nextCoord[1] = flatCoordinates[i + 1];\n      nextRel = coordinateRelationship(extent, nextCoord);\n      if (nextRel !== lastRel) {\n        if (skipped) {\n          coordinates[myEnd++] = lastXCoord;\n          coordinates[myEnd++] = lastYCoord;\n          skipped = false;\n        }\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n      } else if (nextRel === Relationship.INTERSECTING) {\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n        skipped = false;\n      } else {\n        skipped = true;\n      }\n      lastXCoord = nextCoord[0];\n      lastYCoord = nextCoord[1];\n      lastRel = nextRel;\n    }\n\n    // Last coordinate equals first or only one point to append:\n    if ((closed && skipped) || i === offset + stride) {\n      coordinates[myEnd++] = lastXCoord;\n      coordinates[myEnd++] = lastYCoord;\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @param {Array<number>} builderEnds Builder ends.\n   * @return {number} Offset.\n   */\n  drawCustomCoordinates_(flatCoordinates, offset, ends, stride, builderEnds) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const builderEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        false,\n        false,\n      );\n      builderEnds.push(builderEnd);\n      offset = end;\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   * @param {Function} hitDetectionRenderer Renderer.\n   * @param {number} [index] Render order index.\n   */\n  drawCustom(geometry, feature, renderer, hitDetectionRenderer, index) {\n    this.beginGeometry(geometry, feature, index);\n\n    const type = geometry.getType();\n    const stride = geometry.getStride();\n    const builderBegin = this.coordinates.length;\n\n    let flatCoordinates, builderEnd, builderEnds, builderEndss;\n    let offset;\n\n    switch (type) {\n      case 'MultiPolygon':\n        flatCoordinates =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getOrientedFlatCoordinates();\n        builderEndss = [];\n        const endss =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getEndss();\n        offset = 0;\n        for (let i = 0, ii = endss.length; i < ii; ++i) {\n          const myEnds = [];\n          offset = this.drawCustomCoordinates_(\n            flatCoordinates,\n            offset,\n            endss[i],\n            stride,\n            myEnds,\n          );\n          builderEndss.push(myEnds);\n        }\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEndss,\n          geometry,\n          renderer,\n          inflateMultiCoordinatesArray,\n          index,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEndss,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateMultiCoordinatesArray,\n          index,\n        ]);\n        break;\n      case 'Polygon':\n      case 'MultiLineString':\n        builderEnds = [];\n        flatCoordinates =\n          type == 'Polygon'\n            ? /** @type {import(\"../../geom/Polygon.js\").default} */ (\n                geometry\n              ).getOrientedFlatCoordinates()\n            : geometry.getFlatCoordinates();\n        offset = this.drawCustomCoordinates_(\n          flatCoordinates,\n          0,\n          /** @type {import(\"../../geom/Polygon.js\").default|import(\"../../geom/MultiLineString.js\").default} */ (\n            geometry\n          ).getEnds(),\n          stride,\n          builderEnds,\n        );\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnds,\n          geometry,\n          renderer,\n          inflateCoordinatesArray,\n          index,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnds,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateCoordinatesArray,\n          index,\n        ]);\n        break;\n      case 'LineString':\n      case 'Circle':\n        flatCoordinates = geometry.getFlatCoordinates();\n        builderEnd = this.appendFlatLineCoordinates(\n          flatCoordinates,\n          0,\n          flatCoordinates.length,\n          stride,\n          false,\n          false,\n        );\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          renderer,\n          inflateCoordinates,\n          index,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateCoordinates,\n          index,\n        ]);\n        break;\n      case 'MultiPoint':\n        flatCoordinates = geometry.getFlatCoordinates();\n        builderEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n\n        if (builderEnd > builderBegin) {\n          this.instructions.push([\n            CanvasInstruction.CUSTOM,\n            builderBegin,\n            builderEnd,\n            geometry,\n            renderer,\n            inflateCoordinates,\n            index,\n          ]);\n          this.hitDetectionInstructions.push([\n            CanvasInstruction.CUSTOM,\n            builderBegin,\n            builderEnd,\n            geometry,\n            hitDetectionRenderer || renderer,\n            inflateCoordinates,\n            index,\n          ]);\n        }\n        break;\n      case 'Point':\n        flatCoordinates = geometry.getFlatCoordinates();\n        this.coordinates.push(flatCoordinates[0], flatCoordinates[1]);\n        builderEnd = this.coordinates.length;\n\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          renderer,\n          undefined,\n          index,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          hitDetectionRenderer || renderer,\n          undefined,\n          index,\n        ]);\n        break;\n      default:\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @protected\n   * @param {import(\"../../geom/Geometry\").default|import(\"../Feature.js\").default} geometry The geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} index Render order index\n   */\n  beginGeometry(geometry, feature, index) {\n    this.beginGeometryInstruction1_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n      index,\n    ];\n    this.instructions.push(this.beginGeometryInstruction1_);\n    this.beginGeometryInstruction2_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n      index,\n    ];\n    this.hitDetectionInstructions.push(this.beginGeometryInstruction2_);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    return {\n      instructions: this.instructions,\n      hitDetectionInstructions: this.hitDetectionInstructions,\n      coordinates: this.coordinates,\n    };\n  }\n\n  /**\n   * Reverse the hit detection instructions.\n   */\n  reverseHitDetectionInstructions() {\n    const hitDetectionInstructions = this.hitDetectionInstructions;\n    // step 1 - reverse array\n    hitDetectionInstructions.reverse();\n    // step 2 - reverse instructions within geometry blocks\n    let i;\n    const n = hitDetectionInstructions.length;\n    let instruction;\n    let type;\n    let begin = -1;\n    for (i = 0; i < n; ++i) {\n      instruction = hitDetectionInstructions[i];\n      type = /** @type {import(\"./Instruction.js\").default} */ (instruction[0]);\n      if (type == CanvasInstruction.END_GEOMETRY) {\n        begin = i;\n      } else if (type == CanvasInstruction.BEGIN_GEOMETRY) {\n        instruction[2] = i;\n        reverseSubArray(this.hitDetectionInstructions, begin, i);\n        begin = -1;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    const state = this.state;\n    if (fillStyle) {\n      const fillStyleColor = fillStyle.getColor();\n      state.fillPatternScale =\n        fillStyleColor &&\n        typeof fillStyleColor === 'object' &&\n        'src' in fillStyleColor\n          ? this.pixelRatio\n          : 1;\n      state.fillStyle = asColorLike(\n        fillStyleColor ? fillStyleColor : defaultFillStyle,\n      );\n    } else {\n      state.fillStyle = undefined;\n    }\n    if (strokeStyle) {\n      const strokeStyleColor = strokeStyle.getColor();\n      state.strokeStyle = asColorLike(\n        strokeStyleColor ? strokeStyleColor : defaultStrokeStyle,\n      );\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      state.lineCap =\n        strokeStyleLineCap !== undefined ? strokeStyleLineCap : defaultLineCap;\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      state.lineDash = strokeStyleLineDash\n        ? strokeStyleLineDash.slice()\n        : defaultLineDash;\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      state.lineDashOffset = strokeStyleLineDashOffset\n        ? strokeStyleLineDashOffset\n        : defaultLineDashOffset;\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      state.lineJoin =\n        strokeStyleLineJoin !== undefined\n          ? strokeStyleLineJoin\n          : defaultLineJoin;\n      const strokeStyleWidth = strokeStyle.getWidth();\n      state.lineWidth =\n        strokeStyleWidth !== undefined ? strokeStyleWidth : defaultLineWidth;\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      state.miterLimit =\n        strokeStyleMiterLimit !== undefined\n          ? strokeStyleMiterLimit\n          : defaultMiterLimit;\n\n      if (state.lineWidth > this.maxLineWidth) {\n        this.maxLineWidth = state.lineWidth;\n        // invalidate the buffered max extent cache\n        this.bufferedMaxExtent_ = null;\n      }\n    } else {\n      state.strokeStyle = undefined;\n      state.lineCap = undefined;\n      state.lineDash = null;\n      state.lineDashOffset = undefined;\n      state.lineJoin = undefined;\n      state.lineWidth = undefined;\n      state.miterLimit = undefined;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Fill instruction.\n   */\n  createFill(state) {\n    const fillStyle = state.fillStyle;\n    /** @type {Array<*>} */\n    const fillInstruction = [CanvasInstruction.SET_FILL_STYLE, fillStyle];\n    if (typeof fillStyle !== 'string') {\n      // Fill is a pattern or gradient - align and scale it!\n      fillInstruction.push(state.fillPatternScale);\n    }\n    return fillInstruction;\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  applyStroke(state) {\n    this.instructions.push(this.createStroke(state));\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Stroke instruction.\n   */\n  createStroke(state) {\n    return [\n      CanvasInstruction.SET_STROKE_STYLE,\n      state.strokeStyle,\n      state.lineWidth * this.pixelRatio,\n      state.lineCap,\n      state.lineJoin,\n      state.miterLimit,\n      this.applyPixelRatio(state.lineDash),\n      state.lineDashOffset * this.pixelRatio,\n    ];\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState):Array<*>} createFill Create fill.\n   */\n  updateFillStyle(state, createFill) {\n    const fillStyle = state.fillStyle;\n    if (typeof fillStyle !== 'string' || state.currentFillStyle != fillStyle) {\n      if (fillStyle !== undefined) {\n        this.instructions.push(createFill.call(this, state));\n      }\n      state.currentFillStyle = fillStyle;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState): void} applyStroke Apply stroke.\n   */\n  updateStrokeStyle(state, applyStroke) {\n    const strokeStyle = state.strokeStyle;\n    const lineCap = state.lineCap;\n    const lineDash = state.lineDash;\n    const lineDashOffset = state.lineDashOffset;\n    const lineJoin = state.lineJoin;\n    const lineWidth = state.lineWidth;\n    const miterLimit = state.miterLimit;\n    if (\n      state.currentStrokeStyle != strokeStyle ||\n      state.currentLineCap != lineCap ||\n      (lineDash != state.currentLineDash &&\n        !equals(state.currentLineDash, lineDash)) ||\n      state.currentLineDashOffset != lineDashOffset ||\n      state.currentLineJoin != lineJoin ||\n      state.currentLineWidth != lineWidth ||\n      state.currentMiterLimit != miterLimit\n    ) {\n      if (strokeStyle !== undefined) {\n        applyStroke.call(this, state);\n      }\n      state.currentStrokeStyle = strokeStyle;\n      state.currentLineCap = lineCap;\n      state.currentLineDash = lineDash;\n      state.currentLineDashOffset = lineDashOffset;\n      state.currentLineJoin = lineJoin;\n      state.currentLineWidth = lineWidth;\n      state.currentMiterLimit = miterLimit;\n    }\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  endGeometry(feature) {\n    this.beginGeometryInstruction1_[2] = this.instructions.length;\n    this.beginGeometryInstruction1_ = null;\n    this.beginGeometryInstruction2_[2] = this.hitDetectionInstructions.length;\n    this.beginGeometryInstruction2_ = null;\n    const endGeometryInstruction = [CanvasInstruction.END_GEOMETRY, feature];\n    this.instructions.push(endGeometryInstruction);\n    this.hitDetectionInstructions.push(endGeometryInstruction);\n  }\n\n  /**\n   * Get the buffered rendering extent.  Rendering will be clipped to the extent\n   * provided to the constructor.  To account for symbolizers that may intersect\n   * this extent, we calculate a buffered extent (e.g. based on stroke width).\n   * @return {import(\"../../extent.js\").Extent} The buffered rendering extent.\n   * @protected\n   */\n  getBufferedMaxExtent() {\n    if (!this.bufferedMaxExtent_) {\n      this.bufferedMaxExtent_ = clone(this.maxExtent);\n      if (this.maxLineWidth > 0) {\n        const width = (this.resolution * (this.maxLineWidth + 1)) / 2;\n        buffer(this.bufferedMaxExtent_, width, this.bufferedMaxExtent_);\n      }\n    }\n    return this.bufferedMaxExtent_;\n  }\n}\n\nexport default CanvasBuilder;\n","/**\n * @module ol/render/canvas/ImageBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\nimport {containsCoordinate} from '../../extent.js';\n\nclass CanvasImageBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {import('../../DataTile.js').ImageLike}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {import('../../DataTile.js').ImageLike}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.imagePixelRatio_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorY_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.height_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.opacity_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originY_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size|undefined}\n     */\n    this.scale_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = undefined;\n\n    /**\n     * @private\n     * @type {import('../../style/Style.js').DeclutterMode}\n     */\n    this.declutterMode_ = undefined;\n\n    /**\n     * Data shared with a text builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawPoint(pointGeometry, feature, index) {\n    if (\n      !this.image_ ||\n      (this.maxExtent &&\n        !containsCoordinate(this.maxExtent, pointGeometry.getFlatCoordinates()))\n    ) {\n      return;\n    }\n    this.beginGeometry(pointGeometry, feature, index);\n    const flatCoordinates = pointGeometry.getFlatCoordinates();\n    const stride = pointGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_ * this.imagePixelRatio_,\n      this.originY_ * this.imagePixelRatio_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      1,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawMultiPoint(multiPointGeometry, feature, index) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(multiPointGeometry, feature, index);\n    const flatCoordinates = multiPointGeometry.getFlatCoordinates();\n    const filteredFlatCoordinates = [];\n    for (\n      let i = 0, ii = flatCoordinates.length;\n      i < ii;\n      i += multiPointGeometry.getStride()\n    ) {\n      if (\n        !this.maxExtent ||\n        containsCoordinate(this.maxExtent, flatCoordinates.slice(i, i + 2))\n      ) {\n        filteredFlatCoordinates.push(\n          flatCoordinates[i],\n          flatCoordinates[i + 1],\n        );\n      }\n    }\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(filteredFlatCoordinates, 2);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_ * this.imagePixelRatio_,\n      this.originY_ * this.imagePixelRatio_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      1,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    // FIXME this doesn't really protect us against further calls to draw*Geometry\n    this.anchorX_ = undefined;\n    this.anchorY_ = undefined;\n    this.hitDetectionImage_ = null;\n    this.image_ = null;\n    this.imagePixelRatio_ = undefined;\n    this.height_ = undefined;\n    this.scale_ = undefined;\n    this.opacity_ = undefined;\n    this.originX_ = undefined;\n    this.originY_ = undefined;\n    this.rotateWithView_ = undefined;\n    this.rotation_ = undefined;\n    this.width_ = undefined;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   * @param {Object} [sharedData] Shared data.\n   */\n  setImageStyle(imageStyle, sharedData) {\n    const anchor = imageStyle.getAnchor();\n    const size = imageStyle.getSize();\n    const origin = imageStyle.getOrigin();\n    this.imagePixelRatio_ = imageStyle.getPixelRatio(this.pixelRatio);\n    this.anchorX_ = anchor[0];\n    this.anchorY_ = anchor[1];\n    this.hitDetectionImage_ = imageStyle.getHitDetectionImage();\n    this.image_ = imageStyle.getImage(this.pixelRatio);\n    this.height_ = size[1];\n    this.opacity_ = imageStyle.getOpacity();\n    this.originX_ = origin[0];\n    this.originY_ = origin[1];\n    this.rotateWithView_ = imageStyle.getRotateWithView();\n    this.rotation_ = imageStyle.getRotation();\n    this.scale_ = imageStyle.getScaleArray();\n    this.width_ = size[0];\n    this.declutterMode_ = imageStyle.getDeclutterMode();\n    this.declutterImageWithText_ = sharedData;\n  }\n}\n\nexport default CanvasImageBuilder;\n","/**\n * @module ol/render/canvas/LineStringBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  strokeInstruction,\n} from './Instruction.js';\nimport {defaultLineDash, defaultLineDashOffset} from '../canvas.js';\n\nclass CanvasLineStringBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} end.\n   */\n  drawFlatCoordinates_(flatCoordinates, offset, end, stride) {\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatLineCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      false,\n      false,\n    );\n    const moveToLineToInstruction = [\n      CanvasInstruction.MOVE_TO_LINE_TO,\n      myBegin,\n      myEnd,\n    ];\n    this.instructions.push(moveToLineToInstruction);\n    this.hitDetectionInstructions.push(moveToLineToInstruction);\n    return end;\n  }\n\n  /**\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawLineString(lineStringGeometry, feature, index) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(lineStringGeometry, feature, index);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ],\n      beginPathInstruction,\n    );\n    const flatCoordinates = lineStringGeometry.getFlatCoordinates();\n    const stride = lineStringGeometry.getStride();\n    this.drawFlatCoordinates_(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride,\n    );\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawMultiLineString(multiLineStringGeometry, feature, index) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(multiLineStringGeometry, feature, index);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ],\n      beginPathInstruction,\n    );\n    const ends = multiLineStringGeometry.getEnds();\n    const flatCoordinates = multiLineStringGeometry.getFlatCoordinates();\n    const stride = multiLineStringGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinates_(\n        flatCoordinates,\n        offset,\n        /** @type {number} */ (ends[i]),\n        stride,\n      );\n    }\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    const state = this.state;\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n    }\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  applyStroke(state) {\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n      state.lastStroke = this.coordinates.length;\n    }\n    state.lastStroke = 0;\n    super.applyStroke(state);\n    this.instructions.push(beginPathInstruction);\n  }\n}\n\nexport default CanvasLineStringBuilder;\n","/**\n * @module ol/render/canvas/PolygonBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  closePathInstruction,\n  fillInstruction,\n  strokeInstruction,\n} from './Instruction.js';\nimport {\n  defaultFillStyle,\n  defaultLineDash,\n  defaultLineDashOffset,\n} from '../canvas.js';\nimport {snap} from '../../geom/flat/simplify.js';\n\nclass CanvasPolygonBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawFlatCoordinatess_(flatCoordinates, offset, ends, stride) {\n    const state = this.state;\n    const fill = state.fillStyle !== undefined;\n    const stroke = state.strokeStyle !== undefined;\n    const numEnds = ends.length;\n    this.instructions.push(beginPathInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction);\n    for (let i = 0; i < numEnds; ++i) {\n      const end = ends[i];\n      const myBegin = this.coordinates.length;\n      const myEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        true,\n        !stroke,\n      );\n      const moveToLineToInstruction = [\n        CanvasInstruction.MOVE_TO_LINE_TO,\n        myBegin,\n        myEnd,\n      ];\n      this.instructions.push(moveToLineToInstruction);\n      this.hitDetectionInstructions.push(moveToLineToInstruction);\n      if (stroke) {\n        // Performance optimization: only call closePath() when we have a stroke.\n        // Otherwise the ring is closed already (see appendFlatLineCoordinates above).\n        this.instructions.push(closePathInstruction);\n        this.hitDetectionInstructions.push(closePathInstruction);\n      }\n      offset = end;\n    }\n    if (fill) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (stroke) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawCircle(circleGeometry, feature, index) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(circleGeometry, feature, index);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ]);\n    }\n    const flatCoordinates = circleGeometry.getFlatCoordinates();\n    const stride = circleGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    this.appendFlatLineCoordinates(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride,\n      false,\n      false,\n    );\n    const circleInstruction = [CanvasInstruction.CIRCLE, myBegin];\n    this.instructions.push(beginPathInstruction, circleInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction, circleInstruction);\n    if (state.fillStyle !== undefined) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawPolygon(polygonGeometry, feature, index) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(polygonGeometry, feature, index);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ]);\n    }\n    const ends = polygonGeometry.getEnds();\n    const flatCoordinates = polygonGeometry.getOrientedFlatCoordinates();\n    const stride = polygonGeometry.getStride();\n    this.drawFlatCoordinatess_(\n      flatCoordinates,\n      0,\n      /** @type {Array<number>} */ (ends),\n      stride,\n    );\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature, index) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(multiPolygonGeometry, feature, index);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ]);\n    }\n    const endss = multiPolygonGeometry.getEndss();\n    const flatCoordinates = multiPolygonGeometry.getOrientedFlatCoordinates();\n    const stride = multiPolygonGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinatess_(\n        flatCoordinates,\n        offset,\n        endss[i],\n        stride,\n      );\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    // We want to preserve topology when drawing polygons.  Polygons are\n    // simplified using quantization and point elimination. However, we might\n    // have received a mix of quantized and non-quantized geometries, so ensure\n    // that all are quantized by quantizing all coordinates in the batch.\n    const tolerance = this.tolerance;\n    if (tolerance !== 0) {\n      const coordinates = this.coordinates;\n      for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = snap(coordinates[i], tolerance);\n      }\n    }\n    return super.finish();\n  }\n\n  /**\n   * @private\n   */\n  setFillStrokeStyles_() {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    if (fillStyle !== undefined) {\n      this.updateFillStyle(state, this.createFill);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.updateStrokeStyle(state, this.applyStroke);\n    }\n  }\n}\n\nexport default CanvasPolygonBuilder;\n","import {lerp} from '../../math.js';\n\n/**\n * Creates chunks of equal length from a linestring\n * @param {number} chunkLength Length of each chunk.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @return {Array<Array<number>>} Chunks of linestrings with stride 2.\n */\nexport function lineChunk(chunkLength, flatCoordinates, offset, end, stride) {\n  const chunks = [];\n  let cursor = offset;\n  let chunkM = 0;\n  let currentChunk = flatCoordinates.slice(offset, 2);\n  while (chunkM < chunkLength && cursor + stride < end) {\n    const [x1, y1] = currentChunk.slice(-2);\n    const x2 = flatCoordinates[cursor + stride];\n    const y2 = flatCoordinates[cursor + stride + 1];\n    const segmentLength = Math.sqrt(\n      (x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1),\n    );\n    chunkM += segmentLength;\n    if (chunkM >= chunkLength) {\n      const m = (chunkLength - chunkM + segmentLength) / segmentLength;\n      const x = lerp(x1, x2, m);\n      const y = lerp(y1, y2, m);\n      currentChunk.push(x, y);\n      chunks.push(currentChunk);\n      currentChunk = [x, y];\n      if (chunkM == chunkLength) {\n        cursor += stride;\n      }\n      chunkM = 0;\n    } else if (chunkM < chunkLength) {\n      currentChunk.push(\n        flatCoordinates[cursor + stride],\n        flatCoordinates[cursor + stride + 1],\n      );\n      cursor += stride;\n    } else {\n      const missing = segmentLength - chunkM;\n      const x = lerp(x1, x2, missing / segmentLength);\n      const y = lerp(y1, y2, missing / segmentLength);\n      currentChunk.push(x, y);\n      chunks.push(currentChunk);\n      currentChunk = [x, y];\n      chunkM = 0;\n      cursor += stride;\n    }\n  }\n  if (chunkM > 0) {\n    chunks.push(currentChunk);\n  }\n  return chunks;\n}\n","/**\n * @module ol/geom/flat/straightchunk\n */\n\n/**\n * @param {number} maxAngle Maximum acceptable angle delta between segments.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Array<number>} Start and end of the first suitable chunk of the\n * given `flatCoordinates`.\n */\nexport function matchingChunk(maxAngle, flatCoordinates, offset, end, stride) {\n  let chunkStart = offset;\n  let chunkEnd = offset;\n  let chunkM = 0;\n  let m = 0;\n  let start = offset;\n  let acos, i, m12, m23, x1, y1, x12, y12, x23, y23;\n  for (i = offset; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    if (x1 !== undefined) {\n      x23 = x2 - x1;\n      y23 = y2 - y1;\n      m23 = Math.sqrt(x23 * x23 + y23 * y23);\n      if (x12 !== undefined) {\n        m += m12;\n        acos = Math.acos((x12 * x23 + y12 * y23) / (m12 * m23));\n        if (acos > maxAngle) {\n          if (m > chunkM) {\n            chunkM = m;\n            chunkStart = start;\n            chunkEnd = i;\n          }\n          m = 0;\n          start = i - stride;\n        }\n      }\n      m12 = m23;\n      x12 = x23;\n      y12 = y23;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  m += m23;\n  return m > chunkM ? [start, i] : [chunkStart, chunkEnd];\n}\n","/**\n * @module ol/render/canvas/TextBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultPadding,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n  registerFont,\n} from '../canvas.js';\nimport {getUid} from '../../util.js';\nimport {intersects} from '../../extent.js';\nimport {lineChunk} from '../../geom/flat/linechunk.js';\nimport {matchingChunk} from '../../geom/flat/straightchunk.js';\n/**\n * @const\n * @type {{left: 0, center: 0.5, right: 1, top: 0, middle: 0.5, hanging: 0.2, alphabetic: 0.8, ideographic: 0.8, bottom: 1}}\n */\nexport const TEXT_ALIGN = {\n  'left': 0,\n  'center': 0.5,\n  'right': 1,\n  'top': 0,\n  'middle': 0.5,\n  'hanging': 0.2,\n  'alphabetic': 0.8,\n  'ideographic': 0.8,\n  'bottom': 1,\n};\n\nclass CanvasTextBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {Array<HTMLCanvasElement>}\n     */\n    this.labels_ = null;\n\n    /**\n     * @private\n     * @type {string|Array<string>}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.textRotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = {};\n    this.fillStates[defaultFillStyle] = {fillStyle: defaultFillStyle};\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = {};\n\n    /**\n     * @private\n     * @type {import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = /** @type {import(\"../canvas.js\").TextState} */ ({});\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = {};\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.textKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.fillKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.strokeKey_ = '';\n\n    /**\n     * @type {import('../../style/Style.js').DeclutterMode}\n     */\n    this.declutterMode_ = undefined;\n\n    /**\n     * Data shared with an image builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    const instructions = super.finish();\n    instructions.textStates = this.textStates;\n    instructions.fillStates = this.fillStates;\n    instructions.strokeStates = this.strokeStates;\n    return instructions;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawText(geometry, feature, index) {\n    const fillState = this.textFillState_;\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    if (this.text_ === '' || !textState || (!fillState && !strokeState)) {\n      return;\n    }\n\n    const coordinates = this.coordinates;\n    let begin = coordinates.length;\n\n    const geometryType = geometry.getType();\n    let flatCoordinates = null;\n    let stride = geometry.getStride();\n\n    if (\n      textState.placement === 'line' &&\n      (geometryType == 'LineString' ||\n        geometryType == 'MultiLineString' ||\n        geometryType == 'Polygon' ||\n        geometryType == 'MultiPolygon')\n    ) {\n      if (!intersects(this.maxExtent, geometry.getExtent())) {\n        return;\n      }\n      let ends;\n      flatCoordinates = geometry.getFlatCoordinates();\n      if (geometryType == 'LineString') {\n        ends = [flatCoordinates.length];\n      } else if (geometryType == 'MultiLineString') {\n        ends = /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n          geometry\n        ).getEnds();\n      } else if (geometryType == 'Polygon') {\n        ends = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry)\n          .getEnds()\n          .slice(0, 1);\n      } else if (geometryType == 'MultiPolygon') {\n        const endss =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getEndss();\n        ends = [];\n        for (let i = 0, ii = endss.length; i < ii; ++i) {\n          ends.push(endss[i][0]);\n        }\n      }\n      this.beginGeometry(geometry, feature, index);\n      const repeat = textState.repeat;\n      const textAlign = repeat ? undefined : textState.textAlign;\n      // No `justify` support for line placement.\n      let flatOffset = 0;\n      for (let o = 0, oo = ends.length; o < oo; ++o) {\n        let chunks;\n        if (repeat) {\n          chunks = lineChunk(\n            repeat * this.resolution,\n            flatCoordinates,\n            flatOffset,\n            ends[o],\n            stride,\n          );\n        } else {\n          chunks = [flatCoordinates.slice(flatOffset, ends[o])];\n        }\n        for (let c = 0, cc = chunks.length; c < cc; ++c) {\n          const chunk = chunks[c];\n          let chunkBegin = 0;\n          let chunkEnd = chunk.length;\n          if (textAlign == undefined) {\n            const range = matchingChunk(\n              textState.maxAngle,\n              chunk,\n              0,\n              chunk.length,\n              2,\n            );\n            chunkBegin = range[0];\n            chunkEnd = range[1];\n          }\n          for (let i = chunkBegin; i < chunkEnd; i += stride) {\n            coordinates.push(chunk[i], chunk[i + 1]);\n          }\n          const end = coordinates.length;\n          flatOffset = ends[o];\n          this.drawChars_(begin, end);\n          begin = end;\n        }\n      }\n      this.endGeometry(feature);\n    } else {\n      let geometryWidths = textState.overflow ? null : [];\n      switch (geometryType) {\n        case 'Point':\n        case 'MultiPoint':\n          flatCoordinates =\n            /** @type {import(\"../../geom/MultiPoint.js\").default} */ (\n              geometry\n            ).getFlatCoordinates();\n          break;\n        case 'LineString':\n          flatCoordinates =\n            /** @type {import(\"../../geom/LineString.js\").default} */ (\n              geometry\n            ).getFlatMidpoint();\n          break;\n        case 'Circle':\n          flatCoordinates =\n            /** @type {import(\"../../geom/Circle.js\").default} */ (\n              geometry\n            ).getCenter();\n          break;\n        case 'MultiLineString':\n          flatCoordinates =\n            /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n              geometry\n            ).getFlatMidpoints();\n          stride = 2;\n          break;\n        case 'Polygon':\n          flatCoordinates =\n            /** @type {import(\"../../geom/Polygon.js\").default} */ (\n              geometry\n            ).getFlatInteriorPoint();\n          if (!textState.overflow) {\n            geometryWidths.push(flatCoordinates[2] / this.resolution);\n          }\n          stride = 3;\n          break;\n        case 'MultiPolygon':\n          const interiorPoints =\n            /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n              geometry\n            ).getFlatInteriorPoints();\n          flatCoordinates = [];\n          for (let i = 0, ii = interiorPoints.length; i < ii; i += 3) {\n            if (!textState.overflow) {\n              geometryWidths.push(interiorPoints[i + 2] / this.resolution);\n            }\n            flatCoordinates.push(interiorPoints[i], interiorPoints[i + 1]);\n          }\n          if (flatCoordinates.length === 0) {\n            return;\n          }\n          stride = 2;\n          break;\n        default:\n      }\n      const end = this.appendFlatPointCoordinates(flatCoordinates, stride);\n      if (end === begin) {\n        return;\n      }\n      if (\n        geometryWidths &&\n        (end - begin) / 2 !== flatCoordinates.length / stride\n      ) {\n        let beg = begin / 2;\n        geometryWidths = geometryWidths.filter((w, i) => {\n          const keep =\n            coordinates[(beg + i) * 2] === flatCoordinates[i * stride] &&\n            coordinates[(beg + i) * 2 + 1] === flatCoordinates[i * stride + 1];\n          if (!keep) {\n            --beg;\n          }\n          return keep;\n        });\n      }\n\n      this.saveTextStates_();\n\n      if (textState.backgroundFill || textState.backgroundStroke) {\n        this.setFillStrokeStyle(\n          textState.backgroundFill,\n          textState.backgroundStroke,\n        );\n        if (textState.backgroundFill) {\n          this.updateFillStyle(this.state, this.createFill);\n        }\n        if (textState.backgroundStroke) {\n          this.updateStrokeStyle(this.state, this.applyStroke);\n          this.hitDetectionInstructions.push(this.createStroke(this.state));\n        }\n      }\n\n      this.beginGeometry(geometry, feature, index);\n\n      // adjust padding for negative scale\n      let padding = textState.padding;\n      if (\n        padding != defaultPadding &&\n        (textState.scale[0] < 0 || textState.scale[1] < 0)\n      ) {\n        let p0 = textState.padding[0];\n        let p1 = textState.padding[1];\n        let p2 = textState.padding[2];\n        let p3 = textState.padding[3];\n        if (textState.scale[0] < 0) {\n          p1 = -p1;\n          p3 = -p3;\n        }\n        if (textState.scale[1] < 0) {\n          p0 = -p0;\n          p2 = -p2;\n        }\n        padding = [p0, p1, p2, p3];\n      }\n\n      // The image is unknown at this stage so we pass null; it will be computed at render time.\n      // For clarity, we pass NaN for offsetX, offsetY, width and height, which will be computed at\n      // render time.\n      const pixelRatio = this.pixelRatio;\n      this.instructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [1, 1],\n        NaN,\n        this.declutterMode_,\n        this.declutterImageWithText_,\n        padding == defaultPadding\n          ? defaultPadding\n          : padding.map(function (p) {\n              return p * pixelRatio;\n            }),\n        !!textState.backgroundFill,\n        !!textState.backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n      const scale = 1 / pixelRatio;\n      // Set default fill for hit detection background\n      const currentFillStyle = this.state.fillStyle;\n      if (textState.backgroundFill) {\n        this.state.fillStyle = defaultFillStyle;\n        this.hitDetectionInstructions.push(this.createFill(this.state));\n      }\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [scale, scale],\n        NaN,\n        this.declutterMode_,\n        this.declutterImageWithText_,\n        padding,\n        !!textState.backgroundFill,\n        !!textState.backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_ ? defaultFillStyle : this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n      // Reset previous fill\n      if (textState.backgroundFill) {\n        this.state.fillStyle = currentFillStyle;\n        this.hitDetectionInstructions.push(this.createFill(this.state));\n      }\n\n      this.endGeometry(feature);\n    }\n  }\n\n  /**\n   * @private\n   */\n  saveTextStates_() {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    const fillState = this.textFillState_;\n\n    const strokeKey = this.strokeKey_;\n    if (strokeState) {\n      if (!(strokeKey in this.strokeStates)) {\n        this.strokeStates[strokeKey] = {\n          strokeStyle: strokeState.strokeStyle,\n          lineCap: strokeState.lineCap,\n          lineDashOffset: strokeState.lineDashOffset,\n          lineWidth: strokeState.lineWidth,\n          lineJoin: strokeState.lineJoin,\n          miterLimit: strokeState.miterLimit,\n          lineDash: strokeState.lineDash,\n        };\n      }\n    }\n    const textKey = this.textKey_;\n    if (!(textKey in this.textStates)) {\n      this.textStates[textKey] = {\n        font: textState.font,\n        textAlign: textState.textAlign || defaultTextAlign,\n        justify: textState.justify,\n        textBaseline: textState.textBaseline || defaultTextBaseline,\n        scale: textState.scale,\n      };\n    }\n    const fillKey = this.fillKey_;\n    if (fillState) {\n      if (!(fillKey in this.fillStates)) {\n        this.fillStates[fillKey] = {\n          fillStyle: fillState.fillStyle,\n        };\n      }\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} begin Begin.\n   * @param {number} end End.\n   */\n  drawChars_(begin, end) {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n\n    const strokeKey = this.strokeKey_;\n    const textKey = this.textKey_;\n    const fillKey = this.fillKey_;\n    this.saveTextStates_();\n\n    const pixelRatio = this.pixelRatio;\n    const baseline = TEXT_ALIGN[textState.textBaseline];\n\n    const offsetY = this.textOffsetY_ * pixelRatio;\n    const text = this.text_;\n    const strokeWidth = strokeState\n      ? (strokeState.lineWidth * Math.abs(textState.scale[0])) / 2\n      : 0;\n\n    this.instructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey,\n      textState.maxAngle,\n      pixelRatio,\n      offsetY,\n      strokeKey,\n      strokeWidth * pixelRatio,\n      text,\n      textKey,\n      1,\n      this.declutterMode_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey ? defaultFillStyle : fillKey,\n      textState.maxAngle,\n      pixelRatio,\n      offsetY,\n      strokeKey,\n      strokeWidth * pixelRatio,\n      text,\n      textKey,\n      1 / pixelRatio,\n      this.declutterMode_,\n    ]);\n  }\n\n  /**\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   * @param {Object} [sharedData] Shared data.\n   */\n  setTextStyle(textStyle, sharedData) {\n    let textState, fillState, strokeState;\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        fillState = null;\n        this.textFillState_ = fillState;\n      } else {\n        fillState = this.textFillState_;\n        if (!fillState) {\n          fillState = /** @type {import(\"../canvas.js\").FillState} */ ({});\n          this.textFillState_ = fillState;\n        }\n        fillState.fillStyle = asColorLike(\n          textFillStyle.getColor() || defaultFillStyle,\n        );\n      }\n\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        strokeState = null;\n        this.textStrokeState_ = strokeState;\n      } else {\n        strokeState = this.textStrokeState_;\n        if (!strokeState) {\n          strokeState = /** @type {import(\"../canvas.js\").StrokeState} */ ({});\n          this.textStrokeState_ = strokeState;\n        }\n        const lineDash = textStrokeStyle.getLineDash();\n        const lineDashOffset = textStrokeStyle.getLineDashOffset();\n        const lineWidth = textStrokeStyle.getWidth();\n        const miterLimit = textStrokeStyle.getMiterLimit();\n        strokeState.lineCap = textStrokeStyle.getLineCap() || defaultLineCap;\n        strokeState.lineDash = lineDash ? lineDash.slice() : defaultLineDash;\n        strokeState.lineDashOffset =\n          lineDashOffset === undefined ? defaultLineDashOffset : lineDashOffset;\n        strokeState.lineJoin = textStrokeStyle.getLineJoin() || defaultLineJoin;\n        strokeState.lineWidth =\n          lineWidth === undefined ? defaultLineWidth : lineWidth;\n        strokeState.miterLimit =\n          miterLimit === undefined ? defaultMiterLimit : miterLimit;\n        strokeState.strokeStyle = asColorLike(\n          textStrokeStyle.getColor() || defaultStrokeStyle,\n        );\n      }\n\n      textState = this.textState_;\n      const font = textStyle.getFont() || defaultFont;\n      registerFont(font);\n      const textScale = textStyle.getScaleArray();\n      textState.overflow = textStyle.getOverflow();\n      textState.font = font;\n      textState.maxAngle = textStyle.getMaxAngle();\n      textState.placement = textStyle.getPlacement();\n      textState.textAlign = textStyle.getTextAlign();\n      textState.repeat = textStyle.getRepeat();\n      textState.justify = textStyle.getJustify();\n      textState.textBaseline =\n        textStyle.getTextBaseline() || defaultTextBaseline;\n      textState.backgroundFill = textStyle.getBackgroundFill();\n      textState.backgroundStroke = textStyle.getBackgroundStroke();\n      textState.padding = textStyle.getPadding() || defaultPadding;\n      textState.scale = textScale === undefined ? [1, 1] : textScale;\n\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      this.text_ = textStyle.getText() || '';\n      this.textOffsetX_ = textOffsetX === undefined ? 0 : textOffsetX;\n      this.textOffsetY_ = textOffsetY === undefined ? 0 : textOffsetY;\n      this.textRotateWithView_ =\n        textRotateWithView === undefined ? false : textRotateWithView;\n      this.textRotation_ = textRotation === undefined ? 0 : textRotation;\n\n      this.strokeKey_ = strokeState\n        ? (typeof strokeState.strokeStyle == 'string'\n            ? strokeState.strokeStyle\n            : getUid(strokeState.strokeStyle)) +\n          strokeState.lineCap +\n          strokeState.lineDashOffset +\n          '|' +\n          strokeState.lineWidth +\n          strokeState.lineJoin +\n          strokeState.miterLimit +\n          '[' +\n          strokeState.lineDash.join() +\n          ']'\n        : '';\n      this.textKey_ =\n        textState.font +\n        textState.scale +\n        (textState.textAlign || '?') +\n        (textState.repeat || '?') +\n        (textState.justify || '?') +\n        (textState.textBaseline || '?');\n      this.fillKey_ =\n        fillState && fillState.fillStyle\n          ? typeof fillState.fillStyle == 'string'\n            ? fillState.fillStyle\n            : '|' + getUid(fillState.fillStyle)\n          : '';\n    }\n    this.declutterMode_ = textStyle.getDeclutterMode();\n    this.declutterImageWithText_ = sharedData;\n  }\n}\n\nexport default CanvasTextBuilder;\n","/**\n * @module ol/render/canvas/BuilderGroup\n */\n\nimport Builder from './Builder.js';\nimport ImageBuilder from './ImageBuilder.js';\nimport LineStringBuilder from './LineStringBuilder.js';\nimport PolygonBuilder from './PolygonBuilder.js';\nimport TextBuilder from './TextBuilder.js';\n\n/**\n * @type {Object<import(\"../canvas.js\").BuilderType, typeof Builder>}\n */\nconst BATCH_CONSTRUCTORS = {\n  'Circle': PolygonBuilder,\n  'Default': Builder,\n  'Image': ImageBuilder,\n  'LineString': LineStringBuilder,\n  'Polygon': PolygonBuilder,\n  'Text': TextBuilder,\n};\n\nclass BuilderGroup {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tolerance_ = tolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<import(\"../canvas.js\").BuilderType, Builder>>}\n     */\n    this.buildersByZIndex_ = {};\n  }\n\n  /**\n   * @return {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"./Builder.js\").SerializableInstructions>>} The serializable instructions\n   */\n  finish() {\n    const builderInstructions = {};\n    for (const zKey in this.buildersByZIndex_) {\n      builderInstructions[zKey] = builderInstructions[zKey] || {};\n      const builders = this.buildersByZIndex_[zKey];\n      for (const builderKey in builders) {\n        const builderInstruction = builders[builderKey].finish();\n        builderInstructions[zKey][builderKey] = builderInstruction;\n      }\n    }\n    return builderInstructions;\n  }\n\n  /**\n   * @param {number|undefined} zIndex Z index.\n   * @param {import(\"../canvas.js\").BuilderType} builderType Replay type.\n   * @return {import(\"../VectorContext.js\").default} Replay.\n   */\n  getBuilder(zIndex, builderType) {\n    const zIndexKey = zIndex !== undefined ? zIndex.toString() : '0';\n    let replays = this.buildersByZIndex_[zIndexKey];\n    if (replays === undefined) {\n      replays = {};\n      this.buildersByZIndex_[zIndexKey] = replays;\n    }\n    let replay = replays[builderType];\n    if (replay === undefined) {\n      const Constructor = BATCH_CONSTRUCTORS[builderType];\n      replay = new Constructor(\n        this.tolerance_,\n        this.maxExtent_,\n        this.resolution_,\n        this.pixelRatio_,\n      );\n      replays[builderType] = replay;\n    }\n    return replay;\n  }\n}\n\nexport default BuilderGroup;\n","/**\n * @module ol/renderer/Layer\n */\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport Observable from '../Observable.js';\nimport {abstract} from '../util.js';\n\n/**\n * @template {import(\"../layer/Layer.js\").default} LayerType\n */\nclass LayerRenderer extends Observable {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super();\n\n    /**\n     * The renderer is initialized and ready to render.\n     * @type {boolean}\n     */\n    this.ready = true;\n\n    /** @private */\n    this.boundHandleImageChange_ = this.handleImageChange_.bind(this);\n\n    /**\n     * @protected\n     * @type {LayerType}\n     */\n    this.layer_ = layer;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    return abstract();\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   */\n  getData(pixel) {\n    return null;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @abstract\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return abstract();\n  }\n\n  /**\n   * Render the layer.\n   * @abstract\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement|null} target Target that may be used to render content to.\n   * @return {HTMLElement|null} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    return abstract();\n  }\n\n  /**\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @param {number} zoom Zoom level.\n   * @param {import(\"../Tile.js\").default} tile Tile.\n   * @return {boolean|void} If `false`, the tile will not be considered loaded.\n   */\n  loadedTileCallback(tiles, zoom, tile) {\n    if (!tiles[zoom]) {\n      tiles[zoom] = {};\n    }\n    tiles[zoom][tile.tileCoord.toString()] = tile;\n    return undefined;\n  }\n\n  /**\n   * Create a function that adds loaded tiles to the tile lookup.\n   * @param {import(\"../source/Tile.js\").default} source Tile source.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection of the tiles.\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @return {function(number, import(\"../TileRange.js\").default):boolean} A function that can be\n   *     called with a zoom level and a tile range to add loaded tiles to the lookup.\n   * @protected\n   */\n  createLoadedTileFinder(source, projection, tiles) {\n    return (\n      /**\n       * @param {number} zoom Zoom level.\n       * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n       * @return {boolean} The tile range is fully loaded.\n       */\n      (zoom, tileRange) => {\n        const callback = this.loadedTileCallback.bind(this, tiles, zoom);\n        return source.forEachLoadedTile(projection, zoom, tileRange, callback);\n      }\n    );\n  }\n  /**\n   * @abstract\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"./Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches,\n  ) {\n    return undefined;\n  }\n\n  /**\n   * @return {LayerType} Layer.\n   */\n  getLayer() {\n    return this.layer_;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   * @abstract\n   */\n  handleFontsChanged() {}\n\n  /**\n   * Handle changes in image state.\n   * @param {import(\"../events/Event.js\").default} event Image change event.\n   * @private\n   */\n  handleImageChange_(event) {\n    const image = /** @type {import(\"../Image.js\").default} */ (event.target);\n    if (\n      image.getState() === ImageState.LOADED ||\n      image.getState() === ImageState.ERROR\n    ) {\n      this.renderIfReadyAndVisible();\n    }\n  }\n\n  /**\n   * Load the image if not already loaded, and register the image change\n   * listener if needed.\n   * @param {import(\"../Image.js\").default} image Image.\n   * @return {boolean} `true` if the image is already loaded, `false` otherwise.\n   * @protected\n   */\n  loadImage(image) {\n    let imageState = image.getState();\n    if (imageState != ImageState.LOADED && imageState != ImageState.ERROR) {\n      image.addEventListener(EventType.CHANGE, this.boundHandleImageChange_);\n    }\n    if (imageState == ImageState.IDLE) {\n      image.load();\n      imageState = image.getState();\n    }\n    return imageState == ImageState.LOADED;\n  }\n\n  /**\n   * @protected\n   */\n  renderIfReadyAndVisible() {\n    const layer = this.getLayer();\n    if (layer && layer.getVisible() && layer.getSourceState() === 'ready') {\n      layer.changed();\n    }\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderDeferred(frameState) {}\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    delete this.layer_;\n    super.disposeInternal();\n  }\n}\n\nexport default LayerRenderer;\n","/**\n * @module ol/render/Event\n */\n\nimport Event from '../events/Event.js';\n\nclass RenderEvent extends Event {\n  /**\n   * @param {import(\"./EventType.js\").default} type Type.\n   * @param {import(\"../transform.js\").Transform} [inversePixelTransform] Transform for\n   *     CSS pixels to rendered pixels.\n   * @param {import(\"../Map.js\").FrameState} [frameState] Frame state.\n   * @param {?(CanvasRenderingContext2D|WebGLRenderingContext)} [context] Context.\n   */\n  constructor(type, inversePixelTransform, frameState, context) {\n    super(type);\n\n    /**\n     * Transform from CSS pixels (relative to the top-left corner of the map viewport)\n     * to rendered pixels on this event's `context`. Only available when a Canvas renderer is used, null otherwise.\n     * @type {import(\"../transform.js\").Transform|undefined}\n     * @api\n     */\n    this.inversePixelTransform = inversePixelTransform;\n\n    /**\n     * An object representing the current render frame state.\n     * @type {import(\"../Map.js\").FrameState|undefined}\n     * @api\n     */\n    this.frameState = frameState;\n\n    /**\n     * Canvas context. Not available when the event is dispatched by the map. For Canvas 2D layers,\n     * the context will be the 2D rendering context.  For WebGL layers, the context will be the WebGL\n     * context.\n     * @type {CanvasRenderingContext2D|WebGLRenderingContext|undefined}\n     * @api\n     */\n    this.context = context;\n  }\n}\n\nexport default RenderEvent;\n","/**\n * @module ol/render/canvas/ZIndexContext\n */\n\nimport {getSharedCanvasContext2D} from '../../dom.js';\n\n/** @typedef {CanvasRenderingContext2D & {globalAlpha: any}} ZIndexContextProxy */\n\n/**\n * @extends {CanvasRenderingContext2D}\n */\nclass ZIndexContext {\n  constructor() {\n    /**\n     * @private\n     * @type {Array<Array<*>>}\n     */\n    this.instructions_ = [];\n    /**\n     * @type {number}\n     */\n    this.zIndex = 0;\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offset_ = 0;\n\n    /**\n     * @type {ZIndexContextProxy}\n     */\n    this.context_ = /** @type {ZIndexContextProxy} */ (\n      new Proxy(getSharedCanvasContext2D(), {\n        get: (target, property) => {\n          if (\n            typeof (/** @type {*} */ (getSharedCanvasContext2D())[property]) !==\n            'function'\n          ) {\n            // we only accept calling functions on the proxy, not accessing properties\n            return undefined;\n          }\n          if (!this.instructions_[this.zIndex + this.offset_]) {\n            this.instructions_[this.zIndex + this.offset_] = [];\n          }\n          this.instructions_[this.zIndex + this.offset_].push(property);\n          return this.pushMethodArgs_;\n        },\n        set: (target, property, value) => {\n          if (!this.instructions_[this.zIndex + this.offset_]) {\n            this.instructions_[this.zIndex + this.offset_] = [];\n          }\n          this.instructions_[this.zIndex + this.offset_].push(property, value);\n          return true;\n        },\n      })\n    );\n  }\n\n  /**\n   * @private\n   * @param {...*} args Args.\n   * @return {ZIndexContext} This.\n   */\n  pushMethodArgs_ = (...args) => {\n    this.instructions_[this.zIndex + this.offset_].push(args);\n    return this;\n  };\n\n  /**\n   * Push a function that renders to the context directly.\n   * @param {function(CanvasRenderingContext2D): void} render Function.\n   */\n  pushFunction(render) {\n    this.instructions_[this.zIndex + this.offset_].push(render);\n  }\n\n  /**\n   * Get a proxy for CanvasRenderingContext2D which does not support getting state\n   * (e.g. `context.globalAlpha`, which will return `undefined`). To set state, if it relies on a\n   * previous state (e.g. `context.globalAlpha = context.globalAlpha / 2`), set a function,\n   * e.g. `context.globalAlpha = (context) => context.globalAlpha / 2`.\n   * @return {ZIndexContextProxy} Context.\n   */\n  getContext() {\n    return this.context_;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   */\n  draw(context) {\n    this.instructions_.forEach((instructionsAtIndex) => {\n      for (let i = 0, ii = instructionsAtIndex.length; i < ii; ++i) {\n        const property = instructionsAtIndex[i];\n        if (typeof property === 'function') {\n          property(context);\n          continue;\n        }\n        const instructionAtIndex = instructionsAtIndex[++i];\n        if (typeof (/** @type {*} */ (context)[property]) === 'function') {\n          /** @type {*} */ (context)[property](...instructionAtIndex);\n        } else {\n          if (typeof instructionAtIndex === 'function') {\n            /** @type {*} */ (context)[property] = instructionAtIndex(context);\n            continue;\n          }\n          /** @type {*} */ (context)[property] = instructionAtIndex;\n        }\n      }\n    });\n  }\n\n  clear() {\n    this.instructions_.length = 0;\n    this.zIndex = 0;\n    this.offset_ = 0;\n  }\n\n  /**\n   * Offsets the zIndex by the highest current zIndex. Useful for rendering multiple worlds or tiles, to\n   * avoid conflicting context.clip() or context.save()/restore() calls.\n   */\n  offset() {\n    this.offset_ = this.instructions_.length;\n    this.zIndex = 0;\n  }\n}\n\nexport default ZIndexContext;\n","/**\n * @module ol/renderer/canvas/Layer\n */\nimport LayerRenderer from '../Layer.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport ZIndexContext from '../../render/canvas/ZIndexContext.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n  makeInverse,\n  toString as toTransformString,\n} from '../../transform.js';\nimport {asArray} from '../../color.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {equals} from '../../array.js';\nimport {\n  getBottomLeft,\n  getBottomRight,\n  getHeight,\n  getTopLeft,\n  getTopRight,\n  getWidth,\n} from '../../extent.js';\n\n/**\n * @type {Array<HTMLCanvasElement>}\n */\nexport const canvasPool = [];\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet pixelContext = null;\n\nfunction createPixelContext() {\n  pixelContext = createCanvasContext2D(1, 1, undefined, {\n    willReadFrequently: true,\n  });\n}\n\n/**\n * @abstract\n * @template {import(\"../../layer/Layer.js\").default} LayerType\n * @extends {LayerRenderer<LayerType>}\n */\nclass CanvasLayerRenderer extends LayerRenderer {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super(layer);\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.container = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedResolution;\n\n    /**\n     * A temporary transform.  The values in this transform should only be used in a\n     * function that sets the values.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tempTransform = createTransform();\n\n    /**\n     * The transform for rendered pixels to viewport CSS pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.pixelTransform = createTransform();\n\n    /**\n     * The transform for viewport CSS pixels to rendered pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.inversePixelTransform = createTransform();\n\n    /**\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context = null;\n\n    /**\n     * @private\n     * @type {ZIndexContext}\n     */\n    this.deferredContext_ = null;\n\n    /**\n     * @type {boolean}\n     */\n    this.containerReused = false;\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.pixelContext_ = null;\n\n    /**\n     * @protected\n     * @type {import(\"../../Map.js\").FrameState|null}\n     */\n    this.frameState = null;\n  }\n\n  /**\n   * @param {import('../../DataTile.js').ImageLike} image Image.\n   * @param {number} col The column index.\n   * @param {number} row The row index.\n   * @return {Uint8ClampedArray|null} The image data.\n   */\n  getImageData(image, col, row) {\n    if (!pixelContext) {\n      createPixelContext();\n    }\n    pixelContext.clearRect(0, 0, 1, 1);\n\n    let data;\n    try {\n      pixelContext.drawImage(image, col, row, 1, 1, 0, 0, 1, 1);\n      data = pixelContext.getImageData(0, 0, 1, 1).data;\n    } catch (err) {\n      pixelContext = null;\n      return null;\n    }\n    return data;\n  }\n\n  /**\n   * @param {import('../../Map.js').FrameState} frameState Frame state.\n   * @return {string} Background color.\n   */\n  getBackground(frameState) {\n    const layer = this.getLayer();\n    let background = layer.getBackground();\n    if (typeof background === 'function') {\n      background = background(frameState.viewState.resolution);\n    }\n    return background || undefined;\n  }\n\n  /**\n   * Get a rendering container from an existing target, if compatible.\n   * @param {HTMLElement} target Potential render target.\n   * @param {string} transform CSS Transform.\n   * @param {string} [backgroundColor] Background color.\n   */\n  useContainer(target, transform, backgroundColor) {\n    const layerClassName = this.getLayer().getClassName();\n    let container, context;\n    if (\n      target &&\n      target.className === layerClassName &&\n      (!backgroundColor ||\n        (target &&\n          target.style.backgroundColor &&\n          equals(\n            asArray(target.style.backgroundColor),\n            asArray(backgroundColor),\n          )))\n    ) {\n      const canvas = target.firstElementChild;\n      if (canvas instanceof HTMLCanvasElement) {\n        context = canvas.getContext('2d');\n      }\n    }\n    if (context && context.canvas.style.transform === transform) {\n      // Container of the previous layer renderer can be used.\n      this.container = target;\n      this.context = context;\n      this.containerReused = true;\n    } else if (this.containerReused) {\n      // Previously reused container cannot be used any more.\n      this.container = null;\n      this.context = null;\n      this.containerReused = false;\n    } else if (this.container) {\n      this.container.style.backgroundColor = null;\n    }\n    if (!this.container) {\n      container = document.createElement('div');\n      container.className = layerClassName;\n      let style = container.style;\n      style.position = 'absolute';\n      style.width = '100%';\n      style.height = '100%';\n      context = createCanvasContext2D();\n      const canvas = context.canvas;\n      container.appendChild(canvas);\n      style = canvas.style;\n      style.position = 'absolute';\n      style.left = '0';\n      style.transformOrigin = 'top left';\n      this.container = container;\n      this.context = context;\n    }\n    if (\n      !this.containerReused &&\n      backgroundColor &&\n      !this.container.style.backgroundColor\n    ) {\n      this.container.style.backgroundColor = backgroundColor;\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n   * @protected\n   */\n  clipUnrotated(context, frameState, extent) {\n    const topLeft = getTopLeft(extent);\n    const topRight = getTopRight(extent);\n    const bottomRight = getBottomRight(extent);\n    const bottomLeft = getBottomLeft(extent);\n\n    applyTransform(frameState.coordinateToPixelTransform, topLeft);\n    applyTransform(frameState.coordinateToPixelTransform, topRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n\n    const inverted = this.inversePixelTransform;\n    applyTransform(inverted, topLeft);\n    applyTransform(inverted, topRight);\n    applyTransform(inverted, bottomRight);\n    applyTransform(inverted, bottomLeft);\n\n    context.save();\n    context.beginPath();\n    context.moveTo(Math.round(topLeft[0]), Math.round(topLeft[1]));\n    context.lineTo(Math.round(topRight[0]), Math.round(topRight[1]));\n    context.lineTo(Math.round(bottomRight[0]), Math.round(bottomRight[1]));\n    context.lineTo(Math.round(bottomLeft[0]), Math.round(bottomLeft[1]));\n    context.clip();\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @protected\n   */\n  prepareContainer(frameState, target) {\n    const extent = frameState.extent;\n    const resolution = frameState.viewState.resolution;\n    const rotation = frameState.viewState.rotation;\n    const pixelRatio = frameState.pixelRatio;\n    const width = Math.round((getWidth(extent) / resolution) * pixelRatio);\n    const height = Math.round((getHeight(extent) / resolution) * pixelRatio);\n    // set forward and inverse pixel transforms\n    composeTransform(\n      this.pixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / pixelRatio,\n      1 / pixelRatio,\n      rotation,\n      -width / 2,\n      -height / 2,\n    );\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    const canvasTransform = toTransformString(this.pixelTransform);\n    this.useContainer(target, canvasTransform, this.getBackground(frameState));\n\n    if (!this.containerReused) {\n      const canvas = this.context.canvas;\n      if (canvas.width != width || canvas.height != height) {\n        canvas.width = width;\n        canvas.height = height;\n      } else {\n        this.context.clearRect(0, 0, width, height);\n      }\n      if (canvasTransform !== canvas.style.transform) {\n        canvas.style.transform = canvasTransform;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../../render/EventType.js\").default} type Event type.\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @private\n   */\n  dispatchRenderEvent_(type, context, frameState) {\n    const layer = this.getLayer();\n    if (layer.hasListener(type)) {\n      const event = new RenderEvent(\n        type,\n        this.inversePixelTransform,\n        frameState,\n        context,\n      );\n      layer.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  preRender(context, frameState) {\n    this.frameState = frameState;\n    if (frameState.declutter) {\n      return;\n    }\n    this.dispatchRenderEvent_(RenderEventType.PRERENDER, context, frameState);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  postRender(context, frameState) {\n    if (frameState.declutter) {\n      return;\n    }\n    this.dispatchRenderEvent_(RenderEventType.POSTRENDER, context, frameState);\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   */\n  renderDeferredInternal(frameState) {}\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {import('../../render/canvas/ZIndexContext.js').ZIndexContextProxy} Context.\n   */\n  getRenderContext(frameState) {\n    if (frameState.declutter && !this.deferredContext_) {\n      this.deferredContext_ = new ZIndexContext();\n    }\n    return frameState.declutter\n      ? this.deferredContext_.getContext()\n      : this.context;\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @override\n   */\n  renderDeferred(frameState) {\n    if (!frameState.declutter) {\n      return;\n    }\n    this.dispatchRenderEvent_(\n      RenderEventType.PRERENDER,\n      this.context,\n      frameState,\n    );\n    if (frameState.declutter && this.deferredContext_) {\n      this.deferredContext_.draw(this.context);\n      this.deferredContext_.clear();\n    }\n    this.renderDeferredInternal(frameState);\n    this.dispatchRenderEvent_(\n      RenderEventType.POSTRENDER,\n      this.context,\n      frameState,\n    );\n  }\n\n  /**\n   * Creates a transform for rendering to an element that will be rotated after rendering.\n   * @param {import(\"../../coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} width Width of the rendered element (in pixels).\n   * @param {number} height Height of the rendered element (in pixels).\n   * @param {number} offsetX Offset on the x-axis in view coordinates.\n   * @protected\n   * @return {!import(\"../../transform.js\").Transform} Transform.\n   */\n  getRenderTransform(\n    center,\n    resolution,\n    rotation,\n    pixelRatio,\n    width,\n    height,\n    offsetX,\n  ) {\n    const dx1 = width / 2;\n    const dy1 = height / 2;\n    const sx = pixelRatio / resolution;\n    const sy = -sx;\n    const dx2 = -center[0] + offsetX;\n    const dy2 = -center[1];\n    return composeTransform(\n      this.tempTransform,\n      dx1,\n      dy1,\n      sx,\n      sy,\n      -rotation,\n      dx2,\n      dy2,\n    );\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    delete this.frameState;\n    super.disposeInternal();\n  }\n}\n\nexport default CanvasLayerRenderer;\n","/**\n * @module ol/geom/flat/textpath\n */\nimport {lerp} from '../../math.js';\nimport {rotate} from './transform.js';\n\n/**\n * @param {Array<number>} flatCoordinates Path to put text on.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @param {string} text Text to place on the path.\n * @param {number} startM m along the path where the text starts.\n * @param {number} maxAngle Max angle between adjacent chars in radians.\n * @param {number} scale The product of the text scale and the device pixel ratio.\n * @param {function(string, string, Object<string, number>):number} measureAndCacheTextWidth Measure and cache text width.\n * @param {string} font The font.\n * @param {Object<string, number>} cache A cache of measured widths.\n * @param {number} rotation Rotation to apply to the flatCoordinates to determine whether text needs to be reversed.\n * @return {Array<Array<*>>|null} The result array (or null if `maxAngle` was\n * exceeded). Entries of the array are x, y, anchorX, angle, chunk.\n */\nexport function drawTextOnPath(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  text,\n  startM,\n  maxAngle,\n  scale,\n  measureAndCacheTextWidth,\n  font,\n  cache,\n  rotation,\n) {\n  let x2 = flatCoordinates[offset];\n  let y2 = flatCoordinates[offset + 1];\n  let x1 = 0;\n  let y1 = 0;\n  let segmentLength = 0;\n  let segmentM = 0;\n\n  function advance() {\n    x1 = x2;\n    y1 = y2;\n    offset += stride;\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    segmentM += segmentLength;\n    segmentLength = Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n  }\n  do {\n    advance();\n  } while (offset < end - stride && segmentM + segmentLength < startM);\n\n  let interpolate =\n    segmentLength === 0 ? 0 : (startM - segmentM) / segmentLength;\n  const beginX = lerp(x1, x2, interpolate);\n  const beginY = lerp(y1, y2, interpolate);\n\n  const startOffset = offset - stride;\n  const startLength = segmentM;\n  const endM = startM + scale * measureAndCacheTextWidth(font, text, cache);\n  while (offset < end - stride && segmentM + segmentLength < endM) {\n    advance();\n  }\n  interpolate = segmentLength === 0 ? 0 : (endM - segmentM) / segmentLength;\n  const endX = lerp(x1, x2, interpolate);\n  const endY = lerp(y1, y2, interpolate);\n\n  // Keep text upright\n  let reverse;\n  if (rotation) {\n    const flat = [beginX, beginY, endX, endY];\n    rotate(flat, 0, 4, 2, rotation, flat, flat);\n    reverse = flat[0] > flat[2];\n  } else {\n    reverse = beginX > endX;\n  }\n\n  const PI = Math.PI;\n  const result = [];\n  const singleSegment = startOffset + stride === offset;\n\n  offset = startOffset;\n  segmentLength = 0;\n  segmentM = startLength;\n  x2 = flatCoordinates[offset];\n  y2 = flatCoordinates[offset + 1];\n\n  let previousAngle;\n  // All on the same segment\n  if (singleSegment) {\n    advance();\n\n    previousAngle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      previousAngle += previousAngle > 0 ? -PI : PI;\n    }\n    const x = (endX + beginX) / 2;\n    const y = (endY + beginY) / 2;\n    result[0] = [x, y, (endM - startM) / 2, previousAngle, text];\n    return result;\n  }\n\n  // rendering across line segments\n  text = text.replace(/\\n/g, ' '); // ensure rendering in single-line as all calculations below don't handle multi-lines\n\n  for (let i = 0, ii = text.length; i < ii; ) {\n    advance();\n    let angle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      angle += angle > 0 ? -PI : PI;\n    }\n    if (previousAngle !== undefined) {\n      let delta = angle - previousAngle;\n      delta += delta > PI ? -2 * PI : delta < -PI ? 2 * PI : 0;\n      if (Math.abs(delta) > maxAngle) {\n        return null;\n      }\n    }\n    previousAngle = angle;\n\n    const iStart = i;\n    let charLength = 0;\n    for (; i < ii; ++i) {\n      const index = reverse ? ii - i - 1 : i;\n      const len = scale * measureAndCacheTextWidth(font, text[index], cache);\n      if (\n        offset + stride < end &&\n        segmentM + segmentLength < startM + charLength + len / 2\n      ) {\n        break;\n      }\n      charLength += len;\n    }\n    if (i === iStart) {\n      continue;\n    }\n    const chars = reverse\n      ? text.substring(ii - iStart, ii - i)\n      : text.substring(iStart, i);\n    interpolate =\n      segmentLength === 0\n        ? 0\n        : (startM + charLength / 2 - segmentM) / segmentLength;\n    const x = lerp(x1, x2, interpolate);\n    const y = lerp(y1, y2, interpolate);\n    result.push([x, y, charLength / 2, angle, chars]);\n    startM += charLength;\n  }\n  return result;\n}\n","/**\n * @module ol/render/canvas/Executor\n */\nimport CanvasInstruction from './Instruction.js';\nimport ZIndexContext from '../canvas/ZIndexContext.js';\nimport {TEXT_ALIGN} from './TextBuilder.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n  setFromArray as transformSetFromArray,\n} from '../../transform.js';\nimport {createEmpty, createOrUpdate, intersects} from '../../extent.js';\nimport {\n  defaultPadding,\n  defaultTextAlign,\n  defaultTextBaseline,\n  drawImageOrLabel,\n  getTextDimensions,\n  measureAndCacheTextWidth,\n} from '../canvas.js';\nimport {drawTextOnPath} from '../../geom/flat/textpath.js';\nimport {equals} from '../../array.js';\nimport {lineStringLength} from '../../geom/flat/length.js';\nimport {transform2D} from '../../geom/flat/transform.js';\n\n/**\n * @typedef {Object} BBox\n * @property {number} minX Minimal x.\n * @property {number} minY Minimal y.\n * @property {number} maxX Maximal x.\n * @property {number} maxY Maximal y\n * @property {*} value Value.\n */\n\n/**\n * @typedef {Object} ImageOrLabelDimensions\n * @property {number} drawImageX DrawImageX.\n * @property {number} drawImageY DrawImageY.\n * @property {number} drawImageW DrawImageW.\n * @property {number} drawImageH DrawImageH.\n * @property {number} originX OriginX.\n * @property {number} originY OriginY.\n * @property {Array<number>} scale Scale.\n * @property {BBox} declutterBox DeclutterBox.\n * @property {import(\"../../transform.js\").Transform} canvasTransform CanvasTransform.\n */\n\n/**\n * @typedef {{0: CanvasRenderingContext2D, 1: import('../../size.js').Size, 2: import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement, 3: ImageOrLabelDimensions, 4: number, 5: Array<*>, 6: Array<*>}} ReplayImageOrLabelArgs\n */\n\n/**\n * @template T\n * @typedef {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default, import(\"../../style/Style.js\").DeclutterMode): T} FeatureCallback\n */\n\n/**\n * @type {import(\"../../extent.js\").Extent}\n */\nconst tmpExtent = createEmpty();\n\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p1 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p2 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p3 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p4 = [];\n\n/**\n * @param {ReplayImageOrLabelArgs} replayImageOrLabelArgs Arguments to replayImageOrLabel\n * @return {BBox} Declutter bbox.\n */\nfunction getDeclutterBox(replayImageOrLabelArgs) {\n  return replayImageOrLabelArgs[3].declutterBox;\n}\n\nconst rtlRegEx = new RegExp(\n  /* eslint-disable prettier/prettier */\n  '[' +\n    String.fromCharCode(0x00591) + '-' + String.fromCharCode(0x008ff) +\n    String.fromCharCode(0x0fb1d) + '-' + String.fromCharCode(0x0fdff) +\n    String.fromCharCode(0x0fe70) + '-' + String.fromCharCode(0x0fefc) +\n    String.fromCharCode(0x10800) + '-' + String.fromCharCode(0x10fff) +\n    String.fromCharCode(0x1e800) + '-' + String.fromCharCode(0x1efff) +\n  ']'\n  /* eslint-enable prettier/prettier */\n);\n\n/**\n * @param {string} text Text.\n * @param {CanvasTextAlign} align Alignment.\n * @return {number} Text alignment.\n */\nfunction horizontalTextAlign(text, align) {\n  if (align === 'start') {\n    align = rtlRegEx.test(text) ? 'right' : 'left';\n  } else if (align === 'end') {\n    align = rtlRegEx.test(text) ? 'left' : 'right';\n  }\n  return TEXT_ALIGN[align];\n}\n\n/**\n * @param {Array<string>} acc Accumulator.\n * @param {string} line Line of text.\n * @param {number} i Index\n * @return {Array<string>} Accumulator.\n */\nfunction createTextChunks(acc, line, i) {\n  if (i > 0) {\n    acc.push('\\n', '');\n  }\n  acc.push(line, '');\n  return acc;\n}\n\nclass Executor {\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The replay can have overlapping geometries.\n   * @param {import(\"../canvas.js\").SerializableInstructions} instructions The serializable instructions.\n   * @param {boolean} [deferredRendering] Enable deferred rendering.\n   */\n  constructor(\n    resolution,\n    pixelRatio,\n    overlaps,\n    instructions,\n    deferredRendering,\n  ) {\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.overlaps = overlaps;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.alignAndScaleFill_;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = instructions.instructions;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = instructions.coordinates;\n\n    /**\n     * @private\n     * @type {!Object<number,import(\"../../coordinate.js\").Coordinate|Array<import(\"../../coordinate.js\").Coordinate>|Array<Array<import(\"../../coordinate.js\").Coordinate>>>}\n     */\n    this.coordinateCache_ = {};\n\n    /**\n     * @private\n     * @type {!import(\"../../transform.js\").Transform}\n     */\n    this.renderedTransform_ = createTransform();\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = instructions.hitDetectionInstructions;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = 0;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = instructions.fillStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = instructions.strokeStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = instructions.textStates || {};\n\n    /**\n     * @private\n     * @type {Object<string, Object<string, number>>}\n     */\n    this.widths_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, import(\"../canvas.js\").Label>}\n     */\n    this.labels_ = {};\n\n    /**\n     * @private\n     * @type {import(\"../canvas/ZIndexContext.js\").default}\n     */\n    this.zIndexContext_ = deferredRendering ? new ZIndexContext() : null;\n  }\n\n  /**\n   * @return {ZIndexContext} ZIndex context.\n   */\n  getZIndexContext() {\n    return this.zIndexContext_;\n  }\n\n  /**\n   * @param {string|Array<string>} text Text.\n   * @param {string} textKey Text style key.\n   * @param {string} fillKey Fill style key.\n   * @param {string} strokeKey Stroke style key.\n   * @return {import(\"../canvas.js\").Label} Label.\n   */\n  createLabel(text, textKey, fillKey, strokeKey) {\n    const key = text + textKey + fillKey + strokeKey;\n    if (this.labels_[key]) {\n      return this.labels_[key];\n    }\n    const strokeState = strokeKey ? this.strokeStates[strokeKey] : null;\n    const fillState = fillKey ? this.fillStates[fillKey] : null;\n    const textState = this.textStates[textKey];\n    const pixelRatio = this.pixelRatio;\n    const scale = [\n      textState.scale[0] * pixelRatio,\n      textState.scale[1] * pixelRatio,\n    ];\n    const textIsArray = Array.isArray(text);\n    const align = textState.justify\n      ? TEXT_ALIGN[textState.justify]\n      : horizontalTextAlign(\n          Array.isArray(text) ? text[0] : text,\n          textState.textAlign || defaultTextAlign,\n        );\n    const strokeWidth =\n      strokeKey && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    const chunks = textIsArray\n      ? text\n      : text.split('\\n').reduce(createTextChunks, []);\n\n    const {width, height, widths, heights, lineWidths} = getTextDimensions(\n      textState,\n      chunks,\n    );\n    const renderWidth = width + strokeWidth;\n    const contextInstructions = [];\n    // make canvas 2 pixels wider to account for italic text width measurement errors\n    const w = (renderWidth + 2) * scale[0];\n    const h = (height + strokeWidth) * scale[1];\n    /** @type {import(\"../canvas.js\").Label} */\n    const label = {\n      width: w < 0 ? Math.floor(w) : Math.ceil(w),\n      height: h < 0 ? Math.floor(h) : Math.ceil(h),\n      contextInstructions: contextInstructions,\n    };\n    if (scale[0] != 1 || scale[1] != 1) {\n      contextInstructions.push('scale', scale);\n    }\n    if (strokeKey) {\n      contextInstructions.push('strokeStyle', strokeState.strokeStyle);\n      contextInstructions.push('lineWidth', strokeWidth);\n      contextInstructions.push('lineCap', strokeState.lineCap);\n      contextInstructions.push('lineJoin', strokeState.lineJoin);\n      contextInstructions.push('miterLimit', strokeState.miterLimit);\n      contextInstructions.push('setLineDash', [strokeState.lineDash]);\n      contextInstructions.push('lineDashOffset', strokeState.lineDashOffset);\n    }\n    if (fillKey) {\n      contextInstructions.push('fillStyle', fillState.fillStyle);\n    }\n    contextInstructions.push('textBaseline', 'middle');\n    contextInstructions.push('textAlign', 'center');\n    const leftRight = 0.5 - align;\n    let x = align * renderWidth + leftRight * strokeWidth;\n    const strokeInstructions = [];\n    const fillInstructions = [];\n    let lineHeight = 0;\n    let lineOffset = 0;\n    let widthHeightIndex = 0;\n    let lineWidthIndex = 0;\n    let previousFont;\n    for (let i = 0, ii = chunks.length; i < ii; i += 2) {\n      const text = chunks[i];\n      if (text === '\\n') {\n        lineOffset += lineHeight;\n        lineHeight = 0;\n        x = align * renderWidth + leftRight * strokeWidth;\n        ++lineWidthIndex;\n        continue;\n      }\n      const font = chunks[i + 1] || textState.font;\n      if (font !== previousFont) {\n        if (strokeKey) {\n          strokeInstructions.push('font', font);\n        }\n        if (fillKey) {\n          fillInstructions.push('font', font);\n        }\n        previousFont = font;\n      }\n      lineHeight = Math.max(lineHeight, heights[widthHeightIndex]);\n      const fillStrokeArgs = [\n        text,\n        x +\n          leftRight * widths[widthHeightIndex] +\n          align * (widths[widthHeightIndex] - lineWidths[lineWidthIndex]),\n        0.5 * (strokeWidth + lineHeight) + lineOffset,\n      ];\n      x += widths[widthHeightIndex];\n      if (strokeKey) {\n        strokeInstructions.push('strokeText', fillStrokeArgs);\n      }\n      if (fillKey) {\n        fillInstructions.push('fillText', fillStrokeArgs);\n      }\n      ++widthHeightIndex;\n    }\n    Array.prototype.push.apply(contextInstructions, strokeInstructions);\n    Array.prototype.push.apply(contextInstructions, fillInstructions);\n    this.labels_[key] = label;\n    return label;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../coordinate.js\").Coordinate} p1 1st point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p2 2nd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p3 3rd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p4 4th point of the background box.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   */\n  replayTextBackground_(\n    context,\n    p1,\n    p2,\n    p3,\n    p4,\n    fillInstruction,\n    strokeInstruction,\n  ) {\n    context.beginPath();\n    context.moveTo.apply(context, p1);\n    context.lineTo.apply(context, p2);\n    context.lineTo.apply(context, p3);\n    context.lineTo.apply(context, p4);\n    context.lineTo.apply(context, p1);\n    if (fillInstruction) {\n      this.alignAndScaleFill_ = /** @type {number} */ (fillInstruction[2]);\n      this.fill_(context);\n    }\n    if (strokeInstruction) {\n      this.setStrokeStyle_(\n        context,\n        /** @type {Array<*>} */ (strokeInstruction),\n      );\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} sheetWidth Width of the sprite sheet.\n   * @param {number} sheetHeight Height of the sprite sheet.\n   * @param {number} centerX X.\n   * @param {number} centerY Y.\n   * @param {number} width Width.\n   * @param {number} height Height.\n   * @param {number} anchorX Anchor X.\n   * @param {number} anchorY Anchor Y.\n   * @param {number} originX Origin X.\n   * @param {number} originY Origin Y.\n   * @param {number} rotation Rotation.\n   * @param {import(\"../../size.js\").Size} scale Scale.\n   * @param {boolean} snapToPixel Snap to pixel.\n   * @param {Array<number>} padding Padding.\n   * @param {boolean} fillStroke Background fill or stroke.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @return {ImageOrLabelDimensions} Dimensions for positioning and decluttering the image or label.\n   */\n  calculateImageOrLabelDimensions_(\n    sheetWidth,\n    sheetHeight,\n    centerX,\n    centerY,\n    width,\n    height,\n    anchorX,\n    anchorY,\n    originX,\n    originY,\n    rotation,\n    scale,\n    snapToPixel,\n    padding,\n    fillStroke,\n    feature,\n  ) {\n    anchorX *= scale[0];\n    anchorY *= scale[1];\n    let x = centerX - anchorX;\n    let y = centerY - anchorY;\n\n    const w = width + originX > sheetWidth ? sheetWidth - originX : width;\n    const h = height + originY > sheetHeight ? sheetHeight - originY : height;\n    const boxW = padding[3] + w * scale[0] + padding[1];\n    const boxH = padding[0] + h * scale[1] + padding[2];\n    const boxX = x - padding[3];\n    const boxY = y - padding[0];\n\n    if (fillStroke || rotation !== 0) {\n      p1[0] = boxX;\n      p4[0] = boxX;\n      p1[1] = boxY;\n      p2[1] = boxY;\n      p2[0] = boxX + boxW;\n      p3[0] = p2[0];\n      p3[1] = boxY + boxH;\n      p4[1] = p3[1];\n    }\n\n    let transform;\n    if (rotation !== 0) {\n      transform = composeTransform(\n        createTransform(),\n        centerX,\n        centerY,\n        1,\n        1,\n        rotation,\n        -centerX,\n        -centerY,\n      );\n\n      applyTransform(transform, p1);\n      applyTransform(transform, p2);\n      applyTransform(transform, p3);\n      applyTransform(transform, p4);\n      createOrUpdate(\n        Math.min(p1[0], p2[0], p3[0], p4[0]),\n        Math.min(p1[1], p2[1], p3[1], p4[1]),\n        Math.max(p1[0], p2[0], p3[0], p4[0]),\n        Math.max(p1[1], p2[1], p3[1], p4[1]),\n        tmpExtent,\n      );\n    } else {\n      createOrUpdate(\n        Math.min(boxX, boxX + boxW),\n        Math.min(boxY, boxY + boxH),\n        Math.max(boxX, boxX + boxW),\n        Math.max(boxY, boxY + boxH),\n        tmpExtent,\n      );\n    }\n    if (snapToPixel) {\n      x = Math.round(x);\n      y = Math.round(y);\n    }\n    return {\n      drawImageX: x,\n      drawImageY: y,\n      drawImageW: w,\n      drawImageH: h,\n      originX: originX,\n      originY: originY,\n      declutterBox: {\n        minX: tmpExtent[0],\n        minY: tmpExtent[1],\n        maxX: tmpExtent[2],\n        maxY: tmpExtent[3],\n        value: feature,\n      },\n      canvasTransform: transform,\n      scale: scale,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import('../../size.js').Size} scaledCanvasSize Scaled canvas size.\n   * @param {import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} imageOrLabel Image.\n   * @param {ImageOrLabelDimensions} dimensions Dimensions.\n   * @param {number} opacity Opacity.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   * @return {boolean} The image or label was rendered.\n   */\n  replayImageOrLabel_(\n    context,\n    scaledCanvasSize,\n    imageOrLabel,\n    dimensions,\n    opacity,\n    fillInstruction,\n    strokeInstruction,\n  ) {\n    const fillStroke = !!(fillInstruction || strokeInstruction);\n\n    const box = dimensions.declutterBox;\n    const strokePadding = strokeInstruction\n      ? (strokeInstruction[2] * dimensions.scale[0]) / 2\n      : 0;\n    const intersects =\n      box.minX - strokePadding <= scaledCanvasSize[0] &&\n      box.maxX + strokePadding >= 0 &&\n      box.minY - strokePadding <= scaledCanvasSize[1] &&\n      box.maxY + strokePadding >= 0;\n\n    if (intersects) {\n      if (fillStroke) {\n        this.replayTextBackground_(\n          context,\n          p1,\n          p2,\n          p3,\n          p4,\n          /** @type {Array<*>} */ (fillInstruction),\n          /** @type {Array<*>} */ (strokeInstruction),\n        );\n      }\n      drawImageOrLabel(\n        context,\n        dimensions.canvasTransform,\n        opacity,\n        imageOrLabel,\n        dimensions.originX,\n        dimensions.originY,\n        dimensions.drawImageW,\n        dimensions.drawImageH,\n        dimensions.drawImageX,\n        dimensions.drawImageY,\n        dimensions.scale,\n      );\n    }\n    return true;\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   */\n  fill_(context) {\n    const alignAndScale = this.alignAndScaleFill_;\n    if (alignAndScale) {\n      const origin = applyTransform(this.renderedTransform_, [0, 0]);\n      const repeatSize = 512 * this.pixelRatio;\n      context.save();\n      context.translate(origin[0] % repeatSize, origin[1] % repeatSize);\n      if (alignAndScale !== 1) {\n        context.scale(alignAndScale, alignAndScale);\n      }\n      context.rotate(this.viewRotation_);\n    }\n    context.fill();\n    if (alignAndScale) {\n      context.restore();\n    }\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {Array<*>} instruction Instruction.\n   */\n  setStrokeStyle_(context, instruction) {\n    context.strokeStyle =\n      /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\n    context.lineWidth = /** @type {number} */ (instruction[2]);\n    context.lineCap = /** @type {CanvasLineCap} */ (instruction[3]);\n    context.lineJoin = /** @type {CanvasLineJoin} */ (instruction[4]);\n    context.miterLimit = /** @type {number} */ (instruction[5]);\n    context.lineDashOffset = /** @type {number} */ (instruction[7]);\n    context.setLineDash(/** @type {Array<number>} */ (instruction[6]));\n  }\n\n  /**\n   * @private\n   * @param {string|Array<string>} text The text to draw.\n   * @param {string} textKey The key of the text state.\n   * @param {string} strokeKey The key for the stroke state.\n   * @param {string} fillKey The key for the fill state.\n   * @return {{label: import(\"../canvas.js\").Label, anchorX: number, anchorY: number}} The text image and its anchor.\n   */\n  drawLabelWithPointPlacement_(text, textKey, strokeKey, fillKey) {\n    const textState = this.textStates[textKey];\n\n    const label = this.createLabel(text, textKey, fillKey, strokeKey);\n\n    const strokeState = this.strokeStates[strokeKey];\n    const pixelRatio = this.pixelRatio;\n    const align = horizontalTextAlign(\n      Array.isArray(text) ? text[0] : text,\n      textState.textAlign || defaultTextAlign,\n    );\n    const baseline = TEXT_ALIGN[textState.textBaseline || defaultTextBaseline];\n    const strokeWidth =\n      strokeState && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    // Remove the 2 pixels we added in createLabel() for the anchor\n    const width = label.width / pixelRatio - 2 * textState.scale[0];\n    const anchorX = align * width + 2 * (0.5 - align) * strokeWidth;\n    const anchorY =\n      (baseline * label.height) / pixelRatio +\n      2 * (0.5 - baseline) * strokeWidth;\n\n    return {\n      label: label,\n      anchorX: anchorX,\n      anchorY: anchorY,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import('../../size.js').Size} scaledCanvasSize Scaled canvas size\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {Array<*>} instructions Instructions array.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {FeatureCallback<T>} [featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [hitExtent] Only check\n   *     features that intersect this extent.\n   * @param {import(\"rbush\").default} [declutterTree] Declutter tree.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  execute_(\n    context,\n    scaledCanvasSize,\n    transform,\n    instructions,\n    snapToPixel,\n    featureCallback,\n    hitExtent,\n    declutterTree,\n  ) {\n    const zIndexContext = this.zIndexContext_;\n    /** @type {Array<number>} */\n    let pixelCoordinates;\n    if (this.pixelCoordinates_ && equals(transform, this.renderedTransform_)) {\n      pixelCoordinates = this.pixelCoordinates_;\n    } else {\n      if (!this.pixelCoordinates_) {\n        this.pixelCoordinates_ = [];\n      }\n      pixelCoordinates = transform2D(\n        this.coordinates,\n        0,\n        this.coordinates.length,\n        2,\n        transform,\n        this.pixelCoordinates_,\n      );\n      transformSetFromArray(this.renderedTransform_, transform);\n    }\n    let i = 0; // instruction index\n    const ii = instructions.length; // end of instructions\n    let d = 0; // data index\n    let dd; // end of per-instruction data\n    let anchorX,\n      anchorY,\n      /** @type {import('../../style/Style.js').DeclutterMode} */\n      declutterMode,\n      prevX,\n      prevY,\n      roundX,\n      roundY,\n      image,\n      text,\n      textKey,\n      strokeKey,\n      fillKey;\n    let pendingFill = 0;\n    let pendingStroke = 0;\n    let lastFillInstruction = null;\n    let lastStrokeInstruction = null;\n    const coordinateCache = this.coordinateCache_;\n    const viewRotation = this.viewRotation_;\n    const viewRotationFromTransform =\n      Math.round(Math.atan2(-transform[1], transform[0]) * 1e12) / 1e12;\n\n    const state = /** @type {import(\"../../render.js\").State} */ ({\n      context: context,\n      pixelRatio: this.pixelRatio,\n      resolution: this.resolution,\n      rotation: viewRotation,\n    });\n\n    // When the batch size gets too big, performance decreases. 200 is a good\n    // balance between batch size and number of fill/stroke instructions.\n    const batchSize =\n      this.instructions != instructions || this.overlaps ? 0 : 200;\n    let /** @type {import(\"../../Feature.js\").FeatureLike} */ feature;\n    let x, y, currentGeometry;\n    while (i < ii) {\n      const instruction = instructions[i];\n      const type = /** @type {import(\"./Instruction.js\").default} */ (\n        instruction[0]\n      );\n      switch (type) {\n        case CanvasInstruction.BEGIN_GEOMETRY:\n          feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (\n            instruction[1]\n          );\n          currentGeometry = instruction[3];\n          if (!feature.getGeometry()) {\n            i = /** @type {number} */ (instruction[2]);\n          } else if (\n            hitExtent !== undefined &&\n            !intersects(hitExtent, currentGeometry.getExtent())\n          ) {\n            i = /** @type {number} */ (instruction[2]) + 1;\n          } else {\n            ++i;\n          }\n          if (zIndexContext) {\n            zIndexContext.zIndex = instruction[4];\n          }\n          break;\n        case CanvasInstruction.BEGIN_PATH:\n          if (pendingFill > batchSize) {\n            this.fill_(context);\n            pendingFill = 0;\n          }\n          if (pendingStroke > batchSize) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          if (!pendingFill && !pendingStroke) {\n            context.beginPath();\n            prevX = NaN;\n            prevY = NaN;\n          }\n          ++i;\n          break;\n        case CanvasInstruction.CIRCLE:\n          d = /** @type {number} */ (instruction[1]);\n          const x1 = pixelCoordinates[d];\n          const y1 = pixelCoordinates[d + 1];\n          const x2 = pixelCoordinates[d + 2];\n          const y2 = pixelCoordinates[d + 3];\n          const dx = x2 - x1;\n          const dy = y2 - y1;\n          const r = Math.sqrt(dx * dx + dy * dy);\n          context.moveTo(x1 + r, y1);\n          context.arc(x1, y1, r, 0, 2 * Math.PI, true);\n          ++i;\n          break;\n        case CanvasInstruction.CLOSE_PATH:\n          context.closePath();\n          ++i;\n          break;\n        case CanvasInstruction.CUSTOM:\n          d = /** @type {number} */ (instruction[1]);\n          dd = instruction[2];\n          const geometry =\n            /** @type {import(\"../../geom/SimpleGeometry.js\").default} */ (\n              instruction[3]\n            );\n          const renderer = instruction[4];\n          const fn = instruction[5];\n          state.geometry = geometry;\n          state.feature = feature;\n          if (!(i in coordinateCache)) {\n            coordinateCache[i] = [];\n          }\n          const coords = coordinateCache[i];\n          if (fn) {\n            fn(pixelCoordinates, d, dd, 2, coords);\n          } else {\n            coords[0] = pixelCoordinates[d];\n            coords[1] = pixelCoordinates[d + 1];\n            coords.length = 2;\n          }\n          if (zIndexContext) {\n            zIndexContext.zIndex = instruction[6];\n          }\n          renderer(coords, state);\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_IMAGE:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          image =\n            /** @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} */ (\n              instruction[3]\n            );\n\n          // Remaining arguments in DRAW_IMAGE are in alphabetical order\n          anchorX = /** @type {number} */ (instruction[4]);\n          anchorY = /** @type {number} */ (instruction[5]);\n          let height = /** @type {number} */ (instruction[6]);\n          const opacity = /** @type {number} */ (instruction[7]);\n          const originX = /** @type {number} */ (instruction[8]);\n          const originY = /** @type {number} */ (instruction[9]);\n          const rotateWithView = /** @type {boolean} */ (instruction[10]);\n          let rotation = /** @type {number} */ (instruction[11]);\n          const scale = /** @type {import(\"../../size.js\").Size} */ (\n            instruction[12]\n          );\n          let width = /** @type {number} */ (instruction[13]);\n          declutterMode = instruction[14] || 'declutter';\n          const declutterImageWithText =\n            /** @type {{args: import(\"../canvas.js\").DeclutterImageWithText, declutterMode: import('../../style/Style.js').DeclutterMode}} */ (\n              instruction[15]\n            );\n\n          if (!image && instruction.length >= 20) {\n            // create label images\n            text = /** @type {string} */ (instruction[19]);\n            textKey = /** @type {string} */ (instruction[20]);\n            strokeKey = /** @type {string} */ (instruction[21]);\n            fillKey = /** @type {string} */ (instruction[22]);\n            const labelWithAnchor = this.drawLabelWithPointPlacement_(\n              text,\n              textKey,\n              strokeKey,\n              fillKey,\n            );\n            image = labelWithAnchor.label;\n            instruction[3] = image;\n            const textOffsetX = /** @type {number} */ (instruction[23]);\n            anchorX = (labelWithAnchor.anchorX - textOffsetX) * this.pixelRatio;\n            instruction[4] = anchorX;\n            const textOffsetY = /** @type {number} */ (instruction[24]);\n            anchorY = (labelWithAnchor.anchorY - textOffsetY) * this.pixelRatio;\n            instruction[5] = anchorY;\n            height = image.height;\n            instruction[6] = height;\n            width = image.width;\n            instruction[13] = width;\n          }\n\n          let geometryWidths;\n          if (instruction.length > 25) {\n            geometryWidths = /** @type {number} */ (instruction[25]);\n          }\n\n          let padding, backgroundFill, backgroundStroke;\n          if (instruction.length > 17) {\n            padding = /** @type {Array<number>} */ (instruction[16]);\n            backgroundFill = /** @type {boolean} */ (instruction[17]);\n            backgroundStroke = /** @type {boolean} */ (instruction[18]);\n          } else {\n            padding = defaultPadding;\n            backgroundFill = false;\n            backgroundStroke = false;\n          }\n\n          if (rotateWithView && viewRotationFromTransform) {\n            // Canvas is expected to be rotated to reverse view rotation.\n            rotation += viewRotation;\n          } else if (!rotateWithView && !viewRotationFromTransform) {\n            // Canvas is not rotated, images need to be rotated back to be north-up.\n            rotation -= viewRotation;\n          }\n          let widthIndex = 0;\n          for (; d < dd; d += 2) {\n            if (\n              geometryWidths &&\n              geometryWidths[widthIndex++] < width / this.pixelRatio\n            ) {\n              continue;\n            }\n            const dimensions = this.calculateImageOrLabelDimensions_(\n              image.width,\n              image.height,\n              pixelCoordinates[d],\n              pixelCoordinates[d + 1],\n              width,\n              height,\n              anchorX,\n              anchorY,\n              originX,\n              originY,\n              rotation,\n              scale,\n              snapToPixel,\n              padding,\n              backgroundFill || backgroundStroke,\n              feature,\n            );\n            /** @type {ReplayImageOrLabelArgs} */\n            const args = [\n              context,\n              scaledCanvasSize,\n              image,\n              dimensions,\n              opacity,\n              backgroundFill\n                ? /** @type {Array<*>} */ (lastFillInstruction)\n                : null,\n              backgroundStroke\n                ? /** @type {Array<*>} */ (lastStrokeInstruction)\n                : null,\n            ];\n            if (declutterTree) {\n              let imageArgs, imageDeclutterMode, imageDeclutterBox;\n              if (declutterImageWithText) {\n                const index = dd - d;\n                if (!declutterImageWithText[index]) {\n                  // We now have the image for an image+text combination.\n                  declutterImageWithText[index] = {args, declutterMode};\n                  // Don't render anything for now, wait for the text.\n                  continue;\n                }\n                const imageDeclutter = declutterImageWithText[index];\n                imageArgs = imageDeclutter.args;\n                imageDeclutterMode = imageDeclutter.declutterMode;\n                delete declutterImageWithText[index];\n                imageDeclutterBox = getDeclutterBox(imageArgs);\n              }\n              // We now have image and text for an image+text combination.\n              let renderImage, renderText;\n              if (\n                imageArgs &&\n                (imageDeclutterMode !== 'declutter' ||\n                  !declutterTree.collides(imageDeclutterBox))\n              ) {\n                renderImage = true;\n              }\n              if (\n                declutterMode !== 'declutter' ||\n                !declutterTree.collides(dimensions.declutterBox)\n              ) {\n                renderText = true;\n              }\n              if (\n                imageDeclutterMode === 'declutter' &&\n                declutterMode === 'declutter'\n              ) {\n                const render = renderImage && renderText;\n                renderImage = render;\n                renderText = render;\n              }\n              if (renderImage) {\n                if (imageDeclutterMode !== 'none') {\n                  declutterTree.insert(imageDeclutterBox);\n                }\n                this.replayImageOrLabel_.apply(this, imageArgs);\n              }\n              if (renderText) {\n                if (declutterMode !== 'none') {\n                  declutterTree.insert(dimensions.declutterBox);\n                }\n                this.replayImageOrLabel_.apply(this, args);\n              }\n            } else {\n              this.replayImageOrLabel_.apply(this, args);\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_CHARS:\n          const begin = /** @type {number} */ (instruction[1]);\n          const end = /** @type {number} */ (instruction[2]);\n          const baseline = /** @type {number} */ (instruction[3]);\n          const overflow = /** @type {number} */ (instruction[4]);\n          fillKey = /** @type {string} */ (instruction[5]);\n          const maxAngle = /** @type {number} */ (instruction[6]);\n          const measurePixelRatio = /** @type {number} */ (instruction[7]);\n          const offsetY = /** @type {number} */ (instruction[8]);\n          strokeKey = /** @type {string} */ (instruction[9]);\n          const strokeWidth = /** @type {number} */ (instruction[10]);\n          text = /** @type {string} */ (instruction[11]);\n          textKey = /** @type {string} */ (instruction[12]);\n          const pixelRatioScale = [\n            /** @type {number} */ (instruction[13]),\n            /** @type {number} */ (instruction[13]),\n          ];\n          declutterMode = instruction[14] || 'declutter';\n\n          const textState = this.textStates[textKey];\n          const font = textState.font;\n          const textScale = [\n            textState.scale[0] * measurePixelRatio,\n            textState.scale[1] * measurePixelRatio,\n          ];\n\n          let cachedWidths;\n          if (font in this.widths_) {\n            cachedWidths = this.widths_[font];\n          } else {\n            cachedWidths = {};\n            this.widths_[font] = cachedWidths;\n          }\n\n          const pathLength = lineStringLength(pixelCoordinates, begin, end, 2);\n          const textLength =\n            Math.abs(textScale[0]) *\n            measureAndCacheTextWidth(font, text, cachedWidths);\n          if (overflow || textLength <= pathLength) {\n            const textAlign = this.textStates[textKey].textAlign;\n            const startM =\n              (pathLength - textLength) * horizontalTextAlign(text, textAlign);\n            const parts = drawTextOnPath(\n              pixelCoordinates,\n              begin,\n              end,\n              2,\n              text,\n              startM,\n              maxAngle,\n              Math.abs(textScale[0]),\n              measureAndCacheTextWidth,\n              font,\n              cachedWidths,\n              viewRotationFromTransform ? 0 : this.viewRotation_,\n            );\n            drawChars: if (parts) {\n              /** @type {Array<ReplayImageOrLabelArgs>} */\n              const replayImageOrLabelArgs = [];\n              let c, cc, chars, label, part;\n              if (strokeKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, '', strokeKey);\n                  anchorX =\n                    /** @type {number} */ (part[2]) +\n                    (textScale[0] < 0 ? -strokeWidth : strokeWidth);\n                  anchorY =\n                    baseline * label.height +\n                    ((0.5 - baseline) * 2 * strokeWidth * textScale[1]) /\n                      textScale[0] -\n                    offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature,\n                  );\n                  if (\n                    declutterTree &&\n                    declutterMode === 'declutter' &&\n                    declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    scaledCanvasSize,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (fillKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, fillKey, '');\n                  anchorX = /** @type {number} */ (part[2]);\n                  anchorY = baseline * label.height - offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature,\n                  );\n                  if (\n                    declutterTree &&\n                    declutterMode === 'declutter' &&\n                    declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    scaledCanvasSize,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (declutterTree && declutterMode !== 'none') {\n                declutterTree.load(replayImageOrLabelArgs.map(getDeclutterBox));\n              }\n              for (let i = 0, ii = replayImageOrLabelArgs.length; i < ii; ++i) {\n                this.replayImageOrLabel_.apply(this, replayImageOrLabelArgs[i]);\n              }\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.END_GEOMETRY:\n          if (featureCallback !== undefined) {\n            feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (\n              instruction[1]\n            );\n            const result = featureCallback(\n              feature,\n              currentGeometry,\n              declutterMode,\n            );\n            if (result) {\n              return result;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.FILL:\n          if (batchSize) {\n            pendingFill++;\n          } else {\n            this.fill_(context);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.MOVE_TO_LINE_TO:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          x = pixelCoordinates[d];\n          y = pixelCoordinates[d + 1];\n          context.moveTo(x, y);\n          prevX = (x + 0.5) | 0;\n          prevY = (y + 0.5) | 0;\n          for (d += 2; d < dd; d += 2) {\n            x = pixelCoordinates[d];\n            y = pixelCoordinates[d + 1];\n            roundX = (x + 0.5) | 0;\n            roundY = (y + 0.5) | 0;\n            if (d == dd - 2 || roundX !== prevX || roundY !== prevY) {\n              context.lineTo(x, y);\n              prevX = roundX;\n              prevY = roundY;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.SET_FILL_STYLE:\n          lastFillInstruction = instruction;\n          this.alignAndScaleFill_ = instruction[2];\n\n          if (pendingFill) {\n            this.fill_(context);\n            pendingFill = 0;\n            if (pendingStroke) {\n              context.stroke();\n              pendingStroke = 0;\n            }\n          }\n\n          /** @type {import(\"../../colorlike.js\").ColorLike} */\n          context.fillStyle = instruction[1];\n          ++i;\n          break;\n        case CanvasInstruction.SET_STROKE_STYLE:\n          lastStrokeInstruction = instruction;\n          if (pendingStroke) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          this.setStrokeStyle_(context, /** @type {Array<*>} */ (instruction));\n          ++i;\n          break;\n        case CanvasInstruction.STROKE:\n          if (batchSize) {\n            pendingStroke++;\n          } else {\n            context.stroke();\n          }\n          ++i;\n          break;\n        default: // consume the instruction anyway, to avoid an infinite loop\n          ++i;\n          break;\n      }\n    }\n    if (pendingFill) {\n      this.fill_(context);\n    }\n    if (pendingStroke) {\n      context.stroke();\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import('../../size.js').Size} scaledCanvasSize Scaled canvas size.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {import(\"rbush\").default} [declutterTree] Declutter tree.\n   */\n  execute(\n    context,\n    scaledCanvasSize,\n    transform,\n    viewRotation,\n    snapToPixel,\n    declutterTree,\n  ) {\n    this.viewRotation_ = viewRotation;\n    this.execute_(\n      context,\n      scaledCanvasSize,\n      transform,\n      this.instructions,\n      snapToPixel,\n      undefined,\n      undefined,\n      declutterTree,\n    );\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {FeatureCallback<T>} [featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [hitExtent] Only check\n   *     features that intersect this extent.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  executeHitDetection(\n    context,\n    transform,\n    viewRotation,\n    featureCallback,\n    hitExtent,\n  ) {\n    this.viewRotation_ = viewRotation;\n    return this.execute_(\n      context,\n      [context.canvas.width, context.canvas.height],\n      transform,\n      this.hitDetectionInstructions,\n      true,\n      featureCallback,\n      hitExtent,\n    );\n  }\n}\n\nexport default Executor;\n","/**\n * @module ol/render/canvas/ExecutorGroup\n */\n\nimport Executor from './Executor.js';\nimport {ascending} from '../../array.js';\nimport {buffer, createEmpty, extendCoordinate} from '../../extent.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {isEmpty} from '../../obj.js';\nimport {transform2D} from '../../geom/flat/transform.js';\n\n/**\n * @const\n * @type {Array<import(\"../canvas.js\").BuilderType>}\n */\nexport const ALL = [\n  'Polygon',\n  'Circle',\n  'LineString',\n  'Image',\n  'Text',\n  'Default',\n];\n\n/**\n * @const\n * @type {Array<import(\"../canvas.js\").BuilderType>}\n */\nexport const DECLUTTER = ['Image', 'Text'];\n\n/**\n * @const\n * @type {Array<import(\"../canvas.js\").BuilderType>}\n */\nexport const NON_DECLUTTER = ALL.filter(\n  (builderType) => !DECLUTTER.includes(builderType),\n);\n\nclass ExecutorGroup {\n  /**\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent for clipping. When a\n   * `maxExtent` was set on the Builder for this executor group, the same `maxExtent`\n   * should be set here, unless the target context does not exceed that extent (which\n   * can be the case when rendering to tiles).\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The executor group can have overlapping geometries.\n   * @param {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"../canvas.js\").SerializableInstructions>>} allInstructions\n   * The serializable instructions.\n   * @param {number} [renderBuffer] Optional rendering buffer.\n   * @param {boolean} [deferredRendering] Enable deferred rendering with renderDeferred().\n   */\n  constructor(\n    maxExtent,\n    resolution,\n    pixelRatio,\n    overlaps,\n    allInstructions,\n    renderBuffer,\n    deferredRendering,\n  ) {\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = overlaps;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.renderBuffer_ = renderBuffer;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<string, import(\"./Executor\").default>>}\n     */\n    this.executorsByZIndex_ = {};\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.hitDetectionContext_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.hitDetectionTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.renderedContext_ = null;\n\n    /**\n     * @type {Object<number, Array<import(\"./ZIndexContext.js\").default>>}\n     */\n    this.deferredZIndexContexts_ = {};\n\n    this.createExecutors_(allInstructions, deferredRendering);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  clip(context, transform) {\n    const flatClipCoords = this.getClipCoords(transform);\n    context.beginPath();\n    context.moveTo(flatClipCoords[0], flatClipCoords[1]);\n    context.lineTo(flatClipCoords[2], flatClipCoords[3]);\n    context.lineTo(flatClipCoords[4], flatClipCoords[5]);\n    context.lineTo(flatClipCoords[6], flatClipCoords[7]);\n    context.clip();\n  }\n\n  /**\n   * Create executors and populate them using the provided instructions.\n   * @private\n   * @param {!Object<string, !Object<string, import(\"../canvas.js\").SerializableInstructions>>} allInstructions The serializable instructions\n   * @param {boolean} deferredRendering Enable deferred rendering.\n   */\n  createExecutors_(allInstructions, deferredRendering) {\n    for (const zIndex in allInstructions) {\n      let executors = this.executorsByZIndex_[zIndex];\n      if (executors === undefined) {\n        executors = {};\n        this.executorsByZIndex_[zIndex] = executors;\n      }\n      const instructionByZindex = allInstructions[zIndex];\n      for (const builderType in instructionByZindex) {\n        const instructions = instructionByZindex[builderType];\n        executors[builderType] = new Executor(\n          this.resolution_,\n          this.pixelRatio_,\n          this.overlaps_,\n          instructions,\n          deferredRendering,\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {Array<import(\"../canvas.js\").BuilderType>} executors Executors.\n   * @return {boolean} Has executors of the provided types.\n   */\n  hasExecutors(executors) {\n    for (const zIndex in this.executorsByZIndex_) {\n      const candidates = this.executorsByZIndex_[zIndex];\n      for (let i = 0, ii = executors.length; i < ii; ++i) {\n        if (executors[i] in candidates) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default, number): T} callback Feature callback.\n   * @param {Array<import(\"../../Feature.js\").FeatureLike>} declutteredFeatures Decluttered features.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    resolution,\n    rotation,\n    hitTolerance,\n    callback,\n    declutteredFeatures,\n  ) {\n    hitTolerance = Math.round(hitTolerance);\n    const contextSize = hitTolerance * 2 + 1;\n    const transform = composeTransform(\n      this.hitDetectionTransform_,\n      hitTolerance + 0.5,\n      hitTolerance + 0.5,\n      1 / resolution,\n      -1 / resolution,\n      -rotation,\n      -coordinate[0],\n      -coordinate[1],\n    );\n\n    const newContext = !this.hitDetectionContext_;\n    if (newContext) {\n      this.hitDetectionContext_ = createCanvasContext2D(\n        contextSize,\n        contextSize,\n        undefined,\n        {willReadFrequently: true},\n      );\n    }\n    const context = this.hitDetectionContext_;\n\n    if (\n      context.canvas.width !== contextSize ||\n      context.canvas.height !== contextSize\n    ) {\n      context.canvas.width = contextSize;\n      context.canvas.height = contextSize;\n    } else if (!newContext) {\n      context.clearRect(0, 0, contextSize, contextSize);\n    }\n\n    /**\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    let hitExtent;\n    if (this.renderBuffer_ !== undefined) {\n      hitExtent = createEmpty();\n      extendCoordinate(hitExtent, coordinate);\n      buffer(\n        hitExtent,\n        resolution * (this.renderBuffer_ + hitTolerance),\n        hitExtent,\n      );\n    }\n\n    const indexes = getPixelIndexArray(hitTolerance);\n\n    let builderType;\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @param {import('../../style/Style.js').DeclutterMode} declutterMode Declutter mode.\n     * @return {T|undefined} Callback result.\n     */\n    function featureCallback(feature, geometry, declutterMode) {\n      const imageData = context.getImageData(\n        0,\n        0,\n        contextSize,\n        contextSize,\n      ).data;\n      for (let i = 0, ii = indexes.length; i < ii; i++) {\n        if (imageData[indexes[i]] > 0) {\n          if (\n            !declutteredFeatures ||\n            declutterMode === 'none' ||\n            (builderType !== 'Image' && builderType !== 'Text') ||\n            declutteredFeatures.includes(feature)\n          ) {\n            const idx = (indexes[i] - 3) / 4;\n            const x = hitTolerance - (idx % contextSize);\n            const y = hitTolerance - ((idx / contextSize) | 0);\n            const result = callback(feature, geometry, x * x + y * y);\n            if (result) {\n              return result;\n            }\n          }\n          context.clearRect(0, 0, contextSize, contextSize);\n          break;\n        }\n      }\n      return undefined;\n    }\n\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(ascending);\n\n    let i, j, executors, executor, result;\n    for (i = zs.length - 1; i >= 0; --i) {\n      const zIndexKey = zs[i].toString();\n      executors = this.executorsByZIndex_[zIndexKey];\n      for (j = ALL.length - 1; j >= 0; --j) {\n        builderType = ALL[j];\n        executor = executors[builderType];\n        if (executor !== undefined) {\n          result = executor.executeHitDetection(\n            context,\n            transform,\n            rotation,\n            featureCallback,\n            hitExtent,\n          );\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @return {Array<number>|null} Clip coordinates.\n   */\n  getClipCoords(transform) {\n    const maxExtent = this.maxExtent_;\n    if (!maxExtent) {\n      return null;\n    }\n    const minX = maxExtent[0];\n    const minY = maxExtent[1];\n    const maxX = maxExtent[2];\n    const maxY = maxExtent[3];\n    const flatClipCoords = [minX, minY, minX, maxY, maxX, maxY, maxX, minY];\n    transform2D(flatClipCoords, 0, 8, 2, transform, flatClipCoords);\n    return flatClipCoords;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.executorsByZIndex_);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} targetContext Context.\n   * @param {import('../../size.js').Size} scaledCanvasSize Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and test to integer pixel.\n   * @param {Array<import(\"../canvas.js\").BuilderType>} [builderTypes] Ordered replay types to replay.\n   *     Default is {@link module:ol/render/replay~ALL}\n   * @param {import(\"rbush\").default|null} [declutterTree] Declutter tree.\n   *     When set to null, no decluttering is done, even when the executor group has a `ZIndexContext`.\n   */\n  execute(\n    targetContext,\n    scaledCanvasSize,\n    transform,\n    viewRotation,\n    snapToPixel,\n    builderTypes,\n    declutterTree,\n  ) {\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(ascending);\n\n    builderTypes = builderTypes ? builderTypes : ALL;\n    const maxBuilderTypes = ALL.length;\n    let i, ii, j, jj, replays;\n    if (declutterTree) {\n      zs.reverse();\n    }\n    for (i = 0, ii = zs.length; i < ii; ++i) {\n      const zIndexKey = zs[i].toString();\n      replays = this.executorsByZIndex_[zIndexKey];\n      for (j = 0, jj = builderTypes.length; j < jj; ++j) {\n        const builderType = builderTypes[j];\n        const replay = replays[builderType];\n        if (replay !== undefined) {\n          const zIndexContext =\n            declutterTree === null ? undefined : replay.getZIndexContext();\n          const context = zIndexContext\n            ? zIndexContext.getContext()\n            : targetContext;\n          const requireClip =\n            this.maxExtent_ &&\n            builderType !== 'Image' &&\n            builderType !== 'Text';\n          if (requireClip) {\n            context.save();\n            // setup clipping so that the parts of over-simplified geometries are not\n            // visible outside the current extent when panning\n            this.clip(context, transform);\n          }\n          if (\n            !zIndexContext ||\n            builderType === 'Text' ||\n            builderType === 'Image'\n          ) {\n            replay.execute(\n              context,\n              scaledCanvasSize,\n              transform,\n              viewRotation,\n              snapToPixel,\n              declutterTree,\n            );\n          } else {\n            zIndexContext.pushFunction((context) =>\n              replay.execute(\n                context,\n                scaledCanvasSize,\n                transform,\n                viewRotation,\n                snapToPixel,\n                declutterTree,\n              ),\n            );\n          }\n          if (requireClip) {\n            context.restore();\n          }\n          if (zIndexContext) {\n            zIndexContext.offset();\n            const index = zs[i] * maxBuilderTypes + j;\n            if (!this.deferredZIndexContexts_[index]) {\n              this.deferredZIndexContexts_[index] = [];\n            }\n            this.deferredZIndexContexts_[index].push(zIndexContext);\n          }\n        }\n      }\n    }\n\n    this.renderedContext_ = targetContext;\n  }\n\n  getDeferredZIndexContexts() {\n    return this.deferredZIndexContexts_;\n  }\n\n  getRenderedContext() {\n    return this.renderedContext_;\n  }\n\n  renderDeferred() {\n    const deferredZIndexContexts = this.deferredZIndexContexts_;\n    const zs = Object.keys(deferredZIndexContexts).map(Number).sort(ascending);\n    for (let i = 0, ii = zs.length; i < ii; ++i) {\n      deferredZIndexContexts[zs[i]].forEach((zIndexContext) => {\n        zIndexContext.draw(this.renderedContext_); // FIXME Pass clip to replay for temporarily enabling clip\n        zIndexContext.clear();\n      });\n      deferredZIndexContexts[zs[i]].length = 0;\n    }\n  }\n}\n\n/**\n * This cache is used to store arrays of indexes for calculated pixel circles\n * to increase performance.\n * It is a static property to allow each Replaygroup to access it.\n * @type {Object<number, Array<number>>}\n */\nconst circlePixelIndexArrayCache = {};\n\n/**\n * This methods creates an array with indexes of all pixels within a circle,\n * ordered by how close they are to the center.\n * A cache is used to increase performance.\n * @param {number} radius Radius.\n * @return {Array<number>} An array with indexes within a circle.\n */\nexport function getPixelIndexArray(radius) {\n  if (circlePixelIndexArrayCache[radius] !== undefined) {\n    return circlePixelIndexArrayCache[radius];\n  }\n\n  const size = radius * 2 + 1;\n  const maxDistanceSq = radius * radius;\n  const distances = new Array(maxDistanceSq + 1);\n  for (let i = 0; i <= radius; ++i) {\n    for (let j = 0; j <= radius; ++j) {\n      const distanceSq = i * i + j * j;\n      if (distanceSq > maxDistanceSq) {\n        break;\n      }\n      let distance = distances[distanceSq];\n      if (!distance) {\n        distance = [];\n        distances[distanceSq] = distance;\n      }\n      distance.push(((radius + i) * size + (radius + j)) * 4 + 3);\n      if (i > 0) {\n        distance.push(((radius - i) * size + (radius + j)) * 4 + 3);\n      }\n      if (j > 0) {\n        distance.push(((radius + i) * size + (radius - j)) * 4 + 3);\n        if (i > 0) {\n          distance.push(((radius - i) * size + (radius - j)) * 4 + 3);\n        }\n      }\n    }\n  }\n\n  const pixelIndex = [];\n  for (let i = 0, ii = distances.length; i < ii; ++i) {\n    if (distances[i]) {\n      pixelIndex.push(...distances[i]);\n    }\n  }\n\n  circlePixelIndexArrayCache[radius] = pixelIndex;\n  return pixelIndex;\n}\n\nexport default ExecutorGroup;\n","/**\n * @module ol/render/canvas/Immediate\n */\n// FIXME test, especially polygons with holes and multipolygons\n// FIXME need to handle large thick features (where pixel size matters)\n// FIXME add offset and end to ol/geom/flat/transform~transform2D?\n\nimport VectorContext from '../VectorContext.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n} from '../canvas.js';\nimport {equals} from '../../array.js';\nimport {intersects} from '../../extent.js';\nimport {toFixed} from '../../math.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {transformGeom2D} from '../../geom/SimpleGeometry.js';\n\n/**\n * @classdesc\n * A concrete subclass of {@link module:ol/render/VectorContext~VectorContext} that implements\n * direct rendering of features and geometries to an HTML5 Canvas context.\n * Instances of this class are created internally by the library and\n * provided to application code as vectorContext member of the\n * {@link module:ol/render/Event~RenderEvent} object associated with postcompose, precompose and\n * render events emitted by layers and maps.\n */\nclass CanvasImmediateRenderer extends VectorContext {\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {number} [squaredTolerance] Optional squared tolerance for simplification.\n   * @param {import(\"../../proj.js\").TransformFunction} [userTransform] Transform from user to view projection.\n   */\n  constructor(\n    context,\n    pixelRatio,\n    extent,\n    transform,\n    viewRotation,\n    squaredTolerance,\n    userTransform,\n  ) {\n    super();\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context_ = context;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.extent_ = extent;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.transform_ = transform;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.transformRotation_ = transform\n      ? toFixed(Math.atan2(transform[1], transform[0]), 10)\n      : 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = viewRotation;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.squaredTolerance_ = squaredTolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../proj.js\").TransformFunction}\n     */\n    this.userTransform_ = userTransform;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.contextFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.contextStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.contextTextState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.fillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.strokeState_ = null;\n\n    /**\n     * @private\n     * @type {import('../../DataTile.js').ImageLike}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorY_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageHeight_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOpacity_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.imageRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.imageScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageWidth_ = 0;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.textRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.textScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = [];\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tmpLocalTransform_ = createTransform();\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawImages_(flatCoordinates, offset, end, stride) {\n    if (!this.image_) {\n      return;\n    }\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_,\n    );\n    const context = this.context_;\n    const localTransform = this.tmpLocalTransform_;\n    const alpha = context.globalAlpha;\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha * this.imageOpacity_;\n    }\n    let rotation = this.imageRotation_;\n    if (this.transformRotation_ === 0) {\n      rotation -= this.viewRotation_;\n    }\n    if (this.imageRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (let i = 0, ii = pixelCoordinates.length; i < ii; i += 2) {\n      const x = pixelCoordinates[i] - this.imageAnchorX_;\n      const y = pixelCoordinates[i + 1] - this.imageAnchorY_;\n      if (\n        rotation !== 0 ||\n        this.imageScale_[0] != 1 ||\n        this.imageScale_[1] != 1\n      ) {\n        const centerX = x + this.imageAnchorX_;\n        const centerY = y + this.imageAnchorY_;\n        composeTransform(\n          localTransform,\n          centerX,\n          centerY,\n          1,\n          1,\n          rotation,\n          -centerX,\n          -centerY,\n        );\n        context.save();\n        context.transform.apply(context, localTransform);\n        context.translate(centerX, centerY);\n        context.scale(this.imageScale_[0], this.imageScale_[1]);\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          -this.imageAnchorX_,\n          -this.imageAnchorY_,\n          this.imageWidth_,\n          this.imageHeight_,\n        );\n        context.restore();\n      } else {\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          x,\n          y,\n          this.imageWidth_,\n          this.imageHeight_,\n        );\n      }\n    }\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha;\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawText_(flatCoordinates, offset, end, stride) {\n    if (!this.textState_ || this.text_ === '') {\n      return;\n    }\n    if (this.textFillState_) {\n      this.setContextFillState_(this.textFillState_);\n    }\n    if (this.textStrokeState_) {\n      this.setContextStrokeState_(this.textStrokeState_);\n    }\n    this.setContextTextState_(this.textState_);\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_,\n    );\n    const context = this.context_;\n    let rotation = this.textRotation_;\n    if (this.transformRotation_ === 0) {\n      rotation -= this.viewRotation_;\n    }\n    if (this.textRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (; offset < end; offset += stride) {\n      const x = pixelCoordinates[offset] + this.textOffsetX_;\n      const y = pixelCoordinates[offset + 1] + this.textOffsetY_;\n      if (\n        rotation !== 0 ||\n        this.textScale_[0] != 1 ||\n        this.textScale_[1] != 1\n      ) {\n        context.save();\n        context.translate(x - this.textOffsetX_, y - this.textOffsetY_);\n        context.rotate(rotation);\n        context.translate(this.textOffsetX_, this.textOffsetY_);\n        context.scale(this.textScale_[0], this.textScale_[1]);\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, 0, 0);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, 0, 0);\n        }\n        context.restore();\n      } else {\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, x, y);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, x, y);\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} close Close.\n   * @private\n   * @return {number} end End.\n   */\n  moveToLineTo_(flatCoordinates, offset, end, stride, close) {\n    const context = this.context_;\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_,\n    );\n    context.moveTo(pixelCoordinates[0], pixelCoordinates[1]);\n    let length = pixelCoordinates.length;\n    if (close) {\n      length -= 2;\n    }\n    for (let i = 2; i < length; i += 2) {\n      context.lineTo(pixelCoordinates[i], pixelCoordinates[i + 1]);\n    }\n    if (close) {\n      context.closePath();\n    }\n    return end;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawRings_(flatCoordinates, offset, ends, stride) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.moveToLineTo_(\n        flatCoordinates,\n        offset,\n        ends[i],\n        stride,\n        true,\n      );\n    }\n    return offset;\n  }\n\n  /**\n   * Render a circle geometry into the canvas.  Rendering is immediate and uses\n   * the current fill and stroke styles.\n   *\n   * @param {import(\"../../geom/Circle.js\").default} geometry Circle geometry.\n   * @api\n   */\n  drawCircle(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Circle.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_,\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.fillState_ || this.strokeState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const pixelCoordinates = transformGeom2D(\n        geometry,\n        this.transform_,\n        this.pixelCoordinates_,\n      );\n      const dx = pixelCoordinates[2] - pixelCoordinates[0];\n      const dy = pixelCoordinates[3] - pixelCoordinates[1];\n      const radius = Math.sqrt(dx * dx + dy * dy);\n      const context = this.context_;\n      context.beginPath();\n      context.arc(\n        pixelCoordinates[0],\n        pixelCoordinates[1],\n        radius,\n        0,\n        2 * Math.PI,\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      this.drawText_(geometry.getCenter(), 0, 2, 2);\n    }\n  }\n\n  /**\n   * Set the rendering style.  Note that since this is an immediate rendering API,\n   * any `zIndex` on the provided style will be ignored.\n   *\n   * @param {import(\"../../style/Style.js\").default} style The rendering style.\n   * @api\n   */\n  setStyle(style) {\n    this.setFillStrokeStyle(style.getFill(), style.getStroke());\n    this.setImageStyle(style.getImage());\n    this.setTextStyle(style.getText());\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  setTransform(transform) {\n    this.transform_ = transform;\n  }\n\n  /**\n   * Render a geometry into the canvas.  Call\n   * {@link module:ol/render/canvas/Immediate~CanvasImmediateRenderer#setStyle renderer.setStyle()} first to set the rendering style.\n   *\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry The geometry to render.\n   * @api\n   */\n  drawGeometry(geometry) {\n    const type = geometry.getType();\n    switch (type) {\n      case 'Point':\n        this.drawPoint(\n          /** @type {import(\"../../geom/Point.js\").default} */ (geometry),\n        );\n        break;\n      case 'LineString':\n        this.drawLineString(\n          /** @type {import(\"../../geom/LineString.js\").default} */ (geometry),\n        );\n        break;\n      case 'Polygon':\n        this.drawPolygon(\n          /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry),\n        );\n        break;\n      case 'MultiPoint':\n        this.drawMultiPoint(\n          /** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry),\n        );\n        break;\n      case 'MultiLineString':\n        this.drawMultiLineString(\n          /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n            geometry\n          ),\n        );\n        break;\n      case 'MultiPolygon':\n        this.drawMultiPolygon(\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ),\n        );\n        break;\n      case 'GeometryCollection':\n        this.drawGeometryCollection(\n          /** @type {import(\"../../geom/GeometryCollection.js\").default} */ (\n            geometry\n          ),\n        );\n        break;\n      case 'Circle':\n        this.drawCircle(\n          /** @type {import(\"../../geom/Circle.js\").default} */ (geometry),\n        );\n        break;\n      default:\n    }\n  }\n\n  /**\n   * Render a feature into the canvas.  Note that any `zIndex` on the provided\n   * style will be ignored - features are rendered immediately in the order that\n   * this method is called.  If you need `zIndex` support, you should be using an\n   * {@link module:ol/layer/Vector~VectorLayer} instead.\n   *\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {import(\"../../style/Style.js\").default} style Style.\n   * @api\n   */\n  drawFeature(feature, style) {\n    const geometry = style.getGeometryFunction()(feature);\n    if (!geometry) {\n      return;\n    }\n    this.setStyle(style);\n    this.drawGeometry(geometry);\n  }\n\n  /**\n   * Render a GeometryCollection to the canvas.  Rendering is immediate and\n   * uses the current styles appropriate for each geometry in the collection.\n   *\n   * @param {import(\"../../geom/GeometryCollection.js\").default} geometry Geometry collection.\n   */\n  drawGeometryCollection(geometry) {\n    const geometries = geometry.getGeometriesArray();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      this.drawGeometry(geometries[i]);\n    }\n  }\n\n  /**\n   * Render a Point geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} geometry Point geometry.\n   */\n  drawPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Point.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_,\n        )\n      );\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a MultiPoint geometry  into the canvas.  Rendering is immediate and\n   * uses the current style.\n   *\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} geometry MultiPoint geometry.\n   */\n  drawMultiPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPoint.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_,\n        )\n      );\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a LineString into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} geometry LineString geometry.\n   */\n  drawLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/LineString.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_,\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      context.beginPath();\n      this.moveToLineTo_(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        geometry.getStride(),\n        false,\n      );\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoint = geometry.getFlatMidpoint();\n      this.drawText_(flatMidpoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render a MultiLineString geometry into the canvas.  Rendering is immediate\n   * and uses the current style.\n   *\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} geometry MultiLineString geometry.\n   */\n  drawMultiLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry =\n        /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n          geometry.simplifyTransformed(\n            this.squaredTolerance_,\n            this.userTransform_,\n          )\n        );\n    }\n    const geometryExtent = geometry.getExtent();\n    if (!intersects(this.extent_, geometryExtent)) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      let offset = 0;\n      const ends = /** @type {Array<number>} */ (geometry.getEnds());\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        offset = this.moveToLineTo_(\n          flatCoordinates,\n          offset,\n          ends[i],\n          stride,\n          false,\n        );\n      }\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoints = geometry.getFlatMidpoints();\n      this.drawText_(flatMidpoints, 0, flatMidpoints.length, 2);\n    }\n  }\n\n  /**\n   * Render a Polygon geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} geometry Polygon geometry.\n   */\n  drawPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Polygon.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_,\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      context.beginPath();\n      this.drawRings_(\n        geometry.getOrientedFlatCoordinates(),\n        0,\n        /** @type {Array<number>} */ (geometry.getEnds()),\n        geometry.getStride(),\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoint = geometry.getFlatInteriorPoint();\n      this.drawText_(flatInteriorPoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render MultiPolygon geometry into the canvas.  Rendering is immediate and\n   * uses the current style.\n   * @param {import(\"../../geom/MultiPolygon.js\").default} geometry MultiPolygon geometry.\n   */\n  drawMultiPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_,\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      const flatCoordinates = geometry.getOrientedFlatCoordinates();\n      let offset = 0;\n      const endss = geometry.getEndss();\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = endss.length; i < ii; ++i) {\n        const ends = endss[i];\n        offset = this.drawRings_(flatCoordinates, offset, ends, stride);\n      }\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoints = geometry.getFlatInteriorPoints();\n      this.drawText_(flatInteriorPoints, 0, flatInteriorPoints.length, 2);\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillState} fillState Fill state.\n   * @private\n   */\n  setContextFillState_(fillState) {\n    const context = this.context_;\n    const contextFillState = this.contextFillState_;\n    if (!contextFillState) {\n      context.fillStyle = fillState.fillStyle;\n      this.contextFillState_ = {\n        fillStyle: fillState.fillStyle,\n      };\n    } else {\n      if (contextFillState.fillStyle != fillState.fillStyle) {\n        contextFillState.fillStyle = fillState.fillStyle;\n        context.fillStyle = fillState.fillStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").StrokeState} strokeState Stroke state.\n   * @private\n   */\n  setContextStrokeState_(strokeState) {\n    const context = this.context_;\n    const contextStrokeState = this.contextStrokeState_;\n    if (!contextStrokeState) {\n      context.lineCap = strokeState.lineCap;\n      context.setLineDash(strokeState.lineDash);\n      context.lineDashOffset = strokeState.lineDashOffset;\n      context.lineJoin = strokeState.lineJoin;\n      context.lineWidth = strokeState.lineWidth;\n      context.miterLimit = strokeState.miterLimit;\n      context.strokeStyle = strokeState.strokeStyle;\n      this.contextStrokeState_ = {\n        lineCap: strokeState.lineCap,\n        lineDash: strokeState.lineDash,\n        lineDashOffset: strokeState.lineDashOffset,\n        lineJoin: strokeState.lineJoin,\n        lineWidth: strokeState.lineWidth,\n        miterLimit: strokeState.miterLimit,\n        strokeStyle: strokeState.strokeStyle,\n      };\n    } else {\n      if (contextStrokeState.lineCap != strokeState.lineCap) {\n        contextStrokeState.lineCap = strokeState.lineCap;\n        context.lineCap = strokeState.lineCap;\n      }\n      if (!equals(contextStrokeState.lineDash, strokeState.lineDash)) {\n        context.setLineDash(\n          (contextStrokeState.lineDash = strokeState.lineDash),\n        );\n      }\n      if (contextStrokeState.lineDashOffset != strokeState.lineDashOffset) {\n        contextStrokeState.lineDashOffset = strokeState.lineDashOffset;\n        context.lineDashOffset = strokeState.lineDashOffset;\n      }\n      if (contextStrokeState.lineJoin != strokeState.lineJoin) {\n        contextStrokeState.lineJoin = strokeState.lineJoin;\n        context.lineJoin = strokeState.lineJoin;\n      }\n      if (contextStrokeState.lineWidth != strokeState.lineWidth) {\n        contextStrokeState.lineWidth = strokeState.lineWidth;\n        context.lineWidth = strokeState.lineWidth;\n      }\n      if (contextStrokeState.miterLimit != strokeState.miterLimit) {\n        contextStrokeState.miterLimit = strokeState.miterLimit;\n        context.miterLimit = strokeState.miterLimit;\n      }\n      if (contextStrokeState.strokeStyle != strokeState.strokeStyle) {\n        contextStrokeState.strokeStyle = strokeState.strokeStyle;\n        context.strokeStyle = strokeState.strokeStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").TextState} textState Text state.\n   * @private\n   */\n  setContextTextState_(textState) {\n    const context = this.context_;\n    const contextTextState = this.contextTextState_;\n    const textAlign = textState.textAlign\n      ? textState.textAlign\n      : defaultTextAlign;\n    if (!contextTextState) {\n      context.font = textState.font;\n      context.textAlign = textAlign;\n      context.textBaseline = textState.textBaseline;\n      this.contextTextState_ = {\n        font: textState.font,\n        textAlign: textAlign,\n        textBaseline: textState.textBaseline,\n      };\n    } else {\n      if (contextTextState.font != textState.font) {\n        contextTextState.font = textState.font;\n        context.font = textState.font;\n      }\n      if (contextTextState.textAlign != textAlign) {\n        contextTextState.textAlign = textAlign;\n        context.textAlign = textAlign;\n      }\n      if (contextTextState.textBaseline != textState.textBaseline) {\n        contextTextState.textBaseline = textState.textBaseline;\n        context.textBaseline = textState.textBaseline;\n      }\n    }\n  }\n\n  /**\n   * Set the fill and stroke style for subsequent draw operations.  To clear\n   * either fill or stroke styles, pass null for the appropriate parameter.\n   *\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    if (!fillStyle) {\n      this.fillState_ = null;\n    } else {\n      const fillStyleColor = fillStyle.getColor();\n      this.fillState_ = {\n        fillStyle: asColorLike(\n          fillStyleColor ? fillStyleColor : defaultFillStyle,\n        ),\n      };\n    }\n    if (!strokeStyle) {\n      this.strokeState_ = null;\n    } else {\n      const strokeStyleColor = strokeStyle.getColor();\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      const strokeStyleWidth = strokeStyle.getWidth();\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      const lineDash = strokeStyleLineDash\n        ? strokeStyleLineDash\n        : defaultLineDash;\n      this.strokeState_ = {\n        lineCap:\n          strokeStyleLineCap !== undefined\n            ? strokeStyleLineCap\n            : defaultLineCap,\n        lineDash:\n          this.pixelRatio_ === 1\n            ? lineDash\n            : lineDash.map((n) => n * this.pixelRatio_),\n        lineDashOffset:\n          (strokeStyleLineDashOffset\n            ? strokeStyleLineDashOffset\n            : defaultLineDashOffset) * this.pixelRatio_,\n        lineJoin:\n          strokeStyleLineJoin !== undefined\n            ? strokeStyleLineJoin\n            : defaultLineJoin,\n        lineWidth:\n          (strokeStyleWidth !== undefined\n            ? strokeStyleWidth\n            : defaultLineWidth) * this.pixelRatio_,\n        miterLimit:\n          strokeStyleMiterLimit !== undefined\n            ? strokeStyleMiterLimit\n            : defaultMiterLimit,\n        strokeStyle: asColorLike(\n          strokeStyleColor ? strokeStyleColor : defaultStrokeStyle,\n        ),\n      };\n    }\n  }\n\n  /**\n   * Set the image style for subsequent draw operations.  Pass null to remove\n   * the image style.\n   *\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   */\n  setImageStyle(imageStyle) {\n    let imageSize;\n    if (!imageStyle || !(imageSize = imageStyle.getSize())) {\n      this.image_ = null;\n      return;\n    }\n    const imagePixelRatio = imageStyle.getPixelRatio(this.pixelRatio_);\n    const imageAnchor = imageStyle.getAnchor();\n    const imageOrigin = imageStyle.getOrigin();\n    this.image_ = imageStyle.getImage(this.pixelRatio_);\n    this.imageAnchorX_ = imageAnchor[0] * imagePixelRatio;\n    this.imageAnchorY_ = imageAnchor[1] * imagePixelRatio;\n    this.imageHeight_ = imageSize[1] * imagePixelRatio;\n    this.imageOpacity_ = imageStyle.getOpacity();\n    this.imageOriginX_ = imageOrigin[0];\n    this.imageOriginY_ = imageOrigin[1];\n    this.imageRotateWithView_ = imageStyle.getRotateWithView();\n    this.imageRotation_ = imageStyle.getRotation();\n    const imageScale = imageStyle.getScaleArray();\n    this.imageScale_ = [\n      (imageScale[0] * this.pixelRatio_) / imagePixelRatio,\n      (imageScale[1] * this.pixelRatio_) / imagePixelRatio,\n    ];\n    this.imageWidth_ = imageSize[0] * imagePixelRatio;\n  }\n\n  /**\n   * Set the text style for subsequent draw operations.  Pass null to\n   * remove the text style.\n   *\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   */\n  setTextStyle(textStyle) {\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        this.textFillState_ = null;\n      } else {\n        const textFillStyleColor = textFillStyle.getColor();\n        this.textFillState_ = {\n          fillStyle: asColorLike(\n            textFillStyleColor ? textFillStyleColor : defaultFillStyle,\n          ),\n        };\n      }\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        this.textStrokeState_ = null;\n      } else {\n        const textStrokeStyleColor = textStrokeStyle.getColor();\n        const textStrokeStyleLineCap = textStrokeStyle.getLineCap();\n        const textStrokeStyleLineDash = textStrokeStyle.getLineDash();\n        const textStrokeStyleLineDashOffset =\n          textStrokeStyle.getLineDashOffset();\n        const textStrokeStyleLineJoin = textStrokeStyle.getLineJoin();\n        const textStrokeStyleWidth = textStrokeStyle.getWidth();\n        const textStrokeStyleMiterLimit = textStrokeStyle.getMiterLimit();\n        this.textStrokeState_ = {\n          lineCap:\n            textStrokeStyleLineCap !== undefined\n              ? textStrokeStyleLineCap\n              : defaultLineCap,\n          lineDash: textStrokeStyleLineDash\n            ? textStrokeStyleLineDash\n            : defaultLineDash,\n          lineDashOffset: textStrokeStyleLineDashOffset\n            ? textStrokeStyleLineDashOffset\n            : defaultLineDashOffset,\n          lineJoin:\n            textStrokeStyleLineJoin !== undefined\n              ? textStrokeStyleLineJoin\n              : defaultLineJoin,\n          lineWidth:\n            textStrokeStyleWidth !== undefined\n              ? textStrokeStyleWidth\n              : defaultLineWidth,\n          miterLimit:\n            textStrokeStyleMiterLimit !== undefined\n              ? textStrokeStyleMiterLimit\n              : defaultMiterLimit,\n          strokeStyle: asColorLike(\n            textStrokeStyleColor ? textStrokeStyleColor : defaultStrokeStyle,\n          ),\n        };\n      }\n      const textFont = textStyle.getFont();\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      const textScale = textStyle.getScaleArray();\n      const textText = textStyle.getText();\n      const textTextAlign = textStyle.getTextAlign();\n      const textTextBaseline = textStyle.getTextBaseline();\n      this.textState_ = {\n        font: textFont !== undefined ? textFont : defaultFont,\n        textAlign:\n          textTextAlign !== undefined ? textTextAlign : defaultTextAlign,\n        textBaseline:\n          textTextBaseline !== undefined\n            ? textTextBaseline\n            : defaultTextBaseline,\n      };\n      this.text_ =\n        textText !== undefined\n          ? Array.isArray(textText)\n            ? textText.reduce((acc, t, i) => (acc += i % 2 ? ' ' : t), '')\n            : textText\n          : '';\n      this.textOffsetX_ =\n        textOffsetX !== undefined ? this.pixelRatio_ * textOffsetX : 0;\n      this.textOffsetY_ =\n        textOffsetY !== undefined ? this.pixelRatio_ * textOffsetY : 0;\n      this.textRotateWithView_ =\n        textRotateWithView !== undefined ? textRotateWithView : false;\n      this.textRotation_ = textRotation !== undefined ? textRotation : 0;\n      this.textScale_ = [\n        this.pixelRatio_ * textScale[0],\n        this.pixelRatio_ * textScale[1],\n      ];\n    }\n  }\n}\n\nexport default CanvasImmediateRenderer;\n","/**\n * @module ol/style\n */\n\nexport {default as Circle} from './style/Circle.js';\nexport {default as Fill} from './style/Fill.js';\nexport {default as Icon} from './style/Icon.js';\nexport {default as IconImage} from './style/IconImage.js';\nexport {default as Image} from './style/Image.js';\nexport {default as RegularShape} from './style/RegularShape.js';\nexport {default as Stroke} from './style/Stroke.js';\nexport {default as Style} from './style/Style.js';\nexport {default as Text} from './style/Text.js';\n","/**\n * @module ol/render/canvas/hitdetect\n */\n\nimport CanvasImmediateRenderer from './Immediate.js';\nimport {Icon} from '../../style.js';\nimport {ascending} from '../../array.js';\nimport {clamp} from '../../math.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {\n  getTransformFromProjections,\n  getUserProjection,\n  toUserExtent,\n} from '../../proj.js';\nimport {intersects} from '../../extent.js';\n\nexport const HIT_DETECT_RESOLUTION = 0.5;\n\n/**\n * @param {import(\"../../size.js\").Size} size Canvas size in css pixels.\n * @param {Array<import(\"../../transform.js\").Transform>} transforms Transforms\n * for rendering features to all worlds of the viewport, from coordinates to css\n * pixels.\n * @param {Array<import(\"../../Feature.js\").FeatureLike>} features\n * Features to consider for hit detection.\n * @param {import(\"../../style/Style.js\").StyleFunction|undefined} styleFunction\n * Layer style function.\n * @param {import(\"../../extent.js\").Extent} extent Extent in render projection.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {number} [squaredTolerance] Squared tolerance.\n * @param {import(\"../../proj/Projection.js\").default} [projection] Render projection.\n * @return {ImageData} Hit detection image data.\n */\nexport function createHitDetectionImageData(\n  size,\n  transforms,\n  features,\n  styleFunction,\n  extent,\n  resolution,\n  rotation,\n  squaredTolerance,\n  projection,\n) {\n  const userExtent = projection ? toUserExtent(extent, projection) : extent;\n  const width = size[0] * HIT_DETECT_RESOLUTION;\n  const height = size[1] * HIT_DETECT_RESOLUTION;\n  const context = createCanvasContext2D(width, height);\n  context.imageSmoothingEnabled = false;\n  const canvas = context.canvas;\n  const renderer = new CanvasImmediateRenderer(\n    context,\n    HIT_DETECT_RESOLUTION,\n    extent,\n    null,\n    rotation,\n    squaredTolerance,\n    projection\n      ? getTransformFromProjections(getUserProjection(), projection)\n      : null,\n  );\n  const featureCount = features.length;\n  // Stretch hit detection index to use the whole available color range\n  const indexFactor = Math.floor((256 * 256 * 256 - 1) / featureCount);\n  const featuresByZIndex = {};\n  for (let i = 1; i <= featureCount; ++i) {\n    const feature = features[i - 1];\n    const featureStyleFunction = feature.getStyleFunction() || styleFunction;\n    if (!featureStyleFunction) {\n      continue;\n    }\n    let styles = featureStyleFunction(feature, resolution);\n    if (!styles) {\n      continue;\n    }\n    if (!Array.isArray(styles)) {\n      styles = [styles];\n    }\n    const index = i * indexFactor;\n    const color = index.toString(16).padStart(7, '#00000');\n    for (let j = 0, jj = styles.length; j < jj; ++j) {\n      const originalStyle = styles[j];\n      const geometry = originalStyle.getGeometryFunction()(feature);\n      if (!geometry || !intersects(userExtent, geometry.getExtent())) {\n        continue;\n      }\n      const style = originalStyle.clone();\n      const fill = style.getFill();\n      if (fill) {\n        fill.setColor(color);\n      }\n      const stroke = style.getStroke();\n      if (stroke) {\n        stroke.setColor(color);\n        stroke.setLineDash(null);\n      }\n      style.setText(undefined);\n      const image = originalStyle.getImage();\n      if (image) {\n        const imgSize = image.getImageSize();\n        if (!imgSize) {\n          continue;\n        }\n\n        const imgContext = createCanvasContext2D(\n          imgSize[0],\n          imgSize[1],\n          undefined,\n          {alpha: false},\n        );\n        const img = imgContext.canvas;\n        imgContext.fillStyle = color;\n        imgContext.fillRect(0, 0, img.width, img.height);\n        style.setImage(\n          new Icon({\n            img: img,\n            anchor: image.getAnchor(),\n            anchorXUnits: 'pixels',\n            anchorYUnits: 'pixels',\n            offset: image.getOrigin(),\n            opacity: 1,\n            size: image.getSize(),\n            scale: image.getScale(),\n            rotation: image.getRotation(),\n            rotateWithView: image.getRotateWithView(),\n          }),\n        );\n      }\n      const zIndex = style.getZIndex() || 0;\n      let byGeometryType = featuresByZIndex[zIndex];\n      if (!byGeometryType) {\n        byGeometryType = {};\n        featuresByZIndex[zIndex] = byGeometryType;\n        byGeometryType['Polygon'] = [];\n        byGeometryType['Circle'] = [];\n        byGeometryType['LineString'] = [];\n        byGeometryType['Point'] = [];\n      }\n      const type = geometry.getType();\n      if (type === 'GeometryCollection') {\n        const geometries =\n          /** @type {import(\"../../geom/GeometryCollection.js\").default} */ (\n            geometry\n          ).getGeometriesArrayRecursive();\n        for (let i = 0, ii = geometries.length; i < ii; ++i) {\n          const geometry = geometries[i];\n          byGeometryType[geometry.getType().replace('Multi', '')].push(\n            geometry,\n            style,\n          );\n        }\n      } else {\n        byGeometryType[type.replace('Multi', '')].push(geometry, style);\n      }\n    }\n  }\n\n  const zIndexKeys = Object.keys(featuresByZIndex).map(Number).sort(ascending);\n  for (let i = 0, ii = zIndexKeys.length; i < ii; ++i) {\n    const byGeometryType = featuresByZIndex[zIndexKeys[i]];\n    for (const type in byGeometryType) {\n      const geomAndStyle = byGeometryType[type];\n      for (let j = 0, jj = geomAndStyle.length; j < jj; j += 2) {\n        renderer.setStyle(geomAndStyle[j + 1]);\n        for (let k = 0, kk = transforms.length; k < kk; ++k) {\n          renderer.setTransform(transforms[k]);\n          renderer.drawGeometry(geomAndStyle[j]);\n        }\n      }\n    }\n  }\n  return context.getImageData(0, 0, canvas.width, canvas.height);\n}\n\n/**\n * @param {import(\"../../pixel\").Pixel} pixel Pixel coordinate on the hit\n * detection canvas in css pixels.\n * @param {Array<F>} features Features. Has to\n * match the `features` array that was passed to `createHitDetectionImageData()`.\n * @param {ImageData} imageData Hit detection image data generated by\n * `createHitDetectionImageData()`.\n * @return {Array<F>} Features.\n * @template {import(\"../../Feature.js\").FeatureLike} F\n */\nexport function hitDetect(pixel, features, imageData) {\n  /** @type {Array<F>} */\n  const resultFeatures = [];\n  if (imageData) {\n    const x = Math.floor(Math.round(pixel[0]) * HIT_DETECT_RESOLUTION);\n    const y = Math.floor(Math.round(pixel[1]) * HIT_DETECT_RESOLUTION);\n    // The pixel coordinate is clamped down to the hit-detect canvas' size to account\n    // for browsers returning coordinates slightly larger than the actual canvas size\n    // due to a non-integer pixel ratio.\n    const index =\n      (clamp(x, 0, imageData.width - 1) +\n        clamp(y, 0, imageData.height - 1) * imageData.width) *\n      4;\n    const r = imageData.data[index];\n    const g = imageData.data[index + 1];\n    const b = imageData.data[index + 2];\n    const i = b + 256 * (g + 256 * r);\n    const indexFactor = Math.floor((256 * 256 * 256 - 1) / features.length);\n    if (i && i % indexFactor === 0) {\n      resultFeatures.push(features[i / indexFactor - 1]);\n    }\n  }\n  return resultFeatures;\n}\n","/**\n * @module ol/renderer/vector\n */\nimport ImageState from '../ImageState.js';\nimport {getUid} from '../util.js';\n\n/**\n * Feature callback. The callback will be called with three arguments. The first\n * argument is one {@link module:ol/Feature~Feature feature} or {@link module:ol/render/Feature~RenderFeature render feature}\n * at the pixel, the second is the {@link module:ol/layer/Layer~Layer layer} of the feature and will be null for\n * unmanaged layers. The third is the {@link module:ol/geom/SimpleGeometry~SimpleGeometry} of the feature. For features\n * with a GeometryCollection geometry, it will be the first detected geometry from the collection.\n * @template T\n * @typedef {function(import(\"../Feature.js\").FeatureLike, import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>, import(\"../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n\n/**\n * Tolerance for geometry simplification in device pixels.\n * @type {number}\n */\nconst SIMPLIFY_TOLERANCE = 0.5;\n\n/**\n * @const\n * @type {Object<import(\"../geom/Geometry.js\").Type,\n *                function(import(\"../render/canvas/BuilderGroup.js\").default, import(\"../geom/Geometry.js\").default,\n *                         import(\"../style/Style.js\").default, Object): void>}\n */\nconst GEOMETRY_RENDERERS = {\n  'Point': renderPointGeometry,\n  'LineString': renderLineStringGeometry,\n  'Polygon': renderPolygonGeometry,\n  'MultiPoint': renderMultiPointGeometry,\n  'MultiLineString': renderMultiLineStringGeometry,\n  'MultiPolygon': renderMultiPolygonGeometry,\n  'GeometryCollection': renderGeometryCollectionGeometry,\n  'Circle': renderCircleGeometry,\n};\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature1 Feature 1.\n * @param {import(\"../Feature.js\").FeatureLike} feature2 Feature 2.\n * @return {number} Order.\n */\nexport function defaultOrder(feature1, feature2) {\n  return parseInt(getUid(feature1), 10) - parseInt(getUid(feature2), 10);\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Squared pixel tolerance.\n */\nexport function getSquaredTolerance(resolution, pixelRatio) {\n  const tolerance = getTolerance(resolution, pixelRatio);\n  return tolerance * tolerance;\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Pixel tolerance.\n */\nexport function getTolerance(resolution, pixelRatio) {\n  return (SIMPLIFY_TOLERANCE * resolution) / pixelRatio;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {number} [index] Render order index.\n */\nfunction renderCircleGeometry(builderGroup, geometry, style, feature, index) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const circleReplay = builderGroup.getBuilder(style.getZIndex(), 'Circle');\n    circleReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    circleReplay.drawCircle(geometry, feature, index);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n * @param {import(\"../proj.js\").TransformFunction} [transform] Transform from user to view projection.\n * @param {boolean} [declutter] Enable decluttering.\n * @param {number} [index] Render order index..\n * @return {boolean} `true` if style is loading.\n */\nexport function renderFeature(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  listener,\n  transform,\n  declutter,\n  index,\n) {\n  const loadingPromises = [];\n  const imageStyle = style.getImage();\n  if (imageStyle) {\n    let loading = true;\n    const imageState = imageStyle.getImageState();\n    if (imageState == ImageState.LOADED || imageState == ImageState.ERROR) {\n      loading = false;\n    } else {\n      if (imageState == ImageState.IDLE) {\n        imageStyle.load();\n      }\n    }\n    if (loading) {\n      loadingPromises.push(imageStyle.ready());\n    }\n  }\n  const fillStyle = style.getFill();\n  if (fillStyle && fillStyle.loading()) {\n    loadingPromises.push(fillStyle.ready());\n  }\n  const loading = loadingPromises.length > 0;\n  if (loading) {\n    Promise.all(loadingPromises).then(() => listener(null));\n  }\n  renderFeatureInternal(\n    replayGroup,\n    feature,\n    style,\n    squaredTolerance,\n    transform,\n    declutter,\n    index,\n  );\n\n  return loading;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n * @param {boolean} [declutter] Enable decluttering.\n * @param {number} [index] Render order index..\n */\nfunction renderFeatureInternal(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  transform,\n  declutter,\n  index,\n) {\n  const geometry = style.getGeometryFunction()(feature);\n  if (!geometry) {\n    return;\n  }\n  const simplifiedGeometry = geometry.simplifyTransformed(\n    squaredTolerance,\n    transform,\n  );\n  const renderer = style.getRenderer();\n  if (renderer) {\n    renderGeometry(replayGroup, simplifiedGeometry, style, feature, index);\n  } else {\n    const geometryRenderer = GEOMETRY_RENDERERS[simplifiedGeometry.getType()];\n    geometryRenderer(\n      replayGroup,\n      simplifiedGeometry,\n      style,\n      feature,\n      index,\n      declutter,\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} [index] Render order index.\n */\nfunction renderGeometry(replayGroup, geometry, style, feature, index) {\n  if (geometry.getType() == 'GeometryCollection') {\n    const geometries =\n      /** @type {import(\"../geom/GeometryCollection.js\").default} */ (\n        geometry\n      ).getGeometries();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      renderGeometry(replayGroup, geometries[i], style, feature, index);\n    }\n    return;\n  }\n  const replay = replayGroup.getBuilder(style.getZIndex(), 'Default');\n  replay.drawCustom(\n    /** @type {import(\"../geom/SimpleGeometry.js\").default} */ (geometry),\n    feature,\n    style.getRenderer(),\n    style.getHitDetectionRenderer(),\n    index,\n  );\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n * @param {number} [index] Render order index.\n */\nfunction renderGeometryCollectionGeometry(\n  replayGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup,\n  index,\n) {\n  const geometries = geometry.getGeometriesArray();\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    const geometryRenderer = GEOMETRY_RENDERERS[geometries[i].getType()];\n    geometryRenderer(\n      replayGroup,\n      geometries[i],\n      style,\n      feature,\n      declutterBuilderGroup,\n      index,\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/LineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} [index] Render order index.\n */\nfunction renderLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  index,\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      'LineString',\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawLineString(geometry, feature, index);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature, index);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiLineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} [index] Render order index.\n */\nfunction renderMultiLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  index,\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      'LineString',\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawMultiLineString(geometry, feature, index);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature, index);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {number} [index] Render order index.\n */\nfunction renderMultiPolygonGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  index,\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (strokeStyle || fillStyle) {\n    const polygonReplay = builderGroup.getBuilder(style.getZIndex(), 'Polygon');\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawMultiPolygon(geometry, feature, index);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature, index);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Point.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} [index] Render order index.\n * @param {boolean} [declutter] Enable decluttering.\n */\nfunction renderPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  index,\n  declutter,\n) {\n  const imageStyle = style.getImage();\n  const textStyle = style.getText();\n  const hasText = textStyle && textStyle.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  const declutterImageWithText =\n    declutter && imageStyle && hasText ? {} : undefined;\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    const imageReplay = builderGroup.getBuilder(style.getZIndex(), 'Image');\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawPoint(geometry, feature, index);\n  }\n  if (hasText) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature, index);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPoint.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} [index] Render order index.\n * @param {boolean} [declutter] Enable decluttering.\n */\nfunction renderMultiPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  index,\n  declutter,\n) {\n  const imageStyle = style.getImage();\n  const hasImage = imageStyle && imageStyle.getOpacity() !== 0;\n  const textStyle = style.getText();\n  const hasText = textStyle && textStyle.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  const declutterImageWithText =\n    declutter && hasImage && hasText ? {} : undefined;\n  if (hasImage) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    const imageReplay = builderGroup.getBuilder(style.getZIndex(), 'Image');\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawMultiPoint(geometry, feature, index);\n  }\n  if (hasText) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature, index);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Polygon.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} [index] Render order index.\n */\nfunction renderPolygonGeometry(builderGroup, geometry, style, feature, index) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const polygonReplay = builderGroup.getBuilder(style.getZIndex(), 'Polygon');\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawPolygon(geometry, feature, index);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature, index);\n  }\n}\n","/**\n * @module ol/renderer/canvas/VectorLayer\n */\nimport CanvasBuilderGroup from '../../render/canvas/BuilderGroup.js';\nimport CanvasLayerRenderer, {canvasPool} from './Layer.js';\nimport ExecutorGroup, {\n  ALL,\n  DECLUTTER,\n  NON_DECLUTTER,\n} from '../../render/canvas/ExecutorGroup.js';\nimport RenderEventType from '../../render/EventType.js';\nimport ViewHint from '../../ViewHint.js';\nimport {\n  HIT_DETECT_RESOLUTION,\n  createHitDetectionImageData,\n  hitDetect,\n} from '../../render/canvas/hitdetect.js';\nimport {\n  buffer,\n  containsExtent,\n  createEmpty,\n  getHeight,\n  getWidth,\n  intersects as intersectsExtent,\n  wrapX as wrapExtentX,\n} from '../../extent.js';\nimport {createCanvasContext2D, releaseCanvas} from '../../dom.js';\nimport {\n  defaultOrder as defaultRenderOrder,\n  getTolerance as getRenderTolerance,\n  getSquaredTolerance as getSquaredRenderTolerance,\n  renderFeature,\n} from '../vector.js';\nimport {equals} from '../../array.js';\nimport {\n  fromUserExtent,\n  getTransformFromProjections,\n  getUserProjection,\n  toUserExtent,\n  toUserResolution,\n} from '../../proj.js';\nimport {getUid} from '../../util.js';\nimport {wrapX as wrapCoordinateX} from '../../coordinate.js';\n\n/**\n * @classdesc\n * Canvas renderer for vector layers.\n * @api\n */\nclass CanvasVectorLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {import(\"../../layer/BaseVector.js\").default} vectorLayer Vector layer.\n   */\n  constructor(vectorLayer) {\n    super(vectorLayer);\n\n    /** @private */\n    this.boundHandleStyleImageChange_ = this.handleStyleImageChange_.bind(this);\n\n    /**\n     * @type {boolean}\n     */\n    this.animatingOrInteracting_;\n\n    /**\n     * @type {ImageData|null}\n     */\n    this.hitDetectionImageData_ = null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.clipped_ = false;\n\n    /**\n     * @private\n     * @type {Array<import(\"../../Feature.js\").default>}\n     */\n    this.renderedFeatures_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedResolution_ = NaN;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.wrappedRenderedExtent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRotation_;\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate\").Coordinate}\n     */\n    this.renderedCenter_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../proj/Projection\").default}\n     */\n    this.renderedProjection_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedPixelRatio_ = 1;\n\n    /**\n     * @private\n     * @type {function(import(\"../../Feature.js\").default, import(\"../../Feature.js\").default): number|null}\n     */\n    this.renderedRenderOrder_ = null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedFrameDeclutter_;\n\n    /**\n     * @private\n     * @type {import(\"../../render/canvas/ExecutorGroup\").default}\n     */\n    this.replayGroup_ = null;\n\n    /**\n     * A new replay group had to be created by `prepareFrame()`\n     * @type {boolean}\n     */\n    this.replayGroupChanged = true;\n\n    /**\n     * Clipping to be performed by `renderFrame()`\n     * @type {boolean}\n     */\n    this.clipping = true;\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.targetContext_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.opacity_ = 1;\n  }\n\n  /**\n   * @param {ExecutorGroup} executorGroup Executor group.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {boolean} [declutterable] `true` to only render declutterable items,\n   *     `false` to only render non-declutterable items, `undefined` to render all.\n   */\n  renderWorlds(executorGroup, frameState, declutterable) {\n    const extent = frameState.extent;\n    const viewState = frameState.viewState;\n    const center = viewState.center;\n    const resolution = viewState.resolution;\n    const projection = viewState.projection;\n    const rotation = viewState.rotation;\n    const projectionExtent = projection.getExtent();\n    const vectorSource = this.getLayer().getSource();\n    const declutter = this.getLayer().getDeclutter();\n    const pixelRatio = frameState.pixelRatio;\n    const viewHints = frameState.viewHints;\n    const snapToPixel = !(\n      viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]\n    );\n    const context = this.context;\n    const width = Math.round((getWidth(extent) / resolution) * pixelRatio);\n    const height = Math.round((getHeight(extent) / resolution) * pixelRatio);\n\n    const multiWorld = vectorSource.getWrapX() && projection.canWrapX();\n    const worldWidth = multiWorld ? getWidth(projectionExtent) : null;\n    const endWorld = multiWorld\n      ? Math.ceil((extent[2] - projectionExtent[2]) / worldWidth) + 1\n      : 1;\n    let world = multiWorld\n      ? Math.floor((extent[0] - projectionExtent[0]) / worldWidth)\n      : 0;\n    do {\n      let transform = this.getRenderTransform(\n        center,\n        resolution,\n        0,\n        pixelRatio,\n        width,\n        height,\n        world * worldWidth,\n      );\n      if (frameState.declutter) {\n        transform = transform.slice(0);\n      }\n      executorGroup.execute(\n        context,\n        [context.canvas.width, context.canvas.height],\n        transform,\n        rotation,\n        snapToPixel,\n        declutterable === undefined\n          ? ALL\n          : declutterable\n            ? DECLUTTER\n            : NON_DECLUTTER,\n        declutterable\n          ? declutter && frameState.declutter[declutter]\n          : undefined,\n      );\n    } while (++world < endWorld);\n  }\n\n  /**\n   * @private\n   */\n  setDrawContext_() {\n    if (this.opacity_ !== 1) {\n      this.targetContext_ = this.context;\n      this.context = createCanvasContext2D(\n        this.context.canvas.width,\n        this.context.canvas.height,\n        canvasPool,\n      );\n    }\n  }\n\n  /**\n   * @private\n   */\n  resetDrawContext_() {\n    if (this.opacity_ !== 1) {\n      const alpha = this.targetContext_.globalAlpha;\n      this.targetContext_.globalAlpha = this.opacity_;\n      this.targetContext_.drawImage(this.context.canvas, 0, 0);\n      this.targetContext_.globalAlpha = alpha;\n      releaseCanvas(this.context);\n      canvasPool.push(this.context.canvas);\n      this.context = this.targetContext_;\n      this.targetContext_ = null;\n    }\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   */\n  renderDeclutter(frameState) {\n    if (!this.replayGroup_ || !this.getLayer().getDeclutter()) {\n      return;\n    }\n    this.renderWorlds(this.replayGroup_, frameState, true);\n  }\n\n  /**\n   * Render deferred instructions.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   */\n  renderDeferredInternal(frameState) {\n    if (!this.replayGroup_) {\n      return;\n    }\n    this.replayGroup_.renderDeferred();\n    if (this.clipped_) {\n      this.context.restore();\n    }\n    this.resetDrawContext_();\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement|null} target Target that may be used to render content to.\n   * @return {HTMLElement|null} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    this.opacity_ = layerState.opacity;\n    const viewState = frameState.viewState;\n\n    this.prepareContainer(frameState, target);\n    const context = this.context;\n\n    const replayGroup = this.replayGroup_;\n    let render = replayGroup && !replayGroup.isEmpty();\n    if (!render) {\n      const hasRenderListeners =\n        this.getLayer().hasListener(RenderEventType.PRERENDER) ||\n        this.getLayer().hasListener(RenderEventType.POSTRENDER);\n      if (!hasRenderListeners) {\n        return null;\n      }\n    }\n\n    this.setDrawContext_();\n\n    this.preRender(context, frameState);\n\n    const projection = viewState.projection;\n\n    // clipped rendering if layer extent is set\n    this.clipped_ = false;\n    if (render && layerState.extent && this.clipping) {\n      const layerExtent = fromUserExtent(layerState.extent, projection);\n      render = intersectsExtent(layerExtent, frameState.extent);\n      this.clipped_ = render && !containsExtent(layerExtent, frameState.extent);\n      if (this.clipped_) {\n        this.clipUnrotated(context, frameState, layerExtent);\n      }\n    }\n\n    if (render) {\n      this.renderWorlds(\n        replayGroup,\n        frameState,\n        this.getLayer().getDeclutter() ? false : undefined,\n      );\n    }\n\n    if (!frameState.declutter && this.clipped_) {\n      context.restore();\n    }\n\n    this.postRender(context, frameState);\n\n    if (this.renderedRotation_ !== viewState.rotation) {\n      this.renderedRotation_ = viewState.rotation;\n      this.hitDetectionImageData_ = null;\n    }\n    if (!frameState.declutter) {\n      this.resetDrawContext_();\n    }\n    return this.container;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../../Feature\").default>>} Promise\n   * that resolves with an array of features.\n   */\n  getFeatures(pixel) {\n    return new Promise((resolve) => {\n      if (\n        this.frameState &&\n        !this.hitDetectionImageData_ &&\n        !this.animatingOrInteracting_\n      ) {\n        const size = this.frameState.size.slice();\n        const center = this.renderedCenter_;\n        const resolution = this.renderedResolution_;\n        const rotation = this.renderedRotation_;\n        const projection = this.renderedProjection_;\n        const extent = this.wrappedRenderedExtent_;\n        const layer = this.getLayer();\n        const transforms = [];\n        const width = size[0] * HIT_DETECT_RESOLUTION;\n        const height = size[1] * HIT_DETECT_RESOLUTION;\n        transforms.push(\n          this.getRenderTransform(\n            center,\n            resolution,\n            rotation,\n            HIT_DETECT_RESOLUTION,\n            width,\n            height,\n            0,\n          ).slice(),\n        );\n        const source = layer.getSource();\n        const projectionExtent = projection.getExtent();\n        if (\n          source.getWrapX() &&\n          projection.canWrapX() &&\n          !containsExtent(projectionExtent, extent)\n        ) {\n          let startX = extent[0];\n          const worldWidth = getWidth(projectionExtent);\n          let world = 0;\n          let offsetX;\n          while (startX < projectionExtent[0]) {\n            --world;\n            offsetX = worldWidth * world;\n            transforms.push(\n              this.getRenderTransform(\n                center,\n                resolution,\n                rotation,\n                HIT_DETECT_RESOLUTION,\n                width,\n                height,\n                offsetX,\n              ).slice(),\n            );\n            startX += worldWidth;\n          }\n          world = 0;\n          startX = extent[2];\n          while (startX > projectionExtent[2]) {\n            ++world;\n            offsetX = worldWidth * world;\n            transforms.push(\n              this.getRenderTransform(\n                center,\n                resolution,\n                rotation,\n                HIT_DETECT_RESOLUTION,\n                width,\n                height,\n                offsetX,\n              ).slice(),\n            );\n            startX -= worldWidth;\n          }\n        }\n        const userProjection = getUserProjection();\n        this.hitDetectionImageData_ = createHitDetectionImageData(\n          size,\n          transforms,\n          this.renderedFeatures_,\n          layer.getStyleFunction(),\n          extent,\n          resolution,\n          rotation,\n          getSquaredRenderTolerance(resolution, this.renderedPixelRatio_),\n          userProjection ? projection : null,\n        );\n      }\n      resolve(\n        hitDetect(pixel, this.renderedFeatures_, this.hitDetectionImageData_),\n      );\n    });\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"../vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"../Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches,\n  ) {\n    if (!this.replayGroup_) {\n      return undefined;\n    }\n    const resolution = frameState.viewState.resolution;\n    const rotation = frameState.viewState.rotation;\n    const layer = this.getLayer();\n\n    /** @type {!Object<string, import(\"../Map.js\").HitMatch<T>|true>} */\n    const features = {};\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @param {number} distanceSq The squared distance to the click position\n     * @return {T|undefined} Callback result.\n     */\n    const featureCallback = function (feature, geometry, distanceSq) {\n      const key = getUid(feature);\n      const match = features[key];\n      if (!match) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          return callback(feature, layer, geometry);\n        }\n        matches.push(\n          (features[key] = {\n            feature: feature,\n            layer: layer,\n            geometry: geometry,\n            distanceSq: distanceSq,\n            callback: callback,\n          }),\n        );\n      } else if (match !== true && distanceSq < match.distanceSq) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          matches.splice(matches.lastIndexOf(match), 1);\n          return callback(feature, layer, geometry);\n        }\n        match.geometry = geometry;\n        match.distanceSq = distanceSq;\n      }\n      return undefined;\n    };\n\n    let result;\n    const executorGroups = [this.replayGroup_];\n    const declutter = this.getLayer().getDeclutter();\n    executorGroups.some((executorGroup) => {\n      return (result = executorGroup.forEachFeatureAtCoordinate(\n        coordinate,\n        resolution,\n        rotation,\n        hitTolerance,\n        featureCallback,\n        declutter && frameState.declutter[declutter]\n          ? frameState.declutter[declutter].all().map((item) => item.value)\n          : null,\n      ));\n    });\n\n    return result;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   */\n  handleFontsChanged() {\n    const layer = this.getLayer();\n    if (layer.getVisible() && this.replayGroup_) {\n      layer.changed();\n    }\n  }\n\n  /**\n   * Handle changes in image style state.\n   * @param {import(\"../../events/Event.js\").default} event Image style change event.\n   * @private\n   */\n  handleStyleImageChange_(event) {\n    this.renderIfReadyAndVisible();\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    const vectorLayer = this.getLayer();\n    const vectorSource = vectorLayer.getSource();\n    if (!vectorSource) {\n      return false;\n    }\n\n    const animating = frameState.viewHints[ViewHint.ANIMATING];\n    const interacting = frameState.viewHints[ViewHint.INTERACTING];\n    const updateWhileAnimating = vectorLayer.getUpdateWhileAnimating();\n    const updateWhileInteracting = vectorLayer.getUpdateWhileInteracting();\n\n    if (\n      (this.ready && !updateWhileAnimating && animating) ||\n      (!updateWhileInteracting && interacting)\n    ) {\n      this.animatingOrInteracting_ = true;\n      return true;\n    }\n    this.animatingOrInteracting_ = false;\n\n    const frameStateExtent = frameState.extent;\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const resolution = viewState.resolution;\n    const pixelRatio = frameState.pixelRatio;\n    const vectorLayerRevision = vectorLayer.getRevision();\n    const vectorLayerRenderBuffer = vectorLayer.getRenderBuffer();\n    let vectorLayerRenderOrder = vectorLayer.getRenderOrder();\n\n    if (vectorLayerRenderOrder === undefined) {\n      vectorLayerRenderOrder = defaultRenderOrder;\n    }\n\n    const center = viewState.center.slice();\n    const extent = buffer(\n      frameStateExtent,\n      vectorLayerRenderBuffer * resolution,\n    );\n    const renderedExtent = extent.slice();\n    const loadExtents = [extent.slice()];\n    const projectionExtent = projection.getExtent();\n\n    if (\n      vectorSource.getWrapX() &&\n      projection.canWrapX() &&\n      !containsExtent(projectionExtent, frameState.extent)\n    ) {\n      // For the replay group, we need an extent that intersects the real world\n      // (-180° to +180°). To support geometries in a coordinate range from -540°\n      // to +540°, we add at least 1 world width on each side of the projection\n      // extent. If the viewport is wider than the world, we need to add half of\n      // the viewport width to make sure we cover the whole viewport.\n      const worldWidth = getWidth(projectionExtent);\n      const gutter = Math.max(getWidth(extent) / 2, worldWidth);\n      extent[0] = projectionExtent[0] - gutter;\n      extent[2] = projectionExtent[2] + gutter;\n      wrapCoordinateX(center, projection);\n      const loadExtent = wrapExtentX(loadExtents[0], projection);\n      // If the extent crosses the date line, we load data for both edges of the worlds\n      if (\n        loadExtent[0] < projectionExtent[0] &&\n        loadExtent[2] < projectionExtent[2]\n      ) {\n        loadExtents.push([\n          loadExtent[0] + worldWidth,\n          loadExtent[1],\n          loadExtent[2] + worldWidth,\n          loadExtent[3],\n        ]);\n      } else if (\n        loadExtent[0] > projectionExtent[0] &&\n        loadExtent[2] > projectionExtent[2]\n      ) {\n        loadExtents.push([\n          loadExtent[0] - worldWidth,\n          loadExtent[1],\n          loadExtent[2] - worldWidth,\n          loadExtent[3],\n        ]);\n      }\n    }\n\n    if (\n      this.ready &&\n      this.renderedResolution_ == resolution &&\n      this.renderedRevision_ == vectorLayerRevision &&\n      this.renderedRenderOrder_ == vectorLayerRenderOrder &&\n      this.renderedFrameDeclutter_ === !!frameState.declutter &&\n      containsExtent(this.wrappedRenderedExtent_, extent)\n    ) {\n      if (!equals(this.renderedExtent_, renderedExtent)) {\n        this.hitDetectionImageData_ = null;\n        this.renderedExtent_ = renderedExtent;\n      }\n      this.renderedCenter_ = center;\n      this.replayGroupChanged = false;\n      return true;\n    }\n\n    this.replayGroup_ = null;\n\n    const replayGroup = new CanvasBuilderGroup(\n      getRenderTolerance(resolution, pixelRatio),\n      extent,\n      resolution,\n      pixelRatio,\n    );\n\n    const userProjection = getUserProjection();\n    let userTransform;\n    if (userProjection) {\n      for (let i = 0, ii = loadExtents.length; i < ii; ++i) {\n        const extent = loadExtents[i];\n        const userExtent = toUserExtent(extent, projection);\n        vectorSource.loadFeatures(\n          userExtent,\n          toUserResolution(resolution, projection),\n          userProjection,\n        );\n      }\n      userTransform = getTransformFromProjections(userProjection, projection);\n    } else {\n      for (let i = 0, ii = loadExtents.length; i < ii; ++i) {\n        vectorSource.loadFeatures(loadExtents[i], resolution, projection);\n      }\n    }\n\n    const squaredTolerance = getSquaredRenderTolerance(resolution, pixelRatio);\n    let ready = true;\n    const render =\n      /**\n       * @param {import(\"../../Feature.js\").default} feature Feature.\n       * @param {number} index Index.\n       */\n      (feature, index) => {\n        let styles;\n        const styleFunction =\n          feature.getStyleFunction() || vectorLayer.getStyleFunction();\n        if (styleFunction) {\n          styles = styleFunction(feature, resolution);\n        }\n        if (styles) {\n          const dirty = this.renderFeature(\n            feature,\n            squaredTolerance,\n            styles,\n            replayGroup,\n            userTransform,\n            this.getLayer().getDeclutter(),\n            index,\n          );\n          ready = ready && !dirty;\n        }\n      };\n\n    const userExtent = toUserExtent(extent, projection);\n    /** @type {Array<import(\"../../Feature.js\").default>} */\n    const features = vectorSource.getFeaturesInExtent(userExtent);\n    if (vectorLayerRenderOrder) {\n      features.sort(vectorLayerRenderOrder);\n    }\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      render(features[i], i);\n    }\n    this.renderedFeatures_ = features;\n    this.ready = ready;\n\n    const replayGroupInstructions = replayGroup.finish();\n    const executorGroup = new ExecutorGroup(\n      extent,\n      resolution,\n      pixelRatio,\n      vectorSource.getOverlaps(),\n      replayGroupInstructions,\n      vectorLayer.getRenderBuffer(),\n      !!frameState.declutter,\n    );\n\n    this.renderedResolution_ = resolution;\n    this.renderedRevision_ = vectorLayerRevision;\n    this.renderedRenderOrder_ = vectorLayerRenderOrder;\n    this.renderedFrameDeclutter_ = !!frameState.declutter;\n    this.renderedExtent_ = renderedExtent;\n    this.wrappedRenderedExtent_ = extent;\n    this.renderedCenter_ = center;\n    this.renderedProjection_ = projection;\n    this.renderedPixelRatio_ = pixelRatio;\n    this.replayGroup_ = executorGroup;\n    this.hitDetectionImageData_ = null;\n\n    this.replayGroupChanged = true;\n    return true;\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {number} squaredTolerance Squared render tolerance.\n   * @param {import(\"../../style/Style.js\").default|Array<import(\"../../style/Style.js\").default>} styles The style or array of styles.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n   * @param {import(\"../../proj.js\").TransformFunction} [transform] Transform from user to view projection.\n   * @param {boolean} [declutter] Enable decluttering.\n   * @param {number} [index] Render order index.\n   * @return {boolean} `true` if an image is loading.\n   */\n  renderFeature(\n    feature,\n    squaredTolerance,\n    styles,\n    builderGroup,\n    transform,\n    declutter,\n    index,\n  ) {\n    if (!styles) {\n      return false;\n    }\n    let loading = false;\n    if (Array.isArray(styles)) {\n      for (let i = 0, ii = styles.length; i < ii; ++i) {\n        loading =\n          renderFeature(\n            builderGroup,\n            feature,\n            styles[i],\n            squaredTolerance,\n            this.boundHandleStyleImageChange_,\n            transform,\n            declutter,\n            index,\n          ) || loading;\n      }\n    } else {\n      loading = renderFeature(\n        builderGroup,\n        feature,\n        styles,\n        squaredTolerance,\n        this.boundHandleStyleImageChange_,\n        transform,\n        declutter,\n        index,\n      );\n    }\n    return loading;\n  }\n}\n\nexport default CanvasVectorLayerRenderer;\n","/**\n * @module ol/layer/Vector\n */\nimport BaseVectorLayer from './BaseVector.js';\nimport CanvasVectorLayerRenderer from '../renderer/canvas/VectorLayer.js';\n\n/**\n * @template {import('../Feature.js').FeatureLike} FeatureType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the\n * renderer when getting features from the vector source for the rendering or hit-detection.\n * Recommended value: the size of the largest symbol, line width or label.\n * @property {import(\"../source/Vector.js\").default<FeatureType>} [source] Source.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * @property {boolean|string|number} [declutter=false] Declutter images and text. Any truthy value will enable\n * decluttering. Within a layer, a feature rendered before another has higher priority. All layers with the\n * same `declutter` value will be decluttered together. The priority is determined by the drawing order of the\n * layers with the same `declutter` value. Higher in the layer stack means higher priority. To declutter distinct\n * layers or groups of layers separately, use different truthy values for `declutter`.\n * @property {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style. When set to `null`, only\n * features that have their own style will be rendered. See {@link module:ol/style/Style~Style} for the default style\n * which will be used if this is not set.\n * @property {import(\"./Base.js\").BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will\n * be recreated during animations. This means that no vectors will be shown clipped, but the\n * setting will have a performance impact for large amounts of vector data. When set to `false`,\n * batches will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will\n * be recreated during interactions. See also `updateWhileAnimating`.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Vector data is rendered client-side, as vectors. This layer type provides most accurate rendering\n * even during animations. Points and labels stay upright on rotated views. For very large\n * amounts of vector data, performance may suffer during pan and zoom animations. In this case,\n * try {@link module:ol/layer/VectorImage~VectorImageLayer}.\n *\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import('../Feature.js').FeatureLike} FeatureType\n * @extends {BaseVectorLayer<import(\"../source/Vector.js\").default<FeatureType>, CanvasVectorLayerRenderer>}\n * @api\n */\nclass VectorLayer extends BaseVectorLayer {\n  /**\n   * @param {Options<FeatureType>} [options] Options.\n   */\n  constructor(options) {\n    super(options);\n  }\n\n  createRenderer() {\n    return new CanvasVectorLayerRenderer(this);\n  }\n}\n\nexport default VectorLayer;\n","/**\n * @module ol/structs/RBush\n */\nimport RBush_ from 'rbush';\nimport {createOrUpdate, equals} from '../extent.js';\nimport {getUid} from '../util.js';\nimport {isEmpty} from '../obj.js';\n\n/**\n * @typedef {Object} Entry\n * @property {number} minX MinX.\n * @property {number} minY MinY.\n * @property {number} maxX MaxX.\n * @property {number} maxY MaxY.\n * @property {Object} [value] Value.\n */\n\n/**\n * @classdesc\n * Wrapper around the RBush by Vladimir Agafonkin.\n * See https://github.com/mourner/rbush.\n *\n * @template T\n */\nclass RBush {\n  /**\n   * @param {number} [maxEntries] Max entries.\n   */\n  constructor(maxEntries) {\n    /**\n     * @private\n     */\n    this.rbush_ = new RBush_(maxEntries);\n\n    /**\n     * A mapping between the objects added to this rbush wrapper\n     * and the objects that are actually added to the internal rbush.\n     * @private\n     * @type {Object<string, Entry>}\n     */\n    this.items_ = {};\n  }\n\n  /**\n   * Insert a value into the RBush.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {T} value Value.\n   */\n  insert(extent, value) {\n    /** @type {Entry} */\n    const item = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n      value: value,\n    };\n\n    this.rbush_.insert(item);\n    this.items_[getUid(value)] = item;\n  }\n\n  /**\n   * Bulk-insert values into the RBush.\n   * @param {Array<import(\"../extent.js\").Extent>} extents Extents.\n   * @param {Array<T>} values Values.\n   */\n  load(extents, values) {\n    const items = new Array(values.length);\n    for (let i = 0, l = values.length; i < l; i++) {\n      const extent = extents[i];\n      const value = values[i];\n\n      /** @type {Entry} */\n      const item = {\n        minX: extent[0],\n        minY: extent[1],\n        maxX: extent[2],\n        maxY: extent[3],\n        value: value,\n      };\n      items[i] = item;\n      this.items_[getUid(value)] = item;\n    }\n    this.rbush_.load(items);\n  }\n\n  /**\n   * Remove a value from the RBush.\n   * @param {T} value Value.\n   * @return {boolean} Removed.\n   */\n  remove(value) {\n    const uid = getUid(value);\n\n    // get the object in which the value was wrapped when adding to the\n    // internal rbush. then use that object to do the removal.\n    const item = this.items_[uid];\n    delete this.items_[uid];\n    return this.rbush_.remove(item) !== null;\n  }\n\n  /**\n   * Update the extent of a value in the RBush.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {T} value Value.\n   */\n  update(extent, value) {\n    const item = this.items_[getUid(value)];\n    const bbox = [item.minX, item.minY, item.maxX, item.maxY];\n    if (!equals(bbox, extent)) {\n      this.remove(value);\n      this.insert(extent, value);\n    }\n  }\n\n  /**\n   * Return all values in the RBush.\n   * @return {Array<T>} All.\n   */\n  getAll() {\n    const items = this.rbush_.all();\n    return items.map(function (item) {\n      return item.value;\n    });\n  }\n\n  /**\n   * Return all values in the given extent.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {Array<T>} All in extent.\n   */\n  getInExtent(extent) {\n    /** @type {Entry} */\n    const bbox = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n    };\n    const items = this.rbush_.search(bbox);\n    return items.map(function (item) {\n      return item.value;\n    });\n  }\n\n  /**\n   * Calls a callback function with each value in the tree.\n   * If the callback returns a truthy value, this value is returned without\n   * checking the rest of the tree.\n   * @param {function(T): *} callback Callback.\n   * @return {*} Callback return value.\n   */\n  forEach(callback) {\n    return this.forEach_(this.getAll(), callback);\n  }\n\n  /**\n   * Calls a callback function with each value in the provided extent.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(T): *} callback Callback.\n   * @return {*} Callback return value.\n   */\n  forEachInExtent(extent, callback) {\n    return this.forEach_(this.getInExtent(extent), callback);\n  }\n\n  /**\n   * @param {Array<T>} values Values.\n   * @param {function(T): *} callback Callback.\n   * @private\n   * @return {*} Callback return value.\n   */\n  forEach_(values, callback) {\n    let result;\n    for (let i = 0, l = values.length; i < l; i++) {\n      result = callback(values[i]);\n      if (result) {\n        return result;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.items_);\n  }\n\n  /**\n   * Remove all values from the RBush.\n   */\n  clear() {\n    this.rbush_.clear();\n    this.items_ = {};\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} [extent] Extent.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   */\n  getExtent(extent) {\n    const data = this.rbush_.toJSON();\n    return createOrUpdate(data.minX, data.minY, data.maxX, data.maxY, extent);\n  }\n\n  /**\n   * @param {RBush} rbush R-Tree.\n   */\n  concat(rbush) {\n    this.rbush_.load(rbush.rbush_.all());\n    for (const i in rbush.items_) {\n      this.items_[i] = rbush.items_[i];\n    }\n  }\n}\n\nexport default RBush;\n","/**\n * @module ol/geom/Circle\n */\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {createOrUpdate, forEachCorner, intersects} from '../extent.js';\nimport {deflateCoordinate} from './flat/deflate.js';\nimport {rotate} from './flat/transform.js';\n\n/**\n * @classdesc\n * Circle geometry.\n *\n * @api\n */\nclass Circle extends SimpleGeometry {\n  /**\n   * @param {!import(\"../coordinate.js\").Coordinate} center Center.\n   *     For internal use, flat coordinates in combination with `layout` and no\n   *     `radius` are also accepted.\n   * @param {number} [radius] Radius in units of the projection.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(center, radius, layout) {\n    super();\n    if (layout !== undefined && radius === undefined) {\n      this.setFlatCoordinates(layout, center);\n    } else {\n      radius = radius ? radius : 0;\n      this.setCenterAndRadius(center, radius, layout);\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Circle} Clone.\n   * @api\n   */\n  clone() {\n    const circle = new Circle(\n      this.flatCoordinates.slice(),\n      undefined,\n      this.layout,\n    );\n    circle.applyProperties(this);\n    return circle;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    const flatCoordinates = this.flatCoordinates;\n    const dx = x - flatCoordinates[0];\n    const dy = y - flatCoordinates[1];\n    const squaredDistance = dx * dx + dy * dy;\n    if (squaredDistance < minSquaredDistance) {\n      if (squaredDistance === 0) {\n        for (let i = 0; i < this.stride; ++i) {\n          closestPoint[i] = flatCoordinates[i];\n        }\n      } else {\n        const delta = this.getRadius() / Math.sqrt(squaredDistance);\n        closestPoint[0] = flatCoordinates[0] + delta * dx;\n        closestPoint[1] = flatCoordinates[1] + delta * dy;\n        for (let i = 2; i < this.stride; ++i) {\n          closestPoint[i] = flatCoordinates[i];\n        }\n      }\n      closestPoint.length = this.stride;\n      return squaredDistance;\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    const flatCoordinates = this.flatCoordinates;\n    const dx = x - flatCoordinates[0];\n    const dy = y - flatCoordinates[1];\n    return dx * dx + dy * dy <= this.getRadiusSquared_();\n  }\n\n  /**\n   * Return the center of the circle as {@link module:ol/coordinate~Coordinate coordinate}.\n   * @return {import(\"../coordinate.js\").Coordinate} Center.\n   * @api\n   */\n  getCenter() {\n    return this.flatCoordinates.slice(0, this.stride);\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    const flatCoordinates = this.flatCoordinates;\n    const radius = flatCoordinates[this.stride] - flatCoordinates[0];\n    return createOrUpdate(\n      flatCoordinates[0] - radius,\n      flatCoordinates[1] - radius,\n      flatCoordinates[0] + radius,\n      flatCoordinates[1] + radius,\n      extent,\n    );\n  }\n\n  /**\n   * Return the radius of the circle.\n   * @return {number} Radius.\n   * @api\n   */\n  getRadius() {\n    return Math.sqrt(this.getRadiusSquared_());\n  }\n\n  /**\n   * @private\n   * @return {number} Radius squared.\n   */\n  getRadiusSquared_() {\n    const dx = this.flatCoordinates[this.stride] - this.flatCoordinates[0];\n    const dy = this.flatCoordinates[this.stride + 1] - this.flatCoordinates[1];\n    return dx * dx + dy * dy;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'Circle';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    const circleExtent = this.getExtent();\n    if (intersects(extent, circleExtent)) {\n      const center = this.getCenter();\n\n      if (extent[0] <= center[0] && extent[2] >= center[0]) {\n        return true;\n      }\n      if (extent[1] <= center[1] && extent[3] >= center[1]) {\n        return true;\n      }\n\n      return forEachCorner(extent, this.intersectsCoordinate.bind(this));\n    }\n    return false;\n  }\n\n  /**\n   * Set the center of the circle as {@link module:ol/coordinate~Coordinate coordinate}.\n   * @param {import(\"../coordinate.js\").Coordinate} center Center.\n   * @api\n   */\n  setCenter(center) {\n    const stride = this.stride;\n    const radius = this.flatCoordinates[stride] - this.flatCoordinates[0];\n    const flatCoordinates = center.slice();\n    flatCoordinates[stride] = flatCoordinates[0] + radius;\n    for (let i = 1; i < stride; ++i) {\n      flatCoordinates[stride + i] = center[i];\n    }\n    this.setFlatCoordinates(this.layout, flatCoordinates);\n    this.changed();\n  }\n\n  /**\n   * Set the center (as {@link module:ol/coordinate~Coordinate coordinate}) and the radius (as\n   * number) of the circle.\n   * @param {!import(\"../coordinate.js\").Coordinate} center Center.\n   * @param {number} radius Radius.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCenterAndRadius(center, radius, layout) {\n    this.setLayout(layout, center, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    /** @type {Array<number>} */\n    const flatCoordinates = this.flatCoordinates;\n    let offset = deflateCoordinate(flatCoordinates, 0, center, this.stride);\n    flatCoordinates[offset++] = flatCoordinates[0] + radius;\n    for (let i = 1, ii = this.stride; i < ii; ++i) {\n      flatCoordinates[offset++] = flatCoordinates[i];\n    }\n    flatCoordinates.length = offset;\n    this.changed();\n  }\n\n  getCoordinates() {\n    return null;\n  }\n\n  setCoordinates(coordinates, layout) {}\n\n  /**\n   * Set the radius of the circle. The radius is in the units of the projection.\n   * @param {number} radius Radius.\n   * @api\n   */\n  setRadius(radius) {\n    this.flatCoordinates[this.stride] = this.flatCoordinates[0] + radius;\n    this.changed();\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in counter-clockwise radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    const center = this.getCenter();\n    const stride = this.getStride();\n    this.setCenter(\n      rotate(center, 0, center.length, stride, angle, anchor, center),\n    );\n    this.changed();\n  }\n}\n\n/**\n * Transform each coordinate of the circle from one coordinate reference system\n * to another. The geometry is modified in place.\n * If you do not want the geometry modified in place, first clone() it and\n * then use this function on the clone.\n *\n * Internally a circle is currently represented by two points: the center of\n * the circle `[cx, cy]`, and the point to the right of the circle\n * `[cx + r, cy]`. This `transform` function just transforms these two points.\n * So the resulting geometry is also a circle, and that circle does not\n * correspond to the shape that would be obtained by transforming every point\n * of the original circle.\n *\n * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n * @return {Circle} This geometry.  Note that original geometry is\n *     modified in place.\n * @function\n * @api\n */\nCircle.prototype.transform;\nexport default Circle;\n","/**\n * @module ol/geom/GeometryCollection\n */\nimport EventType from '../events/EventType.js';\nimport Geometry from './Geometry.js';\nimport {\n  closestSquaredDistanceXY,\n  createOrUpdateEmpty,\n  extend,\n  getCenter,\n} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @classdesc\n * An array of {@link module:ol/geom/Geometry~Geometry} objects.\n *\n * @api\n */\nclass GeometryCollection extends Geometry {\n  /**\n   * @param {Array<Geometry>} geometries Geometries.\n   */\n  constructor(geometries) {\n    super();\n\n    /**\n     * @private\n     * @type {Array<Geometry>}\n     */\n    this.geometries_ = geometries;\n\n    /**\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.changeEventsKeys_ = [];\n\n    this.listenGeometriesChange_();\n  }\n\n  /**\n   * @private\n   */\n  unlistenGeometriesChange_() {\n    this.changeEventsKeys_.forEach(unlistenByKey);\n    this.changeEventsKeys_.length = 0;\n  }\n\n  /**\n   * @private\n   */\n  listenGeometriesChange_() {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      this.changeEventsKeys_.push(\n        listen(geometries[i], EventType.CHANGE, this.changed, this),\n      );\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!GeometryCollection} Clone.\n   * @api\n   */\n  clone() {\n    const geometryCollection = new GeometryCollection(\n      cloneGeometries(this.geometries_),\n    );\n    geometryCollection.applyProperties(this);\n    return geometryCollection;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      minSquaredDistance = geometries[i].closestPointXY(\n        x,\n        y,\n        closestPoint,\n        minSquaredDistance,\n      );\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].containsXY(x, y)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    createOrUpdateEmpty(extent);\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      extend(extent, geometries[i].getExtent());\n    }\n    return extent;\n  }\n\n  /**\n   * Return the geometries that make up this geometry collection.\n   * @return {Array<Geometry>} Geometries.\n   * @api\n   */\n  getGeometries() {\n    return cloneGeometries(this.geometries_);\n  }\n\n  /**\n   * @return {Array<Geometry>} Geometries.\n   */\n  getGeometriesArray() {\n    return this.geometries_;\n  }\n\n  /**\n   * @return {Array<Geometry>} Geometries.\n   */\n  getGeometriesArrayRecursive() {\n    /** @type {Array<Geometry>} */\n    let geometriesArray = [];\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].getType() === this.getType()) {\n        geometriesArray = geometriesArray.concat(\n          /** @type {GeometryCollection} */ (\n            geometries[i]\n          ).getGeometriesArrayRecursive(),\n        );\n      } else {\n        geometriesArray.push(geometries[i]);\n      }\n    }\n    return geometriesArray;\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {GeometryCollection} Simplified GeometryCollection.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    if (this.simplifiedGeometryRevision !== this.getRevision()) {\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    if (\n      squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n        squaredTolerance < this.simplifiedGeometryMaxMinSquaredTolerance)\n    ) {\n      return this;\n    }\n\n    const simplifiedGeometries = [];\n    const geometries = this.geometries_;\n    let simplified = false;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      const geometry = geometries[i];\n      const simplifiedGeometry =\n        geometry.getSimplifiedGeometry(squaredTolerance);\n      simplifiedGeometries.push(simplifiedGeometry);\n      if (simplifiedGeometry !== geometry) {\n        simplified = true;\n      }\n    }\n    if (simplified) {\n      const simplifiedGeometryCollection = new GeometryCollection(\n        simplifiedGeometries,\n      );\n      return simplifiedGeometryCollection;\n    }\n    this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n    return this;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'GeometryCollection';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].intersectsExtent(extent)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.geometries_.length === 0;\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].rotate(angle, anchor);\n    }\n    this.changed();\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, sy, anchor) {\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].scale(sx, sy, anchor);\n    }\n    this.changed();\n  }\n\n  /**\n   * Set the geometries that make up this geometry collection.\n   * @param {Array<Geometry>} geometries Geometries.\n   * @api\n   */\n  setGeometries(geometries) {\n    this.setGeometriesArray(cloneGeometries(geometries));\n  }\n\n  /**\n   * @param {Array<Geometry>} geometries Geometries.\n   */\n  setGeometriesArray(geometries) {\n    this.unlistenGeometriesChange_();\n    this.geometries_ = geometries;\n    this.listenGeometriesChange_();\n    this.changed();\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   * @api\n   */\n  applyTransform(transformFn) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].applyTransform(transformFn);\n    }\n    this.changed();\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].translate(deltaX, deltaY);\n    }\n    this.changed();\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.unlistenGeometriesChange_();\n    super.disposeInternal();\n  }\n}\n\n/**\n * @param {Array<Geometry>} geometries Geometries.\n * @return {Array<Geometry>} Cloned geometries.\n */\nfunction cloneGeometries(geometries) {\n  return geometries.map((geometry) => geometry.clone());\n}\n\nexport default GeometryCollection;\n","/**\n * @module ol/geom/MultiLineString\n */\nimport LineString from './LineString.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {arrayMaxSquaredDelta, assignClosestArrayPoint} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {douglasPeuckerArray} from './flat/simplify.js';\nimport {extend} from '../array.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {\n  interpolatePoint,\n  lineStringsCoordinateAtM,\n} from './flat/interpolate.js';\nimport {intersectsLineStringArray} from './flat/intersectsextent.js';\n\n/**\n * @classdesc\n * Multi-linestring geometry.\n *\n * @api\n */\nclass MultiLineString extends SimpleGeometry {\n  /**\n   * @param {Array<Array<import(\"../coordinate.js\").Coordinate>|LineString>|Array<number>} coordinates\n   *     Coordinates or LineString geometries. (For internal use, flat coordinates in\n   *     combination with `layout` and `ends` are also accepted.)\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @param {Array<number>} [ends] Flat coordinate ends for internal use.\n   */\n  constructor(coordinates, layout, ends) {\n    super();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (Array.isArray(coordinates[0])) {\n      this.setCoordinates(\n        /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (\n          coordinates\n        ),\n        layout,\n      );\n    } else if (layout !== undefined && ends) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates),\n      );\n      this.ends_ = ends;\n    } else {\n      const lineStrings = /** @type {Array<LineString>} */ (coordinates);\n      /** @type {Array<number>} */\n      const flatCoordinates = [];\n      const ends = [];\n      for (let i = 0, ii = lineStrings.length; i < ii; ++i) {\n        const lineString = lineStrings[i];\n        extend(flatCoordinates, lineString.getFlatCoordinates());\n        ends.push(flatCoordinates.length);\n      }\n      const layout =\n        lineStrings.length === 0\n          ? this.getLayout()\n          : lineStrings[0].getLayout();\n      this.setFlatCoordinates(layout, flatCoordinates);\n      this.ends_ = ends;\n    }\n  }\n\n  /**\n   * Append the passed linestring to the multilinestring.\n   * @param {LineString} lineString LineString.\n   * @api\n   */\n  appendLineString(lineString) {\n    extend(this.flatCoordinates, lineString.getFlatCoordinates().slice());\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiLineString} Clone.\n   * @api\n   */\n  clone() {\n    const multiLineString = new MultiLineString(\n      this.flatCoordinates.slice(),\n      this.layout,\n      this.ends_.slice(),\n    );\n    multiLineString.applyProperties(this);\n    return multiLineString;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        arrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.ends_,\n          this.stride,\n          0,\n        ),\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      this.maxDelta_,\n      false,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n    );\n  }\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * `interpolate` controls interpolation between consecutive LineStrings\n   * within the MultiLineString. If `interpolate` is `true` the coordinates\n   * will be linearly interpolated between the last coordinate of one LineString\n   * and the first coordinate of the next LineString.  If `interpolate` is\n   * `false` then the function will return `null` for Ms falling between\n   * LineStrings.\n   *\n   * @param {number} m M.\n   * @param {boolean} [extrapolate] Extrapolate. Default is `false`.\n   * @param {boolean} [interpolate] Interpolate. Default is `false`.\n   * @return {import(\"../coordinate.js\").Coordinate|null} Coordinate.\n   * @api\n   */\n  getCoordinateAtM(m, extrapolate, interpolate) {\n    if (\n      (this.layout != 'XYM' && this.layout != 'XYZM') ||\n      this.flatCoordinates.length === 0\n    ) {\n      return null;\n    }\n    extrapolate = extrapolate !== undefined ? extrapolate : false;\n    interpolate = interpolate !== undefined ? interpolate : false;\n    return lineStringsCoordinateAtM(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      m,\n      extrapolate,\n      interpolate,\n    );\n  }\n\n  /**\n   * Return the coordinates of the multilinestring.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n    );\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * Return the linestring at the specified index.\n   * @param {number} index Index.\n   * @return {LineString} LineString.\n   * @api\n   */\n  getLineString(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LineString(\n      this.flatCoordinates.slice(\n        index === 0 ? 0 : this.ends_[index - 1],\n        this.ends_[index],\n      ),\n      this.layout,\n    );\n  }\n\n  /**\n   * Return the linestrings of this multilinestring.\n   * @return {Array<LineString>} LineStrings.\n   * @api\n   */\n  getLineStrings() {\n    const flatCoordinates = this.flatCoordinates;\n    const ends = this.ends_;\n    const layout = this.layout;\n    /** @type {Array<LineString>} */\n    const lineStrings = [];\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const lineString = new LineString(\n        flatCoordinates.slice(offset, end),\n        layout,\n      );\n      lineStrings.push(lineString);\n      offset = end;\n    }\n    return lineStrings;\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoints.\n   */\n  getFlatMidpoints() {\n    /** @type {Array<number>} */\n    const midpoints = [];\n    const flatCoordinates = this.flatCoordinates;\n    let offset = 0;\n    const ends = this.ends_;\n    const stride = this.stride;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const midpoint = interpolatePoint(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        0.5,\n      );\n      extend(midpoints, midpoint);\n      offset = end;\n    }\n    return midpoints;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {MultiLineString} Simplified MultiLineString.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    /** @type {Array<number>} */\n    const simplifiedFlatCoordinates = [];\n    /** @type {Array<number>} */\n    const simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = douglasPeuckerArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEnds,\n    );\n    return new MultiLineString(simplifiedFlatCoordinates, 'XY', simplifiedEnds);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'MultiLineString';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLineStringArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      extent,\n    );\n  }\n\n  /**\n   * Set the coordinates of the multilinestring.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.ends_,\n    );\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n}\n\nexport default MultiLineString;\n","/**\n * @module ol/geom/MultiPoint\n */\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {closestSquaredDistanceXY, containsXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Multi-point geometry.\n *\n * @api\n */\nclass MultiPoint extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n    if (layout && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates),\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        layout,\n      );\n    }\n  }\n\n  /**\n   * Append the passed point to this multipoint.\n   * @param {Point} point Point.\n   * @api\n   */\n  appendPoint(point) {\n    extend(this.flatCoordinates, point.getFlatCoordinates());\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiPoint} Clone.\n   * @api\n   */\n  clone() {\n    const multiPoint = new MultiPoint(\n      this.flatCoordinates.slice(),\n      this.layout,\n    );\n    multiPoint.applyProperties(this);\n    return multiPoint;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    const flatCoordinates = this.flatCoordinates;\n    const stride = this.stride;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const squaredDistance = squaredDx(\n        x,\n        y,\n        flatCoordinates[i],\n        flatCoordinates[i + 1],\n      );\n      if (squaredDistance < minSquaredDistance) {\n        minSquaredDistance = squaredDistance;\n        for (let j = 0; j < stride; ++j) {\n          closestPoint[j] = flatCoordinates[i + j];\n        }\n        closestPoint.length = stride;\n      }\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * Return the coordinates of the multipoint.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n    );\n  }\n\n  /**\n   * Return the point at the specified index.\n   * @param {number} index Index.\n   * @return {Point} Point.\n   * @api\n   */\n  getPoint(index) {\n    const n = this.flatCoordinates.length / this.stride;\n    if (index < 0 || n <= index) {\n      return null;\n    }\n    return new Point(\n      this.flatCoordinates.slice(\n        index * this.stride,\n        (index + 1) * this.stride,\n      ),\n      this.layout,\n    );\n  }\n\n  /**\n   * Return the points of this multipoint.\n   * @return {Array<Point>} Points.\n   * @api\n   */\n  getPoints() {\n    const flatCoordinates = this.flatCoordinates;\n    const layout = this.layout;\n    const stride = this.stride;\n    /** @type {Array<Point>} */\n    const points = [];\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const point = new Point(flatCoordinates.slice(i, i + stride), layout);\n      points.push(point);\n    }\n    return points;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'MultiPoint';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    const flatCoordinates = this.flatCoordinates;\n    const stride = this.stride;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      if (containsXY(extent, x, y)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Set the coordinates of the multipoint.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n    );\n    this.changed();\n  }\n}\n\nexport default MultiPoint;\n","/**\n * @module ol/geom/flat/center\n */\nimport {createEmpty, createOrUpdateFromFlatCoordinates} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {Array<number>} Flat centers.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  const flatCenters = [];\n  let extent = createEmpty();\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    extent = createOrUpdateFromFlatCoordinates(\n      flatCoordinates,\n      offset,\n      ends[0],\n      stride,\n    );\n    flatCenters.push((extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2);\n    offset = ends[ends.length - 1];\n  }\n  return flatCenters;\n}\n","/**\n * @module ol/geom/MultiPolygon\n */\nimport MultiPoint from './MultiPoint.js';\nimport Polygon from './Polygon.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {\n  assignClosestMultiArrayPoint,\n  multiArrayMaxSquaredDelta,\n} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateMultiCoordinatesArray} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {getInteriorPointsOfMultiArray} from './flat/interiorpoint.js';\nimport {inflateMultiCoordinatesArray} from './flat/inflate.js';\nimport {intersectsLinearRingMultiArray} from './flat/intersectsextent.js';\nimport {\n  linearRingssAreOriented,\n  orientLinearRingsArray,\n} from './flat/orient.js';\nimport {linearRingss as linearRingssArea} from './flat/area.js';\nimport {linearRingss as linearRingssCenter} from './flat/center.js';\nimport {linearRingssContainsXY} from './flat/contains.js';\nimport {quantizeMultiArray} from './flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-polygon geometry.\n *\n * @api\n */\nclass MultiPolygon extends SimpleGeometry {\n  /**\n   * @param {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>|Polygon>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` and `endss` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @param {Array<Array<number>>} [endss] Array of ends for internal use with flat coordinates.\n   */\n  constructor(coordinates, layout, endss) {\n    super();\n\n    /**\n     * @type {Array<Array<number>>}\n     * @private\n     */\n    this.endss_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointsRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.flatInteriorPoints_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (!endss && !Array.isArray(coordinates[0])) {\n      const polygons = /** @type {Array<Polygon>} */ (coordinates);\n      /** @type {Array<number>} */\n      const flatCoordinates = [];\n      const thisEndss = [];\n      for (let i = 0, ii = polygons.length; i < ii; ++i) {\n        const polygon = polygons[i];\n        const offset = flatCoordinates.length;\n        const ends = polygon.getEnds();\n        for (let j = 0, jj = ends.length; j < jj; ++j) {\n          ends[j] += offset;\n        }\n        extend(flatCoordinates, polygon.getFlatCoordinates());\n        thisEndss.push(ends);\n      }\n      layout =\n        polygons.length === 0 ? this.getLayout() : polygons[0].getLayout();\n      coordinates = flatCoordinates;\n      endss = thisEndss;\n    }\n    if (layout !== undefined && endss) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates),\n      );\n      this.endss_ = endss;\n    } else {\n      this.setCoordinates(\n        /** @type {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} */ (\n          coordinates\n        ),\n        layout,\n      );\n    }\n  }\n\n  /**\n   * Append the passed polygon to this multipolygon.\n   * @param {Polygon} polygon Polygon.\n   * @api\n   */\n  appendPolygon(polygon) {\n    /** @type {Array<number>} */\n    let ends;\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = polygon.getFlatCoordinates().slice();\n      ends = polygon.getEnds().slice();\n      this.endss_.push();\n    } else {\n      const offset = this.flatCoordinates.length;\n      extend(this.flatCoordinates, polygon.getFlatCoordinates());\n      ends = polygon.getEnds().slice();\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        ends[i] += offset;\n      }\n    }\n    this.endss_.push(ends);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiPolygon} Clone.\n   * @api\n   */\n  clone() {\n    const len = this.endss_.length;\n    const newEndss = new Array(len);\n    for (let i = 0; i < len; ++i) {\n      newEndss[i] = this.endss_[i].slice();\n    }\n\n    const multiPolygon = new MultiPolygon(\n      this.flatCoordinates.slice(),\n      this.layout,\n      newEndss,\n    );\n    multiPolygon.applyProperties(this);\n\n    return multiPolygon;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        multiArrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.endss_,\n          this.stride,\n          0,\n        ),\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestMultiArrayPoint(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n    );\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    return linearRingssContainsXY(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      x,\n      y,\n    );\n  }\n\n  /**\n   * Return the area of the multipolygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingssArea(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n    );\n  }\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for multi-polygons.\n   *\n   * @param {boolean} [right] Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} Coordinates.\n   * @api\n   */\n  getCoordinates(right) {\n    let flatCoordinates;\n    if (right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRingsArray(\n        flatCoordinates,\n        0,\n        this.endss_,\n        this.stride,\n        right,\n      );\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateMultiCoordinatesArray(\n      flatCoordinates,\n      0,\n      this.endss_,\n      this.stride,\n    );\n  }\n\n  /**\n   * @return {Array<Array<number>>} Endss.\n   */\n  getEndss() {\n    return this.endss_;\n  }\n\n  /**\n   * @return {Array<number>} Flat interior points.\n   */\n  getFlatInteriorPoints() {\n    if (this.flatInteriorPointsRevision_ != this.getRevision()) {\n      const flatCenters = linearRingssCenter(\n        this.flatCoordinates,\n        0,\n        this.endss_,\n        this.stride,\n      );\n      this.flatInteriorPoints_ = getInteriorPointsOfMultiArray(\n        this.getOrientedFlatCoordinates(),\n        0,\n        this.endss_,\n        this.stride,\n        flatCenters,\n      );\n      this.flatInteriorPointsRevision_ = this.getRevision();\n    }\n    return /** @type {Array<number>} */ (this.flatInteriorPoints_);\n  }\n\n  /**\n   * Return the interior points as {@link module:ol/geom/MultiPoint~MultiPoint multipoint}.\n   * @return {MultiPoint} Interior points as XYM coordinates, where M is\n   * the length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  getInteriorPoints() {\n    return new MultiPoint(this.getFlatInteriorPoints().slice(), 'XYM');\n  }\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      const flatCoordinates = this.flatCoordinates;\n      if (\n        linearRingssAreOriented(flatCoordinates, 0, this.endss_, this.stride)\n      ) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length = orientLinearRingsArray(\n          this.orientedFlatCoordinates_,\n          0,\n          this.endss_,\n          this.stride,\n        );\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return /** @type {Array<number>} */ (this.orientedFlatCoordinates_);\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {MultiPolygon} Simplified MultiPolygon.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    /** @type {Array<number>} */\n    const simplifiedFlatCoordinates = [];\n    /** @type {Array<Array<number>>} */\n    const simplifiedEndss = [];\n    simplifiedFlatCoordinates.length = quantizeMultiArray(\n      this.flatCoordinates,\n      0,\n      this.endss_,\n      this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEndss,\n    );\n    return new MultiPolygon(simplifiedFlatCoordinates, 'XY', simplifiedEndss);\n  }\n\n  /**\n   * Return the polygon at the specified index.\n   * @param {number} index Index.\n   * @return {Polygon} Polygon.\n   * @api\n   */\n  getPolygon(index) {\n    if (index < 0 || this.endss_.length <= index) {\n      return null;\n    }\n    let offset;\n    if (index === 0) {\n      offset = 0;\n    } else {\n      const prevEnds = this.endss_[index - 1];\n      offset = prevEnds[prevEnds.length - 1];\n    }\n    const ends = this.endss_[index].slice();\n    const end = ends[ends.length - 1];\n    if (offset !== 0) {\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        ends[i] -= offset;\n      }\n    }\n    return new Polygon(\n      this.flatCoordinates.slice(offset, end),\n      this.layout,\n      ends,\n    );\n  }\n\n  /**\n   * Return the polygons of this multipolygon.\n   * @return {Array<Polygon>} Polygons.\n   * @api\n   */\n  getPolygons() {\n    const layout = this.layout;\n    const flatCoordinates = this.flatCoordinates;\n    const endss = this.endss_;\n    const polygons = [];\n    let offset = 0;\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      const ends = endss[i].slice();\n      const end = ends[ends.length - 1];\n      if (offset !== 0) {\n        for (let j = 0, jj = ends.length; j < jj; ++j) {\n          ends[j] -= offset;\n        }\n      }\n      const polygon = new Polygon(\n        flatCoordinates.slice(offset, end),\n        layout,\n        ends,\n      );\n      polygons.push(polygon);\n      offset = end;\n    }\n    return polygons;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'MultiPolygon';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLinearRingMultiArray(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      extent,\n    );\n  }\n\n  /**\n   * Set the coordinates of the multipolygon.\n   * @param {!Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 3);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const endss = deflateMultiCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.endss_,\n    );\n    if (endss.length === 0) {\n      this.flatCoordinates.length = 0;\n    } else {\n      const lastEnds = endss[endss.length - 1];\n      this.flatCoordinates.length =\n        lastEnds.length === 0 ? 0 : lastEnds[lastEnds.length - 1];\n    }\n    this.changed();\n  }\n}\n\nexport default MultiPolygon;\n","/**\n * @module ol/geom\n */\n\nexport {default as Circle} from './geom/Circle.js';\nexport {default as Geometry} from './geom/Geometry.js';\nexport {default as GeometryCollection} from './geom/GeometryCollection.js';\nexport {default as LinearRing} from './geom/LinearRing.js';\nexport {default as LineString} from './geom/LineString.js';\nexport {default as MultiLineString} from './geom/MultiLineString.js';\nexport {default as MultiPoint} from './geom/MultiPoint.js';\nexport {default as MultiPolygon} from './geom/MultiPolygon.js';\nexport {default as Point} from './geom/Point.js';\nexport {default as Polygon} from './geom/Polygon.js';\nexport {default as SimpleGeometry} from './geom/SimpleGeometry.js';\n","/**\n * @module ol/render/Feature\n */\nimport Feature from '../Feature.js';\nimport {\n  LineString,\n  MultiLineString,\n  MultiPoint,\n  MultiPolygon,\n  Point,\n  Polygon,\n} from '../geom.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../transform.js';\nimport {\n  createOrUpdateFromCoordinate,\n  createOrUpdateFromFlatCoordinates,\n  getCenter,\n  getHeight,\n} from '../extent.js';\nimport {\n  douglasPeucker,\n  douglasPeuckerArray,\n  quantizeArray,\n} from '../geom/flat/simplify.js';\nimport {extend} from '../array.js';\nimport {\n  getInteriorPointOfArray,\n  getInteriorPointsOfMultiArray,\n} from '../geom/flat/interiorpoint.js';\nimport {get as getProjection} from '../proj.js';\nimport {inflateEnds} from '../geom/flat/orient.js';\nimport {interpolatePoint} from '../geom/flat/interpolate.js';\nimport {linearRingss as linearRingssCenter} from '../geom/flat/center.js';\nimport {memoizeOne} from '../functions.js';\nimport {transform2D} from '../geom/flat/transform.js';\n\n/**\n * @typedef {'Point' | 'LineString' | 'LinearRing' | 'Polygon' | 'MultiPoint' | 'MultiLineString'} Type\n * The geometry type.  One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'` or 'MultiLineString'`.\n */\n\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nconst tmpTransform = createTransform();\n\n/**\n * Lightweight, read-only, {@link module:ol/Feature~Feature} and {@link module:ol/geom/Geometry~Geometry} like\n * structure, optimized for vector tile rendering and styling. Geometry access\n * through the API is limited to getting the type and extent of the geometry.\n */\nclass RenderFeature {\n  /**\n   * @param {Type} type Geometry type.\n   * @param {Array<number>} flatCoordinates Flat coordinates. These always need\n   *     to be right-handed for polygons.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @param {Object<string, *>} properties Properties.\n   * @param {number|string|undefined} id Feature id.\n   */\n  constructor(type, flatCoordinates, ends, stride, properties, id) {\n    /**\n     * @type {import(\"../style/Style.js\").StyleFunction|undefined}\n     */\n    this.styleFunction;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent|undefined}\n     */\n    this.extent_;\n\n    /**\n     * @private\n     * @type {number|string|undefined}\n     */\n    this.id_ = id;\n\n    /**\n     * @private\n     * @type {Type}\n     */\n    this.type_ = type;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatCoordinates_ = flatCoordinates;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatInteriorPoints_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatMidpoints_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.ends_ = ends || null;\n\n    /**\n     * @private\n     * @type {Object<string, *>}\n     */\n    this.properties_ = properties;\n\n    /**\n     * @type {number}\n     */\n    this.squaredTolerance_;\n\n    /**\n     * @type {number}\n     */\n    this.stride_ = stride;\n\n    /**\n     * @private\n     * @type {RenderFeature}\n     */\n    this.simplifiedGeometry_;\n  }\n\n  /**\n   * Get a feature property by its key.\n   * @param {string} key Key\n   * @return {*} Value for the requested key.\n   * @api\n   */\n  get(key) {\n    return this.properties_[key];\n  }\n\n  /**\n   * Get the extent of this feature's geometry.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    if (!this.extent_) {\n      this.extent_ =\n        this.type_ === 'Point'\n          ? createOrUpdateFromCoordinate(this.flatCoordinates_)\n          : createOrUpdateFromFlatCoordinates(\n              this.flatCoordinates_,\n              0,\n              this.flatCoordinates_.length,\n              2,\n            );\n    }\n    return this.extent_;\n  }\n\n  /**\n   * @return {Array<number>} Flat interior points.\n   */\n  getFlatInteriorPoint() {\n    if (!this.flatInteriorPoints_) {\n      const flatCenter = getCenter(this.getExtent());\n      this.flatInteriorPoints_ = getInteriorPointOfArray(\n        this.flatCoordinates_,\n        0,\n        this.ends_,\n        2,\n        flatCenter,\n        0,\n      );\n    }\n    return this.flatInteriorPoints_;\n  }\n\n  /**\n   * @return {Array<number>} Flat interior points.\n   */\n  getFlatInteriorPoints() {\n    if (!this.flatInteriorPoints_) {\n      const ends = inflateEnds(this.flatCoordinates_, this.ends_);\n      const flatCenters = linearRingssCenter(this.flatCoordinates_, 0, ends, 2);\n      this.flatInteriorPoints_ = getInteriorPointsOfMultiArray(\n        this.flatCoordinates_,\n        0,\n        ends,\n        2,\n        flatCenters,\n      );\n    }\n    return this.flatInteriorPoints_;\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoint.\n   */\n  getFlatMidpoint() {\n    if (!this.flatMidpoints_) {\n      this.flatMidpoints_ = interpolatePoint(\n        this.flatCoordinates_,\n        0,\n        this.flatCoordinates_.length,\n        2,\n        0.5,\n      );\n    }\n    return this.flatMidpoints_;\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoints.\n   */\n  getFlatMidpoints() {\n    if (!this.flatMidpoints_) {\n      this.flatMidpoints_ = [];\n      const flatCoordinates = this.flatCoordinates_;\n      let offset = 0;\n      const ends = /** @type {Array<number>} */ (this.ends_);\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        const end = ends[i];\n        const midpoint = interpolatePoint(flatCoordinates, offset, end, 2, 0.5);\n        extend(this.flatMidpoints_, midpoint);\n        offset = end;\n      }\n    }\n    return this.flatMidpoints_;\n  }\n\n  /**\n   * Get the feature identifier.  This is a stable identifier for the feature and\n   * is set when reading data from a remote source.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id_;\n  }\n\n  /**\n   * @return {Array<number>} Flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    return this.flatCoordinates_;\n  }\n\n  /**\n   * For API compatibility with {@link module:ol/Feature~Feature}, this method is useful when\n   * determining the geometry type in style function (see {@link #getType}).\n   * @return {RenderFeature} Feature.\n   * @api\n   */\n  getGeometry() {\n    return this;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {RenderFeature} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    return this;\n  }\n\n  /**\n   * Get a transformed and simplified version of the geometry.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n   * @return {RenderFeature} Simplified geometry.\n   */\n  simplifyTransformed(squaredTolerance, transform) {\n    return this;\n  }\n\n  /**\n   * Get the feature properties.\n   * @return {Object<string, *>} Feature properties.\n   * @api\n   */\n  getProperties() {\n    return this.properties_;\n  }\n\n  /**\n   * Get an object of all property names and values.  This has the same behavior as getProperties,\n   * but is here to conform with the {@link module:ol/Feature~Feature} interface.\n   * @return {Object<string, *>?} Object.\n   */\n  getPropertiesInternal() {\n    return this.properties_;\n  }\n\n  /**\n   * @return {number} Stride.\n   */\n  getStride() {\n    return this.stride_;\n  }\n\n  /**\n   * @return {import('../style/Style.js').StyleFunction|undefined} Style\n   */\n  getStyleFunction() {\n    return this.styleFunction;\n  }\n\n  /**\n   * Get the type of this feature's geometry.\n   * @return {Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return this.type_;\n  }\n\n  /**\n   * Transform geometry coordinates from tile pixel space to projected.\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} projection The data projection\n   */\n  transform(projection) {\n    projection = getProjection(projection);\n    const pixelExtent = projection.getExtent();\n    const projectedExtent = projection.getWorldExtent();\n    if (pixelExtent && projectedExtent) {\n      const scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n      composeTransform(\n        tmpTransform,\n        projectedExtent[0],\n        projectedExtent[3],\n        scale,\n        -scale,\n        0,\n        0,\n        0,\n      );\n      transform2D(\n        this.flatCoordinates_,\n        0,\n        this.flatCoordinates_.length,\n        2,\n        tmpTransform,\n        this.flatCoordinates_,\n      );\n    }\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   */\n  applyTransform(transformFn) {\n    transformFn(this.flatCoordinates_, this.flatCoordinates_, this.stride_);\n  }\n\n  /**\n   * @return {RenderFeature} A cloned render feature.\n   */\n  clone() {\n    return new RenderFeature(\n      this.type_,\n      this.flatCoordinates_.slice(),\n      this.ends_?.slice(),\n      this.stride_,\n      Object.assign({}, this.properties_),\n      this.id_,\n    );\n  }\n\n  /**\n   * @return {Array<number>|null} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * Add transform and resolution based geometry simplification to this instance.\n   * @return {RenderFeature} This render feature.\n   */\n  enableSimplifyTransformed() {\n    this.simplifyTransformed = memoizeOne((squaredTolerance, transform) => {\n      if (squaredTolerance === this.squaredTolerance_) {\n        return this.simplifiedGeometry_;\n      }\n      this.simplifiedGeometry_ = this.clone();\n      if (transform) {\n        this.simplifiedGeometry_.applyTransform(transform);\n      }\n      const simplifiedFlatCoordinates =\n        this.simplifiedGeometry_.getFlatCoordinates();\n      let simplifiedEnds;\n      switch (this.type_) {\n        case 'LineString':\n          simplifiedFlatCoordinates.length = douglasPeucker(\n            simplifiedFlatCoordinates,\n            0,\n            this.simplifiedGeometry_.flatCoordinates_.length,\n            this.simplifiedGeometry_.stride_,\n            squaredTolerance,\n            simplifiedFlatCoordinates,\n            0,\n          );\n          simplifiedEnds = [simplifiedFlatCoordinates.length];\n          break;\n        case 'MultiLineString':\n          simplifiedEnds = [];\n          simplifiedFlatCoordinates.length = douglasPeuckerArray(\n            simplifiedFlatCoordinates,\n            0,\n            this.simplifiedGeometry_.ends_,\n            this.simplifiedGeometry_.stride_,\n            squaredTolerance,\n            simplifiedFlatCoordinates,\n            0,\n            simplifiedEnds,\n          );\n          break;\n        case 'Polygon':\n          simplifiedEnds = [];\n          simplifiedFlatCoordinates.length = quantizeArray(\n            simplifiedFlatCoordinates,\n            0,\n            this.simplifiedGeometry_.ends_,\n            this.simplifiedGeometry_.stride_,\n            Math.sqrt(squaredTolerance),\n            simplifiedFlatCoordinates,\n            0,\n            simplifiedEnds,\n          );\n          break;\n        default:\n      }\n      if (simplifiedEnds) {\n        this.simplifiedGeometry_ = new RenderFeature(\n          this.type_,\n          simplifiedFlatCoordinates,\n          simplifiedEnds,\n          2,\n          this.properties_,\n          this.id_,\n        );\n      }\n      this.squaredTolerance_ = squaredTolerance;\n      return this.simplifiedGeometry_;\n    });\n    return this;\n  }\n}\n\n/**\n * @return {Array<number>} Flat coordinates.\n */\nRenderFeature.prototype.getFlatCoordinates =\n  RenderFeature.prototype.getOrientedFlatCoordinates;\n\n/**\n * Create a geometry from an `ol/render/Feature`\n * @param {RenderFeature} renderFeature\n * Render Feature\n * @return {Point|MultiPoint|LineString|MultiLineString|Polygon|MultiPolygon}\n * New geometry instance.\n * @api\n */\nexport function toGeometry(renderFeature) {\n  const geometryType = renderFeature.getType();\n  switch (geometryType) {\n    case 'Point':\n      return new Point(renderFeature.getFlatCoordinates());\n    case 'MultiPoint':\n      return new MultiPoint(renderFeature.getFlatCoordinates(), 'XY');\n    case 'LineString':\n      return new LineString(renderFeature.getFlatCoordinates(), 'XY');\n    case 'MultiLineString':\n      return new MultiLineString(\n        renderFeature.getFlatCoordinates(),\n        'XY',\n        /** @type {Array<number>} */ (renderFeature.getEnds()),\n      );\n    case 'Polygon':\n      const flatCoordinates = renderFeature.getFlatCoordinates();\n      const ends = renderFeature.getEnds();\n      const endss = inflateEnds(flatCoordinates, ends);\n      return endss.length > 1\n        ? new MultiPolygon(flatCoordinates, 'XY', endss)\n        : new Polygon(flatCoordinates, 'XY', ends);\n    default:\n      throw new Error('Invalid geometry type:' + geometryType);\n  }\n}\n\n/**\n * Create an `ol/Feature` from an `ol/render/Feature`\n * @param {RenderFeature} renderFeature RenderFeature\n * @param {string} [geometryName='geometry'] Geometry name to use\n * when creating the Feature.\n * @return {Feature} Newly constructed `ol/Feature` with properties,\n * geometry, and id copied over.\n * @api\n */\nexport function toFeature(renderFeature, geometryName) {\n  const id = renderFeature.getId();\n  const geometry = toGeometry(renderFeature);\n  const properties = renderFeature.getProperties();\n  const feature = new Feature();\n  if (geometryName !== undefined) {\n    feature.setGeometryName(geometryName);\n  }\n  feature.setGeometry(geometry);\n  if (id !== undefined) {\n    feature.setId(id);\n  }\n  feature.setProperties(properties, true);\n  return feature;\n}\n\nexport default RenderFeature;\n","/**\n * @module ol/source/Source\n */\nimport BaseObject from '../Object.js';\nimport {get as getProjection} from '../proj.js';\n\n/**\n * @typedef {'undefined' | 'loading' | 'ready' | 'error'} State\n * State of the source, one of 'undefined', 'loading', 'ready' or 'error'.\n */\n\n/**\n * A function that takes a {@link import(\"../View.js\").ViewStateLayerStateExtent} and returns a string or\n * an array of strings representing source attributions.\n *\n * @typedef {function(import(\"../View.js\").ViewStateLayerStateExtent): (string|Array<string>)} Attribution\n */\n\n/**\n * A type that can be used to provide attribution information for data sources.\n *\n * It represents either\n * * a simple string (e.g. `'© Acme Inc.'`)\n * * an array of simple strings (e.g. `['© Acme Inc.', '© Bacme Inc.']`)\n * * a function that returns a string or array of strings ({@link module:ol/source/Source~Attribution})\n *\n * @typedef {string|Array<string>|Attribution} AttributionLike\n */\n\n/**\n * @typedef {Object} Options\n * @property {AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {import(\"./Source.js\").State} [state='ready'] State.\n * @property {boolean} [wrapX=false] WrapX.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for {@link module:ol/layer/Layer~Layer} sources.\n *\n * A generic `change` event is triggered when the state of the source changes.\n * @abstract\n * @api\n */\nclass Source extends BaseObject {\n  /**\n   * @param {Options} options Source options.\n   */\n  constructor(options) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|null}\n     */\n    this.projection = getProjection(options.projection);\n\n    /**\n     * @private\n     * @type {?Attribution}\n     */\n    this.attributions_ = adaptAttributions(options.attributions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.attributionsCollapsible_ =\n      options.attributionsCollapsible !== undefined\n        ? options.attributionsCollapsible\n        : true;\n\n    /**\n     * This source is currently loading data. Sources that defer loading to the\n     * map's tile queue never set this to `true`.\n     * @type {boolean}\n     */\n    this.loading = false;\n\n    /**\n     * @private\n     * @type {import(\"./Source.js\").State}\n     */\n    this.state_ = options.state !== undefined ? options.state : 'ready';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.wrapX_ = options.wrapX !== undefined ? options.wrapX : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.interpolate_ = !!options.interpolate;\n\n    /**\n     * @protected\n     * @type {function(import(\"../View.js\").ViewOptions):void}\n     */\n    this.viewResolver = null;\n\n    /**\n     * @protected\n     * @type {function(Error):void}\n     */\n    this.viewRejector = null;\n\n    const self = this;\n    /**\n     * @private\n     * @type {Promise<import(\"../View.js\").ViewOptions>}\n     */\n    this.viewPromise_ = new Promise(function (resolve, reject) {\n      self.viewResolver = resolve;\n      self.viewRejector = reject;\n    });\n  }\n\n  /**\n   * Get the attribution function for the source.\n   * @return {?Attribution} Attribution function.\n   * @api\n   */\n  getAttributions() {\n    return this.attributions_;\n  }\n\n  /**\n   * @return {boolean} Attributions are collapsible.\n   * @api\n   */\n  getAttributionsCollapsible() {\n    return this.attributionsCollapsible_;\n  }\n\n  /**\n   * Get the projection of the source.\n   * @return {import(\"../proj/Projection.js\").default|null} Projection.\n   * @api\n   */\n  getProjection() {\n    return this.projection;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection\").default} [projection] Projection.\n   * @return {Array<number>|null} Resolutions.\n   */\n  getResolutions(projection) {\n    return null;\n  }\n\n  /**\n   * @return {Promise<import(\"../View.js\").ViewOptions>} A promise for view-related properties.\n   */\n  getView() {\n    return this.viewPromise_;\n  }\n\n  /**\n   * Get the state of the source, see {@link import(\"./Source.js\").State} for possible states.\n   * @return {import(\"./Source.js\").State} State.\n   * @api\n   */\n  getState() {\n    return this.state_;\n  }\n\n  /**\n   * @return {boolean|undefined} Wrap X.\n   */\n  getWrapX() {\n    return this.wrapX_;\n  }\n\n  /**\n   * @return {boolean} Use linear interpolation when resampling.\n   */\n  getInterpolate() {\n    return this.interpolate_;\n  }\n\n  /**\n   * Refreshes the source. The source will be cleared, and data from the server will be reloaded.\n   * @api\n   */\n  refresh() {\n    this.changed();\n  }\n\n  /**\n   * Set the attributions of the source.\n   * @param {AttributionLike|undefined} attributions Attributions.\n   *     Can be passed as `string`, `Array<string>`, {@link module:ol/source/Source~Attribution},\n   *     or `undefined`.\n   * @api\n   */\n  setAttributions(attributions) {\n    this.attributions_ = adaptAttributions(attributions);\n    this.changed();\n  }\n\n  /**\n   * Set the state of the source.\n   * @param {import(\"./Source.js\").State} state State.\n   */\n  setState(state) {\n    this.state_ = state;\n    this.changed();\n  }\n}\n\n/**\n * Turns the attributions option into an attributions function.\n * @param {AttributionLike|undefined} attributionLike The attribution option.\n * @return {Attribution|null} An attribution function (or null).\n */\nfunction adaptAttributions(attributionLike) {\n  if (!attributionLike) {\n    return null;\n  }\n  if (Array.isArray(attributionLike)) {\n    return function (frameState) {\n      return attributionLike;\n    };\n  }\n\n  if (typeof attributionLike === 'function') {\n    return attributionLike;\n  }\n\n  return function (frameState) {\n    return [attributionLike];\n  };\n}\n\nexport default Source;\n","/**\n * @module ol/source/VectorEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a feature is added to the source.\n   * @event module:ol/source/Vector.VectorSourceEvent#addfeature\n   * @api\n   */\n  ADDFEATURE: 'addfeature',\n\n  /**\n   * Triggered when a feature is updated.\n   * @event module:ol/source/Vector.VectorSourceEvent#changefeature\n   * @api\n   */\n  CHANGEFEATURE: 'changefeature',\n\n  /**\n   * Triggered when the clear method is called on the source.\n   * @event module:ol/source/Vector.VectorSourceEvent#clear\n   * @api\n   */\n  CLEAR: 'clear',\n\n  /**\n   * Triggered when a feature is removed from the source.\n   * See {@link module:ol/source/Vector~VectorSource#clear source.clear()} for exceptions.\n   * @event module:ol/source/Vector.VectorSourceEvent#removefeature\n   * @api\n   */\n  REMOVEFEATURE: 'removefeature',\n\n  /**\n   * Triggered when features starts loading.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloadstart\n   * @api\n   */\n  FEATURESLOADSTART: 'featuresloadstart',\n\n  /**\n   * Triggered when features finishes loading.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloadend\n   * @api\n   */\n  FEATURESLOADEND: 'featuresloadend',\n\n  /**\n   * Triggered if feature loading results in an error.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloaderror\n   * @api\n   */\n  FEATURESLOADERROR: 'featuresloaderror',\n};\n\n/**\n * @typedef {'addfeature'|'changefeature'|'clear'|'removefeature'|'featuresloadstart'|'featuresloadend'|'featuresloaderror'} VectorSourceEventTypes\n */\n","/**\n * @module ol/loadingstrategy\n */\n\nimport {fromUserExtent, fromUserResolution, toUserExtent} from './proj.js';\n\n/**\n * Strategy function for loading all features with a single request.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function all(extent, resolution) {\n  return [[-Infinity, -Infinity, Infinity, Infinity]];\n}\n\n/**\n * Strategy function for loading features based on the view's extent and\n * resolution.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function bbox(extent, resolution) {\n  return [extent];\n}\n\n/**\n * Creates a strategy function for loading features based on a tile grid.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {function(import(\"./extent.js\").Extent, number, import(\"./proj.js\").Projection): Array<import(\"./extent.js\").Extent>} Loading strategy.\n * @api\n */\nexport function tile(tileGrid) {\n  return (\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {import(\"./proj.js\").Projection} projection Projection.\n     * @return {Array<import(\"./extent.js\").Extent>} Extents.\n     */\n    function (extent, resolution, projection) {\n      const z = tileGrid.getZForResolution(\n        fromUserResolution(resolution, projection),\n      );\n      const tileRange = tileGrid.getTileRangeForExtentAndZ(\n        fromUserExtent(extent, projection),\n        z,\n      );\n      /** @type {Array<import(\"./extent.js\").Extent>} */\n      const extents = [];\n      /** @type {import(\"./tilecoord.js\").TileCoord} */\n      const tileCoord = [z, 0, 0];\n      for (\n        tileCoord[1] = tileRange.minX;\n        tileCoord[1] <= tileRange.maxX;\n        ++tileCoord[1]\n      ) {\n        for (\n          tileCoord[2] = tileRange.minY;\n          tileCoord[2] <= tileRange.maxY;\n          ++tileCoord[2]\n        ) {\n          extents.push(\n            toUserExtent(tileGrid.getTileCoordExtent(tileCoord), projection),\n          );\n        }\n      }\n      return extents;\n    }\n  );\n}\n","/**\n * @module ol/featureloader\n */\nimport {VOID} from './functions.js';\n\n/**\n *\n * @type {boolean}\n * @private\n */\nlet withCredentials = false;\n\n/**\n * {@link module:ol/source/Vector~VectorSource} sources use a function of this type to\n * load features.\n *\n * This function takes up to 5 arguments. These are an {@link module:ol/extent~Extent} representing\n * the area to be loaded, a `{number}` representing the resolution (map units per pixel), an\n * {@link module:ol/proj/Projection~Projection} for the projection, an optional success callback that should get\n * the loaded features passed as an argument and an optional failure callback with no arguments. If\n * the callbacks are not used, the corresponding vector source will not fire `'featuresloadend'` and\n * `'featuresloaderror'` events. `this` within the function is bound to the\n * {@link module:ol/source/Vector~VectorSource} it's called from.\n *\n * The function is responsible for loading the features and adding them to the\n * source.\n *\n * @template {import(\"./Feature.js\").FeatureLike} [FeatureType=import(\"./Feature.js\").default]\n * @typedef {function(this:(import(\"./source/Vector\").default|import(\"./VectorTile.js\").default),\n *           import(\"./extent.js\").Extent,\n *           number,\n *           import(\"./proj/Projection.js\").default,\n *           function(Array<FeatureType>): void=,\n *           function(): void=): void} FeatureLoader\n * @api\n */\n\n/**\n * {@link module:ol/source/Vector~VectorSource} sources use a function of this type to\n * get the url to load features from.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area\n * to be loaded, a `{number}` representing the resolution (map units per pixel)\n * and an {@link module:ol/proj/Projection~Projection} for the projection  as\n * arguments and returns a `{string}` representing the URL.\n * @typedef {function(import(\"./extent.js\").Extent, number, import(\"./proj/Projection.js\").default): string} FeatureUrlFunction\n * @api\n */\n\n/**\n * @template {import(\"./Feature.js\").FeatureLike} [FeatureType=import(\"./Feature.js\").FeatureLike]\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default<import('./format/Feature.js').FeatureToFeatureClass<FeatureType>>} format Feature format.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {function(Array<FeatureType>, import(\"./proj/Projection.js\").default): void} success Success\n *      Function called with the loaded features and optionally with the data projection.\n * @param {function(): void} failure Failure\n *      Function called when loading failed.\n */\nexport function loadFeaturesXhr(\n  url,\n  format,\n  extent,\n  resolution,\n  projection,\n  success,\n  failure,\n) {\n  const xhr = new XMLHttpRequest();\n  xhr.open(\n    'GET',\n    typeof url === 'function' ? url(extent, resolution, projection) : url,\n    true,\n  );\n  if (format.getType() == 'arraybuffer') {\n    xhr.responseType = 'arraybuffer';\n  }\n  xhr.withCredentials = withCredentials;\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  xhr.onload = function (event) {\n    // status will be 0 for file:// urls\n    if (!xhr.status || (xhr.status >= 200 && xhr.status < 300)) {\n      const type = format.getType();\n      try {\n        /** @type {Document|Node|Object|string|undefined} */\n        let source;\n        if (type == 'text' || type == 'json') {\n          source = xhr.responseText;\n        } else if (type == 'xml') {\n          source = xhr.responseXML || xhr.responseText;\n        } else if (type == 'arraybuffer') {\n          source = /** @type {ArrayBuffer} */ (xhr.response);\n        }\n        if (source) {\n          success(\n            /** @type {Array<FeatureType>} */\n            (\n              format.readFeatures(source, {\n                extent: extent,\n                featureProjection: projection,\n              })\n            ),\n            format.readProjection(source),\n          );\n        } else {\n          failure();\n        }\n      } catch {\n        failure();\n      }\n    } else {\n      failure();\n    }\n  };\n  /**\n   * @private\n   */\n  xhr.onerror = failure;\n  xhr.send();\n}\n\n/**\n * Create an XHR feature loader for a `url` and `format`. The feature loader\n * loads features (with XHR), parses the features, and adds them to the\n * vector source.\n * @template {import(\"./Feature.js\").FeatureLike} [FeatureType=import(\"./Feature.js\").FeatureLike]\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default<import('./format/Feature.js').FeatureToFeatureClass<FeatureType>>} format Feature format.\n * @return {FeatureLoader<FeatureType>} The feature loader.\n * @api\n */\nexport function xhr(url, format) {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"./proj/Projection.js\").default} projection Projection.\n   * @param {function(Array<FeatureType>): void} [success] Success\n   *      Function called when loading succeeded.\n   * @param {function(): void} [failure] Failure\n   *      Function called when loading failed.\n   */\n  return function (extent, resolution, projection, success, failure) {\n    const source =\n      /** @type {import(\"./source/Vector\").default<FeatureType>} */ (this);\n    loadFeaturesXhr(\n      url,\n      format,\n      extent,\n      resolution,\n      projection,\n      /**\n       * @param {Array<FeatureType>} features The loaded features.\n       * @param {import(\"./proj/Projection.js\").default} dataProjection Data\n       * projection.\n       */\n      function (features, dataProjection) {\n        source.addFeatures(features);\n        if (success !== undefined) {\n          success(features);\n        }\n      },\n      /* FIXME handle error */ failure ? failure : VOID,\n    );\n  };\n}\n\n/**\n * Setter for the withCredentials configuration for the XHR.\n *\n * @param {boolean} xhrWithCredentials The value of withCredentials to set.\n * Compare https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/\n * @api\n */\nexport function setWithCredentials(xhrWithCredentials) {\n  withCredentials = xhrWithCredentials;\n}\n","/**\n * @module ol/source/Vector\n */\n\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RBush from '../structs/RBush.js';\nimport RenderFeature from '../render/Feature.js';\nimport Source from './Source.js';\nimport VectorEventType from './VectorEventType.js';\nimport {TRUE, VOID} from '../functions.js';\nimport {all as allStrategy} from '../loadingstrategy.js';\nimport {assert} from '../asserts.js';\nimport {containsExtent, equals, wrapAndSliceX} from '../extent.js';\nimport {extend} from '../array.js';\nimport {getUid} from '../util.js';\nimport {isEmpty} from '../obj.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {xhr} from '../featureloader.js';\n\n/**\n * A function that takes an {@link module:ol/extent~Extent} and a resolution as arguments, and\n * returns an array of {@link module:ol/extent~Extent} with the extents to load. Usually this\n * is one of the standard {@link module:ol/loadingstrategy} strategies.\n *\n * @typedef {function(import(\"../extent.js\").Extent, number, import(\"../proj/Projection.js\").default): Array<import(\"../extent.js\").Extent>} LoadingStrategy\n * @api\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Vector~VectorSource} instances are instances of this\n * type.\n * @template {import(\"../Feature.js\").FeatureLike} [FeatureClass=import(\"../Feature.js\").default]\n */\nexport class VectorSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {FeatureClass} [feature] Feature.\n   * @param {Array<FeatureClass>} [features] Features.\n   */\n  constructor(type, feature, features) {\n    super(type);\n\n    /**\n     * The added or removed feature for the `ADDFEATURE` and `REMOVEFEATURE` events, `undefined` otherwise.\n     * @type {FeatureClass|undefined}\n     * @api\n     */\n    this.feature = feature;\n\n    /**\n     * The loaded features for the `FEATURESLOADED` event, `undefined` otherwise.\n     * @type {Array<FeatureClass>|undefined}\n     * @api\n     */\n    this.features = features;\n  }\n}\n\n/***\n * @template {import(\"../Feature.js\").FeatureLike} [T=import(\"../Feature.js\").default]\n * @typedef {T extends RenderFeature ? T|Array<T> : T} FeatureClassOrArrayOfRenderFeatures\n */\n\n/***\n * @template Return\n * @template {import(\"../Feature.js\").FeatureLike} [FeatureType=import(\"../Feature.js\").default]\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./VectorEventType\").VectorSourceEventTypes, VectorSourceEvent<FeatureType>, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     import(\"./VectorEventType\").VectorSourceEventTypes, Return>} VectorSourceOnSignature\n */\n\n/**\n * @template {import(\"../Feature.js\").FeatureLike} FeatureType\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {Array<FeatureType>|Collection<FeatureType>} [features]\n * Features. If provided as {@link module:ol/Collection~Collection}, the features in the source\n * and the collection will stay in sync.\n * @property {import(\"../format/Feature.js\").default<import(\"../format/Feature.js\").FeatureToFeatureClass<FeatureType>>} [format] The feature format used by the XHR\n * feature loader when `url` is set. Required if `url` is set, otherwise ignored.\n * @property {import(\"../featureloader.js\").FeatureLoader<FeatureType>} [loader]\n * The loader function used to load features, from a remote source for example.\n * If this is not set and `url` is set, the source will create and use an XHR\n * feature loader. The `'featuresloadend'` and `'featuresloaderror'` events\n * will only fire if the `success` and `failure` callbacks are used.\n *\n * Example:\n *\n * ```js\n * import Vector from 'ol/source/Vector.js';\n * import GeoJSON from 'ol/format/GeoJSON.js';\n * import {bbox} from 'ol/loadingstrategy.js';\n *\n * const vectorSource = new Vector({\n *   format: new GeoJSON(),\n *   loader: function(extent, resolution, projection, success, failure) {\n *      const proj = projection.getCode();\n *      const url = 'https://ahocevar.com/geoserver/wfs?service=WFS&' +\n *          'version=1.1.0&request=GetFeature&typename=osm:water_areas&' +\n *          'outputFormat=application/json&srsname=' + proj + '&' +\n *          'bbox=' + extent.join(',') + ',' + proj;\n *      const xhr = new XMLHttpRequest();\n *      xhr.open('GET', url);\n *      const onError = function() {\n *        vectorSource.removeLoadedExtent(extent);\n *        failure();\n *      }\n *      xhr.onerror = onError;\n *      xhr.onload = function() {\n *        if (xhr.status == 200) {\n *          const features = vectorSource.getFormat().readFeatures(xhr.responseText);\n *          vectorSource.addFeatures(features);\n *          success(features);\n *        } else {\n *          onError();\n *        }\n *      }\n *      xhr.send();\n *    },\n *    strategy: bbox,\n *  });\n * ```\n * @property {boolean} [overlaps=true] This source may have overlapping geometries.\n * Setting this to `false` (e.g. for sources with polygons that represent administrative\n * boundaries or TopoJSON sources) allows the renderer to optimise fill and\n * stroke operations.\n * @property {LoadingStrategy} [strategy] The loading strategy to use.\n * By default an {@link module:ol/loadingstrategy.all}\n * strategy is used, a one-off strategy which loads all features at once.\n * @property {string|import(\"../featureloader.js\").FeatureUrlFunction} [url]\n * Setting this option instructs the source to load features using an XHR loader\n * (see {@link module:ol/featureloader.xhr}). Use a `string` and an\n * {@link module:ol/loadingstrategy.all} for a one-off download of all features from\n * the given URL. Use a {@link module:ol/featureloader~FeatureUrlFunction} to generate the url with\n * other loading strategies.\n * Requires `format` to be set as well.\n * When default XHR feature loader is provided, the features will\n * be transformed from the data projection to the view projection\n * during parsing. If your remote data source does not advertise its projection\n * properly, this transformation will be incorrect. For some formats, the\n * default projection (usually EPSG:4326) can be overridden by setting the\n * dataProjection constructor option on the format.\n * Note that if a source contains non-feature data, such as a GeoJSON geometry\n * or a KML NetworkLink, these will be ignored. Use a custom loader to load these.\n * @property {boolean} [useSpatialIndex=true]\n * By default, an RTree is used as spatial index. When features are removed and\n * added frequently, and the total number of features is low, setting this to\n * `false` may improve performance.\n *\n * Note that\n * {@link module:ol/source/Vector~VectorSource#getFeaturesInExtent},\n * {@link module:ol/source/Vector~VectorSource#getClosestFeatureToCoordinate} and\n * {@link module:ol/source/Vector~VectorSource#getExtent} cannot be used when `useSpatialIndex` is\n * set to `false`, and {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent} will loop\n * through all features.\n *\n * When set to `false`, the features will be maintained in an\n * {@link module:ol/Collection~Collection}, which can be retrieved through\n * {@link module:ol/source/Vector~VectorSource#getFeaturesCollection}.\n * @property {boolean} [wrapX=true] Wrap the world horizontally. For vector editing across the\n * -180° and 180° meridians to work properly, this should be set to `false`. The\n * resulting geometry coordinates will then exceed the world bounds.\n */\n\n/**\n * @classdesc\n * Provides a source of features for vector layers. Vector features provided\n * by this source are suitable for editing. See {@link module:ol/source/VectorTile~VectorTile} for\n * vector data that is optimized for rendering.\n *\n * @fires VectorSourceEvent\n * @api\n * @template {import(\"../Feature.js\").FeatureLike} [FeatureType=import(\"../Feature.js\").default]\n */\nclass VectorSource extends Source {\n  /**\n   * @param {Options<FeatureType>} [options] Vector source options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    super({\n      attributions: options.attributions,\n      interpolate: true,\n      projection: undefined,\n      state: 'ready',\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    });\n\n    /***\n     * @type {VectorSourceOnSignature<import(\"../events\").EventsKey, FeatureType>}\n     */\n    this.on;\n\n    /***\n     * @type {VectorSourceOnSignature<import(\"../events\").EventsKey, FeatureType>}\n     */\n    this.once;\n\n    /***\n     * @type {VectorSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {import(\"../featureloader.js\").FeatureLoader<FeatureType>}\n     */\n    this.loader_ = VOID;\n\n    /**\n     * @private\n     * @type {import(\"../format/Feature.js\").default<import('../format/Feature.js').FeatureToFeatureClass<FeatureType>>|undefined}\n     */\n    this.format_ = options.format;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = options.overlaps === undefined ? true : options.overlaps;\n\n    /**\n     * @private\n     * @type {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined}\n     */\n    this.url_ = options.url;\n\n    if (options.loader !== undefined) {\n      this.loader_ = options.loader;\n    } else if (this.url_ !== undefined) {\n      assert(this.format_, '`format` must be set when `url` is set');\n      // create a XHR feature loader for \"url\" and \"format\"\n      this.loader_ = xhr(this.url_, this.format_);\n    }\n\n    /**\n     * @private\n     * @type {LoadingStrategy}\n     */\n    this.strategy_ =\n      options.strategy !== undefined ? options.strategy : allStrategy;\n\n    const useSpatialIndex =\n      options.useSpatialIndex !== undefined ? options.useSpatialIndex : true;\n\n    /**\n     * @private\n     * @type {RBush<FeatureType>}\n     */\n    this.featuresRtree_ = useSpatialIndex ? new RBush() : null;\n\n    /**\n     * @private\n     * @type {RBush<{extent: import(\"../extent.js\").Extent}>}\n     */\n    this.loadedExtentsRtree_ = new RBush();\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.loadingExtentsCount_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, FeatureType>}\n     */\n    this.nullGeometryFeatures_ = {};\n\n    /**\n     * A lookup of features by id (the return from feature.getId()).\n     * @private\n     * @type {!Object<string, import('../Feature.js').FeatureLike|Array<import('../Feature.js').FeatureLike>>}\n     */\n    this.idIndex_ = {};\n\n    /**\n     * A lookup of features by uid (using getUid(feature)).\n     * @private\n     * @type {!Object<string, FeatureType>}\n     */\n    this.uidIndex_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.featureChangeKeys_ = {};\n\n    /**\n     * @private\n     * @type {Collection<FeatureType>|null}\n     */\n    this.featuresCollection_ = null;\n\n    /** @type {Collection<FeatureType>} */\n    let collection;\n    /** @type {Array<FeatureType>} */\n    let features;\n    if (Array.isArray(options.features)) {\n      features = options.features;\n    } else if (options.features) {\n      collection = options.features;\n      features = collection.getArray();\n    }\n    if (!useSpatialIndex && collection === undefined) {\n      collection = new Collection(features);\n    }\n    if (features !== undefined) {\n      this.addFeaturesInternal(features);\n    }\n    if (collection !== undefined) {\n      this.bindFeaturesCollection_(collection);\n    }\n  }\n\n  /**\n   * Add a single feature to the source.  If you want to add a batch of features\n   * at once, call {@link module:ol/source/Vector~VectorSource#addFeatures #addFeatures()}\n   * instead. A feature will not be added to the source if feature with\n   * the same id is already there. The reason for this behavior is to avoid\n   * feature duplication when using bbox or tile loading strategies.\n   * Note: this also applies if an {@link module:ol/Collection~Collection} is used for features,\n   * meaning that if a feature with a duplicate id is added in the collection, it will\n   * be removed from it right away.\n   * @param {FeatureType} feature Feature to add.\n   * @api\n   */\n  addFeature(feature) {\n    this.addFeatureInternal(feature);\n    this.changed();\n  }\n\n  /**\n   * Add a feature without firing a `change` event.\n   * @param {FeatureType} feature Feature.\n   * @protected\n   */\n  addFeatureInternal(feature) {\n    const featureKey = getUid(feature);\n\n    if (!this.addToIndex_(featureKey, feature)) {\n      if (this.featuresCollection_) {\n        this.featuresCollection_.remove(feature);\n      }\n      return;\n    }\n\n    this.setupChangeEvents_(featureKey, feature);\n\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      const extent = geometry.getExtent();\n      if (this.featuresRtree_) {\n        this.featuresRtree_.insert(extent, feature);\n      }\n    } else {\n      this.nullGeometryFeatures_[featureKey] = feature;\n    }\n\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.ADDFEATURE, feature),\n    );\n  }\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {FeatureType} feature The feature.\n   * @private\n   */\n  setupChangeEvents_(featureKey, feature) {\n    if (feature instanceof RenderFeature) {\n      return;\n    }\n    this.featureChangeKeys_[featureKey] = [\n      listen(feature, EventType.CHANGE, this.handleFeatureChange_, this),\n      listen(\n        feature,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleFeatureChange_,\n        this,\n      ),\n    ];\n  }\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {FeatureType} feature The feature.\n   * @return {boolean} The feature is \"valid\", in the sense that it is also a\n   *     candidate for insertion into the Rtree.\n   * @private\n   */\n  addToIndex_(featureKey, feature) {\n    let valid = true;\n    if (feature.getId() !== undefined) {\n      const id = String(feature.getId());\n      if (!(id in this.idIndex_)) {\n        this.idIndex_[id] = feature;\n      } else if (feature instanceof RenderFeature) {\n        const indexedFeature = this.idIndex_[id];\n        if (!(indexedFeature instanceof RenderFeature)) {\n          valid = false;\n        } else {\n          if (!Array.isArray(indexedFeature)) {\n            this.idIndex_[id] = [indexedFeature, feature];\n          } else {\n            indexedFeature.push(feature);\n          }\n        }\n      } else {\n        valid = false;\n      }\n    }\n    if (valid) {\n      assert(\n        !(featureKey in this.uidIndex_),\n        'The passed `feature` was already added to the source',\n      );\n      this.uidIndex_[featureKey] = feature;\n    }\n    return valid;\n  }\n\n  /**\n   * Add a batch of features to the source.\n   * @param {Array<FeatureType>} features Features to add.\n   * @api\n   */\n  addFeatures(features) {\n    this.addFeaturesInternal(features);\n    this.changed();\n  }\n\n  /**\n   * Add features without firing a `change` event.\n   * @param {Array<FeatureType>} features Features.\n   * @protected\n   */\n  addFeaturesInternal(features) {\n    const extents = [];\n    /** @type {Array<FeatureType>} */\n    const newFeatures = [];\n    /** @type Array<FeatureType> */\n    const geometryFeatures = [];\n\n    for (let i = 0, length = features.length; i < length; i++) {\n      const feature = features[i];\n      const featureKey = getUid(feature);\n      if (this.addToIndex_(featureKey, feature)) {\n        newFeatures.push(feature);\n      }\n    }\n\n    for (let i = 0, length = newFeatures.length; i < length; i++) {\n      const feature = newFeatures[i];\n      const featureKey = getUid(feature);\n      this.setupChangeEvents_(featureKey, feature);\n\n      const geometry = feature.getGeometry();\n      if (geometry) {\n        const extent = geometry.getExtent();\n        extents.push(extent);\n        geometryFeatures.push(feature);\n      } else {\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    }\n    if (this.featuresRtree_) {\n      this.featuresRtree_.load(extents, geometryFeatures);\n    }\n\n    if (this.hasListener(VectorEventType.ADDFEATURE)) {\n      for (let i = 0, length = newFeatures.length; i < length; i++) {\n        this.dispatchEvent(\n          new VectorSourceEvent(VectorEventType.ADDFEATURE, newFeatures[i]),\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {!Collection<FeatureType>} collection Collection.\n   * @private\n   */\n  bindFeaturesCollection_(collection) {\n    let modifyingCollection = false;\n    this.addEventListener(\n      VectorEventType.ADDFEATURE,\n      /**\n       * @param {VectorSourceEvent<FeatureType>} evt The vector source event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.push(evt.feature);\n          modifyingCollection = false;\n        }\n      },\n    );\n    this.addEventListener(\n      VectorEventType.REMOVEFEATURE,\n      /**\n       * @param {VectorSourceEvent<FeatureType>} evt The vector source event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.remove(evt.feature);\n          modifyingCollection = false;\n        }\n      },\n    );\n    collection.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent<FeatureType>} evt The collection event\n       */\n      (evt) => {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.addFeature(evt.element);\n          modifyingCollection = false;\n        }\n      },\n    );\n    collection.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent<FeatureType>} evt The collection event\n       */\n      (evt) => {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.removeFeature(evt.element);\n          modifyingCollection = false;\n        }\n      },\n    );\n    this.featuresCollection_ = collection;\n  }\n\n  /**\n   * Remove all features from the source.\n   * @param {boolean} [fast] Skip dispatching of {@link module:ol/source/Vector.VectorSourceEvent#event:removefeature} events.\n   * @api\n   */\n  clear(fast) {\n    if (fast) {\n      for (const featureId in this.featureChangeKeys_) {\n        const keys = this.featureChangeKeys_[featureId];\n        keys.forEach(unlistenByKey);\n      }\n      if (!this.featuresCollection_) {\n        this.featureChangeKeys_ = {};\n        this.idIndex_ = {};\n        this.uidIndex_ = {};\n      }\n    } else {\n      if (this.featuresRtree_) {\n        const removeAndIgnoreReturn = (feature) => {\n          this.removeFeatureInternal(feature);\n        };\n        this.featuresRtree_.forEach(removeAndIgnoreReturn);\n        for (const id in this.nullGeometryFeatures_) {\n          this.removeFeatureInternal(this.nullGeometryFeatures_[id]);\n        }\n      }\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.clear();\n    }\n\n    if (this.featuresRtree_) {\n      this.featuresRtree_.clear();\n    }\n    this.nullGeometryFeatures_ = {};\n\n    const clearEvent = new VectorSourceEvent(VectorEventType.CLEAR);\n    this.dispatchEvent(clearEvent);\n    this.changed();\n  }\n\n  /**\n   * Iterate through all features on the source, calling the provided callback\n   * with each one.  If the callback returns any \"truthy\" value, iteration will\n   * stop and the function will return the same value.\n   * Note: this function only iterate through the feature that have a defined geometry.\n   *\n   * @param {function(FeatureType): T} callback Called with each feature\n   *     on the source.  Return a truthy value to stop iteration.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeature(callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEach(callback);\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  }\n\n  /**\n   * Iterate through all features whose geometries contain the provided\n   * coordinate, calling the callback with each feature.  If the callback returns\n   * a \"truthy\" value, iteration will stop and the function will return the same\n   * value.\n   *\n   * For {@link module:ol/render/Feature~RenderFeature} features, the callback will be\n   * called for all features.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(FeatureType): T} callback Called with each feature\n   *     whose goemetry contains the provided coordinate.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   */\n  forEachFeatureAtCoordinateDirect(coordinate, callback) {\n    const extent = [coordinate[0], coordinate[1], coordinate[0], coordinate[1]];\n    return this.forEachFeatureInExtent(extent, function (feature) {\n      const geometry = feature.getGeometry();\n      if (\n        geometry instanceof RenderFeature ||\n        geometry.intersectsCoordinate(coordinate)\n      ) {\n        return callback(feature);\n      }\n      return undefined;\n    });\n  }\n\n  /**\n   * Iterate through all features whose bounding box intersects the provided\n   * extent (note that the feature's geometry may not intersect the extent),\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you are interested in features whose geometry intersects an extent, call\n   * the {@link module:ol/source/Vector~VectorSource#forEachFeatureIntersectingExtent #forEachFeatureIntersectingExtent()} method instead.\n   *\n   * When `useSpatialIndex` is set to false, this method will loop through all\n   * features, equivalent to {@link module:ol/source/Vector~VectorSource#forEachFeature #forEachFeature()}.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(FeatureType): T} callback Called with each feature\n   *     whose bounding box intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeatureInExtent(extent, callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEachInExtent(extent, callback);\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  }\n\n  /**\n   * Iterate through all features whose geometry intersects the provided extent,\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you only want to test for bounding box intersection, call the\n   * {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent #forEachFeatureInExtent()} method instead.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(FeatureType): T} callback Called with each feature\n   *     whose geometry intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeatureIntersectingExtent(extent, callback) {\n    return this.forEachFeatureInExtent(\n      extent,\n      /**\n       * @param {FeatureType} feature Feature.\n       * @return {T|undefined} The return value from the last call to the callback.\n       */\n      function (feature) {\n        const geometry = feature.getGeometry();\n        if (\n          geometry instanceof RenderFeature ||\n          geometry.intersectsExtent(extent)\n        ) {\n          const result = callback(feature);\n          if (result) {\n            return result;\n          }\n        }\n      },\n    );\n  }\n\n  /**\n   * Get the features collection associated with this source. Will be `null`\n   * unless the source was configured with `useSpatialIndex` set to `false`, or\n   * with an {@link module:ol/Collection~Collection} as `features`.\n   * @return {Collection<FeatureType>|null} The collection of features.\n   * @api\n   */\n  getFeaturesCollection() {\n    return this.featuresCollection_;\n  }\n\n  /**\n   * Get a snapshot of the features currently on the source in random order. The returned array\n   * is a copy, the features are references to the features in the source.\n   * @return {Array<FeatureType>} Features.\n   * @api\n   */\n  getFeatures() {\n    let features;\n    if (this.featuresCollection_) {\n      features = this.featuresCollection_.getArray().slice(0);\n    } else if (this.featuresRtree_) {\n      features = this.featuresRtree_.getAll();\n      if (!isEmpty(this.nullGeometryFeatures_)) {\n        extend(features, Object.values(this.nullGeometryFeatures_));\n      }\n    }\n    return features;\n  }\n\n  /**\n   * Get all features whose geometry intersects the provided coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   * @api\n   */\n  getFeaturesAtCoordinate(coordinate) {\n    const features = [];\n    this.forEachFeatureAtCoordinateDirect(coordinate, function (feature) {\n      features.push(feature);\n    });\n    return features;\n  }\n\n  /**\n   * Get all features whose bounding box intersects the provided extent.  Note that this returns an array of\n   * all features intersecting the given extent in random order (so it may include\n   * features whose geometries do not intersect the extent).\n   *\n   * When `useSpatialIndex` is set to false, this method will return all\n   * features.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {import(\"../proj/Projection.js\").default} [projection] Include features\n   * where `extent` exceeds the x-axis bounds of `projection` and wraps around the world.\n   * @return {Array<FeatureType>} Features.\n   * @api\n   */\n  getFeaturesInExtent(extent, projection) {\n    if (this.featuresRtree_) {\n      const multiWorld = projection && projection.canWrapX() && this.getWrapX();\n\n      if (!multiWorld) {\n        return this.featuresRtree_.getInExtent(extent);\n      }\n\n      const extents = wrapAndSliceX(extent, projection);\n\n      return [].concat(\n        ...extents.map((anExtent) => this.featuresRtree_.getInExtent(anExtent)),\n      );\n    }\n    if (this.featuresCollection_) {\n      return this.featuresCollection_.getArray().slice(0);\n    }\n    return [];\n  }\n\n  /**\n   * Get the closest feature to the provided coordinate.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false` and the features in this source are of type\n   * {@link module:ol/Feature~Feature}.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(FeatureType):boolean} [filter] Feature filter function.\n   *     The filter function will receive one argument, the {@link module:ol/Feature~Feature feature}\n   *     and it should return a boolean value. By default, no filtering is made.\n   * @return {FeatureType} Closest feature.\n   * @api\n   */\n  getClosestFeatureToCoordinate(coordinate, filter) {\n    // Find the closest feature using branch and bound.  We start searching an\n    // infinite extent, and find the distance from the first feature found.  This\n    // becomes the closest feature.  We then compute a smaller extent which any\n    // closer feature must intersect.  We continue searching with this smaller\n    // extent, trying to find a closer feature.  Every time we find a closer\n    // feature, we update the extent being searched so that any even closer\n    // feature must intersect it.  We continue until we run out of features.\n    const x = coordinate[0];\n    const y = coordinate[1];\n    let closestFeature = null;\n    const closestPoint = [NaN, NaN];\n    let minSquaredDistance = Infinity;\n    const extent = [-Infinity, -Infinity, Infinity, Infinity];\n    filter = filter ? filter : TRUE;\n    this.featuresRtree_.forEachInExtent(\n      extent,\n      /**\n       * @param {FeatureType} feature Feature.\n       */\n      function (feature) {\n        if (filter(feature)) {\n          const geometry = feature.getGeometry();\n          const previousMinSquaredDistance = minSquaredDistance;\n          minSquaredDistance =\n            geometry instanceof RenderFeature\n              ? 0\n              : geometry.closestPointXY(x, y, closestPoint, minSquaredDistance);\n          if (minSquaredDistance < previousMinSquaredDistance) {\n            closestFeature = feature;\n            // This is sneaky.  Reduce the extent that it is currently being\n            // searched while the R-Tree traversal using this same extent object\n            // is still in progress.  This is safe because the new extent is\n            // strictly contained by the old extent.\n            const minDistance = Math.sqrt(minSquaredDistance);\n            extent[0] = x - minDistance;\n            extent[1] = y - minDistance;\n            extent[2] = x + minDistance;\n            extent[3] = y + minDistance;\n          }\n        }\n      },\n    );\n    return closestFeature;\n  }\n\n  /**\n   * Get the extent of the features currently in the source.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../extent.js\").Extent} [extent] Destination extent. If provided, no new extent\n   *     will be created. Instead, that extent's coordinates will be overwritten.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent(extent) {\n    return this.featuresRtree_.getExtent(extent);\n  }\n\n  /**\n   * Get a feature by its identifier (the value returned by feature.getId()). When `RenderFeature`s\n   * are used, `getFeatureById()` can return an array of `RenderFeature`s. This allows for handling\n   * of `GeometryCollection` geometries, where format readers create one `RenderFeature` per\n   * `GeometryCollection` member.\n   * Note that the index treats string and numeric identifiers as the same.  So\n   * `source.getFeatureById(2)` will return a feature with id `'2'` or `2`.\n   *\n   * @param {string|number} id Feature identifier.\n   * @return {FeatureClassOrArrayOfRenderFeatures<FeatureType>|null} The feature (or `null` if not found).\n   * @api\n   */\n  getFeatureById(id) {\n    const feature = this.idIndex_[id.toString()];\n    return feature !== undefined\n      ? /** @type {FeatureClassOrArrayOfRenderFeatures<FeatureType>} */ (\n          feature\n        )\n      : null;\n  }\n\n  /**\n   * Get a feature by its internal unique identifier (using `getUid`).\n   *\n   * @param {string} uid Feature identifier.\n   * @return {FeatureType|null} The feature (or `null` if not found).\n   */\n  getFeatureByUid(uid) {\n    const feature = this.uidIndex_[uid];\n    return feature !== undefined ? feature : null;\n  }\n\n  /**\n   * Get the format associated with this source.\n   *\n   * @return {import(\"../format/Feature.js\").default<import('../format/Feature.js').FeatureToFeatureClass<FeatureType>>|undefined} The feature format.\n   * @api\n   */\n  getFormat() {\n    return this.format_;\n  }\n\n  /**\n   * @return {boolean} The source can have overlapping geometries.\n   */\n  getOverlaps() {\n    return this.overlaps_;\n  }\n\n  /**\n   * Get the url associated with this source.\n   *\n   * @return {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined} The url.\n   * @api\n   */\n  getUrl() {\n    return this.url_;\n  }\n\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  handleFeatureChange_(event) {\n    const feature = /** @type {FeatureType} */ (event.target);\n    const featureKey = getUid(feature);\n    const geometry = feature.getGeometry();\n    if (!geometry) {\n      if (!(featureKey in this.nullGeometryFeatures_)) {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.remove(feature);\n        }\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    } else {\n      const extent = geometry.getExtent();\n      if (featureKey in this.nullGeometryFeatures_) {\n        delete this.nullGeometryFeatures_[featureKey];\n        if (this.featuresRtree_) {\n          this.featuresRtree_.insert(extent, feature);\n        }\n      } else {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.update(extent, feature);\n        }\n      }\n    }\n    const id = feature.getId();\n    if (id !== undefined) {\n      const sid = id.toString();\n      if (this.idIndex_[sid] !== feature) {\n        this.removeFromIdIndex_(feature);\n        this.idIndex_[sid] = feature;\n      }\n    } else {\n      this.removeFromIdIndex_(feature);\n      this.uidIndex_[featureKey] = feature;\n    }\n    this.changed();\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.CHANGEFEATURE, feature),\n    );\n  }\n\n  /**\n   * Returns true if the feature is contained within the source.\n   * @param {FeatureType} feature Feature.\n   * @return {boolean} Has feature.\n   * @api\n   */\n  hasFeature(feature) {\n    const id = feature.getId();\n    if (id !== undefined) {\n      return id in this.idIndex_;\n    }\n    return getUid(feature) in this.uidIndex_;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    if (this.featuresRtree_) {\n      return (\n        this.featuresRtree_.isEmpty() && isEmpty(this.nullGeometryFeatures_)\n      );\n    }\n    if (this.featuresCollection_) {\n      return this.featuresCollection_.getLength() === 0;\n    }\n    return true;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  loadFeatures(extent, resolution, projection) {\n    const loadedExtentsRtree = this.loadedExtentsRtree_;\n    const extentsToLoad = this.strategy_(extent, resolution, projection);\n    for (let i = 0, ii = extentsToLoad.length; i < ii; ++i) {\n      const extentToLoad = extentsToLoad[i];\n      const alreadyLoaded = loadedExtentsRtree.forEachInExtent(\n        extentToLoad,\n        /**\n         * @param {{extent: import(\"../extent.js\").Extent}} object Object.\n         * @return {boolean} Contains.\n         */\n        function (object) {\n          return containsExtent(object.extent, extentToLoad);\n        },\n      );\n      if (!alreadyLoaded) {\n        ++this.loadingExtentsCount_;\n        this.dispatchEvent(\n          new VectorSourceEvent(VectorEventType.FEATURESLOADSTART),\n        );\n        this.loader_.call(\n          this,\n          extentToLoad,\n          resolution,\n          projection,\n          (features) => {\n            --this.loadingExtentsCount_;\n            this.dispatchEvent(\n              new VectorSourceEvent(\n                VectorEventType.FEATURESLOADEND,\n                undefined,\n                features,\n              ),\n            );\n          },\n          () => {\n            --this.loadingExtentsCount_;\n            this.dispatchEvent(\n              new VectorSourceEvent(VectorEventType.FEATURESLOADERROR),\n            );\n          },\n        );\n        loadedExtentsRtree.insert(extentToLoad, {extent: extentToLoad.slice()});\n      }\n    }\n    this.loading =\n      this.loader_.length < 4 ? false : this.loadingExtentsCount_ > 0;\n  }\n\n  refresh() {\n    this.clear(true);\n    this.loadedExtentsRtree_.clear();\n    super.refresh();\n  }\n\n  /**\n   * Remove an extent from the list of loaded extents.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  removeLoadedExtent(extent) {\n    const loadedExtentsRtree = this.loadedExtentsRtree_;\n    let obj;\n    loadedExtentsRtree.forEachInExtent(extent, function (object) {\n      if (equals(object.extent, extent)) {\n        obj = object;\n        return true;\n      }\n    });\n    if (obj) {\n      loadedExtentsRtree.remove(obj);\n    }\n  }\n\n  /**\n   * Batch remove features from the source.  If you want to remove all features\n   * at once, use the {@link module:ol/source/Vector~VectorSource#clear #clear()} method\n   * instead.\n   * @param {Array<FeatureType>} features Features to remove.\n   * @api\n   */\n  removeFeatures(features) {\n    const removedFeatures = [];\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      const feature = features[i];\n      const removedFeature = this.removeFeatureInternal(feature);\n      if (removedFeature) {\n        removedFeatures.push(removedFeature);\n      }\n    }\n    if (removedFeatures.length > 0) {\n      this.changed();\n    }\n  }\n\n  /**\n   * Remove a single feature from the source. If you want to batch remove\n   * features, use the {@link module:ol/source/Vector~VectorSource#removeFeatures #removeFeatures()} method\n   * instead.\n   * @param {FeatureType} feature Feature to remove.\n   * @api\n   */\n  removeFeature(feature) {\n    if (!feature) {\n      return;\n    }\n    const result = this.removeFeatureInternal(feature);\n    if (result) {\n      this.changed();\n    }\n  }\n\n  /**\n   * Remove feature without firing a `change` event.\n   * @param {FeatureType} feature Feature.\n   * @return {FeatureType|undefined} The removed feature\n   *     (or undefined if the feature was not found).\n   * @protected\n   */\n  removeFeatureInternal(feature) {\n    const featureKey = getUid(feature);\n    if (!(featureKey in this.uidIndex_)) {\n      return;\n    }\n\n    if (featureKey in this.nullGeometryFeatures_) {\n      delete this.nullGeometryFeatures_[featureKey];\n    } else {\n      if (this.featuresRtree_) {\n        this.featuresRtree_.remove(feature);\n      }\n    }\n\n    const featureChangeKeys = this.featureChangeKeys_[featureKey];\n    featureChangeKeys?.forEach(unlistenByKey);\n    delete this.featureChangeKeys_[featureKey];\n\n    const id = feature.getId();\n    if (id !== undefined) {\n      const idString = id.toString();\n      const indexedFeature = this.idIndex_[idString];\n      if (indexedFeature === feature) {\n        delete this.idIndex_[idString];\n      } else if (Array.isArray(indexedFeature)) {\n        indexedFeature.splice(indexedFeature.indexOf(feature), 1);\n        if (indexedFeature.length === 1) {\n          this.idIndex_[idString] = indexedFeature[0];\n        }\n      }\n    }\n    delete this.uidIndex_[featureKey];\n    if (this.hasListener(VectorEventType.REMOVEFEATURE)) {\n      this.dispatchEvent(\n        new VectorSourceEvent(VectorEventType.REMOVEFEATURE, feature),\n      );\n    }\n    return feature;\n  }\n\n  /**\n   * Remove a feature from the id index.  Called internally when the feature id\n   * may have changed.\n   * @param {FeatureType} feature The feature.\n   * @return {boolean} Removed the feature from the index.\n   * @private\n   */\n  removeFromIdIndex_(feature) {\n    let removed = false;\n    for (const id in this.idIndex_) {\n      const indexedFeature = this.idIndex_[id];\n      if (\n        feature instanceof RenderFeature &&\n        Array.isArray(indexedFeature) &&\n        indexedFeature.includes(feature)\n      ) {\n        indexedFeature.splice(indexedFeature.indexOf(feature), 1);\n      } else if (this.idIndex_[id] === feature) {\n        delete this.idIndex_[id];\n        removed = true;\n        break;\n      }\n    }\n    return removed;\n  }\n\n  /**\n   * Set the new loader of the source. The next render cycle will use the\n   * new loader.\n   * @param {import(\"../featureloader.js\").FeatureLoader<FeatureType>} loader The loader to set.\n   * @api\n   */\n  setLoader(loader) {\n    this.loader_ = loader;\n  }\n\n  /**\n   * Points the source to a new url. The next render cycle will use the new url.\n   * @param {string|import(\"../featureloader.js\").FeatureUrlFunction} url Url.\n   * @api\n   */\n  setUrl(url) {\n    assert(this.format_, '`format` must be set when `url` is set');\n    this.url_ = url;\n    this.setLoader(xhr(url, this.format_));\n  }\n}\n\nexport default VectorSource;\n","/**\n * @module ol/render\n */\nimport CanvasImmediateRenderer from './render/canvas/Immediate.js';\nimport {DEVICE_PIXEL_RATIO} from './has.js';\nimport {\n  apply as applyTransform,\n  create as createTransform,\n  multiply as multiplyTransform,\n  scale as scaleTransform,\n} from './transform.js';\nimport {getSquaredTolerance} from './renderer/vector.js';\nimport {getTransformFromProjections, getUserProjection} from './proj.js';\n\n/**\n * @typedef {Object} State\n * @property {CanvasRenderingContext2D} context Canvas context that the layer is being rendered to.\n * @property {import(\"./Feature.js\").FeatureLike} feature Feature.\n * @property {import(\"./geom/SimpleGeometry.js\").default} geometry Geometry.\n * @property {number} pixelRatio Pixel ratio used by the layer renderer.\n * @property {number} resolution Resolution that the render batch was created and optimized for.\n * This is not the view's resolution that is being rendered.\n * @property {number} rotation Rotation of the rendered layer in radians.\n */\n\n/**\n * A function to be used when sorting features before rendering.\n * It takes two instances of {@link module:ol/Feature~Feature} or\n * {@link module:ol/render/Feature~RenderFeature} and returns a `{number}`.\n *\n * @typedef {function(import(\"./Feature.js\").FeatureLike, import(\"./Feature.js\").FeatureLike):number} OrderFunction\n */\n\n/**\n * @typedef {Object} ToContextOptions\n * @property {import(\"./size.js\").Size} [size] Desired size of the canvas in css\n * pixels. When provided, both canvas and css size will be set according to the\n * `pixelRatio`. If not provided, the current canvas and css sizes will not be\n * altered.\n * @property {number} [pixelRatio=window.devicePixelRatio] Pixel ratio (canvas\n * pixel to css pixel ratio) for the canvas.\n */\n\n/**\n * Binds a Canvas Immediate API to a canvas context, to allow drawing geometries\n * to the context's canvas.\n *\n * The units for geometry coordinates are css pixels relative to the top left\n * corner of the canvas element.\n * ```js\n * import {toContext} from 'ol/render.js';\n * import Fill from 'ol/style/Fill.js';\n * import Polygon from 'ol/geom/Polygon.js';\n *\n * const canvas = document.createElement('canvas');\n * const render = toContext(\n *     canvas.getContext('2d'),\n *     {size: [100, 100]}\n * );\n * render.setFillStrokeStyle(new Fill({ color: blue }));\n * render.drawPolygon(\n *     new Polygon([[[0, 0], [100, 100], [100, 0], [0, 0]]])\n * );\n * ```\n *\n * @param {CanvasRenderingContext2D} context Canvas context.\n * @param {ToContextOptions} [options] Options.\n * @return {CanvasImmediateRenderer} Canvas Immediate.\n * @api\n */\nexport function toContext(context, options) {\n  const canvas = context.canvas;\n  options = options ? options : {};\n  const pixelRatio = options.pixelRatio || DEVICE_PIXEL_RATIO;\n  const size = options.size;\n  if (size) {\n    canvas.width = size[0] * pixelRatio;\n    canvas.height = size[1] * pixelRatio;\n    canvas.style.width = size[0] + 'px';\n    canvas.style.height = size[1] + 'px';\n  }\n  const extent = [0, 0, canvas.width, canvas.height];\n  const transform = scaleTransform(createTransform(), pixelRatio, pixelRatio);\n  return new CanvasImmediateRenderer(context, pixelRatio, extent, transform, 0);\n}\n\n/**\n * Gets a vector context for drawing to the event's canvas.\n * @param {import(\"./render/Event.js\").default} event Render event.\n * @return {CanvasImmediateRenderer} Vector context.\n * @api\n */\nexport function getVectorContext(event) {\n  if (!(event.context instanceof CanvasRenderingContext2D)) {\n    throw new Error('Only works for render events from Canvas 2D layers');\n  }\n\n  // canvas may be at a different pixel ratio than frameState.pixelRatio\n  const a = event.inversePixelTransform[0];\n  const b = event.inversePixelTransform[1];\n  const canvasPixelRatio = Math.sqrt(a * a + b * b);\n  const frameState = event.frameState;\n  const transform = multiplyTransform(\n    event.inversePixelTransform.slice(),\n    frameState.coordinateToPixelTransform,\n  );\n  const squaredTolerance = getSquaredTolerance(\n    frameState.viewState.resolution,\n    canvasPixelRatio,\n  );\n  let userTransform;\n  const userProjection = getUserProjection();\n  if (userProjection) {\n    userTransform = getTransformFromProjections(\n      userProjection,\n      frameState.viewState.projection,\n    );\n  }\n\n  return new CanvasImmediateRenderer(\n    event.context,\n    canvasPixelRatio,\n    frameState.extent,\n    transform,\n    frameState.viewState.rotation,\n    squaredTolerance,\n    userTransform,\n  );\n}\n\n/**\n * Gets the pixel of the event's canvas context from the map viewport's CSS pixel.\n * @param {import(\"./render/Event.js\").default} event Render event.\n * @param {import(\"./pixel.js\").Pixel} pixel CSS pixel relative to the top-left\n * corner of the map viewport.\n * @return {import(\"./pixel.js\").Pixel} Pixel on the event's canvas context.\n * @api\n */\nexport function getRenderPixel(event, pixel) {\n  return applyTransform(event.inversePixelTransform, pixel.slice(0));\n}\n","/**\n * @module ol/geom/flat/geodesic\n */\nimport {get as getProjection, getTransform} from '../../proj.js';\nimport {squaredSegmentDistance, toDegrees, toRadians} from '../../math.js';\n\n/**\n * @param {function(number): import(\"../../coordinate.js\").Coordinate} interpolate Interpolate function.\n * @param {import(\"../../proj.js\").TransformFunction} transform Transform from longitude/latitude to\n *     projected coordinates.\n * @param {number} squaredTolerance Squared tolerance.\n * @return {Array<number>} Flat coordinates.\n */\nfunction line(interpolate, transform, squaredTolerance) {\n  // FIXME reduce garbage generation\n  // FIXME optimize stack operations\n\n  /** @type {Array<number>} */\n  const flatCoordinates = [];\n\n  let geoA = interpolate(0);\n  let geoB = interpolate(1);\n\n  let a = transform(geoA);\n  let b = transform(geoB);\n\n  /** @type {Array<import(\"../../coordinate.js\").Coordinate>} */\n  const geoStack = [geoB, geoA];\n  /** @type {Array<import(\"../../coordinate.js\").Coordinate>} */\n  const stack = [b, a];\n  /** @type {Array<number>} */\n  const fractionStack = [1, 0];\n\n  /** @type {!Object<string, boolean>} */\n  const fractions = {};\n\n  let maxIterations = 1e5;\n  let geoM, m, fracA, fracB, fracM, key;\n\n  while (--maxIterations > 0 && fractionStack.length > 0) {\n    // Pop the a coordinate off the stack\n    fracA = fractionStack.pop();\n    geoA = geoStack.pop();\n    a = stack.pop();\n    // Add the a coordinate if it has not been added yet\n    key = fracA.toString();\n    if (!(key in fractions)) {\n      flatCoordinates.push(a[0], a[1]);\n      fractions[key] = true;\n    }\n    // Pop the b coordinate off the stack\n    fracB = fractionStack.pop();\n    geoB = geoStack.pop();\n    b = stack.pop();\n    // Find the m point between the a and b coordinates\n    fracM = (fracA + fracB) / 2;\n    geoM = interpolate(fracM);\n    m = transform(geoM);\n    if (\n      squaredSegmentDistance(m[0], m[1], a[0], a[1], b[0], b[1]) <\n      squaredTolerance\n    ) {\n      // If the m point is sufficiently close to the straight line, then we\n      // discard it.  Just use the b coordinate and move on to the next line\n      // segment.\n      flatCoordinates.push(b[0], b[1]);\n      key = fracB.toString();\n      fractions[key] = true;\n    } else {\n      // Otherwise, we need to subdivide the current line segment.  Split it\n      // into two and push the two line segments onto the stack.\n      fractionStack.push(fracB, fracM, fracM, fracA);\n      stack.push(b, m, m, a);\n      geoStack.push(geoB, geoM, geoM, geoA);\n    }\n  }\n\n  return flatCoordinates;\n}\n\n/**\n * Generate a great-circle arcs between two lat/lon points.\n * @param {number} lon1 Longitude 1 in degrees.\n * @param {number} lat1 Latitude 1 in degrees.\n * @param {number} lon2 Longitude 2 in degrees.\n * @param {number} lat2 Latitude 2 in degrees.\n * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n * @param {number} squaredTolerance Squared tolerance.\n * @return {Array<number>} Flat coordinates.\n */\nexport function greatCircleArc(\n  lon1,\n  lat1,\n  lon2,\n  lat2,\n  projection,\n  squaredTolerance,\n) {\n  const geoProjection = getProjection('EPSG:4326');\n\n  const cosLat1 = Math.cos(toRadians(lat1));\n  const sinLat1 = Math.sin(toRadians(lat1));\n  const cosLat2 = Math.cos(toRadians(lat2));\n  const sinLat2 = Math.sin(toRadians(lat2));\n  const cosDeltaLon = Math.cos(toRadians(lon2 - lon1));\n  const sinDeltaLon = Math.sin(toRadians(lon2 - lon1));\n  const d = sinLat1 * sinLat2 + cosLat1 * cosLat2 * cosDeltaLon;\n\n  return line(\n    /**\n     * @param {number} frac Fraction.\n     * @return {import(\"../../coordinate.js\").Coordinate} Coordinate.\n     */\n    function (frac) {\n      if (1 <= d) {\n        return [lon2, lat2];\n      }\n      const D = frac * Math.acos(d);\n      const cosD = Math.cos(D);\n      const sinD = Math.sin(D);\n      const y = sinDeltaLon * cosLat2;\n      const x = cosLat1 * sinLat2 - sinLat1 * cosLat2 * cosDeltaLon;\n      const theta = Math.atan2(y, x);\n      const lat = Math.asin(sinLat1 * cosD + cosLat1 * sinD * Math.cos(theta));\n      const lon =\n        toRadians(lon1) +\n        Math.atan2(\n          Math.sin(theta) * sinD * cosLat1,\n          cosD - sinLat1 * Math.sin(lat),\n        );\n      return [toDegrees(lon), toDegrees(lat)];\n    },\n    getTransform(geoProjection, projection),\n    squaredTolerance,\n  );\n}\n\n/**\n * Generate a meridian (line at constant longitude).\n * @param {number} lon Longitude.\n * @param {number} lat1 Latitude 1.\n * @param {number} lat2 Latitude 2.\n * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n * @param {number} squaredTolerance Squared tolerance.\n * @return {Array<number>} Flat coordinates.\n */\nexport function meridian(lon, lat1, lat2, projection, squaredTolerance) {\n  const epsg4326Projection = getProjection('EPSG:4326');\n  return line(\n    /**\n     * @param {number} frac Fraction.\n     * @return {import(\"../../coordinate.js\").Coordinate} Coordinate.\n     */\n    function (frac) {\n      return [lon, lat1 + (lat2 - lat1) * frac];\n    },\n    getTransform(epsg4326Projection, projection),\n    squaredTolerance,\n  );\n}\n\n/**\n * Generate a parallel (line at constant latitude).\n * @param {number} lat Latitude.\n * @param {number} lon1 Longitude 1.\n * @param {number} lon2 Longitude 2.\n * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n * @param {number} squaredTolerance Squared tolerance.\n * @return {Array<number>} Flat coordinates.\n */\nexport function parallel(lat, lon1, lon2, projection, squaredTolerance) {\n  const epsg4326Projection = getProjection('EPSG:4326');\n  return line(\n    /**\n     * @param {number} frac Fraction.\n     * @return {import(\"../../coordinate.js\").Coordinate} Coordinate.\n     */\n    function (frac) {\n      return [lon1 + (lon2 - lon1) * frac, lat];\n    },\n    getTransform(epsg4326Projection, projection),\n    squaredTolerance,\n  );\n}\n","/**\n * @module ol/layer/Graticule\n */\nimport Collection from '../Collection.js';\nimport EventType from '../render/EventType.js';\nimport Feature from '../Feature.js';\nimport Fill from '../style/Fill.js';\nimport LineString from '../geom/LineString.js';\nimport Point from '../geom/Point.js';\nimport Stroke from '../style/Stroke.js';\nimport Style from '../style/Style.js';\nimport Text from '../style/Text.js';\nimport VectorLayer from './Vector.js';\nimport VectorSource from '../source/Vector.js';\nimport {\n  applyTransform,\n  approximatelyEquals,\n  containsCoordinate,\n  containsExtent,\n  equals,\n  getCenter,\n  getIntersection,\n  getWidth,\n  intersects,\n  isEmpty,\n  wrapX as wrapExtentX,\n} from '../extent.js';\nimport {clamp} from '../math.js';\nimport {degreesToStringHDMS} from '../coordinate.js';\nimport {\n  equivalent as equivalentProjection,\n  get as getProjection,\n  getTransform,\n} from '../proj.js';\nimport {getVectorContext} from '../render.js';\nimport {meridian, parallel} from '../geom/flat/geodesic.js';\n\n/**\n * @type {Stroke}\n * @private\n * @const\n */\nconst DEFAULT_STROKE_STYLE = new Stroke({\n  color: 'rgba(0,0,0,0.2)',\n});\n\n/**\n * @type {Array<number>}\n * @private\n */\nconst INTERVALS = [\n  90,\n  45,\n  30,\n  20,\n  10,\n  5,\n  2,\n  1,\n  30 / 60,\n  20 / 60,\n  10 / 60,\n  5 / 60,\n  2 / 60,\n  1 / 60,\n  30 / 3600,\n  20 / 3600,\n  10 / 3600,\n  5 / 3600,\n  2 / 3600,\n  1 / 3600,\n];\n\n/**\n * @typedef {Object} GraticuleLabelDataType\n * @property {Point} geom Geometry.\n * @property {string} text Text.\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {number} [maxLines=100] The maximum number of meridians and\n * parallels from the center of the map. The default value of 100 means that at\n * most 200 meridians and 200 parallels will be displayed. The default value is\n * appropriate for conformal projections like Spherical Mercator. If you\n * increase the value, more lines will be drawn and the drawing performance will\n * decrease.\n * @property {Stroke} [strokeStyle] The\n * stroke style to use for drawing the graticule. If not provided, the following stroke will be used:\n * ```js\n * new Stroke({\n *   color: 'rgba(0, 0, 0, 0.2)' // a not fully opaque black\n * });\n * ```\n * @property {number} [targetSize=100] The target size of the graticule cells,\n * in pixels.\n * @property {boolean} [showLabels=false] Render a label with the respective\n * latitude/longitude for each graticule line.\n * @property {function(number):string} [lonLabelFormatter] Label formatter for\n * longitudes. This function is called with the longitude as argument, and\n * should return a formatted string representing the longitude. By default,\n * labels are formatted as degrees, minutes, seconds and hemisphere.\n * @property {function(number):string} [latLabelFormatter] Label formatter for\n * latitudes. This function is called with the latitude as argument, and\n * should return a formatted string representing the latitude. By default,\n * labels are formatted as degrees, minutes, seconds and hemisphere.\n * @property {number} [lonLabelPosition=0] Longitude label position in fractions\n * (0..1) of view extent. 0 means at the bottom of the viewport, 1 means at the\n * top.\n * @property {number} [latLabelPosition=1] Latitude label position in fractions\n * (0..1) of view extent. 0 means at the left of the viewport, 1 means at the\n * right.\n * @property {Text} [lonLabelStyle] Longitude label text\n * style. If not provided, the following style will be used:\n * ```js\n * new Text({\n *   font: '12px Calibri,sans-serif',\n *   textBaseline: 'bottom',\n *   fill: new Fill({\n *     color: 'rgba(0,0,0,1)'\n *   }),\n *   stroke: new Stroke({\n *     color: 'rgba(255,255,255,1)',\n *     width: 3\n *   })\n * });\n * ```\n * Note that the default's `textBaseline` configuration will not work well for\n * `lonLabelPosition` configurations that position labels close to the top of\n * the viewport.\n * @property {Text} [latLabelStyle] Latitude label text style.\n * If not provided, the following style will be used:\n * ```js\n * new Text({\n *   font: '12px Calibri,sans-serif',\n *   textAlign: 'end',\n *   fill: new Fill({\n *     color: 'rgba(0,0,0,1)'\n *   }),\n *   stroke: Stroke({\n *     color: 'rgba(255,255,255,1)',\n *     width: 3\n *   })\n * });\n * ```\n * Note that the default's `textAlign` configuration will not work well for\n * `latLabelPosition` configurations that position labels close to the left of\n * the viewport.\n * @property {Array<number>} [intervals=[90, 45, 30, 20, 10, 5, 2, 1, 30/60, 20/60, 10/60, 5/60, 2/60, 1/60, 30/3600, 20/3600, 10/3600, 5/3600, 2/3600, 1/3600]]\n * Intervals (in degrees) for the graticule. Example to limit graticules to 30 and 10 degrees intervals:\n * ```js\n * [30, 10]\n * ```\n * @property {boolean} [wrapX=true] Whether to repeat the graticule horizontally.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Layer that renders a grid for a coordinate system (currently only EPSG:4326 is supported).\n * Note that the view projection must define both extent and worldExtent.\n *\n * @fires import(\"../render/Event.js\").RenderEvent\n * @extends {VectorLayer<Feature>}\n * @api\n */\nclass Graticule extends VectorLayer {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = Object.assign(\n      {\n        updateWhileAnimating: true,\n        updateWhileInteracting: true,\n        renderBuffer: 0,\n      },\n      options,\n    );\n\n    delete baseOptions.maxLines;\n    delete baseOptions.strokeStyle;\n    delete baseOptions.targetSize;\n    delete baseOptions.showLabels;\n    delete baseOptions.lonLabelFormatter;\n    delete baseOptions.latLabelFormatter;\n    delete baseOptions.lonLabelPosition;\n    delete baseOptions.latLabelPosition;\n    delete baseOptions.lonLabelStyle;\n    delete baseOptions.latLabelStyle;\n    delete baseOptions.intervals;\n    super(baseOptions);\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.projection_ = null;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxLat_ = Infinity;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxLon_ = Infinity;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.minLat_ = -Infinity;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.minLon_ = -Infinity;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxX_ = Infinity;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxY_ = Infinity;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.minX_ = -Infinity;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.minY_ = -Infinity;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.targetSize_ =\n      options.targetSize !== undefined ? options.targetSize : 100;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxLines_ = options.maxLines !== undefined ? options.maxLines : 100;\n\n    /**\n     * @type {Array<LineString>}\n     * @private\n     */\n    this.meridians_ = [];\n\n    /**\n     * @type {Array<LineString>}\n     * @private\n     */\n    this.parallels_ = [];\n\n    /**\n     * @type {Stroke}\n     * @private\n     */\n    this.strokeStyle_ =\n      options.strokeStyle !== undefined\n        ? options.strokeStyle\n        : DEFAULT_STROKE_STYLE;\n\n    /**\n     * @type {import(\"../proj.js\").TransformFunction|undefined}\n     * @private\n     */\n    this.fromLonLatTransform_ = undefined;\n\n    /**\n     * @type {import(\"../proj.js\").TransformFunction|undefined}\n     * @private\n     */\n    this.toLonLatTransform_ = undefined;\n\n    /**\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @private\n     */\n    this.projectionCenterLonLat_ = null;\n\n    /**\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @private\n     */\n    this.bottomLeft_ = null;\n\n    /**\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @private\n     */\n    this.bottomRight_ = null;\n\n    /**\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @private\n     */\n    this.topLeft_ = null;\n\n    /**\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @private\n     */\n    this.topRight_ = null;\n\n    /**\n     * @type {Array<GraticuleLabelDataType>}\n     * @private\n     */\n    this.meridiansLabels_ = null;\n\n    /**\n     * @type {Array<GraticuleLabelDataType>}\n     * @private\n     */\n    this.parallelsLabels_ = null;\n\n    if (options.showLabels) {\n      /**\n       * @type {null|function(number):string}\n       * @private\n       */\n      this.lonLabelFormatter_ =\n        options.lonLabelFormatter == undefined\n          ? degreesToStringHDMS.bind(this, 'EW')\n          : options.lonLabelFormatter;\n\n      /**\n       * @type {function(number):string}\n       * @private\n       */\n      this.latLabelFormatter_ =\n        options.latLabelFormatter == undefined\n          ? degreesToStringHDMS.bind(this, 'NS')\n          : options.latLabelFormatter;\n\n      /**\n       * Longitude label position in fractions (0..1) of view extent. 0 means\n       * bottom, 1 means top.\n       * @type {number}\n       * @private\n       */\n      this.lonLabelPosition_ =\n        options.lonLabelPosition == undefined ? 0 : options.lonLabelPosition;\n\n      /**\n       * Latitude Label position in fractions (0..1) of view extent. 0 means left, 1\n       * means right.\n       * @type {number}\n       * @private\n       */\n      this.latLabelPosition_ =\n        options.latLabelPosition == undefined ? 1 : options.latLabelPosition;\n\n      /**\n       * @type {Style}\n       * @private\n       */\n      this.lonLabelStyleBase_ = new Style({\n        text:\n          options.lonLabelStyle !== undefined\n            ? options.lonLabelStyle.clone()\n            : new Text({\n                font: '12px Calibri,sans-serif',\n                textBaseline: 'bottom',\n                fill: new Fill({\n                  color: 'rgba(0,0,0,1)',\n                }),\n                stroke: new Stroke({\n                  color: 'rgba(255,255,255,1)',\n                  width: 3,\n                }),\n              }),\n      });\n\n      /**\n       * @private\n       * @param {import(\"../Feature\").default} feature Feature\n       * @return {Style} style\n       */\n      this.lonLabelStyle_ = (feature) => {\n        const label = feature.get('graticule_label');\n        this.lonLabelStyleBase_.getText().setText(label);\n        return this.lonLabelStyleBase_;\n      };\n\n      /**\n       * @type {Style}\n       * @private\n       */\n      this.latLabelStyleBase_ = new Style({\n        text:\n          options.latLabelStyle !== undefined\n            ? options.latLabelStyle.clone()\n            : new Text({\n                font: '12px Calibri,sans-serif',\n                textAlign: 'right',\n                fill: new Fill({\n                  color: 'rgba(0,0,0,1)',\n                }),\n                stroke: new Stroke({\n                  color: 'rgba(255,255,255,1)',\n                  width: 3,\n                }),\n              }),\n      });\n\n      /**\n       * @private\n       * @param {import(\"../Feature\").default} feature Feature\n       * @return {Style} style\n       */\n      this.latLabelStyle_ = (feature) => {\n        const label = feature.get('graticule_label');\n        this.latLabelStyleBase_.getText().setText(label);\n        return this.latLabelStyleBase_;\n      };\n\n      this.meridiansLabels_ = [];\n      this.parallelsLabels_ = [];\n\n      this.addEventListener(EventType.POSTRENDER, this.drawLabels_.bind(this));\n    }\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.intervals_ =\n      options.intervals !== undefined ? options.intervals : INTERVALS;\n\n    // use a source with a custom loader for lines & text\n    this.setSource(\n      new VectorSource({\n        loader: this.loaderFunction.bind(this),\n        strategy: this.strategyFunction.bind(this),\n        features: new Collection(),\n        overlaps: false,\n        useSpatialIndex: false,\n        wrapX: options.wrapX,\n      }),\n    );\n\n    /**\n     * feature pool to use when updating graticule\n     * @type {Array<Feature>}\n     * @private\n     */\n    this.featurePool_ = [];\n\n    /**\n     * @type {Style}\n     * @private\n     */\n    this.lineStyle_ = new Style({\n      stroke: this.strokeStyle_,\n    });\n\n    /**\n     * @type {?import(\"../extent.js\").Extent}\n     * @private\n     */\n    this.loadedExtent_ = null;\n\n    /**\n     * @type {?import(\"../extent.js\").Extent}\n     * @private\n     */\n    this.renderedExtent_ = null;\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.renderedResolution_ = null;\n\n    this.setRenderOrder(null);\n  }\n\n  /**\n   * Strategy function for loading features based on the view's extent and\n   * resolution.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @return {Array<import(\"../extent.js\").Extent>} Extents.\n   */\n  strategyFunction(extent, resolution) {\n    // extents may be passed in different worlds, to avoid endless loop we use only one\n    let realWorldExtent = extent.slice();\n    if (this.projection_ && this.getSource().getWrapX()) {\n      wrapExtentX(realWorldExtent, this.projection_);\n    }\n    if (this.loadedExtent_) {\n      if (\n        approximatelyEquals(this.loadedExtent_, realWorldExtent, resolution)\n      ) {\n        // make sure result is exactly equal to previous extent\n        realWorldExtent = this.loadedExtent_.slice();\n      } else {\n        // we should not keep track of loaded extents\n        this.getSource().removeLoadedExtent(this.loadedExtent_);\n      }\n    }\n    return [realWorldExtent];\n  }\n\n  /**\n   * Update geometries in the source based on current view\n   * @param {import(\"../extent\").Extent} extent Extent\n   * @param {number} resolution Resolution\n   * @param {import(\"../proj/Projection.js\").default} projection Projection\n   */\n  loaderFunction(extent, resolution, projection) {\n    this.loadedExtent_ = extent;\n    const source = this.getSource();\n\n    // only consider the intersection between our own extent & the requested one\n    const layerExtent = this.getExtent() || [\n      -Infinity,\n      -Infinity,\n      Infinity,\n      Infinity,\n    ];\n    const renderExtent = getIntersection(layerExtent, extent);\n\n    if (\n      this.renderedExtent_ &&\n      equals(this.renderedExtent_, renderExtent) &&\n      this.renderedResolution_ === resolution\n    ) {\n      return;\n    }\n    this.renderedExtent_ = renderExtent;\n    this.renderedResolution_ = resolution;\n\n    // bail out if nothing to render\n    if (isEmpty(renderExtent)) {\n      return;\n    }\n\n    // update projection info\n    const center = getCenter(renderExtent);\n    const squaredTolerance = (resolution * resolution) / 4;\n\n    const updateProjectionInfo =\n      !this.projection_ || !equivalentProjection(this.projection_, projection);\n\n    if (updateProjectionInfo) {\n      this.updateProjectionInfo_(projection);\n    }\n\n    this.createGraticule_(renderExtent, center, resolution, squaredTolerance);\n\n    // first make sure we have enough features in the pool\n    let featureCount = this.meridians_.length + this.parallels_.length;\n    if (this.meridiansLabels_) {\n      featureCount += this.meridians_.length;\n    }\n    if (this.parallelsLabels_) {\n      featureCount += this.parallels_.length;\n    }\n\n    let feature;\n    while (featureCount > this.featurePool_.length) {\n      feature = new Feature();\n      this.featurePool_.push(feature);\n    }\n\n    const featuresColl = source.getFeaturesCollection();\n    featuresColl.clear();\n    let poolIndex = 0;\n\n    // add features for the lines & labels\n    let i, l;\n    for (i = 0, l = this.meridians_.length; i < l; ++i) {\n      feature = this.featurePool_[poolIndex++];\n      feature.setGeometry(this.meridians_[i]);\n      feature.setStyle(this.lineStyle_);\n      featuresColl.push(feature);\n    }\n    for (i = 0, l = this.parallels_.length; i < l; ++i) {\n      feature = this.featurePool_[poolIndex++];\n      feature.setGeometry(this.parallels_[i]);\n      feature.setStyle(this.lineStyle_);\n      featuresColl.push(feature);\n    }\n  }\n\n  /**\n   * @param {number} lon Longitude.\n   * @param {number} minLat Minimal latitude.\n   * @param {number} maxLat Maximal latitude.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} index Index.\n   * @return {number} Index.\n   * @private\n   */\n  addMeridian_(lon, minLat, maxLat, squaredTolerance, extent, index) {\n    const lineString = this.getMeridian_(\n      lon,\n      minLat,\n      maxLat,\n      squaredTolerance,\n      index,\n    );\n    if (intersects(lineString.getExtent(), extent)) {\n      if (this.meridiansLabels_) {\n        const text = this.lonLabelFormatter_(lon);\n        if (index in this.meridiansLabels_) {\n          this.meridiansLabels_[index].text = text;\n        } else {\n          this.meridiansLabels_[index] = {\n            geom: new Point([]),\n            text: text,\n          };\n        }\n      }\n      this.meridians_[index++] = lineString;\n    }\n    return index;\n  }\n\n  /**\n   * @param {number} lat Latitude.\n   * @param {number} minLon Minimal longitude.\n   * @param {number} maxLon Maximal longitude.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} index Index.\n   * @return {number} Index.\n   * @private\n   */\n  addParallel_(lat, minLon, maxLon, squaredTolerance, extent, index) {\n    const lineString = this.getParallel_(\n      lat,\n      minLon,\n      maxLon,\n      squaredTolerance,\n      index,\n    );\n    if (intersects(lineString.getExtent(), extent)) {\n      if (this.parallelsLabels_) {\n        const text = this.latLabelFormatter_(lat);\n        if (index in this.parallelsLabels_) {\n          this.parallelsLabels_[index].text = text;\n        } else {\n          this.parallelsLabels_[index] = {\n            geom: new Point([]),\n            text: text,\n          };\n        }\n      }\n      this.parallels_[index++] = lineString;\n    }\n    return index;\n  }\n\n  /**\n   * @param {import(\"../render/Event.js\").default} event Render event.\n   * @private\n   */\n  drawLabels_(event) {\n    const rotation = event.frameState.viewState.rotation;\n    const resolution = event.frameState.viewState.resolution;\n    const size = event.frameState.size;\n    const extent = event.frameState.extent;\n    const rotationCenter = getCenter(extent);\n    let rotationExtent = extent;\n    if (rotation) {\n      const unrotatedWidth = size[0] * resolution;\n      const unrotatedHeight = size[1] * resolution;\n      rotationExtent = [\n        rotationCenter[0] - unrotatedWidth / 2,\n        rotationCenter[1] - unrotatedHeight / 2,\n        rotationCenter[0] + unrotatedWidth / 2,\n        rotationCenter[1] + unrotatedHeight / 2,\n      ];\n    }\n\n    let startWorld = 0;\n    let endWorld = 0;\n    let labelsAtStart = this.latLabelPosition_ < 0.5;\n    const projectionExtent = this.projection_.getExtent();\n    const worldWidth = getWidth(projectionExtent);\n    if (\n      this.getSource().getWrapX() &&\n      this.projection_.canWrapX() &&\n      !containsExtent(projectionExtent, extent)\n    ) {\n      startWorld = Math.floor((extent[0] - projectionExtent[0]) / worldWidth);\n      endWorld = Math.ceil((extent[2] - projectionExtent[2]) / worldWidth);\n      const inverted = Math.abs(rotation) > Math.PI / 2;\n      labelsAtStart = labelsAtStart !== inverted;\n    }\n    const vectorContext = getVectorContext(event);\n\n    for (let world = startWorld; world <= endWorld; ++world) {\n      let poolIndex = this.meridians_.length + this.parallels_.length;\n      let feature, index, l, textPoint;\n\n      if (this.meridiansLabels_) {\n        for (index = 0, l = this.meridiansLabels_.length; index < l; ++index) {\n          const lineString = this.meridians_[index];\n          if (!rotation && world === 0) {\n            textPoint = this.getMeridianPoint_(lineString, extent, index);\n          } else {\n            const clone = lineString.clone();\n            clone.translate(world * worldWidth, 0);\n            clone.rotate(-rotation, rotationCenter);\n            textPoint = this.getMeridianPoint_(clone, rotationExtent, index);\n            textPoint.rotate(rotation, rotationCenter);\n          }\n          feature = this.featurePool_[poolIndex++];\n          feature.setGeometry(textPoint);\n          feature.set('graticule_label', this.meridiansLabels_[index].text);\n          vectorContext.drawFeature(feature, this.lonLabelStyle_(feature));\n        }\n      }\n      if (this.parallelsLabels_) {\n        if (\n          (world === startWorld && labelsAtStart) ||\n          (world === endWorld && !labelsAtStart)\n        ) {\n          for (index = 0, l = this.parallels_.length; index < l; ++index) {\n            const lineString = this.parallels_[index];\n            if (!rotation && world === 0) {\n              textPoint = this.getParallelPoint_(lineString, extent, index);\n            } else {\n              const clone = lineString.clone();\n              clone.translate(world * worldWidth, 0);\n              clone.rotate(-rotation, rotationCenter);\n              textPoint = this.getParallelPoint_(clone, rotationExtent, index);\n              textPoint.rotate(rotation, rotationCenter);\n            }\n            feature = this.featurePool_[poolIndex++];\n            feature.setGeometry(textPoint);\n            feature.set('graticule_label', this.parallelsLabels_[index].text);\n            vectorContext.drawFeature(feature, this.latLabelStyle_(feature));\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {import(\"../coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @private\n   */\n  createGraticule_(extent, center, resolution, squaredTolerance) {\n    const interval = this.getInterval_(resolution);\n    if (interval == -1) {\n      this.meridians_.length = 0;\n      this.parallels_.length = 0;\n      if (this.meridiansLabels_) {\n        this.meridiansLabels_.length = 0;\n      }\n      if (this.parallelsLabels_) {\n        this.parallelsLabels_.length = 0;\n      }\n      return;\n    }\n\n    let wrapX = false;\n    const projectionExtent = this.projection_.getExtent();\n    const worldWidth = getWidth(projectionExtent);\n    if (\n      this.getSource().getWrapX() &&\n      this.projection_.canWrapX() &&\n      !containsExtent(projectionExtent, extent)\n    ) {\n      if (getWidth(extent) >= worldWidth) {\n        extent[0] = projectionExtent[0];\n        extent[2] = projectionExtent[2];\n      } else {\n        wrapX = true;\n      }\n    }\n\n    // Constrain the center to fit into the extent available to the graticule\n\n    const validCenterP = [\n      clamp(center[0], this.minX_, this.maxX_),\n      clamp(center[1], this.minY_, this.maxY_),\n    ];\n\n    // Transform the center to lon lat\n    // Some projections may have a void area at the poles\n    // so replace any NaN latitudes with the min or max value closest to a pole\n\n    const centerLonLat = this.toLonLatTransform_(validCenterP);\n    if (isNaN(centerLonLat[1])) {\n      centerLonLat[1] =\n        Math.abs(this.maxLat_) >= Math.abs(this.minLat_)\n          ? this.maxLat_\n          : this.minLat_;\n    }\n    let centerLon = clamp(centerLonLat[0], this.minLon_, this.maxLon_);\n    let centerLat = clamp(centerLonLat[1], this.minLat_, this.maxLat_);\n    const maxLines = this.maxLines_;\n    let cnt, idx, lat, lon;\n\n    // Limit the extent to fit into the extent available to the graticule\n\n    let validExtentP = extent;\n    if (!wrapX) {\n      validExtentP = [\n        clamp(extent[0], this.minX_, this.maxX_),\n        clamp(extent[1], this.minY_, this.maxY_),\n        clamp(extent[2], this.minX_, this.maxX_),\n        clamp(extent[3], this.minY_, this.maxY_),\n      ];\n    }\n\n    // Transform the extent to get the lon lat ranges for the edges of the extent\n\n    const validExtent = applyTransform(\n      validExtentP,\n      this.toLonLatTransform_,\n      undefined,\n      8,\n    );\n\n    let maxLat = validExtent[3];\n    let maxLon = validExtent[2];\n    let minLat = validExtent[1];\n    let minLon = validExtent[0];\n\n    if (!wrapX) {\n      // Check if extremities of the world extent lie inside the extent\n      // (for example the pole in a polar projection)\n      // and extend the extent as appropriate\n\n      if (containsCoordinate(validExtentP, this.bottomLeft_)) {\n        minLon = this.minLon_;\n        minLat = this.minLat_;\n      }\n      if (containsCoordinate(validExtentP, this.bottomRight_)) {\n        maxLon = this.maxLon_;\n        minLat = this.minLat_;\n      }\n      if (containsCoordinate(validExtentP, this.topLeft_)) {\n        minLon = this.minLon_;\n        maxLat = this.maxLat_;\n      }\n      if (containsCoordinate(validExtentP, this.topRight_)) {\n        maxLon = this.maxLon_;\n        maxLat = this.maxLat_;\n      }\n\n      // The transformed center may also extend the lon lat ranges used for rendering\n\n      maxLat = clamp(maxLat, centerLat, this.maxLat_);\n      maxLon = clamp(maxLon, centerLon, this.maxLon_);\n      minLat = clamp(minLat, this.minLat_, centerLat);\n      minLon = clamp(minLon, this.minLon_, centerLon);\n    }\n\n    // Create meridians\n\n    centerLon = Math.floor(centerLon / interval) * interval;\n    lon = clamp(centerLon, this.minLon_, this.maxLon_);\n\n    idx = this.addMeridian_(lon, minLat, maxLat, squaredTolerance, extent, 0);\n\n    cnt = 0;\n    if (wrapX) {\n      while ((lon -= interval) >= minLon && cnt++ < maxLines) {\n        idx = this.addMeridian_(\n          lon,\n          minLat,\n          maxLat,\n          squaredTolerance,\n          extent,\n          idx,\n        );\n      }\n    } else {\n      while (lon != this.minLon_ && cnt++ < maxLines) {\n        lon = Math.max(lon - interval, this.minLon_);\n        idx = this.addMeridian_(\n          lon,\n          minLat,\n          maxLat,\n          squaredTolerance,\n          extent,\n          idx,\n        );\n      }\n    }\n\n    lon = clamp(centerLon, this.minLon_, this.maxLon_);\n\n    cnt = 0;\n    if (wrapX) {\n      while ((lon += interval) <= maxLon && cnt++ < maxLines) {\n        idx = this.addMeridian_(\n          lon,\n          minLat,\n          maxLat,\n          squaredTolerance,\n          extent,\n          idx,\n        );\n      }\n    } else {\n      while (lon != this.maxLon_ && cnt++ < maxLines) {\n        lon = Math.min(lon + interval, this.maxLon_);\n        idx = this.addMeridian_(\n          lon,\n          minLat,\n          maxLat,\n          squaredTolerance,\n          extent,\n          idx,\n        );\n      }\n    }\n\n    this.meridians_.length = idx;\n    if (this.meridiansLabels_) {\n      this.meridiansLabels_.length = idx;\n    }\n\n    // Create parallels\n\n    centerLat = Math.floor(centerLat / interval) * interval;\n    lat = clamp(centerLat, this.minLat_, this.maxLat_);\n\n    idx = this.addParallel_(lat, minLon, maxLon, squaredTolerance, extent, 0);\n\n    cnt = 0;\n    while (lat != this.minLat_ && cnt++ < maxLines) {\n      lat = Math.max(lat - interval, this.minLat_);\n      idx = this.addParallel_(\n        lat,\n        minLon,\n        maxLon,\n        squaredTolerance,\n        extent,\n        idx,\n      );\n    }\n\n    lat = clamp(centerLat, this.minLat_, this.maxLat_);\n\n    cnt = 0;\n    while (lat != this.maxLat_ && cnt++ < maxLines) {\n      lat = Math.min(lat + interval, this.maxLat_);\n      idx = this.addParallel_(\n        lat,\n        minLon,\n        maxLon,\n        squaredTolerance,\n        extent,\n        idx,\n      );\n    }\n\n    this.parallels_.length = idx;\n    if (this.parallelsLabels_) {\n      this.parallelsLabels_.length = idx;\n    }\n  }\n\n  /**\n   * @param {number} resolution Resolution.\n   * @return {number} The interval in degrees.\n   * @private\n   */\n  getInterval_(resolution) {\n    const centerLon = this.projectionCenterLonLat_[0];\n    const centerLat = this.projectionCenterLonLat_[1];\n    let interval = -1;\n    const target = Math.pow(this.targetSize_ * resolution, 2);\n    /** @type {Array<number>} **/\n    const p1 = [];\n    /** @type {Array<number>} **/\n    const p2 = [];\n    for (let i = 0, ii = this.intervals_.length; i < ii; ++i) {\n      const delta = clamp(this.intervals_[i] / 2, 0, 90);\n      // Don't attempt to transform latitudes beyond the poles!\n      const clampedLat = clamp(centerLat, -90 + delta, 90 - delta);\n      p1[0] = centerLon - delta;\n      p1[1] = clampedLat - delta;\n      p2[0] = centerLon + delta;\n      p2[1] = clampedLat + delta;\n      this.fromLonLatTransform_(p1, p1);\n      this.fromLonLatTransform_(p2, p2);\n      const dist = Math.pow(p2[0] - p1[0], 2) + Math.pow(p2[1] - p1[1], 2);\n      if (dist <= target) {\n        break;\n      }\n      interval = this.intervals_[i];\n    }\n    return interval;\n  }\n\n  /**\n   * @param {number} lon Longitude.\n   * @param {number} minLat Minimal latitude.\n   * @param {number} maxLat Maximal latitude.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LineString} The meridian line string.\n   * @param {number} index Index.\n   * @private\n   */\n  getMeridian_(lon, minLat, maxLat, squaredTolerance, index) {\n    const flatCoordinates = meridian(\n      lon,\n      minLat,\n      maxLat,\n      this.projection_,\n      squaredTolerance,\n    );\n    let lineString = this.meridians_[index];\n    if (!lineString) {\n      lineString = new LineString(flatCoordinates, 'XY');\n      this.meridians_[index] = lineString;\n    } else {\n      lineString.setFlatCoordinates('XY', flatCoordinates);\n      lineString.changed();\n    }\n    return lineString;\n  }\n\n  /**\n   * @param {LineString} lineString Meridian\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} index Index.\n   * @return {Point} Meridian point.\n   * @private\n   */\n  getMeridianPoint_(lineString, extent, index) {\n    const flatCoordinates = lineString.getFlatCoordinates();\n    let bottom = 1;\n    let top = flatCoordinates.length - 1;\n    if (flatCoordinates[bottom] > flatCoordinates[top]) {\n      bottom = top;\n      top = 1;\n    }\n    const clampedBottom = Math.max(extent[1], flatCoordinates[bottom]);\n    const clampedTop = Math.min(extent[3], flatCoordinates[top]);\n    const lat = clamp(\n      extent[1] + Math.abs(extent[1] - extent[3]) * this.lonLabelPosition_,\n      clampedBottom,\n      clampedTop,\n    );\n    const coordinate0 =\n      flatCoordinates[bottom - 1] +\n      ((flatCoordinates[top - 1] - flatCoordinates[bottom - 1]) *\n        (lat - flatCoordinates[bottom])) /\n        (flatCoordinates[top] - flatCoordinates[bottom]);\n    const coordinate = [coordinate0, lat];\n    const point = this.meridiansLabels_[index].geom;\n    point.setCoordinates(coordinate);\n    return point;\n  }\n\n  /**\n   * Get the list of meridians.  Meridians are lines of equal longitude.\n   * @return {Array<LineString>} The meridians.\n   * @api\n   */\n  getMeridians() {\n    return this.meridians_;\n  }\n\n  /**\n   * @param {number} lat Latitude.\n   * @param {number} minLon Minimal longitude.\n   * @param {number} maxLon Maximal longitude.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LineString} The parallel line string.\n   * @param {number} index Index.\n   * @private\n   */\n  getParallel_(lat, minLon, maxLon, squaredTolerance, index) {\n    const flatCoordinates = parallel(\n      lat,\n      minLon,\n      maxLon,\n      this.projection_,\n      squaredTolerance,\n    );\n    let lineString = this.parallels_[index];\n    if (!lineString) {\n      lineString = new LineString(flatCoordinates, 'XY');\n    } else {\n      lineString.setFlatCoordinates('XY', flatCoordinates);\n      lineString.changed();\n    }\n    return lineString;\n  }\n\n  /**\n   * @param {LineString} lineString Parallels.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} index Index.\n   * @return {Point} Parallel point.\n   * @private\n   */\n  getParallelPoint_(lineString, extent, index) {\n    const flatCoordinates = lineString.getFlatCoordinates();\n    let left = 0;\n    let right = flatCoordinates.length - 2;\n    if (flatCoordinates[left] > flatCoordinates[right]) {\n      left = right;\n      right = 0;\n    }\n    const clampedLeft = Math.max(extent[0], flatCoordinates[left]);\n    const clampedRight = Math.min(extent[2], flatCoordinates[right]);\n    const lon = clamp(\n      extent[0] + Math.abs(extent[0] - extent[2]) * this.latLabelPosition_,\n      clampedLeft,\n      clampedRight,\n    );\n    const coordinate1 =\n      flatCoordinates[left + 1] +\n      ((flatCoordinates[right + 1] - flatCoordinates[left + 1]) *\n        (lon - flatCoordinates[left])) /\n        (flatCoordinates[right] - flatCoordinates[left]);\n    const coordinate = [lon, coordinate1];\n    const point = this.parallelsLabels_[index].geom;\n    point.setCoordinates(coordinate);\n    return point;\n  }\n\n  /**\n   * Get the list of parallels.  Parallels are lines of equal latitude.\n   * @return {Array<LineString>} The parallels.\n   * @api\n   */\n  getParallels() {\n    return this.parallels_;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @private\n   */\n  updateProjectionInfo_(projection) {\n    const epsg4326Projection = getProjection('EPSG:4326');\n\n    const worldExtent = projection.getWorldExtent();\n\n    this.maxLat_ = worldExtent[3];\n    this.maxLon_ = worldExtent[2];\n    this.minLat_ = worldExtent[1];\n    this.minLon_ = worldExtent[0];\n\n    // If the world extent crosses the dateline define a custom transform to\n    // return longitudes which wrap the dateline\n\n    const toLonLatTransform = getTransform(projection, epsg4326Projection);\n    if (this.minLon_ < this.maxLon_) {\n      this.toLonLatTransform_ = toLonLatTransform;\n    } else {\n      const split = this.minLon_ + this.maxLon_ / 2;\n      this.maxLon_ += 360;\n      this.toLonLatTransform_ = function (coordinates, output, dimension) {\n        dimension = dimension || 2;\n        const lonLatCoordinates = toLonLatTransform(\n          coordinates,\n          output,\n          dimension,\n        );\n        for (let i = 0, l = lonLatCoordinates.length; i < l; i += dimension) {\n          if (lonLatCoordinates[i] < split) {\n            lonLatCoordinates[i] += 360;\n          }\n        }\n        return lonLatCoordinates;\n      };\n    }\n\n    // Transform the extent to get the limits of the view projection extent\n    // which should be available to the graticule\n\n    this.fromLonLatTransform_ = getTransform(epsg4326Projection, projection);\n    const worldExtentP = applyTransform(\n      [this.minLon_, this.minLat_, this.maxLon_, this.maxLat_],\n      this.fromLonLatTransform_,\n      undefined,\n      8,\n    );\n\n    this.minX_ = worldExtentP[0];\n    this.maxX_ = worldExtentP[2];\n    this.minY_ = worldExtentP[1];\n    this.maxY_ = worldExtentP[3];\n\n    // Determine the view projection coordinates of the extremities of the world extent\n    // as these may lie inside a view extent (for example the pole in a polar projection)\n\n    this.bottomLeft_ = this.fromLonLatTransform_([this.minLon_, this.minLat_]);\n    this.bottomRight_ = this.fromLonLatTransform_([this.maxLon_, this.minLat_]);\n    this.topLeft_ = this.fromLonLatTransform_([this.minLon_, this.maxLat_]);\n    this.topRight_ = this.fromLonLatTransform_([this.maxLon_, this.maxLat_]);\n\n    // Transform the projection center to lon lat\n    // Some projections may have a void area at the poles\n    // so replace any NaN latitudes with the min or max value closest to a pole\n\n    this.projectionCenterLonLat_ = this.toLonLatTransform_(\n      getCenter(projection.getExtent()),\n    );\n    if (isNaN(this.projectionCenterLonLat_[1])) {\n      this.projectionCenterLonLat_[1] =\n        Math.abs(this.maxLat_) >= Math.abs(this.minLat_)\n          ? this.maxLat_\n          : this.minLat_;\n    }\n\n    this.projection_ = projection;\n  }\n}\n\nexport default Graticule;\n","/**\n * @module ol/ImageCanvas\n */\nimport ImageState from './ImageState.js';\nimport ImageWrapper from './Image.js';\n\n/**\n * A function that is called to trigger asynchronous canvas drawing.  It is\n * called with a \"done\" callback that should be called when drawing is done.\n * If any error occurs during drawing, the \"done\" callback should be called with\n * that error.\n *\n * @typedef {function(function(Error=): void): void} Loader\n */\n\nclass ImageCanvas extends ImageWrapper {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {HTMLCanvasElement} canvas Canvas.\n   * @param {Loader} [loader] Optional loader function to\n   *     support asynchronous canvas drawing.\n   */\n  constructor(extent, resolution, pixelRatio, canvas, loader) {\n    const state = loader !== undefined ? ImageState.IDLE : ImageState.LOADED;\n\n    super(extent, resolution, pixelRatio, state);\n\n    /**\n     * Optional canvas loader function.\n     * @type {?Loader}\n     * @private\n     */\n    this.loader_ = loader !== undefined ? loader : null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = canvas;\n\n    /**\n     * @private\n     * @type {?Error}\n     */\n    this.error_ = null;\n  }\n\n  /**\n   * Get any error associated with asynchronous rendering.\n   * @return {?Error} Any error that occurred during rendering.\n   */\n  getError() {\n    return this.error_;\n  }\n\n  /**\n   * Handle async drawing complete.\n   * @param {Error} [err] Any error during drawing.\n   * @private\n   */\n  handleLoad_(err) {\n    if (err) {\n      this.error_ = err;\n      this.state = ImageState.ERROR;\n    } else {\n      this.state = ImageState.LOADED;\n    }\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == ImageState.IDLE) {\n      this.state = ImageState.LOADING;\n      this.changed();\n      this.loader_(this.handleLoad_.bind(this));\n    }\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Canvas element.\n   */\n  getImage() {\n    return this.canvas_;\n  }\n}\n\nexport default ImageCanvas;\n","/**\n * @module ol/TileState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  /**\n   * Indicates that tile loading failed\n   * @type {number}\n   */\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/Tile\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport TileState from './TileState.js';\nimport {abstract} from './util.js';\nimport {easeIn} from './easing.js';\n\n/**\n * A function that takes an {@link module:ol/Tile~Tile} for the tile and a\n * `{string}` for the url as arguments. The default is\n * ```js\n * source.setTileLoadFunction(function(tile, src) {\n *   tile.getImage().src = src;\n * });\n * ```\n * For more fine grained control, the load function can use fetch or XMLHttpRequest and involve\n * error handling:\n *\n * ```js\n * import TileState from 'ol/TileState.js';\n *\n * source.setTileLoadFunction(function(tile, src) {\n *   const xhr = new XMLHttpRequest();\n *   xhr.responseType = 'blob';\n *   xhr.addEventListener('loadend', function (evt) {\n *     const data = this.response;\n *     if (data !== undefined) {\n *       tile.getImage().src = URL.createObjectURL(data);\n *     } else {\n *       tile.setState(TileState.ERROR);\n *     }\n *   });\n *   xhr.addEventListener('error', function () {\n *     tile.setState(TileState.ERROR);\n *   });\n *   xhr.open('GET', src);\n *   xhr.send();\n * });\n * ```\n *\n * @typedef {function(Tile, string): void} LoadFunction\n * @api\n */\n\n/**\n * {@link module:ol/source/Tile~TileSource} sources use a function of this type to get\n * the url that provides a tile for a given tile coordinate.\n *\n * This function takes an {@link module:ol/tilecoord~TileCoord} for the tile\n * coordinate, a `{number}` representing the pixel ratio and a\n * {@link module:ol/proj/Projection~Projection} for the projection  as arguments\n * and returns a `{string}` representing the tile URL, or undefined if no tile\n * should be requested for the passed tile coordinate.\n *\n * @typedef {function(import(\"./tilecoord.js\").TileCoord, number,\n *           import(\"./proj/Projection.js\").default): (string|undefined)} UrlFunction\n * @api\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n * @api\n */\n\n/**\n * @classdesc\n * Base class for tiles.\n *\n * @abstract\n */\nclass Tile extends EventTarget {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {Options} [options] Tile options.\n   */\n  constructor(tileCoord, state, options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @type {import(\"./tilecoord.js\").TileCoord}\n     */\n    this.tileCoord = tileCoord;\n\n    /**\n     * @protected\n     * @type {import(\"./TileState.js\").default}\n     */\n    this.state = state;\n\n    /**\n     * An \"interim\" tile for this tile. The interim tile may be used while this\n     * one is loading, for \"smooth\" transitions when changing params/dimensions\n     * on the source.\n     * @type {Tile|null}\n     */\n    this.interimTile = null;\n\n    /**\n     * A key assigned to the tile. This is used by the tile source to determine\n     * if this tile can effectively be used, or if a new tile should be created\n     * and this one be used as an interim tile for this new tile.\n     * @type {string}\n     */\n    this.key = '';\n\n    /**\n     * The duration for the opacity transition.\n     * @type {number}\n     */\n    this.transition_ =\n      options.transition === undefined ? 250 : options.transition;\n\n    /**\n     * Lookup of start times for rendering transitions.  If the start time is\n     * equal to -1, the transition is complete.\n     * @type {Object<string, number>}\n     */\n    this.transitionStarts_ = {};\n\n    /**\n     * @type {boolean}\n     */\n    this.interpolate = !!options.interpolate;\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Called by the tile cache when the tile is removed from the cache due to expiry\n   */\n  release() {\n    if (this.state === TileState.ERROR) {\n      // to remove the `change` listener on this tile in `ol/TileQueue#handleTileChange`\n      this.setState(TileState.EMPTY);\n    }\n  }\n\n  /**\n   * @return {string} Key.\n   */\n  getKey() {\n    return this.key + '/' + this.tileCoord;\n  }\n\n  /**\n   * Get the interim tile most suitable for rendering using the chain of interim\n   * tiles. This corresponds to the  most recent tile that has been loaded, if no\n   * such tile exists, the original tile is returned.\n   * @return {!Tile} Best tile for rendering.\n   */\n  getInterimTile() {\n    let tile = this.interimTile;\n    if (!tile) {\n      //empty chain\n      return this;\n    }\n\n    // find the first loaded tile and return it. Since the chain is sorted in\n    // decreasing order of creation time, there is no need to search the remainder\n    // of the list (all those tiles correspond to older requests and will be\n    // cleaned up by refreshInterimChain)\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        // Show tile immediately instead of fading it in after loading, because\n        // the interim tile is in place already\n        this.transition_ = 0;\n        return tile;\n      }\n      tile = tile.interimTile;\n    } while (tile);\n\n    // we can not find a better tile\n    return this;\n  }\n\n  /**\n   * Goes through the chain of interim tiles and discards sections of the chain\n   * that are no longer relevant.\n   */\n  refreshInterimChain() {\n    let tile = this.interimTile;\n    if (!tile) {\n      return;\n    }\n\n    /** @type {Tile} */\n    let prev = this;\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        //we have a loaded tile, we can discard the rest of the list\n        //we would could abort any LOADING tile request\n        //older than this tile (i.e. any LOADING tile following this entry in the chain)\n        tile.interimTile = null;\n        break;\n      }\n      if (tile.getState() == TileState.LOADING) {\n        //keep this LOADING tile any loaded tiles later in the chain are\n        //older than this tile, so we're still interested in the request\n        prev = tile;\n      } else if (tile.getState() == TileState.IDLE) {\n        //the head of the list is the most current tile, we don't need\n        //to start any other requests for this chain\n        prev.interimTile = tile.interimTile;\n      } else {\n        prev = tile;\n      }\n      tile = prev.interimTile;\n    } while (tile);\n  }\n\n  /**\n   * Get the tile coordinate for this tile.\n   * @return {import(\"./tilecoord.js\").TileCoord} The tile coordinate.\n   * @api\n   */\n  getTileCoord() {\n    return this.tileCoord;\n  }\n\n  /**\n   * @return {import(\"./TileState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Sets the state of this tile. If you write your own {@link module:ol/Tile~LoadFunction tileLoadFunction} ,\n   * it is important to set the state correctly to {@link module:ol/TileState~ERROR}\n   * when the tile cannot be loaded. Otherwise the tile cannot be removed from\n   * the tile queue and will block other requests.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @api\n   */\n  setState(state) {\n    if (this.state !== TileState.ERROR && this.state > state) {\n      throw new Error('Tile load sequence violation');\n    }\n    this.state = state;\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @abstract\n   * @api\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * Get the alpha value for rendering.\n   * @param {string} id An id for the renderer.\n   * @param {number} time The render frame time.\n   * @return {number} A number between 0 and 1.\n   */\n  getAlpha(id, time) {\n    if (!this.transition_) {\n      return 1;\n    }\n\n    let start = this.transitionStarts_[id];\n    if (!start) {\n      start = time;\n      this.transitionStarts_[id] = start;\n    } else if (start === -1) {\n      return 1;\n    }\n\n    const delta = time - start + 1000 / 60; // avoid rendering at 0\n    if (delta >= this.transition_) {\n      return 1;\n    }\n    return easeIn(delta / this.transition_);\n  }\n\n  /**\n   * Determine if a tile is in an alpha transition.  A tile is considered in\n   * transition if tile.getAlpha() has not yet been called or has been called\n   * and returned 1.\n   * @param {string} id An id for the renderer.\n   * @return {boolean} The tile is in transition.\n   */\n  inTransition(id) {\n    if (!this.transition_) {\n      return false;\n    }\n    return this.transitionStarts_[id] !== -1;\n  }\n\n  /**\n   * Mark a transition as complete.\n   * @param {string} id An id for the renderer.\n   */\n  endTransition(id) {\n    if (this.transition_) {\n      this.transitionStarts_[id] = -1;\n    }\n  }\n}\n\nexport default Tile;\n","/**\n * @module ol/ImageTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {listenImage} from './Image.js';\n\nclass ImageTile extends Tile {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {string} src Image source URI.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"./Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @param {import(\"./Tile.js\").Options} [options] Tile options.\n   */\n  constructor(tileCoord, state, src, crossOrigin, tileLoadFunction, options) {\n    super(tileCoord, state, options);\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * Image URI\n     *\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    this.key = src;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction_ = tileLoadFunction;\n  }\n\n  /**\n   * Get the HTML image element for this tile (may be a Canvas, Image, or Video).\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Sets an HTML image element for this tile (may be a Canvas or preloaded Image).\n   * @param {HTMLCanvasElement|HTMLImageElement} element Element.\n   */\n  setImage(element) {\n    this.image_ = element;\n    this.state = TileState.LOADED;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  handleImageError_() {\n    this.state = TileState.ERROR;\n    this.unlistenImage_();\n    this.image_ = getBlankImage();\n    this.changed();\n  }\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  handleImageLoad_() {\n    const image = /** @type {HTMLImageElement} */ (this.image_);\n    if (image.naturalWidth && image.naturalHeight) {\n      this.state = TileState.LOADED;\n    } else {\n      this.state = TileState.EMPTY;\n    }\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   *\n   * To retry loading tiles on failed requests, use a custom `tileLoadFunction`\n   * that checks for error status codes and reloads only when the status code is\n   * 408, 429, 500, 502, 503 and 504, and only when not too many retries have been\n   * made already:\n   *\n   * ```js\n   * const retryCodes = [408, 429, 500, 502, 503, 504];\n   * const retries = {};\n   * source.setTileLoadFunction((tile, src) => {\n   *   const image = tile.getImage();\n   *   fetch(src)\n   *     .then((response) => {\n   *       if (retryCodes.includes(response.status)) {\n   *         retries[src] = (retries[src] || 0) + 1;\n   *         if (retries[src] <= 3) {\n   *           setTimeout(() => tile.load(), retries[src] * 1000);\n   *         }\n   *         return Promise.reject();\n   *       }\n   *       return response.blob();\n   *     })\n   *     .then((blob) => {\n   *       const imageUrl = URL.createObjectURL(blob);\n   *       image.src = imageUrl;\n   *       setTimeout(() => URL.revokeObjectURL(imageUrl), 5000);\n   *     })\n   *     .catch(() => tile.setState(3)); // error\n   * });\n   * ```\n   *\n   * @api\n   */\n  load() {\n    if (this.state == TileState.ERROR) {\n      this.state = TileState.IDLE;\n      this.image_ = new Image();\n      if (this.crossOrigin_ !== null) {\n        this.image_.crossOrigin = this.crossOrigin_;\n      }\n    }\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n      this.tileLoadFunction_(this, this.src_);\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this),\n      );\n    }\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * Get a 1-pixel blank image.\n * @return {HTMLCanvasElement} Blank image.\n */\nfunction getBlankImage() {\n  const ctx = createCanvasContext2D(1, 1);\n  ctx.fillStyle = 'rgba(0,0,0,0)';\n  ctx.fillRect(0, 0, 1, 1);\n  return ctx.canvas;\n}\n\nexport default ImageTile;\n","/**\n * @module ol/Kinetic\n */\n\n/**\n * @classdesc\n * Implementation of inertial deceleration for map movement.\n *\n * @api\n */\nclass Kinetic {\n  /**\n   * @param {number} decay Rate of decay (must be negative).\n   * @param {number} minVelocity Minimum velocity (pixels/millisecond).\n   * @param {number} delay Delay to consider to calculate the kinetic\n   *     initial values (milliseconds).\n   */\n  constructor(decay, minVelocity, delay) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.decay_ = decay;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minVelocity_ = minVelocity;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delay_ = delay;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.points_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  begin() {\n    this.points_.length = 0;\n    this.angle_ = 0;\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   */\n  update(x, y) {\n    this.points_.push(x, y, Date.now());\n  }\n\n  /**\n   * @return {boolean} Whether we should do kinetic animation.\n   */\n  end() {\n    if (this.points_.length < 6) {\n      // at least 2 points are required (i.e. there must be at least 6 elements\n      // in the array)\n      return false;\n    }\n    const delay = Date.now() - this.delay_;\n    const lastIndex = this.points_.length - 3;\n    if (this.points_[lastIndex + 2] < delay) {\n      // the last tracked point is too old, which means that the user stopped\n      // panning before releasing the map\n      return false;\n    }\n\n    // get the first point which still falls into the delay time\n    let firstIndex = lastIndex - 3;\n    while (firstIndex > 0 && this.points_[firstIndex + 2] > delay) {\n      firstIndex -= 3;\n    }\n\n    const duration = this.points_[lastIndex + 2] - this.points_[firstIndex + 2];\n    // we don't want a duration of 0 (divide by zero)\n    // we also make sure the user panned for a duration of at least one frame\n    // (1/60s) to compute sane displacement values\n    if (duration < 1000 / 60) {\n      return false;\n    }\n\n    const dx = this.points_[lastIndex] - this.points_[firstIndex];\n    const dy = this.points_[lastIndex + 1] - this.points_[firstIndex + 1];\n    this.angle_ = Math.atan2(dy, dx);\n    this.initialVelocity_ = Math.sqrt(dx * dx + dy * dy) / duration;\n    return this.initialVelocity_ > this.minVelocity_;\n  }\n\n  /**\n   * @return {number} Total distance travelled (pixels).\n   */\n  getDistance() {\n    return (this.minVelocity_ - this.initialVelocity_) / this.decay_;\n  }\n\n  /**\n   * @return {number} Angle of the kinetic panning animation (radians).\n   */\n  getAngle() {\n    return this.angle_;\n  }\n}\n\nexport default Kinetic;\n","/**\n * @module ol/renderer/Map\n */\nimport Disposable from '../Disposable.js';\nimport {TRUE} from '../functions.js';\nimport {abstract} from '../util.js';\nimport {compose as composeTransform, makeInverse} from '../transform.js';\nimport {getWidth} from '../extent.js';\nimport {shared as iconImageCache} from '../style/IconImageCache.js';\nimport {inView} from '../layer/Layer.js';\nimport {wrapX} from '../coordinate.js';\n\n/**\n * @template T\n * @typedef HitMatch\n * @property {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @property {import(\"../layer/Layer.js\").default} layer Layer.\n * @property {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n * @property {number} distanceSq Squared distance.\n * @property {import(\"./vector.js\").FeatureCallback<T>} callback Callback.\n */\n\n/**\n * @abstract\n */\nclass MapRenderer extends Disposable {\n  /**\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  constructor(map) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default}\n     */\n    this.map_ = map;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @protected\n   */\n  calculateMatrices2D(frameState) {\n    const viewState = frameState.viewState;\n    const coordinateToPixelTransform = frameState.coordinateToPixelTransform;\n    const pixelToCoordinateTransform = frameState.pixelToCoordinateTransform;\n\n    composeTransform(\n      coordinateToPixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / viewState.resolution,\n      -1 / viewState.resolution,\n      -viewState.rotation,\n      -viewState.center[0],\n      -viewState.center[1],\n    );\n\n    makeInverse(pixelToCoordinateTransform, coordinateToPixelTransform);\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {S} thisArg Value to use as `this` when executing `callback`.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n   * @return {T|undefined} Callback result.\n   * @template S,T,U\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    callback,\n    thisArg,\n    layerFilter,\n    thisArg2,\n  ) {\n    let result;\n    const viewState = frameState.viewState;\n\n    /**\n     * @param {boolean} managed Managed layer.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../layer/Layer.js\").default} layer Layer.\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @return {T|undefined} Callback result.\n     */\n    function forEachFeatureAtCoordinate(managed, feature, layer, geometry) {\n      return callback.call(thisArg, feature, managed ? layer : null, geometry);\n    }\n\n    const projection = viewState.projection;\n\n    const translatedCoordinate = wrapX(coordinate.slice(), projection);\n    const offsets = [[0, 0]];\n    if (projection.canWrapX() && checkWrapped) {\n      const projectionExtent = projection.getExtent();\n      const worldWidth = getWidth(projectionExtent);\n      offsets.push([-worldWidth, 0], [worldWidth, 0]);\n    }\n\n    const layerStates = frameState.layerStatesArray;\n    const numLayers = layerStates.length;\n\n    const matches = /** @type {Array<HitMatch<T>>} */ ([]);\n    const tmpCoord = [];\n    for (let i = 0; i < offsets.length; i++) {\n      for (let j = numLayers - 1; j >= 0; --j) {\n        const layerState = layerStates[j];\n        const layer = layerState.layer;\n        if (\n          layer.hasRenderer() &&\n          inView(layerState, viewState) &&\n          layerFilter.call(thisArg2, layer)\n        ) {\n          const layerRenderer = layer.getRenderer();\n          const source = layer.getSource();\n          if (layerRenderer && source) {\n            const coordinates = source.getWrapX()\n              ? translatedCoordinate\n              : coordinate;\n            const callback = forEachFeatureAtCoordinate.bind(\n              null,\n              layerState.managed,\n            );\n            tmpCoord[0] = coordinates[0] + offsets[i][0];\n            tmpCoord[1] = coordinates[1] + offsets[i][1];\n            result = layerRenderer.forEachFeatureAtCoordinate(\n              tmpCoord,\n              frameState,\n              hitTolerance,\n              callback,\n              matches,\n            );\n          }\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    if (matches.length === 0) {\n      return undefined;\n    }\n    const order = 1 / matches.length;\n    matches.forEach((m, i) => (m.distanceSq += i * order));\n    matches.sort((a, b) => a.distanceSq - b.distanceSq);\n    matches.some((m) => {\n      return (result = m.callback(m.feature, m.layer, m.geometry));\n    });\n    return result;\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg Value to use as `this` when executing `layerFilter`.\n   * @return {boolean} Is there a feature at the given coordinate?\n   * @template U\n   */\n  hasFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    layerFilter,\n    thisArg,\n  ) {\n    const hasFeature = this.forEachFeatureAtCoordinate(\n      coordinate,\n      frameState,\n      hitTolerance,\n      checkWrapped,\n      TRUE,\n      this,\n      layerFilter,\n      thisArg,\n    );\n\n    return hasFeature !== undefined;\n  }\n\n  /**\n   * @return {import(\"../Map.js\").default} Map.\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Render.\n   * @abstract\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  scheduleExpireIconCache(frameState) {\n    if (iconImageCache.canExpireCache()) {\n      frameState.postRenderFunctions.push(expireIconCache);\n    }\n  }\n}\n\n/**\n * @param {import(\"../Map.js\").default} map Map.\n * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n */\nfunction expireIconCache(map, frameState) {\n  iconImageCache.expire();\n}\n\nexport default MapRenderer;\n","/**\n * @module ol/renderer/Composite\n */\nimport BaseVectorLayer from '../layer/BaseVector.js';\nimport MapRenderer from './Map.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RenderEvent from '../render/Event.js';\nimport RenderEventType from '../render/EventType.js';\nimport {CLASS_UNSELECTABLE} from '../css.js';\nimport {checkedFonts} from '../render/canvas.js';\nimport {inView} from '../layer/Layer.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {replaceChildren} from '../dom.js';\n\n/**\n * @classdesc\n * Canvas map renderer.\n * @api\n */\nclass CompositeMapRenderer extends MapRenderer {\n  /**\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  constructor(map) {\n    super(map);\n\n    /**\n     * @type {import(\"../events.js\").EventsKey}\n     */\n    this.fontChangeListenerKey_ = listen(\n      checkedFonts,\n      ObjectEventType.PROPERTYCHANGE,\n      map.redrawText.bind(map),\n    );\n\n    /**\n     * @private\n     * @type {HTMLDivElement}\n     */\n    this.element_ = document.createElement('div');\n    const style = this.element_.style;\n    style.position = 'absolute';\n    style.width = '100%';\n    style.height = '100%';\n    style.zIndex = '0';\n\n    this.element_.className = CLASS_UNSELECTABLE + ' ol-layers';\n\n    const container = map.getViewport();\n    container.insertBefore(this.element_, container.firstChild || null);\n\n    /**\n     * @private\n     * @type {Array<HTMLElement>}\n     */\n    this.children_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n  }\n\n  /**\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    const map = this.getMap();\n    if (map.hasListener(type)) {\n      const event = new RenderEvent(type, undefined, frameState);\n      map.dispatchEvent(event);\n    }\n  }\n\n  disposeInternal() {\n    unlistenByKey(this.fontChangeListenerKey_);\n    this.element_.parentNode.removeChild(this.element_);\n    super.disposeInternal();\n  }\n\n  /**\n   * Render.\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element_.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    this.calculateMatrices2D(frameState);\n    this.dispatchRenderEvent(RenderEventType.PRECOMPOSE, frameState);\n\n    const layerStatesArray = frameState.layerStatesArray.sort(function (a, b) {\n      return a.zIndex - b.zIndex;\n    });\n    const declutter = layerStatesArray.some(\n      (layerState) =>\n        layerState.layer instanceof BaseVectorLayer &&\n        layerState.layer.getDeclutter(),\n    );\n    if (declutter) {\n      // Some layers need decluttering, turn on deferred rendering hint\n      frameState.declutter = {};\n    }\n    const viewState = frameState.viewState;\n\n    this.children_.length = 0;\n\n    const renderedLayerStates = [];\n    let previousElement = null;\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const layerState = layerStatesArray[i];\n      frameState.layerIndex = i;\n\n      const layer = layerState.layer;\n      const sourceState = layer.getSourceState();\n      if (\n        !inView(layerState, viewState) ||\n        (sourceState != 'ready' && sourceState != 'undefined')\n      ) {\n        layer.unrender();\n        continue;\n      }\n\n      const element = layer.render(frameState, previousElement);\n      if (!element) {\n        continue;\n      }\n      if (element !== previousElement) {\n        this.children_.push(element);\n        previousElement = element;\n      }\n\n      renderedLayerStates.push(layerState);\n    }\n\n    this.declutter(frameState, renderedLayerStates);\n\n    replaceChildren(this.element_, this.children_);\n\n    this.dispatchRenderEvent(RenderEventType.POSTCOMPOSE, frameState);\n\n    if (!this.renderedVisible_) {\n      this.element_.style.display = '';\n      this.renderedVisible_ = true;\n    }\n\n    this.scheduleExpireIconCache(frameState);\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {Array<import('../layer/Layer.js').State>} layerStates Layers.\n   */\n  declutter(frameState, layerStates) {\n    if (!frameState.declutter) {\n      return;\n    }\n    for (let i = layerStates.length - 1; i >= 0; --i) {\n      const layerState = layerStates[i];\n      const layer = layerState.layer;\n      if (layer.getDeclutter()) {\n        layer.renderDeclutter(frameState, layerState);\n      }\n    }\n    layerStates.forEach((layerState) =>\n      layerState.layer.renderDeferred(frameState),\n    );\n  }\n}\n\nexport default CompositeMapRenderer;\n","/**\n * @module ol/layer/Group\n */\nimport BaseLayer from './Base.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\nimport {getIntersection} from '../extent.js';\nimport {getUid} from '../util.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {'addlayer'|'removelayer'} GroupEventType\n */\n\n/**\n * @classdesc\n * A layer group triggers 'addlayer' and 'removelayer' events when layers are added to or removed from\n * the group or one of its child groups.  When a layer group is added to or removed from another layer group,\n * a single event will be triggered (instead of one per layer in the group added or removed).\n */\nexport class GroupEvent extends Event {\n  /**\n   * @param {GroupEventType} type The event type.\n   * @param {BaseLayer} layer The layer.\n   */\n  constructor(type, layer) {\n    super(type);\n\n    /**\n     * The added or removed layer.\n     * @type {BaseLayer}\n     * @api\n     */\n    this.layer = layer;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     'change:layers', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|'change:layers', Return>} GroupOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {Array<import(\"./Base.js\").default>|Collection<import(\"./Base.js\").default>} [layers] Child layers.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LAYERS: 'layers',\n};\n\n/**\n * @classdesc\n * A {@link module:ol/Collection~Collection} of layers that are handled together.\n *\n * A generic `change` event is triggered when the group/Collection changes.\n *\n * @api\n */\nclass LayerGroup extends BaseLayer {\n  /**\n   * @param {Options} [options] Layer options.\n   */\n  constructor(options) {\n    options = options || {};\n    const baseOptions = /** @type {Options} */ (Object.assign({}, options));\n    delete baseOptions.layers;\n\n    let layers = options.layers;\n\n    super(baseOptions);\n\n    /***\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {GroupOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.layersListenerKeys_ = [];\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.listenerKeys_ = {};\n\n    this.addChangeListener(Property.LAYERS, this.handleLayersChanged_);\n\n    if (layers) {\n      if (Array.isArray(layers)) {\n        layers = new Collection(layers.slice(), {unique: true});\n      } else {\n        assert(\n          typeof (/** @type {?} */ (layers).getArray) === 'function',\n          'Expected `layers` to be an array or a `Collection`',\n        );\n      }\n    } else {\n      layers = new Collection(undefined, {unique: true});\n    }\n\n    this.setLayers(layers);\n  }\n\n  /**\n   * @private\n   */\n  handleLayerChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleLayersChanged_() {\n    this.layersListenerKeys_.forEach(unlistenByKey);\n    this.layersListenerKeys_.length = 0;\n\n    const layers = this.getLayers();\n    this.layersListenerKeys_.push(\n      listen(layers, CollectionEventType.ADD, this.handleLayersAdd_, this),\n      listen(\n        layers,\n        CollectionEventType.REMOVE,\n        this.handleLayersRemove_,\n        this,\n      ),\n    );\n\n    for (const id in this.listenerKeys_) {\n      this.listenerKeys_[id].forEach(unlistenByKey);\n    }\n    clear(this.listenerKeys_);\n\n    const layersArray = layers.getArray();\n    for (let i = 0, ii = layersArray.length; i < ii; i++) {\n      const layer = layersArray[i];\n      this.registerLayerListeners_(layer);\n      this.dispatchEvent(new GroupEvent('addlayer', layer));\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {BaseLayer} layer The layer.\n   */\n  registerLayerListeners_(layer) {\n    const listenerKeys = [\n      listen(\n        layer,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleLayerChange_,\n        this,\n      ),\n      listen(layer, EventType.CHANGE, this.handleLayerChange_, this),\n    ];\n\n    if (layer instanceof LayerGroup) {\n      listenerKeys.push(\n        listen(layer, 'addlayer', this.handleLayerGroupAdd_, this),\n        listen(layer, 'removelayer', this.handleLayerGroupRemove_, this),\n      );\n    }\n\n    this.listenerKeys_[getUid(layer)] = listenerKeys;\n  }\n\n  /**\n   * @param {GroupEvent} event The layer group event.\n   */\n  handleLayerGroupAdd_(event) {\n    this.dispatchEvent(new GroupEvent('addlayer', event.layer));\n  }\n\n  /**\n   * @param {GroupEvent} event The layer group event.\n   */\n  handleLayerGroupRemove_(event) {\n    this.dispatchEvent(new GroupEvent('removelayer', event.layer));\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<import(\"./Base.js\").default>} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersAdd_(collectionEvent) {\n    const layer = collectionEvent.element;\n    this.registerLayerListeners_(layer);\n    this.dispatchEvent(new GroupEvent('addlayer', layer));\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<import(\"./Base.js\").default>} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersRemove_(collectionEvent) {\n    const layer = collectionEvent.element;\n    const key = getUid(layer);\n    this.listenerKeys_[key].forEach(unlistenByKey);\n    delete this.listenerKeys_[key];\n    this.dispatchEvent(new GroupEvent('removelayer', layer));\n    this.changed();\n  }\n\n  /**\n   * Returns the {@link module:ol/Collection~Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @return {!Collection<import(\"./Base.js\").default>} Collection of\n   *   {@link module:ol/layer/Base~BaseLayer layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  getLayers() {\n    return /** @type {!Collection<import(\"./Base.js\").default>} */ (\n      this.get(Property.LAYERS)\n    );\n  }\n\n  /**\n   * Set the {@link module:ol/Collection~Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @param {!Collection<import(\"./Base.js\").default>} layers Collection of\n   *   {@link module:ol/layer/Base~BaseLayer layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  setLayers(layers) {\n    const collection = this.getLayers();\n    if (collection) {\n      const currentLayers = collection.getArray();\n      for (let i = 0, ii = currentLayers.length; i < ii; ++i) {\n        this.dispatchEvent(new GroupEvent('removelayer', currentLayers[i]));\n      }\n    }\n\n    this.set(Property.LAYERS, layers);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(array) {\n    array = array !== undefined ? array : [];\n    this.getLayers().forEach(function (layer) {\n      layer.getLayersArray(array);\n    });\n    return array;\n  }\n\n  /**\n   * Get the layer states list and use this groups z-index as the default\n   * for all layers in this and nested groups, if it is unset at this point.\n   * If dest is not provided and this group's z-index is undefined\n   * 0 is used a the default z-index.\n   * @param {Array<import(\"./Layer.js\").State>} [dest] Optional list\n   * of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(dest) {\n    const states = dest !== undefined ? dest : [];\n    const pos = states.length;\n\n    this.getLayers().forEach(function (layer) {\n      layer.getLayerStatesArray(states);\n    });\n\n    const ownLayerState = this.getLayerState();\n    let defaultZIndex = ownLayerState.zIndex;\n    if (!dest && ownLayerState.zIndex === undefined) {\n      defaultZIndex = 0;\n    }\n    for (let i = pos, ii = states.length; i < ii; i++) {\n      const layerState = states[i];\n      layerState.opacity *= ownLayerState.opacity;\n      layerState.visible = layerState.visible && ownLayerState.visible;\n      layerState.maxResolution = Math.min(\n        layerState.maxResolution,\n        ownLayerState.maxResolution,\n      );\n      layerState.minResolution = Math.max(\n        layerState.minResolution,\n        ownLayerState.minResolution,\n      );\n      layerState.minZoom = Math.max(layerState.minZoom, ownLayerState.minZoom);\n      layerState.maxZoom = Math.min(layerState.maxZoom, ownLayerState.maxZoom);\n      if (ownLayerState.extent !== undefined) {\n        if (layerState.extent !== undefined) {\n          layerState.extent = getIntersection(\n            layerState.extent,\n            ownLayerState.extent,\n          );\n        } else {\n          layerState.extent = ownLayerState.extent;\n        }\n      }\n      if (layerState.zIndex === undefined) {\n        layerState.zIndex = defaultZIndex;\n      }\n    }\n\n    return states;\n  }\n\n  /**\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    return 'ready';\n  }\n}\n\nexport default LayerGroup;\n","/**\n * @module ol/MapEvent\n */\nimport Event from './events/Event.js';\n\n/**\n * @classdesc\n * Events emitted as map events are instances of this type.\n * See {@link module:ol/Map~Map} for which events trigger a map event.\n */\nclass MapEvent extends Event {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./Map.js\").default} map Map.\n   * @param {?import(\"./Map.js\").FrameState} [frameState] Frame state.\n   */\n  constructor(type, map, frameState) {\n    super(type);\n\n    /**\n     * The map where the event occurred.\n     * @type {import(\"./Map.js\").default}\n     * @api\n     */\n    this.map = map;\n\n    /**\n     * The frame state at the time of the event.\n     * @type {?import(\"./Map.js\").FrameState}\n     * @api\n     */\n    this.frameState = frameState !== undefined ? frameState : null;\n  }\n}\n\nexport default MapEvent;\n","/**\n * @module ol/MapBrowserEvent\n */\nimport MapEvent from './MapEvent.js';\n\n/**\n * @classdesc\n * Events emitted as map browser events are instances of this type.\n * See {@link module:ol/Map~Map} for which events trigger a map browser event.\n * @template {UIEvent} EVENT\n */\nclass MapBrowserEvent extends MapEvent {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./Map.js\").default} map Map.\n   * @param {EVENT} originalEvent Original event.\n   * @param {boolean} [dragging] Is the map currently being dragged?\n   * @param {import(\"./Map.js\").FrameState} [frameState] Frame state.\n   * @param {Array<PointerEvent>} [activePointers] Active pointers.\n   */\n  constructor(type, map, originalEvent, dragging, frameState, activePointers) {\n    super(type, map, frameState);\n\n    /**\n     * The original browser event.\n     * @const\n     * @type {EVENT}\n     * @api\n     */\n    this.originalEvent = originalEvent;\n\n    /**\n     * The map pixel relative to the viewport corresponding to the original browser event.\n     * @type {?import(\"./pixel.js\").Pixel}\n     */\n    this.pixel_ = null;\n\n    /**\n     * The coordinate in the user projection corresponding to the original browser event.\n     * @type {?import(\"./coordinate.js\").Coordinate}\n     */\n    this.coordinate_ = null;\n\n    /**\n     * Indicates if the map is currently being dragged. Only set for\n     * `POINTERDRAG` and `POINTERMOVE` events. Default is `false`.\n     *\n     * @type {boolean}\n     * @api\n     */\n    this.dragging = dragging !== undefined ? dragging : false;\n\n    /**\n     * @type {Array<PointerEvent>|undefined}\n     */\n    this.activePointers = activePointers;\n  }\n\n  /**\n   * The map pixel relative to the viewport corresponding to the original event.\n   * @type {import(\"./pixel.js\").Pixel}\n   * @api\n   */\n  get pixel() {\n    if (!this.pixel_) {\n      this.pixel_ = this.map.getEventPixel(this.originalEvent);\n    }\n    return this.pixel_;\n  }\n  set pixel(pixel) {\n    this.pixel_ = pixel;\n  }\n\n  /**\n   * The coordinate corresponding to the original browser event.  This will be in the user\n   * projection if one is set.  Otherwise it will be in the view projection.\n   * @type {import(\"./coordinate.js\").Coordinate}\n   * @api\n   */\n  get coordinate() {\n    if (!this.coordinate_) {\n      this.coordinate_ = this.map.getCoordinateFromPixel(this.pixel);\n    }\n    return this.coordinate_;\n  }\n  set coordinate(coordinate) {\n    this.coordinate_ = coordinate;\n  }\n\n  /**\n   * Prevents the default browser action.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.preventDefault.\n   * @api\n   */\n  preventDefault() {\n    super.preventDefault();\n    if ('preventDefault' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).preventDefault();\n    }\n  }\n\n  /**\n   * Prevents further propagation of the current event.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.stopPropagation.\n   * @api\n   */\n  stopPropagation() {\n    super.stopPropagation();\n    if ('stopPropagation' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).stopPropagation();\n    }\n  }\n}\n\nexport default MapBrowserEvent;\n","/**\n * @module ol/MapBrowserEventType\n */\nimport EventType from './events/EventType.js';\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  /**\n   * A true single click with no dragging and no double click. Note that this\n   * event is delayed by 250 ms to ensure that it is not a double click.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#singleclick\n   * @api\n   */\n  SINGLECLICK: 'singleclick',\n\n  /**\n   * A click with no dragging. A double click will fire two of this.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#click\n   * @api\n   */\n  CLICK: EventType.CLICK,\n\n  /**\n   * A true double click, with no dragging.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#dblclick\n   * @api\n   */\n  DBLCLICK: EventType.DBLCLICK,\n\n  /**\n   * Triggered when a pointer is dragged.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointerdrag\n   * @api\n   */\n  POINTERDRAG: 'pointerdrag',\n\n  /**\n   * Triggered when a pointer is moved. Note that on touch devices this is\n   * triggered when the map is panned, so is not the same as mousemove.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointermove\n   * @api\n   */\n  POINTERMOVE: 'pointermove',\n\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n\n/***\n * @typedef {'singleclick'|'click'|'dblclick'|'pointerdrag'|'pointermove'} Types\n */\n","/**\n * @module ol/pointer/EventType\n */\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  POINTERMOVE: 'pointermove',\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n","/**\n * @module ol/MapBrowserEventHandler\n */\n\nimport EventType from './events/EventType.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport Target from './events/Target.js';\nimport {PASSIVE_EVENT_LISTENERS} from './has.js';\nimport {listen, unlistenByKey} from './events.js';\n\nclass MapBrowserEventHandler extends Target {\n  /**\n   * @param {import(\"./Map.js\").default} map The map with the viewport to listen to events on.\n   * @param {number} [moveTolerance] The minimal distance the pointer must travel to trigger a move.\n   */\n  constructor(map, moveTolerance) {\n    super(map);\n\n    /**\n     * This is the element that we will listen to the real events on.\n     * @type {import(\"./Map.js\").default}\n     * @private\n     */\n    this.map_ = map;\n\n    /**\n     * @type {ReturnType<typeof setTimeout>}\n     * @private\n     */\n    this.clickTimeoutId_;\n\n    /**\n     * Emulate dblclick and singleclick. Will be true when only one pointer is active.\n     * @type {boolean}\n     */\n    this.emulateClicks_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.dragging_ = false;\n\n    /**\n     * @type {!Array<import(\"./events.js\").EventsKey>}\n     * @private\n     */\n    this.dragListenerKeys_ = [];\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.moveTolerance_ = moveTolerance === undefined ? 1 : moveTolerance;\n\n    /**\n     * The most recent \"down\" type event (or null if none have occurred).\n     * Set on pointerdown.\n     * @type {PointerEvent|null}\n     * @private\n     */\n    this.down_ = null;\n\n    const element = this.map_.getViewport();\n\n    /**\n     * @type {Array<PointerEvent>}\n     * @private\n     */\n    this.activePointers_ = [];\n\n    /**\n     * @type {!Object<number, Event>}\n     * @private\n     */\n    this.trackedTouches_ = {};\n\n    this.element_ = element;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.pointerdownListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERDOWN,\n      this.handlePointerDown_,\n      this,\n    );\n\n    /**\n     * @type {PointerEvent}\n     * @private\n     */\n    this.originalPointerMoveEvent_;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.relayedListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERMOVE,\n      this.relayMoveEvent_,\n      this,\n    );\n\n    /**\n     * @private\n     */\n    this.boundHandleTouchMove_ = this.handleTouchMove_.bind(this);\n\n    this.element_.addEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_,\n      PASSIVE_EVENT_LISTENERS ? {passive: false} : false,\n    );\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  emulateClick_(pointerEvent) {\n    let newEvent = new MapBrowserEvent(\n      MapBrowserEventType.CLICK,\n      this.map_,\n      pointerEvent,\n    );\n    this.dispatchEvent(newEvent);\n    if (this.clickTimeoutId_ !== undefined) {\n      // double-click\n      clearTimeout(this.clickTimeoutId_);\n      this.clickTimeoutId_ = undefined;\n      newEvent = new MapBrowserEvent(\n        MapBrowserEventType.DBLCLICK,\n        this.map_,\n        pointerEvent,\n      );\n      this.dispatchEvent(newEvent);\n    } else {\n      // click\n      this.clickTimeoutId_ = setTimeout(() => {\n        this.clickTimeoutId_ = undefined;\n        const newEvent = new MapBrowserEvent(\n          MapBrowserEventType.SINGLECLICK,\n          this.map_,\n          pointerEvent,\n        );\n        this.dispatchEvent(newEvent);\n      }, 250);\n    }\n  }\n\n  /**\n   * Keeps track on how many pointers are currently active.\n   *\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  updateActivePointers_(pointerEvent) {\n    const event = pointerEvent;\n    const id = event.pointerId;\n\n    if (\n      event.type == MapBrowserEventType.POINTERUP ||\n      event.type == MapBrowserEventType.POINTERCANCEL\n    ) {\n      delete this.trackedTouches_[id];\n      for (const pointerId in this.trackedTouches_) {\n        if (this.trackedTouches_[pointerId].target !== event.target) {\n          // Some platforms assign a new pointerId when the target changes.\n          // If this happens, delete one tracked pointer. If there is more\n          // than one tracked pointer for the old target, it will be cleared\n          // by subsequent POINTERUP events from other pointers.\n          delete this.trackedTouches_[pointerId];\n          break;\n        }\n      }\n    } else if (\n      event.type == MapBrowserEventType.POINTERDOWN ||\n      event.type == MapBrowserEventType.POINTERMOVE\n    ) {\n      this.trackedTouches_[id] = event;\n    }\n    this.activePointers_ = Object.values(this.trackedTouches_);\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerUp_(pointerEvent) {\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERUP,\n      this.map_,\n      pointerEvent,\n      undefined,\n      undefined,\n      this.activePointers_,\n    );\n    this.dispatchEvent(newEvent);\n\n    // We emulate click events on left mouse button click, touch contact, and pen\n    // contact. isMouseActionButton returns true in these cases (evt.button is set\n    // to 0).\n    // See http://www.w3.org/TR/pointerevents/#button-states\n    // We only fire click, singleclick, and doubleclick if nobody has called\n    // event.preventDefault().\n    if (\n      this.emulateClicks_ &&\n      !newEvent.defaultPrevented &&\n      !this.dragging_ &&\n      this.isMouseActionButton_(pointerEvent)\n    ) {\n      this.emulateClick_(this.down_);\n    }\n\n    if (this.activePointers_.length === 0) {\n      this.dragListenerKeys_.forEach(unlistenByKey);\n      this.dragListenerKeys_.length = 0;\n      this.dragging_ = false;\n      this.down_ = null;\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} If the left mouse button was pressed.\n   * @private\n   */\n  isMouseActionButton_(pointerEvent) {\n    return pointerEvent.button === 0;\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerDown_(pointerEvent) {\n    this.emulateClicks_ = this.activePointers_.length === 0;\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERDOWN,\n      this.map_,\n      pointerEvent,\n      undefined,\n      undefined,\n      this.activePointers_,\n    );\n    this.dispatchEvent(newEvent);\n\n    this.down_ = new PointerEvent(pointerEvent.type, pointerEvent);\n    Object.defineProperty(this.down_, 'target', {\n      writable: false,\n      value: pointerEvent.target,\n    });\n\n    if (this.dragListenerKeys_.length === 0) {\n      const doc = this.map_.getOwnerDocument();\n      this.dragListenerKeys_.push(\n        listen(\n          doc,\n          MapBrowserEventType.POINTERMOVE,\n          this.handlePointerMove_,\n          this,\n        ),\n        listen(doc, MapBrowserEventType.POINTERUP, this.handlePointerUp_, this),\n        /* Note that the listener for `pointercancel is set up on\n         * `pointerEventHandler_` and not `documentPointerEventHandler_` like\n         * the `pointerup` and `pointermove` listeners.\n         *\n         * The reason for this is the following: `TouchSource.vacuumTouches_()`\n         * issues `pointercancel` events, when there was no `touchend` for a\n         * `touchstart`. Now, let's say a first `touchstart` is registered on\n         * `pointerEventHandler_`. The `documentPointerEventHandler_` is set up.\n         * But `documentPointerEventHandler_` doesn't know about the first\n         * `touchstart`. If there is no `touchend` for the `touchstart`, we can\n         * only receive a `touchcancel` from `pointerEventHandler_`, because it is\n         * only registered there.\n         */\n        listen(\n          this.element_,\n          MapBrowserEventType.POINTERCANCEL,\n          this.handlePointerUp_,\n          this,\n        ),\n      );\n      if (this.element_.getRootNode && this.element_.getRootNode() !== doc) {\n        this.dragListenerKeys_.push(\n          listen(\n            this.element_.getRootNode(),\n            MapBrowserEventType.POINTERUP,\n            this.handlePointerUp_,\n            this,\n          ),\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerMove_(pointerEvent) {\n    // Between pointerdown and pointerup, pointermove events are triggered.\n    // To avoid a 'false' touchmove event to be dispatched, we test if the pointer\n    // moved a significant distance.\n    if (this.isMoving_(pointerEvent)) {\n      this.updateActivePointers_(pointerEvent);\n      this.dragging_ = true;\n      const newEvent = new MapBrowserEvent(\n        MapBrowserEventType.POINTERDRAG,\n        this.map_,\n        pointerEvent,\n        this.dragging_,\n        undefined,\n        this.activePointers_,\n      );\n      this.dispatchEvent(newEvent);\n    }\n  }\n\n  /**\n   * Wrap and relay a pointermove event.\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  relayMoveEvent_(pointerEvent) {\n    this.originalPointerMoveEvent_ = pointerEvent;\n    const dragging = !!(this.down_ && this.isMoving_(pointerEvent));\n    this.dispatchEvent(\n      new MapBrowserEvent(\n        MapBrowserEventType.POINTERMOVE,\n        this.map_,\n        pointerEvent,\n        dragging,\n      ),\n    );\n  }\n\n  /**\n   * Flexible handling of a `touch-action: none` css equivalent: because calling\n   * `preventDefault()` on a `pointermove` event does not stop native page scrolling\n   * and zooming, we also listen for `touchmove` and call `preventDefault()` on it\n   * when an interaction (currently `DragPan` handles the event.\n   * @param {TouchEvent} event Event.\n   * @private\n   */\n  handleTouchMove_(event) {\n    // Due to https://github.com/mpizenberg/elm-pep/issues/2, `this.originalPointerMoveEvent_`\n    // may not be initialized yet when we get here on a platform without native pointer events,\n    // when elm-pep is used as pointer events polyfill.\n    const originalEvent = this.originalPointerMoveEvent_;\n    if (\n      (!originalEvent || originalEvent.defaultPrevented) &&\n      (typeof event.cancelable !== 'boolean' || event.cancelable === true)\n    ) {\n      event.preventDefault();\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} Is moving.\n   * @private\n   */\n  isMoving_(pointerEvent) {\n    return (\n      this.dragging_ ||\n      Math.abs(pointerEvent.clientX - this.down_.clientX) >\n        this.moveTolerance_ ||\n      Math.abs(pointerEvent.clientY - this.down_.clientY) > this.moveTolerance_\n    );\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.relayedListenerKey_) {\n      unlistenByKey(this.relayedListenerKey_);\n      this.relayedListenerKey_ = null;\n    }\n    this.element_.removeEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_,\n    );\n\n    if (this.pointerdownListenerKey_) {\n      unlistenByKey(this.pointerdownListenerKey_);\n      this.pointerdownListenerKey_ = null;\n    }\n\n    this.dragListenerKeys_.forEach(unlistenByKey);\n    this.dragListenerKeys_.length = 0;\n\n    this.element_ = null;\n    super.disposeInternal();\n  }\n}\n\nexport default MapBrowserEventHandler;\n","/**\n * @module ol/MapEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered after a map frame is rendered.\n   * @event module:ol/MapEvent~MapEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered when the map starts moving.\n   * @event module:ol/MapEvent~MapEvent#movestart\n   * @api\n   */\n  MOVESTART: 'movestart',\n\n  /**\n   * Triggered after the map is moved.\n   * @event module:ol/MapEvent~MapEvent#moveend\n   * @api\n   */\n  MOVEEND: 'moveend',\n\n  /**\n   * Triggered when loading of additional map data (tiles, images, features) starts.\n   * @event module:ol/MapEvent~MapEvent#loadstart\n   * @api\n   */\n  LOADSTART: 'loadstart',\n\n  /**\n   * Triggered when loading of additional map data has completed.\n   * @event module:ol/MapEvent~MapEvent#loadend\n   * @api\n   */\n  LOADEND: 'loadend',\n};\n\n/***\n * @typedef {'postrender'|'movestart'|'moveend'|'loadstart'|'loadend'} Types\n */\n","/**\n * @module ol/MapProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  LAYERGROUP: 'layergroup',\n  SIZE: 'size',\n  TARGET: 'target',\n  VIEW: 'view',\n};\n","/**\n * @module ol/structs/PriorityQueue\n */\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\n\n/**\n * @type {number}\n */\nexport const DROP = Infinity;\n\n/**\n * @classdesc\n * Priority queue.\n *\n * The implementation is inspired from the Closure Library's Heap class and\n * Python's heapq module.\n *\n * See https://github.com/google/closure-library/blob/master/closure/goog/structs/heap.js\n * and https://hg.python.org/cpython/file/2.7/Lib/heapq.py.\n *\n * @template T\n */\nclass PriorityQueue {\n  /**\n   * @param {function(T): number} priorityFunction Priority function.\n   * @param {function(T): string} keyFunction Key function.\n   */\n  constructor(priorityFunction, keyFunction) {\n    /**\n     * @type {function(T): number}\n     * @private\n     */\n    this.priorityFunction_ = priorityFunction;\n\n    /**\n     * @type {function(T): string}\n     * @private\n     */\n    this.keyFunction_ = keyFunction;\n\n    /**\n     * @type {Array<T>}\n     * @private\n     */\n    this.elements_ = [];\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.priorities_ = [];\n\n    /**\n     * @type {!Object<string, boolean>}\n     * @private\n     */\n    this.queuedElements_ = {};\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.elements_.length = 0;\n    this.priorities_.length = 0;\n    clear(this.queuedElements_);\n  }\n\n  /**\n   * Remove and return the highest-priority element. O(log N).\n   * @return {T} Element.\n   */\n  dequeue() {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[0];\n    if (elements.length == 1) {\n      elements.length = 0;\n      priorities.length = 0;\n    } else {\n      elements[0] = /** @type {T} */ (elements.pop());\n      priorities[0] = /** @type {number} */ (priorities.pop());\n      this.siftUp_(0);\n    }\n    const elementKey = this.keyFunction_(element);\n    delete this.queuedElements_[elementKey];\n    return element;\n  }\n\n  /**\n   * Enqueue an element. O(log N).\n   * @param {T} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    assert(\n      !(this.keyFunction_(element) in this.queuedElements_),\n      'Tried to enqueue an `element` that was already added to the queue',\n    );\n    const priority = this.priorityFunction_(element);\n    if (priority != DROP) {\n      this.elements_.push(element);\n      this.priorities_.push(priority);\n      this.queuedElements_[this.keyFunction_(element)] = true;\n      this.siftDown_(0, this.elements_.length - 1);\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.elements_.length;\n  }\n\n  /**\n   * Gets the index of the left child of the node at the given index.\n   * @param {number} index The index of the node to get the left child for.\n   * @return {number} The index of the left child.\n   * @private\n   */\n  getLeftChildIndex_(index) {\n    return index * 2 + 1;\n  }\n\n  /**\n   * Gets the index of the right child of the node at the given index.\n   * @param {number} index The index of the node to get the right child for.\n   * @return {number} The index of the right child.\n   * @private\n   */\n  getRightChildIndex_(index) {\n    return index * 2 + 2;\n  }\n\n  /**\n   * Gets the index of the parent of the node at the given index.\n   * @param {number} index The index of the node to get the parent for.\n   * @return {number} The index of the parent.\n   * @private\n   */\n  getParentIndex_(index) {\n    return (index - 1) >> 1;\n  }\n\n  /**\n   * Make this a heap. O(N).\n   * @private\n   */\n  heapify_() {\n    let i;\n    for (i = (this.elements_.length >> 1) - 1; i >= 0; i--) {\n      this.siftUp_(i);\n    }\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.elements_.length === 0;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Is key queued.\n   */\n  isKeyQueued(key) {\n    return key in this.queuedElements_;\n  }\n\n  /**\n   * @param {T} element Element.\n   * @return {boolean} Is queued.\n   */\n  isQueued(element) {\n    return this.isKeyQueued(this.keyFunction_(element));\n  }\n\n  /**\n   * @param {number} index The index of the node to move down.\n   * @private\n   */\n  siftUp_(index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const count = elements.length;\n    const element = elements[index];\n    const priority = priorities[index];\n    const startIndex = index;\n\n    while (index < count >> 1) {\n      const lIndex = this.getLeftChildIndex_(index);\n      const rIndex = this.getRightChildIndex_(index);\n\n      const smallerChildIndex =\n        rIndex < count && priorities[rIndex] < priorities[lIndex]\n          ? rIndex\n          : lIndex;\n\n      elements[index] = elements[smallerChildIndex];\n      priorities[index] = priorities[smallerChildIndex];\n      index = smallerChildIndex;\n    }\n\n    elements[index] = element;\n    priorities[index] = priority;\n    this.siftDown_(startIndex, index);\n  }\n\n  /**\n   * @param {number} startIndex The index of the root.\n   * @param {number} index The index of the node to move up.\n   * @private\n   */\n  siftDown_(startIndex, index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[index];\n    const priority = priorities[index];\n\n    while (index > startIndex) {\n      const parentIndex = this.getParentIndex_(index);\n      if (priorities[parentIndex] > priority) {\n        elements[index] = elements[parentIndex];\n        priorities[index] = priorities[parentIndex];\n        index = parentIndex;\n      } else {\n        break;\n      }\n    }\n    elements[index] = element;\n    priorities[index] = priority;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  reprioritize() {\n    const priorityFunction = this.priorityFunction_;\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    let index = 0;\n    const n = elements.length;\n    let element, i, priority;\n    for (i = 0; i < n; ++i) {\n      element = elements[i];\n      priority = priorityFunction(element);\n      if (priority == DROP) {\n        delete this.queuedElements_[this.keyFunction_(element)];\n      } else {\n        priorities[index] = priority;\n        elements[index++] = element;\n      }\n    }\n    elements.length = index;\n    priorities.length = index;\n    this.heapify_();\n  }\n}\n\nexport default PriorityQueue;\n","/**\n * @module ol/TileQueue\n */\nimport EventType from './events/EventType.js';\nimport PriorityQueue, {DROP} from './structs/PriorityQueue.js';\nimport TileState from './TileState.js';\n\n/**\n * @typedef {function(import(\"./Tile.js\").default, string, import(\"./coordinate.js\").Coordinate, number): number} PriorityFunction\n */\n\nclass TileQueue extends PriorityQueue {\n  /**\n   * @param {PriorityFunction} tilePriorityFunction Tile priority function.\n   * @param {function(): ?} tileChangeCallback Function called on each tile change event.\n   */\n  constructor(tilePriorityFunction, tileChangeCallback) {\n    super(\n      /**\n       * @param {Array} element Element.\n       * @return {number} Priority.\n       */\n      function (element) {\n        return tilePriorityFunction.apply(null, element);\n      },\n      /**\n       * @param {Array} element Element.\n       * @return {string} Key.\n       */\n      function (element) {\n        return /** @type {import(\"./Tile.js\").default} */ (element[0]).getKey();\n      },\n    );\n\n    /** @private */\n    this.boundHandleTileChange_ = this.handleTileChange.bind(this);\n\n    /**\n     * @private\n     * @type {function(): ?}\n     */\n    this.tileChangeCallback_ = tileChangeCallback;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilesLoading_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string,boolean>}\n     */\n    this.tilesLoadingKeys_ = {};\n  }\n\n  /**\n   * @param {Array} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    const added = super.enqueue(element);\n    if (added) {\n      const tile = element[0];\n      tile.addEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n    }\n    return added;\n  }\n\n  /**\n   * @return {number} Number of tiles loading.\n   */\n  getTilesLoading() {\n    return this.tilesLoading_;\n  }\n\n  /**\n   * @param {import(\"./events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"./Tile.js\").default} */ (event.target);\n    const state = tile.getState();\n    if (\n      state === TileState.LOADED ||\n      state === TileState.ERROR ||\n      state === TileState.EMPTY\n    ) {\n      if (state !== TileState.ERROR) {\n        tile.removeEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n      }\n      const tileKey = tile.getKey();\n      if (tileKey in this.tilesLoadingKeys_) {\n        delete this.tilesLoadingKeys_[tileKey];\n        --this.tilesLoading_;\n      }\n      this.tileChangeCallback_();\n    }\n  }\n\n  /**\n   * @param {number} maxTotalLoading Maximum number tiles to load simultaneously.\n   * @param {number} maxNewLoads Maximum number of new tiles to load.\n   */\n  loadMoreTiles(maxTotalLoading, maxNewLoads) {\n    let newLoads = 0;\n    let state, tile, tileKey;\n    while (\n      this.tilesLoading_ < maxTotalLoading &&\n      newLoads < maxNewLoads &&\n      this.getCount() > 0\n    ) {\n      tile = /** @type {import(\"./Tile.js\").default} */ (this.dequeue()[0]);\n      tileKey = tile.getKey();\n      state = tile.getState();\n      if (state === TileState.IDLE && !(tileKey in this.tilesLoadingKeys_)) {\n        this.tilesLoadingKeys_[tileKey] = true;\n        ++this.tilesLoading_;\n        ++newLoads;\n        tile.load();\n      }\n    }\n  }\n}\n\nexport default TileQueue;\n\n/**\n * @param {import('./Map.js').FrameState} frameState Frame state.\n * @param {import(\"./Tile.js\").default} tile Tile.\n * @param {string} tileSourceKey Tile source key.\n * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n * @param {number} tileResolution Tile resolution.\n * @return {number} Tile priority.\n */\nexport function getTilePriority(\n  frameState,\n  tile,\n  tileSourceKey,\n  tileCenter,\n  tileResolution,\n) {\n  // Filter out tiles at higher zoom levels than the current zoom level, or that\n  // are outside the visible extent.\n  if (!frameState || !(tileSourceKey in frameState.wantedTiles)) {\n    return DROP;\n  }\n  if (!frameState.wantedTiles[tileSourceKey][tile.getKey()]) {\n    return DROP;\n  }\n  // Prioritize the highest zoom level tiles closest to the focus.\n  // Tiles at higher zoom levels are prioritized using Math.log(tileResolution).\n  // Within a zoom level, tiles are prioritized by the distance in pixels between\n  // the center of the tile and the center of the viewport.  The factor of 65536\n  // means that the prioritization should behave as desired for tiles up to\n  // 65536 * Math.log(2) = 45426 pixels from the focus.\n  const center = frameState.viewState.center;\n  const deltaX = tileCenter[0] - center[0];\n  const deltaY = tileCenter[1] - center[1];\n  return (\n    65536 * Math.log(tileResolution) +\n    Math.sqrt(deltaX * deltaX + deltaY * deltaY) / tileResolution\n  );\n}\n","/**\n * @module ol/control/Control\n */\nimport BaseObject from '../Object.js';\nimport MapEventType from '../MapEventType.js';\nimport {VOID} from '../functions.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {removeNode} from '../dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {HTMLElement} [element] The element is the control's\n * container element. This only needs to be specified if you're developing\n * a custom control.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want\n * the control to be rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control is a visible widget with a DOM element in a fixed position on the\n * screen. They can involve user input (buttons), or be informational only;\n * the position is determined using CSS. By default these are placed in the\n * container with CSS class name `ol-overlaycontainer-stopevent`, but can use\n * any outside DOM element.\n *\n * This is the base class for controls. You can use it for simple custom\n * controls by creating the element with listeners, creating an instance:\n * ```js\n * const myControl = new Control({element: myElement});\n * ```\n * and then adding this to the map.\n *\n * The main advantage of having this as a control rather than a simple separate\n * DOM element is that preventing propagation is handled for you. Controls\n * will also be objects in a {@link module:ol/Collection~Collection}, so you can use their methods.\n *\n * You can also extend this base for your own control class. See\n * examples/custom-controls for an example of how to do this.\n *\n * @api\n */\nclass Control extends BaseObject {\n  /**\n   * @param {Options} options Control options.\n   */\n  constructor(options) {\n    super();\n\n    const element = options.element;\n    if (element && !options.target && !element.style.pointerEvents) {\n      element.style.pointerEvents = 'auto';\n    }\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.element = element ? element : null;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.target_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../events.js\").EventsKey>}\n     */\n    this.listenerKeys = [];\n\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.target) {\n      this.setTarget(options.target);\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    removeNode(this.element);\n    super.disposeInternal();\n  }\n\n  /**\n   * Get the map associated with this control.\n   * @return {import(\"../Map.js\").default|null} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Pass `null` to just remove the control from the current map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.map_) {\n      removeNode(this.element);\n    }\n    for (let i = 0, ii = this.listenerKeys.length; i < ii; ++i) {\n      unlistenByKey(this.listenerKeys[i]);\n    }\n    this.listenerKeys.length = 0;\n    this.map_ = map;\n    if (map) {\n      const target = this.target_\n        ? this.target_\n        : map.getOverlayContainerStopEvent();\n      target.appendChild(this.element);\n      if (this.render !== VOID) {\n        this.listenerKeys.push(\n          listen(map, MapEventType.POSTRENDER, this.render, this),\n        );\n      }\n      map.render();\n    }\n  }\n\n  /**\n   * Renders the control.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @api\n   */\n  render(mapEvent) {}\n\n  /**\n   * This function is used to set a target element for the control. It has no\n   * effect if it is called after the control has been added to the map (i.e.\n   * after `setMap` is called on the control). If no `target` is set in the\n   * options passed to the control constructor and if `setTarget` is not called\n   * then the control is added to the map's overlay container.\n   * @param {HTMLElement|string} target Target.\n   * @api\n   */\n  setTarget(target) {\n    this.target_ =\n      typeof target === 'string' ? document.getElementById(target) : target;\n  }\n}\n\nexport default Control;\n","/**\n * @module ol/control/Attribution\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_COLLAPSED, CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {equals} from '../array.js';\nimport {removeChildren, replaceNode} from '../dom.js';\nimport {toPromise} from '../functions.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-attribution'] CSS class name.\n * @property {HTMLElement|string} [target] Specify a target if you\n * want the control to be rendered outside of the map's\n * viewport.\n * @property {boolean} [collapsible] Specify if attributions can\n * be collapsed. If not specified, sources control this behavior with their\n * `attributionsCollapsible` setting.\n * @property {boolean} [collapsed=true] Specify if attributions should\n * be collapsed at startup.\n * @property {string} [tipLabel='Attributions'] Text label to use for the button tip.\n * @property {string|HTMLElement} [label='i'] Text label to use for the\n * collapsed attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [expandClassName=className + '-expand'] CSS class name for the\n * collapsed attributions button.\n * @property {string|HTMLElement} [collapseLabel='›'] Text label to use\n * for the expanded attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [collapseClassName=className + '-collapse'] CSS class name for the\n * expanded attributions button.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n */\n\n/**\n * @classdesc\n * Control to show all the attributions associated with the layer sources\n * in the map. This control is one of the default controls included in maps.\n * By default it will show in the bottom right portion of the map, but this can\n * be changed by using a css selector for `.ol-attribution`.\n *\n * @api\n */\nclass Attribution extends Control {\n  /**\n   * @param {Options} [options] Attribution options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.ulElement_ = document.createElement('ul');\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsed_ =\n      options.collapsed !== undefined ? options.collapsed : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.userCollapsed_ = this.collapsed_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overrideCollapsible_ = options.collapsible !== undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsible_ =\n      options.collapsible !== undefined ? options.collapsible : true;\n\n    if (!this.collapsible_) {\n      this.collapsed_ = false;\n    }\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-attribution';\n\n    const tipLabel =\n      options.tipLabel !== undefined ? options.tipLabel : 'Attributions';\n\n    const expandClassName =\n      options.expandClassName !== undefined\n        ? options.expandClassName\n        : className + '-expand';\n\n    const collapseLabel =\n      options.collapseLabel !== undefined ? options.collapseLabel : '\\u203A';\n\n    const collapseClassName =\n      options.collapseClassName !== undefined\n        ? options.collapseClassName\n        : className + '-collapse';\n\n    if (typeof collapseLabel === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.collapseLabel_ = document.createElement('span');\n      this.collapseLabel_.textContent = collapseLabel;\n      this.collapseLabel_.className = collapseClassName;\n    } else {\n      this.collapseLabel_ = collapseLabel;\n    }\n\n    const label = options.label !== undefined ? options.label : 'i';\n\n    if (typeof label === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.label_ = document.createElement('span');\n      this.label_.textContent = label;\n      this.label_.className = expandClassName;\n    } else {\n      this.label_ = label;\n    }\n\n    const activeLabel =\n      this.collapsible_ && !this.collapsed_ ? this.collapseLabel_ : this.label_;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.toggleButton_ = document.createElement('button');\n    this.toggleButton_.setAttribute('type', 'button');\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n    this.toggleButton_.title = tipLabel;\n    this.toggleButton_.appendChild(activeLabel);\n\n    this.toggleButton_.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false,\n    );\n\n    const cssClasses =\n      className +\n      ' ' +\n      CLASS_UNSELECTABLE +\n      ' ' +\n      CLASS_CONTROL +\n      (this.collapsed_ && this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n      (this.collapsible_ ? '' : ' ol-uncollapsible');\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(this.toggleButton_);\n    element.appendChild(this.ulElement_);\n\n    /**\n     * A list of currently rendered resolutions.\n     * @type {Array<string>}\n     * @private\n     */\n    this.renderedAttributions_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n  }\n\n  /**\n   * Collect a list of visible attributions and set the collapsible state.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @return {Array<string>} Attributions.\n   * @private\n   */\n  collectSourceAttributions_(frameState) {\n    const visibleAttributions = Array.from(\n      new Set(\n        this.getMap()\n          .getAllLayers()\n          .flatMap((layer) => layer.getAttributions(frameState)),\n      ),\n    );\n\n    const collapsible = !this.getMap()\n      .getAllLayers()\n      .some(\n        (layer) =>\n          layer.getSource() &&\n          layer.getSource().getAttributionsCollapsible() === false,\n      );\n    if (!this.overrideCollapsible_) {\n      this.setCollapsible(collapsible);\n    }\n    return visibleAttributions;\n  }\n\n  /**\n   * @private\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  async updateElement_(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    const attributions = await Promise.all(\n      this.collectSourceAttributions_(frameState).map((attribution) =>\n        toPromise(() => attribution),\n      ),\n    );\n\n    const visible = attributions.length > 0;\n    if (this.renderedVisible_ != visible) {\n      this.element.style.display = visible ? '' : 'none';\n      this.renderedVisible_ = visible;\n    }\n\n    if (equals(attributions, this.renderedAttributions_)) {\n      return;\n    }\n\n    removeChildren(this.ulElement_);\n\n    // append the attributions\n    for (let i = 0, ii = attributions.length; i < ii; ++i) {\n      const element = document.createElement('li');\n      element.innerHTML = attributions[i];\n      this.ulElement_.appendChild(element);\n    }\n\n    this.renderedAttributions_ = attributions;\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    this.handleToggle_();\n    this.userCollapsed_ = this.collapsed_;\n  }\n\n  /**\n   * @private\n   */\n  handleToggle_() {\n    this.element.classList.toggle(CLASS_COLLAPSED);\n    if (this.collapsed_) {\n      replaceNode(this.collapseLabel_, this.label_);\n    } else {\n      replaceNode(this.label_, this.collapseLabel_);\n    }\n    this.collapsed_ = !this.collapsed_;\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n  }\n\n  /**\n   * Return `true` if the attribution is collapsible, `false` otherwise.\n   * @return {boolean} True if the widget is collapsible.\n   * @api\n   */\n  getCollapsible() {\n    return this.collapsible_;\n  }\n\n  /**\n   * Set whether the attribution should be collapsible.\n   * @param {boolean} collapsible True if the widget is collapsible.\n   * @api\n   */\n  setCollapsible(collapsible) {\n    if (this.collapsible_ === collapsible) {\n      return;\n    }\n    this.collapsible_ = collapsible;\n    this.element.classList.toggle('ol-uncollapsible');\n    if (this.userCollapsed_) {\n      this.handleToggle_();\n    }\n  }\n\n  /**\n   * Collapse or expand the attribution according to the passed parameter. Will\n   * not do anything if the attribution isn't collapsible or if the current\n   * collapsed state is already the one requested.\n   * @param {boolean} collapsed True if the widget is collapsed.\n   * @api\n   */\n  setCollapsed(collapsed) {\n    this.userCollapsed_ = collapsed;\n    if (!this.collapsible_ || this.collapsed_ === collapsed) {\n      return;\n    }\n    this.handleToggle_();\n  }\n\n  /**\n   * Return `true` when the attribution is currently collapsed or `false`\n   * otherwise.\n   * @return {boolean} True if the widget is collapsed.\n   * @api\n   */\n  getCollapsed() {\n    return this.collapsed_;\n  }\n\n  /**\n   * Update the attribution element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    this.updateElement_(mapEvent.frameState);\n  }\n}\n\nexport default Attribution;\n","/**\n * @module ol/control/Rotate\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_HIDDEN, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-rotate'] CSS class name.\n * @property {string|HTMLElement} [label='⇧'] Text label to use for the rotate button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Reset rotation'] Text label to use for the rotate tip.\n * @property {string} [compassClassName='ol-compass'] CSS class name for the compass.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {boolean} [autoHide=true] Hide the control when rotation is 0.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control should\n * be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {function():void} [resetNorth] Function called when the control is clicked.\n * This will override the default `resetNorth`.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A button control to reset rotation to 0.\n * To style this control use css selector `.ol-rotate`. A `.ol-hidden` css\n * selector is added to the button when the rotation is 0.\n *\n * @api\n */\nclass Rotate extends Control {\n  /**\n   * @param {Options} [options] Rotate options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-rotate';\n\n    const label = options.label !== undefined ? options.label : '\\u21E7';\n\n    const compassClassName =\n      options.compassClassName !== undefined\n        ? options.compassClassName\n        : 'ol-compass';\n\n    /**\n     * @type {HTMLElement}\n     * @private\n     */\n    this.label_ = null;\n\n    if (typeof label === 'string') {\n      this.label_ = document.createElement('span');\n      this.label_.className = compassClassName;\n      this.label_.textContent = label;\n    } else {\n      this.label_ = label;\n      this.label_.classList.add(compassClassName);\n    }\n\n    const tipLabel = options.tipLabel ? options.tipLabel : 'Reset rotation';\n\n    const button = document.createElement('button');\n    button.className = className + '-reset';\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(this.label_);\n\n    button.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false,\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(button);\n\n    this.callResetNorth_ = options.resetNorth ? options.resetNorth : undefined;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.autoHide_ = options.autoHide !== undefined ? options.autoHide : true;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    if (this.autoHide_) {\n      this.element.classList.add(CLASS_HIDDEN);\n    }\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    if (this.callResetNorth_ !== undefined) {\n      this.callResetNorth_();\n    } else {\n      this.resetNorth_();\n    }\n  }\n\n  /**\n   * @private\n   */\n  resetNorth_() {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const rotation = view.getRotation();\n    if (rotation !== undefined) {\n      if (this.duration_ > 0 && rotation % (2 * Math.PI) !== 0) {\n        view.animate({\n          rotation: 0,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setRotation(0);\n      }\n    }\n  }\n\n  /**\n   * Update the rotate control element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    const frameState = mapEvent.frameState;\n    if (!frameState) {\n      return;\n    }\n    const rotation = frameState.viewState.rotation;\n    if (rotation != this.rotation_) {\n      const transform = 'rotate(' + rotation + 'rad)';\n      if (this.autoHide_) {\n        const contains = this.element.classList.contains(CLASS_HIDDEN);\n        if (!contains && rotation === 0) {\n          this.element.classList.add(CLASS_HIDDEN);\n        } else if (contains && rotation !== 0) {\n          this.element.classList.remove(CLASS_HIDDEN);\n        }\n      }\n      this.label_.style.transform = transform;\n    }\n    this.rotation_ = rotation;\n  }\n}\n\nexport default Rotate;\n","/**\n * @module ol/control/Zoom\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {string} [className='ol-zoom'] CSS class name.\n * @property {string} [zoomInClassName=className + '-in'] CSS class name for the zoom-in button.\n * @property {string} [zoomOutClassName=className + '-out'] CSS class name for the zoom-out button.\n * @property {string|HTMLElement} [zoomInLabel='+'] Text label to use for the zoom-in\n * button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [zoomOutLabel='–'] Text label to use for the zoom-out button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [zoomInTipLabel='Zoom in'] Text label to use for the button tip.\n * @property {string} [zoomOutTipLabel='Zoom out'] Text label to use for the button tip.\n * @property {number} [delta=1] The zoom delta applied on each click.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control with 2 buttons, one for zoom in and one for zoom out.\n * This control is one of the default controls of a map. To style this control\n * use css selectors `.ol-zoom-in` and `.ol-zoom-out`.\n *\n * @api\n */\nclass Zoom extends Control {\n  /**\n   * @param {Options} [options] Zoom options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-zoom';\n\n    const delta = options.delta !== undefined ? options.delta : 1;\n\n    const zoomInClassName =\n      options.zoomInClassName !== undefined\n        ? options.zoomInClassName\n        : className + '-in';\n\n    const zoomOutClassName =\n      options.zoomOutClassName !== undefined\n        ? options.zoomOutClassName\n        : className + '-out';\n\n    const zoomInLabel =\n      options.zoomInLabel !== undefined ? options.zoomInLabel : '+';\n    const zoomOutLabel =\n      options.zoomOutLabel !== undefined ? options.zoomOutLabel : '\\u2013';\n\n    const zoomInTipLabel =\n      options.zoomInTipLabel !== undefined ? options.zoomInTipLabel : 'Zoom in';\n    const zoomOutTipLabel =\n      options.zoomOutTipLabel !== undefined\n        ? options.zoomOutTipLabel\n        : 'Zoom out';\n\n    const inElement = document.createElement('button');\n    inElement.className = zoomInClassName;\n    inElement.setAttribute('type', 'button');\n    inElement.title = zoomInTipLabel;\n    inElement.appendChild(\n      typeof zoomInLabel === 'string'\n        ? document.createTextNode(zoomInLabel)\n        : zoomInLabel,\n    );\n\n    inElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, delta),\n      false,\n    );\n\n    const outElement = document.createElement('button');\n    outElement.className = zoomOutClassName;\n    outElement.setAttribute('type', 'button');\n    outElement.title = zoomOutTipLabel;\n    outElement.appendChild(\n      typeof zoomOutLabel === 'string'\n        ? document.createTextNode(zoomOutLabel)\n        : zoomOutLabel,\n    );\n\n    outElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, -delta),\n      false,\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(inElement);\n    element.appendChild(outElement);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(delta, event) {\n    event.preventDefault();\n    this.zoomByDelta_(delta);\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @private\n   */\n  zoomByDelta_(delta) {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const currentZoom = view.getZoom();\n    if (currentZoom !== undefined) {\n      const newZoom = view.getConstrainedZoom(currentZoom + delta);\n      if (this.duration_ > 0) {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.animate({\n          zoom: newZoom,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setZoom(newZoom);\n      }\n    }\n  }\n}\n\nexport default Zoom;\n","/**\n * @module ol/control/defaults\n */\nimport Attribution from './Attribution.js';\nimport Collection from '../Collection.js';\nimport Rotate from './Rotate.js';\nimport Zoom from './Zoom.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [attribution=true] Include\n * {@link module:ol/control/Attribution~Attribution}.\n * @property {import(\"./Attribution.js\").Options} [attributionOptions]\n * Options for {@link module:ol/control/Attribution~Attribution}.\n * @property {boolean} [rotate=true] Include\n * {@link module:ol/control/Rotate~Rotate}.\n * @property {import(\"./Rotate.js\").Options} [rotateOptions] Options\n * for {@link module:ol/control/Rotate~Rotate}.\n * @property {boolean} [zoom] Include {@link module:ol/control/Zoom~Zoom}.\n * @property {import(\"./Zoom.js\").Options} [zoomOptions] Options for\n * {@link module:ol/control/Zoom~Zoom}.\n */\n\n/**\n * Set of controls included in maps by default. Unless configured otherwise,\n * this returns a collection containing an instance of each of the following\n * controls:\n * * {@link module:ol/control/Zoom~Zoom}\n * * {@link module:ol/control/Rotate~Rotate}\n * * {@link module:ol/control/Attribution~Attribution}\n *\n * @param {DefaultsOptions} [options] Options for the default controls.\n * @return {Collection<import(\"./Control.js\").default>} A collection of controls\n * to be used with the {@link module:ol/Map~Map} constructor's `controls` option.\n * @api\n */\nexport function defaults(options) {\n  options = options ? options : {};\n\n  /** @type {Collection<import(\"./Control.js\").default>} */\n  const controls = new Collection();\n\n  const zoomControl = options.zoom !== undefined ? options.zoom : true;\n  if (zoomControl) {\n    controls.push(new Zoom(options.zoomOptions));\n  }\n\n  const rotateControl = options.rotate !== undefined ? options.rotate : true;\n  if (rotateControl) {\n    controls.push(new Rotate(options.rotateOptions));\n  }\n\n  const attributionControl =\n    options.attribution !== undefined ? options.attribution : true;\n  if (attributionControl) {\n    controls.push(new Attribution(options.attributionOptions));\n  }\n\n  return controls;\n}\n","/**\n * @module ol/interaction/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ACTIVE: 'active',\n};\n","/**\n * @module ol/interaction/Interaction\n */\nimport BaseObject from '../Object.js';\nimport InteractionProperty from './Property.js';\nimport {easeOut, linear} from '../easing.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active', Return>} InteractionOnSignature\n */\n\n/**\n * Object literal with config options for interactions.\n * @typedef {Object} InteractionOptions\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} handleEvent\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. If the function returns a falsy value, propagation of\n * the event to other interactions in the map's interactions chain will be\n * prevented (this includes functions with no explicit return). The interactions\n * are traversed in reverse order of the interactions collection of the map.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * User actions that change the state of the map. Some are similar to controls,\n * but are not associated with a DOM element.\n * For example, {@link module:ol/interaction/KeyboardZoom~KeyboardZoom} is\n * functionally the same as {@link module:ol/control/Zoom~Zoom}, but triggered\n * by a keyboard event not a button element event.\n * Although interactions do not have a DOM element, some of them do render\n * vectors and so are visible on the screen.\n * @api\n */\nclass Interaction extends BaseObject {\n  /**\n   * @param {InteractionOptions} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {InteractionOnSignature<void>}\n     */\n    this.un;\n\n    if (options && options.handleEvent) {\n      this.handleEvent = options.handleEvent;\n    }\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    this.setActive(true);\n  }\n\n  /**\n   * Return whether the interaction is currently active.\n   * @return {boolean} `true` if the interaction is active, `false` otherwise.\n   * @observable\n   * @api\n   */\n  getActive() {\n    return /** @type {boolean} */ (this.get(InteractionProperty.ACTIVE));\n  }\n\n  /**\n   * Get the map associated with this interaction.\n   * @return {import(\"../Map.js\").default|null} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event}.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    return true;\n  }\n\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   */\n  setActive(active) {\n    this.set(InteractionProperty.ACTIVE, active);\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMap(map) {\n    this.map_ = map;\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {import(\"../coordinate.js\").Coordinate} delta Delta.\n * @param {number} [duration] Duration.\n */\nexport function pan(view, delta, duration) {\n  const currentCenter = view.getCenterInternal();\n  if (currentCenter) {\n    const center = [currentCenter[0] + delta[0], currentCenter[1] + delta[1]];\n    view.animateInternal({\n      duration: duration !== undefined ? duration : 250,\n      easing: linear,\n      center: view.getConstrainedCenter(center),\n    });\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number} delta Delta from previous zoom level.\n * @param {import(\"../coordinate.js\").Coordinate} [anchor] Anchor coordinate in the user projection.\n * @param {number} [duration] Duration.\n */\nexport function zoomByDelta(view, delta, anchor, duration) {\n  const currentZoom = view.getZoom();\n\n  if (currentZoom === undefined) {\n    return;\n  }\n\n  const newZoom = view.getConstrainedZoom(currentZoom + delta);\n  const newResolution = view.getResolutionForZoom(newZoom);\n\n  if (view.getAnimating()) {\n    view.cancelAnimations();\n  }\n  view.animate({\n    resolution: newResolution,\n    anchor: anchor,\n    duration: duration !== undefined ? duration : 250,\n    easing: easeOut,\n  });\n}\n\nexport default Interaction;\n","/**\n * @module ol/interaction/DoubleClickZoom\n */\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [delta=1] The zoom delta applied on each double click.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom by double-clicking on the map.\n * @api\n */\nclass DoubleClickZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} (if it was a\n   * doubleclick) and eventually zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == MapBrowserEventType.DBLCLICK) {\n      const browserEvent = /** @type {MouseEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const map = mapBrowserEvent.map;\n      const anchor = mapBrowserEvent.coordinate;\n      const delta = browserEvent.shiftKey ? -this.delta_ : this.delta_;\n      const view = map.getView();\n      zoomByDelta(view, delta, anchor, this.duration_);\n      browserEvent.preventDefault();\n      stopEvent = true;\n    }\n    return !stopEvent;\n  }\n}\n\nexport default DoubleClickZoom;\n","/**\n * @module ol/interaction/Pointer\n */\nimport Interaction from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\n\n/**\n * @typedef {Object} Options\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleDownEvent]\n * Function handling \"down\" events. If the function returns `true` then a drag\n * sequence is started.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleDragEvent]\n * Function handling \"drag\" events. This function is called on \"move\" events\n * during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleEvent]\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. The function may return `false` to prevent the\n * propagation of the event to other interactions in the map's interactions\n * chain.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleMoveEvent]\n * Function handling \"move\" events. This function is called on \"move\" events.\n * This functions is also called during a drag sequence, so during a drag\n * sequence both the `handleDragEvent` function and this function are called.\n * If `handleDownEvent` is defined and it returns true this function will not\n * be called during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleUpEvent]\n *  Function handling \"up\" events. If the function returns `false` then the\n * current drag sequence is stopped.\n * @property {function(boolean):boolean} [stopDown]\n * Should the down event be propagated to other interactions, or should be\n * stopped?\n */\n\n/**\n * @classdesc\n * Base class that calls user-defined functions on `down`, `move` and `up`\n * events. This class also manages \"drag sequences\".\n *\n * When the `handleDownEvent` user function returns `true` a drag sequence is\n * started. During a drag sequence the `handleDragEvent` user function is\n * called on `move` events. The drag sequence ends when the `handleUpEvent`\n * user function is called and returns `false`.\n * @api\n */\nclass PointerInteraction extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options),\n    );\n\n    if (options.handleDownEvent) {\n      this.handleDownEvent = options.handleDownEvent;\n    }\n\n    if (options.handleDragEvent) {\n      this.handleDragEvent = options.handleDragEvent;\n    }\n\n    if (options.handleMoveEvent) {\n      this.handleMoveEvent = options.handleMoveEvent;\n    }\n\n    if (options.handleUpEvent) {\n      this.handleUpEvent = options.handleUpEvent;\n    }\n\n    if (options.stopDown) {\n      this.stopDown = options.stopDown;\n    }\n\n    /**\n     * @type {boolean}\n     * @protected\n     */\n    this.handlingDownUpSequence = false;\n\n    /**\n     * @type {Array<PointerEvent>}\n     * @protected\n     */\n    this.targetPointers = [];\n  }\n\n  /**\n   * Returns the current number of pointers involved in the interaction,\n   * e.g. `2` when two fingers are used.\n   * @return {number} The number of pointers.\n   * @api\n   */\n  getPointerCount() {\n    return this.targetPointers.length;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleDownEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleDragEvent(mapBrowserEvent) {}\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} and may call into\n   * other functions, if event sequences like e.g. 'drag' or 'down-up' etc. are\n   * detected.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!mapBrowserEvent.originalEvent) {\n      return true;\n    }\n\n    let stopEvent = false;\n    this.updateTrackedPointers_(mapBrowserEvent);\n    if (this.handlingDownUpSequence) {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDRAG) {\n        this.handleDragEvent(mapBrowserEvent);\n        // prevent page scrolling during dragging\n        mapBrowserEvent.originalEvent.preventDefault();\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        const handledUp = this.handleUpEvent(mapBrowserEvent);\n        this.handlingDownUpSequence =\n          handledUp && this.targetPointers.length > 0;\n      }\n    } else {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n        const handled = this.handleDownEvent(mapBrowserEvent);\n        this.handlingDownUpSequence = handled;\n        stopEvent = this.stopDown(handled);\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE) {\n        this.handleMoveEvent(mapBrowserEvent);\n      }\n    }\n    return !stopEvent;\n  }\n\n  /**\n   * Handle pointer move events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleMoveEvent(mapBrowserEvent) {}\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleUpEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * This function is used to determine if \"down\" events should be propagated\n   * to other interactions or should be stopped.\n   * @param {boolean} handled Was the event handled by the interaction?\n   * @return {boolean} Should the `down` event be stopped?\n   */\n  stopDown(handled) {\n    return handled;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @private\n   */\n  updateTrackedPointers_(mapBrowserEvent) {\n    if (mapBrowserEvent.activePointers) {\n      this.targetPointers = mapBrowserEvent.activePointers;\n    }\n  }\n}\n\n/**\n * @param {Array<PointerEvent>} pointerEvents List of events.\n * @return {{clientX: number, clientY: number}} Centroid pixel.\n */\nexport function centroid(pointerEvents) {\n  const length = pointerEvents.length;\n  let clientX = 0;\n  let clientY = 0;\n  for (let i = 0; i < length; i++) {\n    clientX += pointerEvents[i].clientX;\n    clientY += pointerEvents[i].clientY;\n  }\n  return {clientX: clientX / length, clientY: clientY / length};\n}\n\nexport default PointerInteraction;\n","/**\n * @module ol/events/condition\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport {FALSE, TRUE} from '../functions.js';\nimport {MAC, WEBKIT} from '../has.js';\nimport {assert} from '../asserts.js';\n\n/**\n * A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * `{boolean}`. If the condition is met, true should be returned.\n *\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default): boolean} Condition\n */\n\n/**\n * Creates a condition function that passes when all provided conditions pass.\n * @param {...Condition} var_args Conditions to check.\n * @return {Condition} Condition function.\n */\nexport function all(var_args) {\n  const conditions = arguments;\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} All conditions passed.\n   */\n  return function (event) {\n    let pass = true;\n    for (let i = 0, ii = conditions.length; i < ii; ++i) {\n      pass = pass && conditions[i](event);\n      if (!pass) {\n        break;\n      }\n    }\n    return pass;\n  };\n}\n\n/**\n * Return `true` if only the alt-key is pressed, `false` otherwise (e.g. when\n * additionally the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt key is pressed.\n * @api\n */\nexport const altKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the alt-key and shift-key is pressed, `false` otherwise\n * (e.g. when additionally the platform-modifier-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt and shift keys are pressed.\n * @api\n */\nexport const altShiftKeysOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the map has the focus. This condition requires a map target\n * element with a `tabindex` attribute, e.g. `<div id=\"map\" tabindex=\"1\">`.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map has the focus.\n * @api\n */\nexport const focus = function (event) {\n  const targetElement = event.map.getTargetElement();\n  const activeElement = event.map.getOwnerDocument().activeElement;\n  return targetElement.contains(activeElement);\n};\n\n/**\n * Return `true` if the map has the focus or no 'tabindex' attribute set.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map container has the focus or no 'tabindex' attribute.\n */\nexport const focusWithTabindex = function (event) {\n  return event.map.getTargetElement().hasAttribute('tabindex')\n    ? focus(event)\n    : true;\n};\n\n/**\n * Return always true.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True.\n * @api\n */\nexport const always = TRUE;\n\n/**\n * Return `true` if the event is a `click` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `click` event.\n * @api\n */\nexport const click = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.CLICK;\n};\n\n/**\n * Return `true` if the event has an \"action\"-producing mouse button.\n *\n * By definition, this includes left-click on windows/linux, and left-click\n * without the ctrl key on Macs.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} The result.\n */\nexport const mouseActionButton = function (mapBrowserEvent) {\n  const originalEvent = /** @type {MouseEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return originalEvent.button == 0 && !(WEBKIT && MAC && originalEvent.ctrlKey);\n};\n\n/**\n * Return always false.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} False.\n * @api\n */\nexport const never = FALSE;\n\n/**\n * Return `true` if the browser event is a `pointermove` event, `false`\n * otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the browser event is a `pointermove` event.\n * @api\n */\nexport const pointerMove = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == 'pointermove';\n};\n\n/**\n * Return `true` if the event is a map `singleclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `singleclick` event.\n * @api\n */\nexport const singleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK;\n};\n\n/**\n * Return `true` if the event is a map `dblclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `dblclick` event.\n * @api\n */\nexport const doubleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.DBLCLICK;\n};\n\n/**\n * Return `true` if no modifier key (alt-, shift- or platform-modifier-key) is\n * pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if there no modifier keys are pressed.\n * @api\n */\nexport const noModifierKeys = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed, `false` otherwise (e.g. when additionally\n * the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the platform modifier key is pressed.\n * @api\n */\nexport const platformModifierKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    (MAC ? originalEvent.metaKey : originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the platform modifier key is pressed.\n * @api\n */\nexport const platformModifierKey = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return MAC ? originalEvent.metaKey : originalEvent.ctrlKey;\n};\n\n/**\n * Return `true` if only the shift-key is pressed, `false` otherwise (e.g. when\n * additionally the alt-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the shift key is pressed.\n * @api\n */\nexport const shiftKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the target element is not editable, i.e. not an `input`,\n * `select`, or `textarea` element and no `contenteditable` attribute is\n * set or inherited, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if the target element is not editable.\n * @api\n */\nexport const targetNotEditable = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  const tagName = /** @type {Element} */ (originalEvent.target).tagName;\n  return (\n    tagName !== 'INPUT' &&\n    tagName !== 'SELECT' &&\n    tagName !== 'TEXTAREA' &&\n    // `isContentEditable` is only available on `HTMLElement`, but it may also be a\n    // different type like `SVGElement`.\n    // @ts-ignore\n    !originalEvent.target.isContentEditable\n  );\n};\n\n/**\n * Return `true` if the event originates from a mouse device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a mouse device.\n * @api\n */\nexport const mouseOnly = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(\n    pointerEvent !== undefined,\n    'mapBrowserEvent must originate from a pointer event',\n  );\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvent.pointerType == 'mouse';\n};\n\n/**\n * Return `true` if the event originates from a touchable device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a touchable device.\n * @api\n */\nexport const touchOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(\n    pointerEvt !== undefined,\n    'mapBrowserEvent must originate from a pointer event',\n  );\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'touch';\n};\n\n/**\n * Return `true` if the event originates from a digital pen.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a digital pen.\n * @api\n */\nexport const penOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(\n    pointerEvt !== undefined,\n    'mapBrowserEvent must originate from a pointer event',\n  );\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'pen';\n};\n\n/**\n * Return `true` if the event originates from a primary pointer in\n * contact with the surface or if the left mouse button is pressed.\n * See https://www.w3.org/TR/pointerevents/#button-states.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a primary pointer.\n * @api\n */\nexport const primaryAction = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(\n    pointerEvent !== undefined,\n    'mapBrowserEvent must originate from a pointer event',\n  );\n  return pointerEvent.isPrimary && pointerEvent.button === 0;\n};\n","/**\n * @module ol/interaction/DragPan\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {\n  all,\n  focusWithTabindex,\n  noModifierKeys,\n  primaryAction,\n} from '../events/condition.js';\nimport {easeOut} from '../easing.js';\nimport {\n  rotate as rotateCoordinate,\n  scale as scaleCoordinate,\n} from '../coordinate.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.noModifierKeys} and {@link module:ol/events/condition.primaryAction}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {import(\"../Kinetic.js\").default} [kinetic] Kinetic inertia to apply to the pan.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map by dragging the map.\n * @api\n */\nclass DragPan extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super({\n      stopDown: FALSE,\n    });\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {import(\"../Kinetic.js\").default|undefined}\n     */\n    this.kinetic_ = options.kinetic;\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.lastCentroid = null;\n\n    /**\n     * @type {number}\n     */\n    this.lastPointersCount_;\n\n    /**\n     * @type {boolean}\n     */\n    this.panning_ = false;\n\n    const condition = options.condition\n      ? options.condition\n      : all(noModifierKeys, primaryAction);\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.noKinetic_ = false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    const map = mapBrowserEvent.map;\n    if (!this.panning_) {\n      this.panning_ = true;\n      map.getView().beginInteraction();\n    }\n    const targetPointers = this.targetPointers;\n    const centroid = map.getEventPixel(centroidFromPointers(targetPointers));\n    if (targetPointers.length == this.lastPointersCount_) {\n      if (this.kinetic_) {\n        this.kinetic_.update(centroid[0], centroid[1]);\n      }\n      if (this.lastCentroid) {\n        const delta = [\n          this.lastCentroid[0] - centroid[0],\n          centroid[1] - this.lastCentroid[1],\n        ];\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        scaleCoordinate(delta, view.getResolution());\n        rotateCoordinate(delta, view.getRotation());\n        view.adjustCenterInternal(delta);\n      }\n    } else if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger down, tiny drag, second finger down\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = centroid;\n    this.lastPointersCount_ = targetPointers.length;\n    mapBrowserEvent.originalEvent.preventDefault();\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (this.targetPointers.length === 0) {\n      if (!this.noKinetic_ && this.kinetic_ && this.kinetic_.end()) {\n        const distance = this.kinetic_.getDistance();\n        const angle = this.kinetic_.getAngle();\n        const center = view.getCenterInternal();\n        const centerpx = map.getPixelFromCoordinateInternal(center);\n        const dest = map.getCoordinateFromPixelInternal([\n          centerpx[0] - distance * Math.cos(angle),\n          centerpx[1] - distance * Math.sin(angle),\n        ]);\n        view.animateInternal({\n          center: view.getConstrainedCenter(dest),\n          duration: 500,\n          easing: easeOut,\n        });\n      }\n      if (this.panning_) {\n        this.panning_ = false;\n        view.endInteraction();\n      }\n      return false;\n    }\n    if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger up, tiny drag, second finger up\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = null;\n    return true;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length > 0 && this.condition_(mapBrowserEvent)) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      this.lastCentroid = null;\n      // stop any current animation\n      if (view.getAnimating()) {\n        view.cancelAnimations();\n      }\n      if (this.kinetic_) {\n        this.kinetic_.begin();\n      }\n      // No kinetic as soon as more than one pointer on the screen is\n      // detected. This is to prevent nasty pans after pinch.\n      this.noKinetic_ = this.targetPointers.length > 1;\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default DragPan;\n","/**\n * @module ol/interaction/DragRotate\n */\nimport PointerInteraction from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {\n  altShiftKeysOnly,\n  mouseActionButton,\n  mouseOnly,\n} from '../events/condition.js';\nimport {disable} from '../rotationconstraint.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an\n * {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.altShiftKeysOnly}.\n * @property {number} [duration=250] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the alt and shift keys are held down.\n *\n * This interaction is only supported for mouse devices.\n * @api\n */\nclass DragRotate extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      stopDown: FALSE,\n    });\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : altShiftKeysOnly;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n    const size = map.getSize();\n    const offset = mapBrowserEvent.pixel;\n    const theta = Math.atan2(size[1] / 2 - offset[1], offset[0] - size[0] / 2);\n    if (this.lastAngle_ !== undefined) {\n      const delta = theta - this.lastAngle_;\n      view.adjustRotationInternal(-delta);\n    }\n    this.lastAngle_ = theta;\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    view.endInteraction(this.duration_);\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return false;\n    }\n\n    if (\n      mouseActionButton(mapBrowserEvent) &&\n      this.condition_(mapBrowserEvent)\n    ) {\n      const map = mapBrowserEvent.map;\n      map.getView().beginInteraction();\n      this.lastAngle_ = undefined;\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default DragRotate;\n","/**\n * @module ol/render/Box\n */\n\nimport Disposable from '../Disposable.js';\nimport Polygon from '../geom/Polygon.js';\n\nclass RenderBox extends Disposable {\n  /**\n   * @param {string} className CSS class name.\n   */\n  constructor(className) {\n    super();\n\n    /**\n     * @type {import(\"../geom/Polygon.js\").default}\n     * @private\n     */\n    this.geometry_ = null;\n\n    /**\n     * @type {HTMLDivElement}\n     * @private\n     */\n    this.element_ = document.createElement('div');\n    this.element_.style.position = 'absolute';\n    this.element_.style.pointerEvents = 'auto';\n    this.element_.className = 'ol-box ' + className;\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.endPixel_ = null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.setMap(null);\n  }\n\n  /**\n   * @private\n   */\n  render_() {\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const px = 'px';\n    const style = this.element_.style;\n    style.left = Math.min(startPixel[0], endPixel[0]) + px;\n    style.top = Math.min(startPixel[1], endPixel[1]) + px;\n    style.width = Math.abs(endPixel[0] - startPixel[0]) + px;\n    style.height = Math.abs(endPixel[1] - startPixel[1]) + px;\n  }\n\n  /**\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMap(map) {\n    if (this.map_) {\n      this.map_.getOverlayContainer().removeChild(this.element_);\n      const style = this.element_.style;\n      style.left = 'inherit';\n      style.top = 'inherit';\n      style.width = 'inherit';\n      style.height = 'inherit';\n    }\n    this.map_ = map;\n    if (this.map_) {\n      this.map_.getOverlayContainer().appendChild(this.element_);\n    }\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} startPixel Start pixel.\n   * @param {import(\"../pixel.js\").Pixel} endPixel End pixel.\n   */\n  setPixels(startPixel, endPixel) {\n    this.startPixel_ = startPixel;\n    this.endPixel_ = endPixel;\n    this.createOrUpdateGeometry();\n    this.render_();\n  }\n\n  /**\n   * Creates or updates the cached geometry.\n   */\n  createOrUpdateGeometry() {\n    if (!this.map_) {\n      return;\n    }\n\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const pixels = [\n      startPixel,\n      [startPixel[0], endPixel[1]],\n      endPixel,\n      [endPixel[0], startPixel[1]],\n    ];\n    const coordinates = pixels.map(\n      this.map_.getCoordinateFromPixelInternal,\n      this.map_,\n    );\n    // close the polygon\n    coordinates[4] = coordinates[0].slice();\n    if (!this.geometry_) {\n      this.geometry_ = new Polygon([coordinates]);\n    } else {\n      this.geometry_.setCoordinates([coordinates]);\n    }\n  }\n\n  /**\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n}\n\nexport default RenderBox;\n","/**\n * @module ol/interaction/DragBox\n */\n// FIXME draw drag box\nimport Event from '../events/Event.js';\nimport PointerInteraction from './Pointer.js';\nimport RenderBox from '../render/Box.js';\nimport {mouseActionButton} from '../events/condition.js';\n\n/**\n * A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s and returns a `{boolean}`. If the condition is met,\n * true should be returned.\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default, import(\"../pixel.js\").Pixel, import(\"../pixel.js\").Pixel):boolean} EndCondition\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragbox'] CSS class name for styling the box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link ol/events/condition~mouseActionButton}.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the default\n * `boxEndCondition` function.\n * @property {EndCondition} [boxEndCondition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s to indicate whether a `boxend` event should be fired.\n * Default is `true` if the area of the box is bigger than the `minArea` option.\n * @property {function(this:DragBox, import(\"../MapBrowserEvent.js\").default):void} [onBoxEnd] Code to execute just\n * before `boxend` is fired.\n */\n\n/**\n * @enum {string}\n */\nconst DragBoxEventType = {\n  /**\n   * Triggered upon drag box start.\n   * @event DragBoxEvent#boxstart\n   * @api\n   */\n  BOXSTART: 'boxstart',\n\n  /**\n   * Triggered on drag when box is active.\n   * @event DragBoxEvent#boxdrag\n   * @api\n   */\n  BOXDRAG: 'boxdrag',\n\n  /**\n   * Triggered upon drag box end.\n   * @event DragBoxEvent#boxend\n   * @api\n   */\n  BOXEND: 'boxend',\n\n  /**\n   * Triggered upon drag box canceled.\n   * @event DragBoxEvent#boxcancel\n   * @api\n   */\n  BOXCANCEL: 'boxcancel',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragBox~DragBox} instances are instances of\n * this type.\n */\nexport class DragBoxEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate The event coordinate.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Originating event.\n   */\n  constructor(type, coordinate, mapBrowserEvent) {\n    super(type);\n\n    /**\n     * The coordinate of the drag event.\n     * @const\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @api\n     */\n    this.coordinate = coordinate;\n\n    /**\n     * @const\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'boxcancel'|'boxdrag'|'boxend'|'boxstart', DragBoxEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'boxcancel'|'boxdrag'|'boxend', Return>} DragBoxOnSignature\n */\n\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the shift or other key is held down. This is used, for example,\n * for zooming to a specific area of the map\n * (see {@link module:ol/interaction/DragZoom~DragZoom} and\n * {@link module:ol/interaction/DragRotateAndZoom~DragRotateAndZoom}).\n *\n * @fires DragBoxEvent\n * @api\n */\nclass DragBox extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {DragBoxOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {DragBoxOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {DragBoxOnSignature<void>}\n     */\n    this.un;\n\n    options = options ? options : {};\n\n    /**\n     * @type {import(\"../render/Box.js\").default}\n     * @private\n     */\n    this.box_ = new RenderBox(options.className || 'ol-dragbox');\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.minArea_ = options.minArea !== undefined ? options.minArea : 64;\n\n    if (options.onBoxEnd) {\n      this.onBoxEnd = options.onBoxEnd;\n    }\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     * @private\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : mouseActionButton;\n\n    /**\n     * @private\n     * @type {EndCondition}\n     */\n    this.boxEndCondition_ = options.boxEndCondition\n      ? options.boxEndCondition\n      : this.defaultBoxEndCondition;\n  }\n\n  /**\n   * The default condition for determining whether the boxend event\n   * should fire.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent The originating MapBrowserEvent\n   *     leading to the box end.\n   * @param {import(\"../pixel.js\").Pixel} startPixel The starting pixel of the box.\n   * @param {import(\"../pixel.js\").Pixel} endPixel The end pixel of the box.\n   * @return {boolean} Whether or not the boxend condition should be fired.\n   */\n  defaultBoxEndCondition(mapBrowserEvent, startPixel, endPixel) {\n    const width = endPixel[0] - startPixel[0];\n    const height = endPixel[1] - startPixel[1];\n    return width * width + height * height >= this.minArea_;\n  }\n\n  /**\n   * Returns geometry of last drawn box.\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   * @api\n   */\n  getGeometry() {\n    return this.box_.getGeometry();\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!this.startPixel_) {\n      return;\n    }\n\n    this.box_.setPixels(this.startPixel_, mapBrowserEvent.pixel);\n\n    this.dispatchEvent(\n      new DragBoxEvent(\n        DragBoxEventType.BOXDRAG,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent,\n      ),\n    );\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (!this.startPixel_) {\n      return false;\n    }\n\n    this.box_.setMap(null);\n\n    const completeBox = this.boxEndCondition_(\n      mapBrowserEvent,\n      this.startPixel_,\n      mapBrowserEvent.pixel,\n    );\n    if (completeBox) {\n      this.onBoxEnd(mapBrowserEvent);\n    }\n    this.dispatchEvent(\n      new DragBoxEvent(\n        completeBox ? DragBoxEventType.BOXEND : DragBoxEventType.BOXCANCEL,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent,\n      ),\n    );\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.condition_(mapBrowserEvent)) {\n      this.startPixel_ = mapBrowserEvent.pixel;\n      this.box_.setMap(mapBrowserEvent.map);\n      this.box_.setPixels(this.startPixel_, this.startPixel_);\n      this.dispatchEvent(\n        new DragBoxEvent(\n          DragBoxEventType.BOXSTART,\n          mapBrowserEvent.coordinate,\n          mapBrowserEvent,\n        ),\n      );\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  onBoxEnd(event) {}\n\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   */\n  setActive(active) {\n    if (!active) {\n      this.box_.setMap(null);\n      if (this.startPixel_) {\n        this.dispatchEvent(\n          new DragBoxEvent(DragBoxEventType.BOXCANCEL, this.startPixel_, null),\n        );\n        this.startPixel_ = null;\n      }\n    }\n\n    super.setActive(active);\n  }\n}\n\nexport default DragBox;\n","/**\n * @module ol/interaction/DragZoom\n */\nimport DragBox from './DragBox.js';\nimport {easeOut} from '../easing.js';\nimport {shiftKeyOnly} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragzoom'] CSS class name for styling the\n * box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.shiftKeyOnly}.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {boolean} [out=false] Use interaction for zooming out.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the parent default\n * `boxEndCondition` function.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when a key, shift by default, is held down.\n *\n * To change the style of the box, use CSS and the `.ol-dragzoom` selector, or\n * your custom one configured with `className`.\n * @api\n */\nclass DragZoom extends DragBox {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const condition = options.condition ? options.condition : shiftKeyOnly;\n\n    super({\n      condition: condition,\n      className: options.className || 'ol-dragzoom',\n      minArea: options.minArea,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 200;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.out_ = options.out !== undefined ? options.out : false;\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  onBoxEnd(event) {\n    const map = this.getMap();\n    const view = /** @type {!import(\"../View.js\").default} */ (map.getView());\n    let geometry = this.getGeometry();\n\n    if (this.out_) {\n      const rotatedExtent = view.rotatedExtentForGeometry(geometry);\n      const resolution = view.getResolutionForExtentInternal(rotatedExtent);\n      const factor = view.getResolution() / resolution;\n      geometry = geometry.clone();\n      geometry.scale(factor * factor);\n    }\n\n    view.fitInternal(geometry, {\n      duration: this.duration_,\n      easing: easeOut,\n    });\n  }\n}\n\nexport default DragZoom;\n","/**\n * @module ol/events/Key\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  LEFT: 'ArrowLeft',\n  UP: 'ArrowUp',\n  RIGHT: 'ArrowRight',\n  DOWN: 'ArrowDown',\n};\n","/**\n * @module ol/interaction/KeyboardPan\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {pan} from './Interaction.js';\nimport Key from '../events/Key.js';\nimport {noModifierKeys, targetNotEditable} from '../events/condition.js';\nimport {rotate as rotateCoordinate} from '../coordinate.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.noModifierKeys} and\n * {@link module:ol/events/condition.targetNotEditable}.\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {number} [pixelDelta=128] The amount of pixels to pan on each key\n * press.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map using keyboard arrows.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}.\n * @api\n */\nclass KeyboardPan extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options || {};\n\n    /**\n     * @private\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Browser event.\n     * @return {boolean} Combined condition result.\n     */\n    this.defaultCondition_ = function (mapBrowserEvent) {\n      return (\n        noModifierKeys(mapBrowserEvent) && targetNotEditable(mapBrowserEvent)\n      );\n    };\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ =\n      options.condition !== undefined\n        ? options.condition\n        : this.defaultCondition_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelDelta_ =\n      options.pixelDelta !== undefined ? options.pixelDelta : 128;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides the direction to pan to (if an arrow key was\n   * pressed).\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == EventType.KEYDOWN) {\n      const keyEvent = /** @type {KeyboardEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const key = keyEvent.key;\n      if (\n        this.condition_(mapBrowserEvent) &&\n        (key == Key.DOWN ||\n          key == Key.LEFT ||\n          key == Key.RIGHT ||\n          key == Key.UP)\n      ) {\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        const mapUnitsDelta = view.getResolution() * this.pixelDelta_;\n        let deltaX = 0,\n          deltaY = 0;\n        if (key == Key.DOWN) {\n          deltaY = -mapUnitsDelta;\n        } else if (key == Key.LEFT) {\n          deltaX = -mapUnitsDelta;\n        } else if (key == Key.RIGHT) {\n          deltaX = mapUnitsDelta;\n        } else {\n          deltaY = mapUnitsDelta;\n        }\n        const delta = [deltaX, deltaY];\n        rotateCoordinate(delta, view.getRotation());\n        pan(view, delta, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardPan;\n","/**\n * @module ol/interaction/KeyboardZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {platformModifierKey, targetNotEditable} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. The default condition is\n * that {@link module:ol/events/condition.targetNotEditable} is fulfilled and that\n * the platform modifier key isn't pressed\n * (!{@link module:ol/events/condition.platformModifierKey}).\n * @property {number} [delta=1] The zoom level delta on each key press.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map using keyboard + and -.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardPan~KeyboardPan}.\n * @api\n */\nclass KeyboardZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition\n      ? options.condition\n      : function (mapBrowserEvent) {\n          return (\n            !platformModifierKey(mapBrowserEvent) &&\n            targetNotEditable(mapBrowserEvent)\n          );\n        };\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides whether to zoom in or out (depending on whether the\n   * key pressed was '+' or '-').\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (\n      mapBrowserEvent.type == EventType.KEYDOWN ||\n      mapBrowserEvent.type == EventType.KEYPRESS\n    ) {\n      const keyEvent = /** @type {KeyboardEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const key = keyEvent.key;\n      if (this.condition_(mapBrowserEvent) && (key === '+' || key === '-')) {\n        const map = mapBrowserEvent.map;\n        const delta = key === '+' ? this.delta_ : -this.delta_;\n        const view = map.getView();\n        zoomByDelta(view, delta, undefined, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardZoom;\n","/**\n * @module ol/interaction/MouseWheelZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {DEVICE_PIXEL_RATIO, FIREFOX} from '../has.js';\nimport {all, always, focusWithTabindex} from '../events/condition.js';\nimport {clamp} from '../math.js';\n\n/**\n * @typedef {'trackpad' | 'wheel'} Mode\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.always}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {number} [maxDelta=1] Maximum mouse wheel delta.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [timeout=80] Mouse wheel timeout duration in milliseconds.\n * @property {boolean} [useAnchor=true] Enable zooming using the mouse's\n * location as the anchor. When set to `false`, zooming in and out will zoom to\n * the center of the screen instead of zooming on the mouse's location.\n * @property {boolean} [constrainResolution=false] If true, the mouse wheel zoom\n * event will always animate to the closest zoom level after an interaction;\n * false means intermediary zoom levels are allowed.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by scrolling the mouse wheel.\n * @api\n */\nclass MouseWheelZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options),\n    );\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.totalDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = options.maxDelta !== undefined ? options.maxDelta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.timeout_ = options.timeout !== undefined ? options.timeout : 80;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.useAnchor_ =\n      options.useAnchor !== undefined ? options.useAnchor : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.constrainResolution_ =\n      options.constrainResolution !== undefined\n        ? options.constrainResolution\n        : false;\n\n    const condition = options.condition ? options.condition : always;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {?import(\"../coordinate.js\").Coordinate}\n     */\n    this.lastAnchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.startTime_ = undefined;\n\n    /**\n     * @private\n     * @type {ReturnType<typeof setTimeout>}\n     */\n    this.timeoutId_;\n\n    /**\n     * @private\n     * @type {Mode|undefined}\n     */\n    this.mode_ = undefined;\n\n    /**\n     * Trackpad events separated by this delay will be considered separate\n     * interactions.\n     * @private\n     * @type {number}\n     */\n    this.trackpadEventGap_ = 400;\n\n    /**\n     * @private\n     * @type {ReturnType<typeof setTimeout>}\n     */\n    this.trackpadTimeoutId_;\n\n    /**\n     * The number of delta values per zoom level\n     * @private\n     * @type {number}\n     */\n    this.deltaPerZoom_ = 300;\n  }\n\n  /**\n   * @private\n   */\n  endInteraction_() {\n    this.trackpadTimeoutId_ = undefined;\n    const map = this.getMap();\n    if (!map) {\n      return;\n    }\n    const view = map.getView();\n    view.endInteraction(\n      undefined,\n      this.lastDelta_ ? (this.lastDelta_ > 0 ? 1 : -1) : 0,\n      this.lastAnchor_,\n    );\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} (if it was a mousewheel-event) and eventually\n   * zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!this.condition_(mapBrowserEvent)) {\n      return true;\n    }\n    const type = mapBrowserEvent.type;\n    if (type !== EventType.WHEEL) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const wheelEvent = /** @type {WheelEvent} */ (\n      mapBrowserEvent.originalEvent\n    );\n    wheelEvent.preventDefault();\n\n    if (this.useAnchor_) {\n      this.lastAnchor_ = mapBrowserEvent.coordinate;\n    }\n\n    // Delta normalisation inspired by\n    // https://github.com/mapbox/mapbox-gl-js/blob/001c7b9/js/ui/handler/scroll_zoom.js\n    let delta;\n    if (mapBrowserEvent.type == EventType.WHEEL) {\n      delta = wheelEvent.deltaY;\n      if (FIREFOX && wheelEvent.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n        delta /= DEVICE_PIXEL_RATIO;\n      }\n      if (wheelEvent.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n        delta *= 40;\n      }\n    }\n\n    if (delta === 0) {\n      return false;\n    }\n    this.lastDelta_ = delta;\n\n    const now = Date.now();\n\n    if (this.startTime_ === undefined) {\n      this.startTime_ = now;\n    }\n\n    if (!this.mode_ || now - this.startTime_ > this.trackpadEventGap_) {\n      this.mode_ = Math.abs(delta) < 4 ? 'trackpad' : 'wheel';\n    }\n\n    const view = map.getView();\n    if (\n      this.mode_ === 'trackpad' &&\n      !(view.getConstrainResolution() || this.constrainResolution_)\n    ) {\n      if (this.trackpadTimeoutId_) {\n        clearTimeout(this.trackpadTimeoutId_);\n      } else {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.beginInteraction();\n      }\n      this.trackpadTimeoutId_ = setTimeout(\n        this.endInteraction_.bind(this),\n        this.timeout_,\n      );\n      view.adjustZoom(-delta / this.deltaPerZoom_, this.lastAnchor_);\n      this.startTime_ = now;\n      return false;\n    }\n\n    this.totalDelta_ += delta;\n\n    const timeLeft = Math.max(this.timeout_ - (now - this.startTime_), 0);\n\n    clearTimeout(this.timeoutId_);\n    this.timeoutId_ = setTimeout(\n      this.handleWheelZoom_.bind(this, map),\n      timeLeft,\n    );\n\n    return false;\n  }\n\n  /**\n   * @private\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  handleWheelZoom_(map) {\n    const view = map.getView();\n    if (view.getAnimating()) {\n      view.cancelAnimations();\n    }\n    let delta =\n      -clamp(\n        this.totalDelta_,\n        -this.maxDelta_ * this.deltaPerZoom_,\n        this.maxDelta_ * this.deltaPerZoom_,\n      ) / this.deltaPerZoom_;\n    if (view.getConstrainResolution() || this.constrainResolution_) {\n      // view has a zoom constraint, zoom by 1\n      delta = delta ? (delta > 0 ? 1 : -1) : 0;\n    }\n    zoomByDelta(view, delta, this.lastAnchor_, this.duration_);\n\n    this.mode_ = undefined;\n    this.totalDelta_ = 0;\n    this.lastAnchor_ = null;\n    this.startTime_ = undefined;\n    this.timeoutId_ = undefined;\n  }\n\n  /**\n   * Enable or disable using the mouse's location as an anchor when zooming\n   * @param {boolean} useAnchor true to zoom to the mouse's location, false\n   * to zoom to the center of the map\n   * @api\n   */\n  setMouseAnchor(useAnchor) {\n    this.useAnchor_ = useAnchor;\n    if (!useAnchor) {\n      this.lastAnchor_ = null;\n    }\n  }\n}\n\nexport default MouseWheelZoom;\n","/**\n * @module ol/interaction/PinchRotate\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {disable} from '../rotationconstraint.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] The duration of the animation in\n * milliseconds.\n * @property {number} [threshold=0.3] Minimal angle in radians to start a rotation.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by twisting with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchRotate extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotating_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotationDelta_ = 0.0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.threshold_ = options.threshold !== undefined ? options.threshold : 0.3;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let rotationDelta = 0.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n\n    // angle between touches\n    const angle = Math.atan2(\n      touch1.clientY - touch0.clientY,\n      touch1.clientX - touch0.clientX,\n    );\n\n    if (this.lastAngle_ !== undefined) {\n      const delta = angle - this.lastAngle_;\n      this.rotationDelta_ += delta;\n      if (!this.rotating_ && Math.abs(this.rotationDelta_) > this.threshold_) {\n        this.rotating_ = true;\n      }\n      rotationDelta = delta;\n    }\n    this.lastAngle_ = angle;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n\n    // rotate anchor point.\n    // FIXME: should be the intersection point between the lines:\n    //     touch0,touch1 and previousTouch0,previousTouch1\n    this.anchor_ = map.getCoordinateFromPixelInternal(\n      map.getEventPixel(centroidFromPointers(this.targetPointers)),\n    );\n\n    // rotate\n    if (this.rotating_) {\n      map.render();\n      view.adjustRotationInternal(rotationDelta, this.anchor_);\n    }\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      view.endInteraction(this.duration_);\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastAngle_ = undefined;\n      this.rotating_ = false;\n      this.rotationDelta_ = 0.0;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default PinchRotate;\n","/**\n * @module ol/interaction/PinchZoom\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=400] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by pinching with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchZoom extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 400;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastDistance_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastScaleDelta_ = 1;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let scaleDelta = 1.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n    const dx = touch0.clientX - touch1.clientX;\n    const dy = touch0.clientY - touch1.clientY;\n\n    // distance between touches\n    const distance = Math.sqrt(dx * dx + dy * dy);\n\n    if (this.lastDistance_ !== undefined) {\n      scaleDelta = this.lastDistance_ / distance;\n    }\n    this.lastDistance_ = distance;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n\n    if (scaleDelta != 1.0) {\n      this.lastScaleDelta_ = scaleDelta;\n    }\n\n    // scale anchor point.\n    this.anchor_ = map.getCoordinateFromPixelInternal(\n      map.getEventPixel(centroidFromPointers(this.targetPointers)),\n    );\n\n    // scale, bypass the resolution constraint\n    map.render();\n    view.adjustResolutionInternal(scaleDelta, this.anchor_);\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      const direction = this.lastScaleDelta_ > 1 ? 1 : -1;\n      view.endInteraction(this.duration_, direction);\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastDistance_ = undefined;\n      this.lastScaleDelta_ = 1;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default PinchZoom;\n","/**\n * @module ol/interaction/defaults\n */\nimport Collection from '../Collection.js';\nimport DoubleClickZoom from './DoubleClickZoom.js';\nimport DragPan from './DragPan.js';\nimport DragRotate from './DragRotate.js';\nimport DragZoom from './DragZoom.js';\nimport KeyboardPan from './KeyboardPan.js';\nimport KeyboardZoom from './KeyboardZoom.js';\nimport Kinetic from '../Kinetic.js';\nimport MouseWheelZoom from './MouseWheelZoom.js';\nimport PinchRotate from './PinchRotate.js';\nimport PinchZoom from './PinchZoom.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [altShiftDragRotate=true] Whether Alt-Shift-drag rotate is\n * desired.\n * @property {boolean} [onFocusOnly=false] Interact only when the map has the\n * focus. This affects the `MouseWheelZoom` and `DragPan` interactions and is\n * useful when page scroll is desired for maps that do not have the browser's\n * focus.\n * @property {boolean} [doubleClickZoom=true] Whether double click zoom is\n * desired.\n * @property {boolean} [keyboard=true] Whether keyboard interaction is desired.\n * @property {boolean} [mouseWheelZoom=true] Whether mousewheel zoom is desired.\n * @property {boolean} [shiftDragZoom=true] Whether Shift-drag zoom is desired.\n * @property {boolean} [dragPan=true] Whether drag pan is desired.\n * @property {boolean} [pinchRotate=true] Whether pinch rotate is desired.\n * @property {boolean} [pinchZoom=true] Whether pinch zoom is desired.\n * @property {number} [zoomDelta] Zoom level delta when using keyboard or double click zoom.\n * @property {number} [zoomDuration] Duration of the zoom animation in\n * milliseconds.\n */\n\n/**\n * Set of interactions included in maps by default. Specific interactions can be\n * excluded by setting the appropriate option to false in the constructor\n * options, but the order of the interactions is fixed.  If you want to specify\n * a different order for interactions, you will need to create your own\n * {@link module:ol/interaction/Interaction~Interaction} instances and insert\n * them into a {@link module:ol/Collection~Collection} in the order you want\n * before creating your {@link module:ol/Map~Map} instance. Changing the order can\n * be of interest if the event propagation needs to be stopped at a point.\n * The default set of interactions, in sequence, is:\n * * {@link module:ol/interaction/DragRotate~DragRotate}\n * * {@link module:ol/interaction/DoubleClickZoom~DoubleClickZoom}\n * * {@link module:ol/interaction/DragPan~DragPan}\n * * {@link module:ol/interaction/PinchRotate~PinchRotate}\n * * {@link module:ol/interaction/PinchZoom~PinchZoom}\n * * {@link module:ol/interaction/KeyboardPan~KeyboardPan}\n * * {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}\n * * {@link module:ol/interaction/MouseWheelZoom~MouseWheelZoom}\n * * {@link module:ol/interaction/DragZoom~DragZoom}\n *\n * @param {DefaultsOptions} [options] Defaults options.\n * @return {Collection<import(\"./Interaction.js\").default>}\n * A collection of interactions to be used with the {@link module:ol/Map~Map}\n * constructor's `interactions` option.\n * @api\n */\nexport function defaults(options) {\n  options = options ? options : {};\n\n  /** @type {Collection<import(\"./Interaction.js\").default>} */\n  const interactions = new Collection();\n\n  const kinetic = new Kinetic(-0.005, 0.05, 100);\n\n  const altShiftDragRotate =\n    options.altShiftDragRotate !== undefined\n      ? options.altShiftDragRotate\n      : true;\n  if (altShiftDragRotate) {\n    interactions.push(new DragRotate());\n  }\n\n  const doubleClickZoom =\n    options.doubleClickZoom !== undefined ? options.doubleClickZoom : true;\n  if (doubleClickZoom) {\n    interactions.push(\n      new DoubleClickZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      }),\n    );\n  }\n\n  const dragPan = options.dragPan !== undefined ? options.dragPan : true;\n  if (dragPan) {\n    interactions.push(\n      new DragPan({\n        onFocusOnly: options.onFocusOnly,\n        kinetic: kinetic,\n      }),\n    );\n  }\n\n  const pinchRotate =\n    options.pinchRotate !== undefined ? options.pinchRotate : true;\n  if (pinchRotate) {\n    interactions.push(new PinchRotate());\n  }\n\n  const pinchZoom = options.pinchZoom !== undefined ? options.pinchZoom : true;\n  if (pinchZoom) {\n    interactions.push(\n      new PinchZoom({\n        duration: options.zoomDuration,\n      }),\n    );\n  }\n\n  const keyboard = options.keyboard !== undefined ? options.keyboard : true;\n  if (keyboard) {\n    interactions.push(new KeyboardPan());\n    interactions.push(\n      new KeyboardZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      }),\n    );\n  }\n\n  const mouseWheelZoom =\n    options.mouseWheelZoom !== undefined ? options.mouseWheelZoom : true;\n  if (mouseWheelZoom) {\n    interactions.push(\n      new MouseWheelZoom({\n        onFocusOnly: options.onFocusOnly,\n        duration: options.zoomDuration,\n      }),\n    );\n  }\n\n  const shiftDragZoom =\n    options.shiftDragZoom !== undefined ? options.shiftDragZoom : true;\n  if (shiftDragZoom) {\n    interactions.push(\n      new DragZoom({\n        duration: options.zoomDuration,\n      }),\n    );\n  }\n\n  return interactions;\n}\n","/**\n * @module ol/Map\n */\nimport BaseObject from './Object.js';\nimport Collection from './Collection.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport CompositeMapRenderer from './renderer/Composite.js';\nimport EventType from './events/EventType.js';\nimport Layer from './layer/Layer.js';\nimport LayerGroup, {GroupEvent} from './layer/Group.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventHandler from './MapBrowserEventHandler.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapEvent from './MapEvent.js';\nimport MapEventType from './MapEventType.js';\nimport MapProperty from './MapProperty.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport RenderEventType from './render/EventType.js';\nimport TileQueue, {getTilePriority} from './TileQueue.js';\nimport View from './View.js';\nimport ViewHint from './ViewHint.js';\nimport {DEVICE_PIXEL_RATIO, PASSIVE_EVENT_LISTENERS} from './has.js';\nimport {TRUE} from './functions.js';\nimport {\n  apply as applyTransform,\n  create as createTransform,\n} from './transform.js';\nimport {assert} from './asserts.js';\nimport {\n  clone,\n  createOrUpdateEmpty,\n  equals as equalsExtent,\n  getForViewAndSize,\n  isEmpty,\n} from './extent.js';\nimport {defaults as defaultControls} from './control/defaults.js';\nimport {defaults as defaultInteractions} from './interaction/defaults.js';\nimport {equals} from './array.js';\nimport {fromUserCoordinate, toUserCoordinate} from './proj.js';\nimport {getUid} from './util.js';\nimport {hasArea} from './size.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {removeNode} from './dom.js';\nimport {warn} from './console.js';\n\n/**\n * State of the current frame. Only `pixelRatio`, `time` and `viewState` should\n * be used in applications.\n * @typedef {Object} FrameState\n * @property {number} pixelRatio The pixel ratio of the frame.\n * @property {number} time The time when rendering of the frame was requested.\n * @property {import(\"./View.js\").State} viewState The state of the current view.\n * @property {boolean} animate Animate.\n * @property {import(\"./transform.js\").Transform} coordinateToPixelTransform CoordinateToPixelTransform.\n * @property {Object<string, import(\"rbush\").default>|null} declutter Declutter trees by declutter group.\n * When null, no decluttering is needed because no layers have decluttering enabled.\n * @property {null|import(\"./extent.js\").Extent} extent Extent (in view projection coordinates).\n * @property {import(\"./extent.js\").Extent} [nextExtent] Next extent during an animation series.\n * @property {number} index Index.\n * @property {Array<import(\"./layer/Layer.js\").State>} layerStatesArray LayerStatesArray.\n * @property {number} layerIndex LayerIndex.\n * @property {import(\"./transform.js\").Transform} pixelToCoordinateTransform PixelToCoordinateTransform.\n * @property {Array<PostRenderFunction>} postRenderFunctions PostRenderFunctions.\n * @property {import(\"./size.js\").Size} size Size.\n * @property {TileQueue} tileQueue TileQueue.\n * @property {!Object<string, Object<string, boolean>>} usedTiles UsedTiles.\n * @property {Array<number>} viewHints ViewHints.\n * @property {!Object<string, Object<string, boolean>>} wantedTiles WantedTiles.\n * @property {string} mapId The id of the map.\n * @property {Object<string, boolean>} renderTargets Identifiers of previously rendered elements.\n */\n\n/**\n * @typedef {function(Map, ?FrameState): any} PostRenderFunction\n */\n\n/**\n * @typedef {Object} AtPixelOptions\n * @property {undefined|function(import(\"./layer/Layer.js\").default<import(\"./source/Source\").default>): boolean} [layerFilter] Layer filter\n * function. The filter function will receive one argument, the\n * {@link module:ol/layer/Layer~Layer layer-candidate} and it should return a boolean value.\n * Only layers which are visible and for which this function returns `true`\n * will be tested for features. By default, all visible layers will be tested.\n * @property {number} [hitTolerance=0] Hit-detection tolerance in css pixels. Pixels\n * inside the radius around the given position will be checked for features.\n * @property {boolean} [checkWrapped=true] Check-Wrapped Will check for wrapped geometries inside the range of\n *   +/- 1 world width. Works only if a projection is used that can be wrapped.\n */\n\n/**\n * @typedef {Object} MapOptionsInternal\n * @property {Collection<import(\"./control/Control.js\").default>} [controls] Controls.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>} [interactions] Interactions.\n * @property {HTMLElement|Document} keyboardEventTarget KeyboardEventTarget.\n * @property {Collection<import(\"./Overlay.js\").default>} overlays Overlays.\n * @property {Object<string, *>} values Values.\n */\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:layergroup'|'change:size'|'change:target'|'change:view'} MapObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<MapObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./MapBrowserEventType\").Types, import(\"./MapBrowserEvent\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./MapEventType\").Types, import(\"./MapEvent\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./render/EventType\").MapRenderEventTypes, import(\"./render/Event\").default, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|MapObjectEventTypes|\n *      import(\"./MapBrowserEventType\").Types|import(\"./MapEventType\").Types|\n *      import(\"./render/EventType\").MapRenderEventTypes, Return>} MapEventHandler\n */\n\n/**\n * Object literal with config options for the map.\n * @typedef {Object} MapOptions\n * @property {Collection<import(\"./control/Control.js\").default>|Array<import(\"./control/Control.js\").default>} [controls]\n * Controls initially added to the map. If not specified,\n * {@link module:ol/control/defaults.defaults} is used.\n * @property {number} [pixelRatio=window.devicePixelRatio] The ratio between\n * physical pixels and device-independent pixels (dips) on the device.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>|Array<import(\"./interaction/Interaction.js\").default>} [interactions]\n * Interactions that are initially added to the map. If not specified,\n * {@link module:ol/interaction/defaults.defaults} is used.\n * @property {HTMLElement|Document|string} [keyboardEventTarget] The element to\n * listen to keyboard events on. This determines when the `KeyboardPan` and\n * `KeyboardZoom` interactions trigger. For example, if this option is set to\n * `document` the keyboard interactions will always trigger. If this option is\n * not specified, the element the library listens to keyboard events on is the\n * map target (i.e. the user-provided div for the map). If this is not\n * `document`, the target element needs to be focused for key events to be\n * emitted, requiring that the target element has a `tabindex` attribute.\n * @property {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>|LayerGroup} [layers]\n * Layers. If this is not defined, a map with no layers will be rendered. Note\n * that layers are rendered in the order supplied, so if you want, for example,\n * a vector layer to appear on top of a tile layer, it must come after the tile\n * layer.\n * @property {number} [maxTilesLoading=16] Maximum number tiles to load\n * simultaneously.\n * @property {number} [moveTolerance=1] The minimum distance in pixels the\n * cursor must move to be detected as a map move event instead of a click.\n * Increasing this value can make it easier to click on the map.\n * @property {Collection<import(\"./Overlay.js\").default>|Array<import(\"./Overlay.js\").default>} [overlays]\n * Overlays initially added to the map. By default, no overlays are added.\n * @property {HTMLElement|string} [target] The container for the map, either the\n * element itself or the `id` of the element. If not specified at construction\n * time, {@link module:ol/Map~Map#setTarget} must be called for the map to be\n * rendered. If passed by element, the container can be in a secondary document.\n * **Note:** CSS `transform` support for the target element is limited to `scale`.\n * @property {View|Promise<import(\"./View.js\").ViewOptions>} [view] The map's view.  No layer sources will be\n * fetched unless this is specified at construction time or through\n * {@link module:ol/Map~Map#setView}.\n */\n\n/**\n * @param {import(\"./layer/Base.js\").default} layer Layer.\n */\nfunction removeLayerMapProperty(layer) {\n  if (layer instanceof Layer) {\n    layer.setMapInternal(null);\n    return;\n  }\n  if (layer instanceof LayerGroup) {\n    layer.getLayers().forEach(removeLayerMapProperty);\n  }\n}\n\n/**\n * @param {import(\"./layer/Base.js\").default} layer Layer.\n * @param {Map} map Map.\n */\nfunction setLayerMapProperty(layer, map) {\n  if (layer instanceof Layer) {\n    layer.setMapInternal(map);\n    return;\n  }\n  if (layer instanceof LayerGroup) {\n    const layers = layer.getLayers().getArray();\n    for (let i = 0, ii = layers.length; i < ii; ++i) {\n      setLayerMapProperty(layers[i], map);\n    }\n  }\n}\n\n/**\n * @classdesc\n * The map is the core component of OpenLayers. For a map to render, a view,\n * one or more layers, and a target container are needed:\n *\n *     import Map from 'ol/Map.js';\n *     import View from 'ol/View.js';\n *     import TileLayer from 'ol/layer/Tile.js';\n *     import OSM from 'ol/source/OSM.js';\n *\n *     const map = new Map({\n *       view: new View({\n *         center: [0, 0],\n *         zoom: 1,\n *       }),\n *       layers: [\n *         new TileLayer({\n *           source: new OSM(),\n *         }),\n *       ],\n *       target: 'map',\n *     });\n *\n * The above snippet creates a map using a {@link module:ol/layer/Tile~TileLayer} to\n * display {@link module:ol/source/OSM~OSM} OSM data and render it to a DOM\n * element with the id `map`.\n *\n * The constructor places a viewport container (with CSS class name\n * `ol-viewport`) in the target element (see `getViewport()`), and then two\n * further elements within the viewport: one with CSS class name\n * `ol-overlaycontainer-stopevent` for controls and some overlays, and one with\n * CSS class name `ol-overlaycontainer` for other overlays (see the `stopEvent`\n * option of {@link module:ol/Overlay~Overlay} for the difference). The map\n * itself is placed in a further element within the viewport.\n *\n * Layers are stored as a {@link module:ol/Collection~Collection} in\n * layerGroups. A top-level group is provided by the library. This is what is\n * accessed by `getLayerGroup` and `setLayerGroup`. Layers entered in the\n * options are added to this group, and `addLayer` and `removeLayer` change the\n * layer collection in the group. `getLayers` is a convenience function for\n * `getLayerGroup().getLayers()`. Note that {@link module:ol/layer/Group~LayerGroup}\n * is a subclass of {@link module:ol/layer/Base~BaseLayer}, so layers entered in the\n * options or added with `addLayer` can be groups, which can contain further\n * groups, and so on.\n *\n * @fires import(\"./MapBrowserEvent.js\").MapBrowserEvent\n * @fires import(\"./MapEvent.js\").MapEvent\n * @fires import(\"./render/Event.js\").default#precompose\n * @fires import(\"./render/Event.js\").default#postcompose\n * @fires import(\"./render/Event.js\").default#rendercomplete\n * @api\n */\nclass Map extends BaseObject {\n  /**\n   * @param {MapOptions} [options] Map options.\n   */\n  constructor(options) {\n    super();\n\n    options = options || {};\n\n    /***\n     * @type {MapEventHandler<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {MapEventHandler<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {MapEventHandler<void>}\n     */\n    this.un;\n\n    const optionsInternal = createOptionsInternal(options);\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.renderComplete_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.loaded_ = true;\n\n    /** @private */\n    this.boundHandleBrowserEvent_ = this.handleBrowserEvent.bind(this);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxTilesLoading_ =\n      options.maxTilesLoading !== undefined ? options.maxTilesLoading : 16;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ =\n      options.pixelRatio !== undefined\n        ? options.pixelRatio\n        : DEVICE_PIXEL_RATIO;\n\n    /**\n     * @private\n     * @type {ReturnType<typeof setTimeout>}\n     */\n    this.postRenderTimeoutHandle_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.animationDelayKey_;\n\n    /**\n     * @private\n     */\n    this.animationDelay_ = this.animationDelay_.bind(this);\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.coordinateToPixelTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.pixelToCoordinateTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.frameIndex_ = 0;\n\n    /**\n     * @private\n     * @type {?FrameState}\n     */\n    this.frameState_ = null;\n\n    /**\n     * The extent at the previous 'moveend' event.\n     * @private\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.previousExtent_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewPropertyListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewChangeListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.layerGroupPropertyListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.viewport_ = document.createElement('div');\n    this.viewport_.className =\n      'ol-viewport' + ('ontouchstart' in window ? ' ol-touch' : '');\n    this.viewport_.style.position = 'relative';\n    this.viewport_.style.overflow = 'hidden';\n    this.viewport_.style.width = '100%';\n    this.viewport_.style.height = '100%';\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainer_ = document.createElement('div');\n    this.overlayContainer_.style.position = 'absolute';\n    this.overlayContainer_.style.zIndex = '0';\n    this.overlayContainer_.style.width = '100%';\n    this.overlayContainer_.style.height = '100%';\n    this.overlayContainer_.style.pointerEvents = 'none';\n    this.overlayContainer_.className = 'ol-overlaycontainer';\n    this.viewport_.appendChild(this.overlayContainer_);\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainerStopEvent_ = document.createElement('div');\n    this.overlayContainerStopEvent_.style.position = 'absolute';\n    this.overlayContainerStopEvent_.style.zIndex = '0';\n    this.overlayContainerStopEvent_.style.width = '100%';\n    this.overlayContainerStopEvent_.style.height = '100%';\n    this.overlayContainerStopEvent_.style.pointerEvents = 'none';\n    this.overlayContainerStopEvent_.className = 'ol-overlaycontainer-stopevent';\n    this.viewport_.appendChild(this.overlayContainerStopEvent_);\n\n    /**\n     * @private\n     * @type {MapBrowserEventHandler}\n     */\n    this.mapBrowserEventHandler_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.moveTolerance_ = options.moveTolerance;\n\n    /**\n     * @private\n     * @type {HTMLElement|Document}\n     */\n    this.keyboardEventTarget_ = optionsInternal.keyboardEventTarget;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.targetChangeHandlerKeys_ = null;\n\n    /**\n     * @private\n     * @type {HTMLElement|null}\n     */\n    this.targetElement_ = null;\n\n    /**\n     * @type {ResizeObserver}\n     */\n    this.resizeObserver_ = new ResizeObserver(() => this.updateSize());\n\n    /**\n     * @type {Collection<import(\"./control/Control.js\").default>}\n     * @protected\n     */\n    this.controls = optionsInternal.controls || defaultControls();\n\n    /**\n     * @type {Collection<import(\"./interaction/Interaction.js\").default>}\n     * @protected\n     */\n    this.interactions =\n      optionsInternal.interactions ||\n      defaultInteractions({\n        onFocusOnly: true,\n      });\n\n    /**\n     * @type {Collection<import(\"./Overlay.js\").default>}\n     * @private\n     */\n    this.overlays_ = optionsInternal.overlays;\n\n    /**\n     * A lookup of overlays by id.\n     * @private\n     * @type {Object<string, import(\"./Overlay.js\").default>}\n     */\n    this.overlayIdIndex_ = {};\n\n    /**\n     * @type {import(\"./renderer/Map.js\").default|null}\n     * @private\n     */\n    this.renderer_ = null;\n\n    /**\n     * @private\n     * @type {!Array<PostRenderFunction>}\n     */\n    this.postRenderFunctions_ = [];\n\n    /**\n     * @private\n     * @type {TileQueue}\n     */\n    this.tileQueue_ = new TileQueue(\n      this.getTilePriority.bind(this),\n      this.handleTileChange_.bind(this),\n    );\n\n    this.addChangeListener(\n      MapProperty.LAYERGROUP,\n      this.handleLayerGroupChanged_,\n    );\n    this.addChangeListener(MapProperty.VIEW, this.handleViewChanged_);\n    this.addChangeListener(MapProperty.SIZE, this.handleSizeChanged_);\n    this.addChangeListener(MapProperty.TARGET, this.handleTargetChanged_);\n\n    // setProperties will trigger the rendering of the map if the map\n    // is \"defined\" already.\n    this.setProperties(optionsInternal.values);\n\n    const map = this;\n    if (options.view && !(options.view instanceof View)) {\n      options.view.then(function (viewOptions) {\n        map.setView(new View(viewOptions));\n      });\n    }\n\n    this.controls.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./control/Control.js\").default>} event CollectionEvent\n       */\n      (event) => {\n        event.element.setMap(this);\n      },\n    );\n\n    this.controls.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./control/Control.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        event.element.setMap(null);\n      },\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./interaction/Interaction.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        event.element.setMap(this);\n      },\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./interaction/Interaction.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        event.element.setMap(null);\n      },\n    );\n\n    this.overlays_.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./Overlay.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        this.addOverlayInternal_(event.element);\n      },\n    );\n\n    this.overlays_.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./Overlay.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        const id = event.element.getId();\n        if (id !== undefined) {\n          delete this.overlayIdIndex_[id.toString()];\n        }\n        event.element.setMap(null);\n      },\n    );\n\n    this.controls.forEach(\n      /**\n       * @param {import(\"./control/Control.js\").default} control Control.\n       */\n      (control) => {\n        control.setMap(this);\n      },\n    );\n\n    this.interactions.forEach(\n      /**\n       * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction.\n       */\n      (interaction) => {\n        interaction.setMap(this);\n      },\n    );\n\n    this.overlays_.forEach(this.addOverlayInternal_.bind(this));\n  }\n\n  /**\n   * Add the given control to the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @api\n   */\n  addControl(control) {\n    this.getControls().push(control);\n  }\n\n  /**\n   * Add the given interaction to the map. If you want to add an interaction\n   * at another point of the collection use `getInteractions()` and the methods\n   * available on {@link module:ol/Collection~Collection}. This can be used to\n   * stop the event propagation from the handleEvent function. The interactions\n   * get to handle the events in the reverse order of this collection.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to add.\n   * @api\n   */\n  addInteraction(interaction) {\n    this.getInteractions().push(interaction);\n  }\n\n  /**\n   * Adds the given layer to the top of this map. If you want to add a layer\n   * elsewhere in the stack, use `getLayers()` and the methods available on\n   * {@link module:ol/Collection~Collection}.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @api\n   */\n  addLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    layers.push(layer);\n  }\n\n  /**\n   * @param {import(\"./layer/Group.js\").GroupEvent} event The layer add event.\n   * @private\n   */\n  handleLayerAdd_(event) {\n    setLayerMapProperty(event.layer, this);\n  }\n\n  /**\n   * Add the given overlay to the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @api\n   */\n  addOverlay(overlay) {\n    this.getOverlays().push(overlay);\n  }\n\n  /**\n   * This deals with map's overlay collection changes.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @private\n   */\n  addOverlayInternal_(overlay) {\n    const id = overlay.getId();\n    if (id !== undefined) {\n      this.overlayIdIndex_[id.toString()] = overlay;\n    }\n    overlay.setMap(this);\n  }\n\n  /**\n   *\n   * Clean up.\n   */\n  disposeInternal() {\n    this.controls.clear();\n    this.interactions.clear();\n    this.overlays_.clear();\n    this.resizeObserver_.disconnect();\n    this.setTarget(null);\n    super.disposeInternal();\n  }\n\n  /**\n   * Detect features that intersect a pixel on the viewport, and execute a\n   * callback with each intersecting feature. Layers included in the detection can\n   * be configured through the `layerFilter` option in `options`.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {function(import(\"./Feature.js\").FeatureLike, import(\"./layer/Layer.js\").default<import(\"./source/Source\").default>, import(\"./geom/SimpleGeometry.js\").default): T} callback Feature callback. The callback will be\n   *     called with two arguments. The first argument is one\n   *     {@link module:ol/Feature~Feature feature} or\n   *     {@link module:ol/render/Feature~RenderFeature render feature} at the pixel, the second is\n   *     the {@link module:ol/layer/Layer~Layer layer} of the feature and will be null for\n   *     unmanaged layers. To stop detection, callback functions can return a\n   *     truthy value.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {T|undefined} Callback result, i.e. the return value of last\n   * callback execution, or the first truthy callback return value.\n   * @template T\n   * @api\n   */\n  forEachFeatureAtPixel(pixel, callback, options) {\n    if (!this.frameState_ || !this.renderer_) {\n      return;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    options = options !== undefined ? options : {};\n    const hitTolerance =\n      options.hitTolerance !== undefined ? options.hitTolerance : 0;\n    const layerFilter =\n      options.layerFilter !== undefined ? options.layerFilter : TRUE;\n    const checkWrapped = options.checkWrapped !== false;\n    return this.renderer_.forEachFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      callback,\n      null,\n      layerFilter,\n      null,\n    );\n  }\n\n  /**\n   * Get all features that intersect a pixel on the viewport.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {Array<import(\"./Feature.js\").FeatureLike>} The detected features or\n   * an empty array if none were found.\n   * @api\n   */\n  getFeaturesAtPixel(pixel, options) {\n    const features = [];\n    this.forEachFeatureAtPixel(\n      pixel,\n      function (feature) {\n        features.push(feature);\n      },\n      options,\n    );\n    return features;\n  }\n\n  /**\n   * Get all layers from all layer groups.\n   * @return {Array<import(\"./layer/Layer.js\").default>} Layers.\n   * @api\n   */\n  getAllLayers() {\n    const layers = [];\n    function addLayersFrom(layerGroup) {\n      layerGroup.forEach(function (layer) {\n        if (layer instanceof LayerGroup) {\n          addLayersFrom(layer.getLayers());\n        } else {\n          layers.push(layer);\n        }\n      });\n    }\n    addLayersFrom(this.getLayers());\n    return layers;\n  }\n\n  /**\n   * Detect if features intersect a pixel on the viewport. Layers included in the\n   * detection can be configured through the `layerFilter` option.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {boolean} Is there a feature at the given pixel?\n   * @api\n   */\n  hasFeatureAtPixel(pixel, options) {\n    if (!this.frameState_ || !this.renderer_) {\n      return false;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    options = options !== undefined ? options : {};\n    const layerFilter =\n      options.layerFilter !== undefined ? options.layerFilter : TRUE;\n    const hitTolerance =\n      options.hitTolerance !== undefined ? options.hitTolerance : 0;\n    const checkWrapped = options.checkWrapped !== false;\n    return this.renderer_.hasFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      layerFilter,\n      null,\n    );\n  }\n\n  /**\n   * Returns the coordinate in user projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   * @api\n   */\n  getEventCoordinate(event) {\n    return this.getCoordinateFromPixel(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the coordinate in view projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   */\n  getEventCoordinateInternal(event) {\n    return this.getCoordinateFromPixelInternal(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the map pixel position for a browser event relative to the viewport.\n   * @param {UIEvent|{clientX: number, clientY: number}} event Event.\n   * @return {import(\"./pixel.js\").Pixel} Pixel.\n   * @api\n   */\n  getEventPixel(event) {\n    const viewport = this.viewport_;\n    const viewportPosition = viewport.getBoundingClientRect();\n    const viewportSize = this.getSize();\n    const scaleX = viewportPosition.width / viewportSize[0];\n    const scaleY = viewportPosition.height / viewportSize[1];\n    const eventPosition =\n      //FIXME Are we really calling this with a TouchEvent anywhere?\n      'changedTouches' in event\n        ? /** @type {TouchEvent} */ (event).changedTouches[0]\n        : /** @type {MouseEvent} */ (event);\n\n    return [\n      (eventPosition.clientX - viewportPosition.left) / scaleX,\n      (eventPosition.clientY - viewportPosition.top) / scaleY,\n    ];\n  }\n\n  /**\n   * Get the target in which this map is rendered.\n   * Note that this returns what is entered as an option or in setTarget:\n   * if that was an element, it returns an element; if a string, it returns that.\n   * @return {HTMLElement|string|undefined} The Element or id of the Element that the\n   *     map is rendered in.\n   * @observable\n   * @api\n   */\n  getTarget() {\n    return /** @type {HTMLElement|string|undefined} */ (\n      this.get(MapProperty.TARGET)\n    );\n  }\n\n  /**\n   * Get the DOM element into which this map is rendered. In contrast to\n   * `getTarget` this method always return an `Element`, or `null` if the\n   * map has no target.\n   * @return {HTMLElement} The element that the map is rendered in.\n   * @api\n   */\n  getTargetElement() {\n    return this.targetElement_;\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * user projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   * @api\n   */\n  getCoordinateFromPixel(pixel) {\n    return toUserCoordinate(\n      this.getCoordinateFromPixelInternal(pixel),\n      this.getView().getProjection(),\n    );\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * map view projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   */\n  getCoordinateFromPixelInternal(pixel) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    }\n    return applyTransform(frameState.pixelToCoordinateTransform, pixel.slice());\n  }\n\n  /**\n   * Get the map controls. Modifying this collection changes the controls\n   * associated with the map.\n   * @return {Collection<import(\"./control/Control.js\").default>} Controls.\n   * @api\n   */\n  getControls() {\n    return this.controls;\n  }\n\n  /**\n   * Get the map overlays. Modifying this collection changes the overlays\n   * associated with the map.\n   * @return {Collection<import(\"./Overlay.js\").default>} Overlays.\n   * @api\n   */\n  getOverlays() {\n    return this.overlays_;\n  }\n\n  /**\n   * Get an overlay by its identifier (the value returned by overlay.getId()).\n   * Note that the index treats string and numeric identifiers as the same. So\n   * `map.getOverlayById(2)` will return an overlay with id `'2'` or `2`.\n   * @param {string|number} id Overlay identifier.\n   * @return {import(\"./Overlay.js\").default|null} Overlay.\n   * @api\n   */\n  getOverlayById(id) {\n    const overlay = this.overlayIdIndex_[id.toString()];\n    return overlay !== undefined ? overlay : null;\n  }\n\n  /**\n   * Get the map interactions. Modifying this collection changes the interactions\n   * associated with the map.\n   *\n   * Interactions are used for e.g. pan, zoom and rotate.\n   * @return {Collection<import(\"./interaction/Interaction.js\").default>} Interactions.\n   * @api\n   */\n  getInteractions() {\n    return this.interactions;\n  }\n\n  /**\n   * Get the layergroup associated with this map.\n   * @return {LayerGroup} A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  getLayerGroup() {\n    return /** @type {LayerGroup} */ (this.get(MapProperty.LAYERGROUP));\n  }\n\n  /**\n   * Clear any existing layers and add layers to the map.\n   * @param {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>} layers The layers to be added to the map.\n   * @api\n   */\n  setLayers(layers) {\n    const group = this.getLayerGroup();\n    if (layers instanceof Collection) {\n      group.setLayers(layers);\n      return;\n    }\n\n    const collection = group.getLayers();\n    collection.clear();\n    collection.extend(layers);\n  }\n\n  /**\n   * Get the collection of layers associated with this map.\n   * @return {!Collection<import(\"./layer/Base.js\").default>} Layers.\n   * @api\n   */\n  getLayers() {\n    const layers = this.getLayerGroup().getLayers();\n    return layers;\n  }\n\n  /**\n   * @return {boolean} Layers have sources that are still loading.\n   */\n  getLoadingOrNotReady() {\n    const layerStatesArray = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const state = layerStatesArray[i];\n      if (!state.visible) {\n        continue;\n      }\n      const renderer = state.layer.getRenderer();\n      if (renderer && !renderer.ready) {\n        return true;\n      }\n      const source = state.layer.getSource();\n      if (source && source.loading) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the user\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   * @api\n   */\n  getPixelFromCoordinate(coordinate) {\n    const viewCoordinate = fromUserCoordinate(\n      coordinate,\n      this.getView().getProjection(),\n    );\n    return this.getPixelFromCoordinateInternal(viewCoordinate);\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the map view\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   */\n  getPixelFromCoordinateInternal(coordinate) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    }\n    return applyTransform(\n      frameState.coordinateToPixelTransform,\n      coordinate.slice(0, 2),\n    );\n  }\n\n  /**\n   * Get the map renderer.\n   * @return {import(\"./renderer/Map.js\").default|null} Renderer\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Get the size of this map.\n   * @return {import(\"./size.js\").Size|undefined} The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  getSize() {\n    return /** @type {import(\"./size.js\").Size|undefined} */ (\n      this.get(MapProperty.SIZE)\n    );\n  }\n\n  /**\n   * Get the view associated with this map. A view manages properties such as\n   * center and resolution.\n   * @return {View} The view that controls this map.\n   * @observable\n   * @api\n   */\n  getView() {\n    return /** @type {View} */ (this.get(MapProperty.VIEW));\n  }\n\n  /**\n   * Get the element that serves as the map viewport.\n   * @return {HTMLElement} Viewport.\n   * @api\n   */\n  getViewport() {\n    return this.viewport_;\n  }\n\n  /**\n   * Get the element that serves as the container for overlays.  Elements added to\n   * this container will let mousedown and touchstart events through to the map,\n   * so clicks and gestures on an overlay will trigger {@link module:ol/MapBrowserEvent~MapBrowserEvent}\n   * events.\n   * @return {!HTMLElement} The map's overlay container.\n   */\n  getOverlayContainer() {\n    return this.overlayContainer_;\n  }\n\n  /**\n   * Get the element that serves as a container for overlays that don't allow\n   * event propagation. Elements added to this container won't let mousedown and\n   * touchstart events through to the map, so clicks and gestures on an overlay\n   * don't trigger any {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n   * @return {!HTMLElement} The map's overlay container that stops events.\n   */\n  getOverlayContainerStopEvent() {\n    return this.overlayContainerStopEvent_;\n  }\n\n  /**\n   * @return {!Document} The document where the map is displayed.\n   */\n  getOwnerDocument() {\n    const targetElement = this.getTargetElement();\n    return targetElement ? targetElement.ownerDocument : document;\n  }\n\n  /**\n   * @param {import(\"./Tile.js\").default} tile Tile.\n   * @param {string} tileSourceKey Tile source key.\n   * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n   * @param {number} tileResolution Tile resolution.\n   * @return {number} Tile priority.\n   */\n  getTilePriority(tile, tileSourceKey, tileCenter, tileResolution) {\n    return getTilePriority(\n      this.frameState_,\n      tile,\n      tileSourceKey,\n      tileCenter,\n      tileResolution,\n    );\n  }\n\n  /**\n   * @param {UIEvent} browserEvent Browser event.\n   * @param {string} [type] Type.\n   */\n  handleBrowserEvent(browserEvent, type) {\n    type = type || browserEvent.type;\n    const mapBrowserEvent = new MapBrowserEvent(type, this, browserEvent);\n    this.handleMapBrowserEvent(mapBrowserEvent);\n  }\n\n  /**\n   * @param {MapBrowserEvent} mapBrowserEvent The event to handle.\n   */\n  handleMapBrowserEvent(mapBrowserEvent) {\n    if (!this.frameState_) {\n      // With no view defined, we cannot translate pixels into geographical\n      // coordinates so interactions cannot be used.\n      return;\n    }\n    const originalEvent = /** @type {PointerEvent} */ (\n      mapBrowserEvent.originalEvent\n    );\n    const eventType = originalEvent.type;\n    if (\n      eventType === PointerEventType.POINTERDOWN ||\n      eventType === EventType.WHEEL ||\n      eventType === EventType.KEYDOWN\n    ) {\n      const doc = this.getOwnerDocument();\n      const rootNode = this.viewport_.getRootNode\n        ? this.viewport_.getRootNode()\n        : doc;\n      const target = /** @type {Node} */ (originalEvent.target);\n      if (\n        // Abort if the target is a child of the container for elements whose events are not meant\n        // to be handled by map interactions.\n        this.overlayContainerStopEvent_.contains(target) ||\n        // Abort if the event target is a child of the container that is no longer in the page.\n        // It's possible for the target to no longer be in the page if it has been removed in an\n        // event listener, this might happen in a Control that recreates it's content based on\n        // user interaction either manually or via a render in something like https://reactjs.org/\n        !(rootNode === doc ? doc.documentElement : rootNode).contains(target)\n      ) {\n        return;\n      }\n    }\n    mapBrowserEvent.frameState = this.frameState_;\n    if (this.dispatchEvent(mapBrowserEvent) !== false) {\n      const interactionsArray = this.getInteractions().getArray().slice();\n      for (let i = interactionsArray.length - 1; i >= 0; i--) {\n        const interaction = interactionsArray[i];\n        if (\n          interaction.getMap() !== this ||\n          !interaction.getActive() ||\n          !this.getTargetElement()\n        ) {\n          continue;\n        }\n        const cont = interaction.handleEvent(mapBrowserEvent);\n        if (!cont || mapBrowserEvent.propagationStopped) {\n          break;\n        }\n      }\n    }\n  }\n\n  /**\n   * @protected\n   */\n  handlePostRender() {\n    const frameState = this.frameState_;\n\n    // Manage the tile queue\n    // Image loads are expensive and a limited resource, so try to use them\n    // efficiently:\n    // * When the view is static we allow a large number of parallel tile loads\n    //   to complete the frame as quickly as possible.\n    // * When animating or interacting, image loads can cause janks, so we reduce\n    //   the maximum number of loads per frame and limit the number of parallel\n    //   tile loads to remain reactive to view changes and to reduce the chance of\n    //   loading tiles that will quickly disappear from view.\n    const tileQueue = this.tileQueue_;\n    if (!tileQueue.isEmpty()) {\n      let maxTotalLoading = this.maxTilesLoading_;\n      let maxNewLoads = maxTotalLoading;\n      if (frameState) {\n        const hints = frameState.viewHints;\n        if (hints[ViewHint.ANIMATING] || hints[ViewHint.INTERACTING]) {\n          const lowOnFrameBudget = Date.now() - frameState.time > 8;\n          maxTotalLoading = lowOnFrameBudget ? 0 : 8;\n          maxNewLoads = lowOnFrameBudget ? 0 : 2;\n        }\n      }\n      if (tileQueue.getTilesLoading() < maxTotalLoading) {\n        tileQueue.reprioritize(); // FIXME only call if view has changed\n        tileQueue.loadMoreTiles(maxTotalLoading, maxNewLoads);\n      }\n    }\n\n    if (frameState && this.renderer_ && !frameState.animate) {\n      if (this.renderComplete_ === true) {\n        if (this.hasListener(RenderEventType.RENDERCOMPLETE)) {\n          this.renderer_.dispatchRenderEvent(\n            RenderEventType.RENDERCOMPLETE,\n            frameState,\n          );\n        }\n        if (this.loaded_ === false) {\n          this.loaded_ = true;\n          this.dispatchEvent(\n            new MapEvent(MapEventType.LOADEND, this, frameState),\n          );\n        }\n      } else if (this.loaded_ === true) {\n        this.loaded_ = false;\n        this.dispatchEvent(\n          new MapEvent(MapEventType.LOADSTART, this, frameState),\n        );\n      }\n    }\n\n    const postRenderFunctions = this.postRenderFunctions_;\n    for (let i = 0, ii = postRenderFunctions.length; i < ii; ++i) {\n      postRenderFunctions[i](this, frameState);\n    }\n    postRenderFunctions.length = 0;\n  }\n\n  /**\n   * @private\n   */\n  handleSizeChanged_() {\n    if (this.getView() && !this.getView().getAnimating()) {\n      this.getView().resolveConstraints(0);\n    }\n\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleTargetChanged_() {\n    if (this.mapBrowserEventHandler_) {\n      for (let i = 0, ii = this.targetChangeHandlerKeys_.length; i < ii; ++i) {\n        unlistenByKey(this.targetChangeHandlerKeys_[i]);\n      }\n      this.targetChangeHandlerKeys_ = null;\n      this.viewport_.removeEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_,\n      );\n      this.viewport_.removeEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_,\n      );\n      this.mapBrowserEventHandler_.dispose();\n      this.mapBrowserEventHandler_ = null;\n      removeNode(this.viewport_);\n    }\n\n    if (this.targetElement_) {\n      this.resizeObserver_.unobserve(this.targetElement_);\n      const rootNode = this.targetElement_.getRootNode();\n      if (rootNode instanceof ShadowRoot) {\n        this.resizeObserver_.unobserve(rootNode.host);\n      }\n      this.setSize(undefined);\n    }\n\n    // target may be undefined, null, a string or an Element.\n    // If it's a string we convert it to an Element before proceeding.\n    // If it's not now an Element we remove the viewport from the DOM.\n    // If it's an Element we append the viewport element to it.\n\n    const target = this.getTarget();\n    const targetElement =\n      typeof target === 'string' ? document.getElementById(target) : target;\n    this.targetElement_ = targetElement;\n    if (!targetElement) {\n      if (this.renderer_) {\n        clearTimeout(this.postRenderTimeoutHandle_);\n        this.postRenderTimeoutHandle_ = undefined;\n        this.postRenderFunctions_.length = 0;\n        this.renderer_.dispose();\n        this.renderer_ = null;\n      }\n      if (this.animationDelayKey_) {\n        cancelAnimationFrame(this.animationDelayKey_);\n        this.animationDelayKey_ = undefined;\n      }\n    } else {\n      targetElement.appendChild(this.viewport_);\n      if (!this.renderer_) {\n        this.renderer_ = new CompositeMapRenderer(this);\n      }\n\n      this.mapBrowserEventHandler_ = new MapBrowserEventHandler(\n        this,\n        this.moveTolerance_,\n      );\n      for (const key in MapBrowserEventType) {\n        this.mapBrowserEventHandler_.addEventListener(\n          MapBrowserEventType[key],\n          this.handleMapBrowserEvent.bind(this),\n        );\n      }\n      this.viewport_.addEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_,\n        false,\n      );\n      this.viewport_.addEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_,\n        PASSIVE_EVENT_LISTENERS ? {passive: false} : false,\n      );\n\n      const keyboardEventTarget = !this.keyboardEventTarget_\n        ? targetElement\n        : this.keyboardEventTarget_;\n      this.targetChangeHandlerKeys_ = [\n        listen(\n          keyboardEventTarget,\n          EventType.KEYDOWN,\n          this.handleBrowserEvent,\n          this,\n        ),\n        listen(\n          keyboardEventTarget,\n          EventType.KEYPRESS,\n          this.handleBrowserEvent,\n          this,\n        ),\n      ];\n      const rootNode = targetElement.getRootNode();\n      if (rootNode instanceof ShadowRoot) {\n        this.resizeObserver_.observe(rootNode.host);\n      }\n      this.resizeObserver_.observe(targetElement);\n    }\n\n    this.updateSize();\n    // updateSize calls setSize, so no need to call this.render\n    // ourselves here.\n  }\n\n  /**\n   * @private\n   */\n  handleTileChange_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewPropertyChanged_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewChanged_() {\n    if (this.viewPropertyListenerKey_) {\n      unlistenByKey(this.viewPropertyListenerKey_);\n      this.viewPropertyListenerKey_ = null;\n    }\n    if (this.viewChangeListenerKey_) {\n      unlistenByKey(this.viewChangeListenerKey_);\n      this.viewChangeListenerKey_ = null;\n    }\n    const view = this.getView();\n    if (view) {\n      this.updateViewportSize_(this.getSize());\n\n      this.viewPropertyListenerKey_ = listen(\n        view,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleViewPropertyChanged_,\n        this,\n      );\n      this.viewChangeListenerKey_ = listen(\n        view,\n        EventType.CHANGE,\n        this.handleViewPropertyChanged_,\n        this,\n      );\n\n      view.resolveConstraints(0);\n    }\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleLayerGroupChanged_() {\n    if (this.layerGroupPropertyListenerKeys_) {\n      this.layerGroupPropertyListenerKeys_.forEach(unlistenByKey);\n      this.layerGroupPropertyListenerKeys_ = null;\n    }\n    const layerGroup = this.getLayerGroup();\n    if (layerGroup) {\n      this.handleLayerAdd_(new GroupEvent('addlayer', layerGroup));\n      this.layerGroupPropertyListenerKeys_ = [\n        listen(layerGroup, ObjectEventType.PROPERTYCHANGE, this.render, this),\n        listen(layerGroup, EventType.CHANGE, this.render, this),\n        listen(layerGroup, 'addlayer', this.handleLayerAdd_, this),\n        listen(layerGroup, 'removelayer', this.handleLayerRemove_, this),\n      ];\n    }\n    this.render();\n  }\n\n  /**\n   * @return {boolean} Is rendered.\n   */\n  isRendered() {\n    return !!this.frameState_;\n  }\n\n  /**\n   * @private\n   */\n  animationDelay_() {\n    this.animationDelayKey_ = undefined;\n    this.renderFrame_(Date.now());\n  }\n\n  /**\n   * Requests an immediate render in a synchronous manner.\n   * @api\n   */\n  renderSync() {\n    if (this.animationDelayKey_) {\n      cancelAnimationFrame(this.animationDelayKey_);\n    }\n    this.animationDelay_();\n  }\n\n  /**\n   * Redraws all text after new fonts have loaded\n   */\n  redrawText() {\n    const layerStates = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStates.length; i < ii; ++i) {\n      const layer = layerStates[i].layer;\n      if (layer.hasRenderer()) {\n        layer.getRenderer().handleFontsChanged();\n      }\n    }\n  }\n\n  /**\n   * Request a map rendering (at the next animation frame).\n   * @api\n   */\n  render() {\n    if (this.renderer_ && this.animationDelayKey_ === undefined) {\n      this.animationDelayKey_ = requestAnimationFrame(this.animationDelay_);\n    }\n  }\n\n  /**\n   * Remove the given control from the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @return {import(\"./control/Control.js\").default|undefined} The removed control (or undefined\n   *     if the control was not found).\n   * @api\n   */\n  removeControl(control) {\n    return this.getControls().remove(control);\n  }\n\n  /**\n   * Remove the given interaction from the map.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to remove.\n   * @return {import(\"./interaction/Interaction.js\").default|undefined} The removed interaction (or\n   *     undefined if the interaction was not found).\n   * @api\n   */\n  removeInteraction(interaction) {\n    return this.getInteractions().remove(interaction);\n  }\n\n  /**\n   * Removes the given layer from the map.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @return {import(\"./layer/Base.js\").default|undefined} The removed layer (or undefined if the\n   *     layer was not found).\n   * @api\n   */\n  removeLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    return layers.remove(layer);\n  }\n\n  /**\n   * @param {import(\"./layer/Group.js\").GroupEvent} event The layer remove event.\n   * @private\n   */\n  handleLayerRemove_(event) {\n    removeLayerMapProperty(event.layer);\n  }\n\n  /**\n   * Remove the given overlay from the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @return {import(\"./Overlay.js\").default|undefined} The removed overlay (or undefined\n   *     if the overlay was not found).\n   * @api\n   */\n  removeOverlay(overlay) {\n    return this.getOverlays().remove(overlay);\n  }\n\n  /**\n   * @param {number} time Time.\n   * @private\n   */\n  renderFrame_(time) {\n    const size = this.getSize();\n    const view = this.getView();\n    const previousFrameState = this.frameState_;\n    /** @type {?FrameState} */\n    let frameState = null;\n    if (size !== undefined && hasArea(size) && view && view.isDef()) {\n      const viewHints = view.getHints(\n        this.frameState_ ? this.frameState_.viewHints : undefined,\n      );\n      const viewState = view.getState();\n      frameState = {\n        animate: false,\n        coordinateToPixelTransform: this.coordinateToPixelTransform_,\n        declutter: null,\n        extent: getForViewAndSize(\n          viewState.center,\n          viewState.resolution,\n          viewState.rotation,\n          size,\n        ),\n        index: this.frameIndex_++,\n        layerIndex: 0,\n        layerStatesArray: this.getLayerGroup().getLayerStatesArray(),\n        pixelRatio: this.pixelRatio_,\n        pixelToCoordinateTransform: this.pixelToCoordinateTransform_,\n        postRenderFunctions: [],\n        size: size,\n        tileQueue: this.tileQueue_,\n        time: time,\n        usedTiles: {},\n        viewState: viewState,\n        viewHints: viewHints,\n        wantedTiles: {},\n        mapId: getUid(this),\n        renderTargets: {},\n      };\n      if (viewState.nextCenter && viewState.nextResolution) {\n        const rotation = isNaN(viewState.nextRotation)\n          ? viewState.rotation\n          : viewState.nextRotation;\n\n        frameState.nextExtent = getForViewAndSize(\n          viewState.nextCenter,\n          viewState.nextResolution,\n          rotation,\n          size,\n        );\n      }\n    }\n\n    this.frameState_ = frameState;\n    this.renderer_.renderFrame(frameState);\n\n    if (frameState) {\n      if (frameState.animate) {\n        this.render();\n      }\n      Array.prototype.push.apply(\n        this.postRenderFunctions_,\n        frameState.postRenderFunctions,\n      );\n\n      if (previousFrameState) {\n        const moveStart =\n          !this.previousExtent_ ||\n          (!isEmpty(this.previousExtent_) &&\n            !equalsExtent(frameState.extent, this.previousExtent_));\n        if (moveStart) {\n          this.dispatchEvent(\n            new MapEvent(MapEventType.MOVESTART, this, previousFrameState),\n          );\n          this.previousExtent_ = createOrUpdateEmpty(this.previousExtent_);\n        }\n      }\n\n      const idle =\n        this.previousExtent_ &&\n        !frameState.viewHints[ViewHint.ANIMATING] &&\n        !frameState.viewHints[ViewHint.INTERACTING] &&\n        !equalsExtent(frameState.extent, this.previousExtent_);\n\n      if (idle) {\n        this.dispatchEvent(\n          new MapEvent(MapEventType.MOVEEND, this, frameState),\n        );\n        clone(frameState.extent, this.previousExtent_);\n      }\n    }\n\n    this.dispatchEvent(new MapEvent(MapEventType.POSTRENDER, this, frameState));\n\n    this.renderComplete_ =\n      this.hasListener(MapEventType.LOADSTART) ||\n      this.hasListener(MapEventType.LOADEND) ||\n      this.hasListener(RenderEventType.RENDERCOMPLETE)\n        ? !this.tileQueue_.getTilesLoading() &&\n          !this.tileQueue_.getCount() &&\n          !this.getLoadingOrNotReady()\n        : undefined;\n\n    if (!this.postRenderTimeoutHandle_) {\n      this.postRenderTimeoutHandle_ = setTimeout(() => {\n        this.postRenderTimeoutHandle_ = undefined;\n        this.handlePostRender();\n      }, 0);\n    }\n  }\n\n  /**\n   * Sets the layergroup of this map.\n   * @param {LayerGroup} layerGroup A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  setLayerGroup(layerGroup) {\n    const oldLayerGroup = this.getLayerGroup();\n    if (oldLayerGroup) {\n      this.handleLayerRemove_(new GroupEvent('removelayer', oldLayerGroup));\n    }\n    this.set(MapProperty.LAYERGROUP, layerGroup);\n  }\n\n  /**\n   * Set the size of this map.\n   * @param {import(\"./size.js\").Size|undefined} size The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  setSize(size) {\n    this.set(MapProperty.SIZE, size);\n  }\n\n  /**\n   * Set the target element to render this map into.\n   * @param {HTMLElement|string} [target] The Element or id of the Element\n   *     that the map is rendered in.\n   * @observable\n   * @api\n   */\n  setTarget(target) {\n    this.set(MapProperty.TARGET, target);\n  }\n\n  /**\n   * Set the view for this map.\n   * @param {View|Promise<import(\"./View.js\").ViewOptions>} view The view that controls this map.\n   * It is also possible to pass a promise that resolves to options for constructing a view.  This\n   * alternative allows view properties to be resolved by sources or other components that load\n   * view-related metadata.\n   * @observable\n   * @api\n   */\n  setView(view) {\n    if (!view || view instanceof View) {\n      this.set(MapProperty.VIEW, view);\n      return;\n    }\n    this.set(MapProperty.VIEW, new View());\n\n    const map = this;\n    view.then(function (viewOptions) {\n      map.setView(new View(viewOptions));\n    });\n  }\n\n  /**\n   * Force a recalculation of the map viewport size.  This should be called when\n   * third-party code changes the size of the map viewport.\n   * @api\n   */\n  updateSize() {\n    const targetElement = this.getTargetElement();\n\n    let size = undefined;\n    if (targetElement) {\n      const computedStyle = getComputedStyle(targetElement);\n      const width =\n        targetElement.offsetWidth -\n        parseFloat(computedStyle['borderLeftWidth']) -\n        parseFloat(computedStyle['paddingLeft']) -\n        parseFloat(computedStyle['paddingRight']) -\n        parseFloat(computedStyle['borderRightWidth']);\n      const height =\n        targetElement.offsetHeight -\n        parseFloat(computedStyle['borderTopWidth']) -\n        parseFloat(computedStyle['paddingTop']) -\n        parseFloat(computedStyle['paddingBottom']) -\n        parseFloat(computedStyle['borderBottomWidth']);\n      if (!isNaN(width) && !isNaN(height)) {\n        size = [width, height];\n        if (\n          !hasArea(size) &&\n          !!(\n            targetElement.offsetWidth ||\n            targetElement.offsetHeight ||\n            targetElement.getClientRects().length\n          )\n        ) {\n          warn(\n            \"No map visible because the map container's width or height are 0.\",\n          );\n        }\n      }\n    }\n\n    const oldSize = this.getSize();\n    if (size && (!oldSize || !equals(size, oldSize))) {\n      this.setSize(size);\n      this.updateViewportSize_(size);\n    }\n  }\n\n  /**\n   * Recomputes the viewport size and save it on the view object (if any)\n   * @param {import(\"./size.js\").Size|undefined} size The size.\n   * @private\n   */\n  updateViewportSize_(size) {\n    const view = this.getView();\n    if (view) {\n      view.setViewportSize(size);\n    }\n  }\n}\n\n/**\n * @param {MapOptions} options Map options.\n * @return {MapOptionsInternal} Internal map options.\n */\nfunction createOptionsInternal(options) {\n  /**\n   * @type {HTMLElement|Document}\n   */\n  let keyboardEventTarget = null;\n  if (options.keyboardEventTarget !== undefined) {\n    keyboardEventTarget =\n      typeof options.keyboardEventTarget === 'string'\n        ? document.getElementById(options.keyboardEventTarget)\n        : options.keyboardEventTarget;\n  }\n\n  /**\n   * @type {Object<string, *>}\n   */\n  const values = {};\n\n  const layerGroup =\n    options.layers &&\n    typeof (/** @type {?} */ (options.layers).getLayers) === 'function'\n      ? /** @type {LayerGroup} */ (options.layers)\n      : new LayerGroup({\n          layers:\n            /** @type {Collection<import(\"./layer/Base.js\").default>|Array<import(\"./layer/Base.js\").default>} */ (\n              options.layers\n            ),\n        });\n  values[MapProperty.LAYERGROUP] = layerGroup;\n\n  values[MapProperty.TARGET] = options.target;\n\n  values[MapProperty.VIEW] =\n    options.view instanceof View ? options.view : new View();\n\n  /** @type {Collection<import(\"./control/Control.js\").default>} */\n  let controls;\n  if (options.controls !== undefined) {\n    if (Array.isArray(options.controls)) {\n      controls = new Collection(options.controls.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.controls).getArray) === 'function',\n        'Expected `controls` to be an array or an `ol/Collection.js`',\n      );\n      controls = options.controls;\n    }\n  }\n\n  /** @type {Collection<import(\"./interaction/Interaction\").default>} */\n  let interactions;\n  if (options.interactions !== undefined) {\n    if (Array.isArray(options.interactions)) {\n      interactions = new Collection(options.interactions.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.interactions).getArray) ===\n          'function',\n        'Expected `interactions` to be an array or an `ol/Collection.js`',\n      );\n      interactions = options.interactions;\n    }\n  }\n\n  /** @type {Collection<import(\"./Overlay.js\").default>} */\n  let overlays;\n  if (options.overlays !== undefined) {\n    if (Array.isArray(options.overlays)) {\n      overlays = new Collection(options.overlays.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.overlays).getArray) === 'function',\n        'Expected `overlays` to be an array or an `ol/Collection.js`',\n      );\n      overlays = options.overlays;\n    }\n  } else {\n    overlays = new Collection();\n  }\n\n  return {\n    controls: controls,\n    interactions: interactions,\n    keyboardEventTarget: keyboardEventTarget,\n    overlays: overlays,\n    values: values,\n  };\n}\nexport default Map;\n","/**\n * @module ol/Overlay\n */\nimport BaseObject from './Object.js';\nimport MapEventType from './MapEventType.js';\nimport {CLASS_SELECTABLE} from './css.js';\nimport {containsExtent} from './extent.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {outerHeight, outerWidth, removeChildren, removeNode} from './dom.js';\n\n/**\n * @typedef {'bottom-left' | 'bottom-center' | 'bottom-right' | 'center-left' | 'center-center' | 'center-right' | 'top-left' | 'top-center' | 'top-right'} Positioning\n * The overlay position: `'bottom-left'`, `'bottom-center'`,  `'bottom-right'`,\n * `'center-left'`, `'center-center'`, `'center-right'`, `'top-left'`,\n * `'top-center'`, or `'top-right'`.\n */\n\n/**\n * @typedef {Object} Options\n * @property {number|string} [id] Set the overlay id. The overlay id can be used\n * with the {@link module:ol/Map~Map#getOverlayById} method.\n * @property {HTMLElement} [element] The overlay element.\n * @property {Array<number>} [offset=[0, 0]] Offsets in pixels used when positioning\n * the overlay. The first element in the\n * array is the horizontal offset. A positive value shifts the overlay right.\n * The second element in the array is the vertical offset. A positive value\n * shifts the overlay down.\n * @property {import(\"./coordinate.js\").Coordinate} [position] The overlay position\n * in map projection.\n * @property {Positioning} [positioning='top-left'] Defines how\n * the overlay is actually positioned with respect to its `position` property.\n * Possible values are `'bottom-left'`, `'bottom-center'`, `'bottom-right'`,\n * `'center-left'`, `'center-center'`, `'center-right'`, `'top-left'`,\n * `'top-center'`, and `'top-right'`.\n * @property {boolean} [stopEvent=true] Whether event propagation to the map\n * viewport should be stopped. If `true` the overlay is placed in the same\n * container as that of the controls (CSS class name\n * `ol-overlaycontainer-stopevent`); if `false` it is placed in the container\n * with CSS class name specified by the `className` property.\n * @property {boolean} [insertFirst=true] Whether the overlay is inserted first\n * in the overlay container, or appended. If the overlay is placed in the same\n * container as that of the controls (see the `stopEvent` option) you will\n * probably set `insertFirst` to `true` so the overlay is displayed below the\n * controls.\n * @property {PanIntoViewOptions|boolean} [autoPan=false] Pan the map when calling\n * `setPosition`, so that the overlay is entirely visible in the current viewport.\n * @property {string} [className='ol-overlay-container ol-selectable'] CSS class\n * name.\n */\n\n/**\n * @typedef {Object} PanOptions\n * @property {number} [duration=1000] The duration of the animation in\n * milliseconds.\n * @property {function(number):number} [easing] The easing function to use. Can\n * be one from {@link module:ol/easing} or a custom function.\n * Default is {@link module:ol/easing.inAndOut}.\n */\n\n/**\n * @typedef {Object} PanIntoViewOptions\n * @property {PanOptions} [animation={}] The animation parameters for the pan\n * @property {number} [margin=20] The margin (in pixels) between the\n * overlay and the borders of the map when panning into view.\n */\n\n/**\n * @enum {string}\n * @protected\n */\nconst Property = {\n  ELEMENT: 'element',\n  MAP: 'map',\n  OFFSET: 'offset',\n  POSITION: 'position',\n  POSITIONING: 'positioning',\n};\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:element'|'change:map'|'change:offset'|'change:position'|\n *   'change:positioning'} OverlayObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<OverlayObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|OverlayObjectEventTypes, Return>} OverlayOnSignature\n */\n\n/**\n * @classdesc\n * An element to be displayed over the map and attached to a single map\n * location.  Like {@link module:ol/control/Control~Control}, Overlays are\n * visible widgets. Unlike Controls, they are not in a fixed position on the\n * screen, but are tied to a geographical coordinate, so panning the map will\n * move an Overlay but not a Control.\n *\n * Example:\n *\n *     import Overlay from 'ol/Overlay.js';\n *\n *     // ...\n *     const popup = new Overlay({\n *       element: document.getElementById('popup'),\n *     });\n *     popup.setPosition(coordinate);\n *     map.addOverlay(popup);\n *\n * @api\n */\nclass Overlay extends BaseObject {\n  /**\n   * @param {Options} options Overlay options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {OverlayOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {OverlayOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {OverlayOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @protected\n     * @type {Options}\n     */\n    this.options = options;\n\n    /**\n     * @protected\n     * @type {number|string|undefined}\n     */\n    this.id = options.id;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.insertFirst =\n      options.insertFirst !== undefined ? options.insertFirst : true;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.stopEvent = options.stopEvent !== undefined ? options.stopEvent : true;\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.element = document.createElement('div');\n    this.element.className =\n      options.className !== undefined\n        ? options.className\n        : 'ol-overlay-container ' + CLASS_SELECTABLE;\n    this.element.style.position = 'absolute';\n    this.element.style.pointerEvents = 'auto';\n\n    /**\n     * @protected\n     * @type {PanIntoViewOptions|undefined}\n     */\n    this.autoPan = options.autoPan === true ? {} : options.autoPan || undefined;\n\n    /**\n     * @protected\n     * @type {{transform_: string,\n     *         visible: boolean}}\n     */\n    this.rendered = {\n      transform_: '',\n      visible: true,\n    };\n\n    /**\n     * @protected\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.mapPostrenderListenerKey = null;\n\n    this.addChangeListener(Property.ELEMENT, this.handleElementChanged);\n    this.addChangeListener(Property.MAP, this.handleMapChanged);\n    this.addChangeListener(Property.OFFSET, this.handleOffsetChanged);\n    this.addChangeListener(Property.POSITION, this.handlePositionChanged);\n    this.addChangeListener(Property.POSITIONING, this.handlePositioningChanged);\n\n    if (options.element !== undefined) {\n      this.setElement(options.element);\n    }\n\n    this.setOffset(options.offset !== undefined ? options.offset : [0, 0]);\n\n    this.setPositioning(options.positioning || 'top-left');\n\n    if (options.position !== undefined) {\n      this.setPosition(options.position);\n    }\n  }\n\n  /**\n   * Get the DOM element of this overlay.\n   * @return {HTMLElement|undefined} The Element containing the overlay.\n   * @observable\n   * @api\n   */\n  getElement() {\n    return /** @type {HTMLElement|undefined} */ (this.get(Property.ELEMENT));\n  }\n\n  /**\n   * Get the overlay identifier which is set on constructor.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id;\n  }\n\n  /**\n   * Get the map associated with this overlay.\n   * @return {import(\"./Map.js\").default|null} The map that the\n   * overlay is part of.\n   * @observable\n   * @api\n   */\n  getMap() {\n    return /** @type {import(\"./Map.js\").default|null} */ (\n      this.get(Property.MAP) || null\n    );\n  }\n\n  /**\n   * Get the offset of this overlay.\n   * @return {Array<number>} The offset.\n   * @observable\n   * @api\n   */\n  getOffset() {\n    return /** @type {Array<number>} */ (this.get(Property.OFFSET));\n  }\n\n  /**\n   * Get the current position of this overlay.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The spatial point that the overlay is\n   *     anchored at.\n   * @observable\n   * @api\n   */\n  getPosition() {\n    return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (\n      this.get(Property.POSITION)\n    );\n  }\n\n  /**\n   * Get the current positioning of this overlay.\n   * @return {Positioning} How the overlay is positioned\n   *     relative to its point on the map.\n   * @observable\n   * @api\n   */\n  getPositioning() {\n    return /** @type {Positioning} */ (this.get(Property.POSITIONING));\n  }\n\n  /**\n   * @protected\n   */\n  handleElementChanged() {\n    removeChildren(this.element);\n    const element = this.getElement();\n    if (element) {\n      this.element.appendChild(element);\n    }\n  }\n\n  /**\n   * @protected\n   */\n  handleMapChanged() {\n    if (this.mapPostrenderListenerKey) {\n      removeNode(this.element);\n      unlistenByKey(this.mapPostrenderListenerKey);\n      this.mapPostrenderListenerKey = null;\n    }\n    const map = this.getMap();\n    if (map) {\n      this.mapPostrenderListenerKey = listen(\n        map,\n        MapEventType.POSTRENDER,\n        this.render,\n        this,\n      );\n      this.updatePixelPosition();\n      const container = this.stopEvent\n        ? map.getOverlayContainerStopEvent()\n        : map.getOverlayContainer();\n      if (this.insertFirst) {\n        container.insertBefore(this.element, container.childNodes[0] || null);\n      } else {\n        container.appendChild(this.element);\n      }\n      this.performAutoPan();\n    }\n  }\n\n  /**\n   * @protected\n   */\n  render() {\n    this.updatePixelPosition();\n  }\n\n  /**\n   * @protected\n   */\n  handleOffsetChanged() {\n    this.updatePixelPosition();\n  }\n\n  /**\n   * @protected\n   */\n  handlePositionChanged() {\n    this.updatePixelPosition();\n    this.performAutoPan();\n  }\n\n  /**\n   * @protected\n   */\n  handlePositioningChanged() {\n    this.updatePixelPosition();\n  }\n\n  /**\n   * Set the DOM element to be associated with this overlay.\n   * @param {HTMLElement|undefined} element The Element containing the overlay.\n   * @observable\n   * @api\n   */\n  setElement(element) {\n    this.set(Property.ELEMENT, element);\n  }\n\n  /**\n   * Set the map to be associated with this overlay.\n   * @param {import(\"./Map.js\").default|null} map The map that the\n   * overlay is part of. Pass `null` to just remove the overlay from the current map.\n   * @observable\n   * @api\n   */\n  setMap(map) {\n    this.set(Property.MAP, map);\n  }\n\n  /**\n   * Set the offset for this overlay.\n   * @param {Array<number>} offset Offset.\n   * @observable\n   * @api\n   */\n  setOffset(offset) {\n    this.set(Property.OFFSET, offset);\n  }\n\n  /**\n   * Set the position for this overlay. If the position is `undefined` the\n   * overlay is hidden.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} position The spatial point that the overlay\n   *     is anchored at.\n   * @observable\n   * @api\n   */\n  setPosition(position) {\n    this.set(Property.POSITION, position);\n  }\n\n  /**\n   * Pan the map so that the overlay is entirely visible in the current viewport\n   * (if necessary) using the configured autoPan parameters\n   * @protected\n   */\n  performAutoPan() {\n    if (this.autoPan) {\n      this.panIntoView(this.autoPan);\n    }\n  }\n\n  /**\n   * Pan the map so that the overlay is entirely visible in the current viewport\n   * (if necessary).\n   * @param {PanIntoViewOptions} [panIntoViewOptions] Options for the pan action\n   * @api\n   */\n  panIntoView(panIntoViewOptions) {\n    const map = this.getMap();\n\n    if (!map || !map.getTargetElement() || !this.get(Property.POSITION)) {\n      return;\n    }\n\n    const mapRect = this.getRect(map.getTargetElement(), map.getSize());\n    const element = this.getElement();\n    const overlayRect = this.getRect(element, [\n      outerWidth(element),\n      outerHeight(element),\n    ]);\n\n    panIntoViewOptions = panIntoViewOptions || {};\n\n    const myMargin =\n      panIntoViewOptions.margin === undefined ? 20 : panIntoViewOptions.margin;\n    if (!containsExtent(mapRect, overlayRect)) {\n      // the overlay is not completely inside the viewport, so pan the map\n      const offsetLeft = overlayRect[0] - mapRect[0];\n      const offsetRight = mapRect[2] - overlayRect[2];\n      const offsetTop = overlayRect[1] - mapRect[1];\n      const offsetBottom = mapRect[3] - overlayRect[3];\n\n      const delta = [0, 0];\n      if (offsetLeft < 0) {\n        // move map to the left\n        delta[0] = offsetLeft - myMargin;\n      } else if (offsetRight < 0) {\n        // move map to the right\n        delta[0] = Math.abs(offsetRight) + myMargin;\n      }\n      if (offsetTop < 0) {\n        // move map up\n        delta[1] = offsetTop - myMargin;\n      } else if (offsetBottom < 0) {\n        // move map down\n        delta[1] = Math.abs(offsetBottom) + myMargin;\n      }\n\n      if (delta[0] !== 0 || delta[1] !== 0) {\n        const center = /** @type {import(\"./coordinate.js\").Coordinate} */ (\n          map.getView().getCenterInternal()\n        );\n        const centerPx = map.getPixelFromCoordinateInternal(center);\n        if (!centerPx) {\n          return;\n        }\n        const newCenterPx = [centerPx[0] + delta[0], centerPx[1] + delta[1]];\n\n        const panOptions = panIntoViewOptions.animation || {};\n        map.getView().animateInternal({\n          center: map.getCoordinateFromPixelInternal(newCenterPx),\n          duration: panOptions.duration,\n          easing: panOptions.easing,\n        });\n      }\n    }\n  }\n\n  /**\n   * Get the extent of an element relative to the document\n   * @param {HTMLElement} element The element.\n   * @param {import(\"./size.js\").Size} size The size of the element.\n   * @return {import(\"./extent.js\").Extent} The extent.\n   * @protected\n   */\n  getRect(element, size) {\n    const box = element.getBoundingClientRect();\n    const offsetX = box.left + window.pageXOffset;\n    const offsetY = box.top + window.pageYOffset;\n    return [offsetX, offsetY, offsetX + size[0], offsetY + size[1]];\n  }\n\n  /**\n   * Set the positioning for this overlay.\n   * @param {Positioning} positioning how the overlay is\n   *     positioned relative to its point on the map.\n   * @observable\n   * @api\n   */\n  setPositioning(positioning) {\n    this.set(Property.POSITIONING, positioning);\n  }\n\n  /**\n   * Modify the visibility of the element.\n   * @param {boolean} visible Element visibility.\n   * @protected\n   */\n  setVisible(visible) {\n    if (this.rendered.visible !== visible) {\n      this.element.style.display = visible ? '' : 'none';\n      this.rendered.visible = visible;\n    }\n  }\n\n  /**\n   * Update pixel position.\n   * @protected\n   */\n  updatePixelPosition() {\n    const map = this.getMap();\n    const position = this.getPosition();\n    if (!map || !map.isRendered() || !position) {\n      this.setVisible(false);\n      return;\n    }\n\n    const pixel = map.getPixelFromCoordinate(position);\n    const mapSize = map.getSize();\n    this.updateRenderedPosition(pixel, mapSize);\n  }\n\n  /**\n   * @param {import(\"./pixel.js\").Pixel} pixel The pixel location.\n   * @param {import(\"./size.js\").Size|undefined} mapSize The map size.\n   * @protected\n   */\n  updateRenderedPosition(pixel, mapSize) {\n    const style = this.element.style;\n    const offset = this.getOffset();\n\n    const positioning = this.getPositioning();\n\n    this.setVisible(true);\n\n    const x = Math.round(pixel[0] + offset[0]) + 'px';\n    const y = Math.round(pixel[1] + offset[1]) + 'px';\n    let posX = '0%';\n    let posY = '0%';\n    if (\n      positioning == 'bottom-right' ||\n      positioning == 'center-right' ||\n      positioning == 'top-right'\n    ) {\n      posX = '-100%';\n    } else if (\n      positioning == 'bottom-center' ||\n      positioning == 'center-center' ||\n      positioning == 'top-center'\n    ) {\n      posX = '-50%';\n    }\n    if (\n      positioning == 'bottom-left' ||\n      positioning == 'bottom-center' ||\n      positioning == 'bottom-right'\n    ) {\n      posY = '-100%';\n    } else if (\n      positioning == 'center-left' ||\n      positioning == 'center-center' ||\n      positioning == 'center-right'\n    ) {\n      posY = '-50%';\n    }\n    const transform = `translate(${posX}, ${posY}) translate(${x}, ${y})`;\n    if (this.rendered.transform_ != transform) {\n      this.rendered.transform_ = transform;\n      style.transform = transform;\n    }\n  }\n\n  /**\n   * returns the options this Overlay has been created with\n   * @return {Options} overlay options\n   */\n  getOptions() {\n    return this.options;\n  }\n}\n\nexport default Overlay;\n","/**\n * @module ol/structs/LRUCache\n */\n\nimport {assert} from '../asserts.js';\n\n/**\n * @typedef {Object} Entry\n * @property {string} key_ Key.\n * @property {Entry|null} newer Newer.\n * @property {Entry|null} older Older.\n * @property {*} value_ Value.\n */\n\n/**\n * @classdesc\n * Implements a Least-Recently-Used cache where the keys do not conflict with\n * Object's properties (e.g. 'hasOwnProperty' is not allowed as a key). Expiring\n * items from the cache is the responsibility of the user.\n *\n * @fires import(\"../events/Event.js\").default\n * @template T\n */\nclass LRUCache {\n  /**\n   * @param {number} [highWaterMark] High water mark.\n   */\n  constructor(highWaterMark) {\n    /**\n     * Desired max cache size after expireCache(). If set to 0, no cache entries\n     * will be pruned at all.\n     * @type {number}\n     */\n    this.highWaterMark = highWaterMark !== undefined ? highWaterMark : 2048;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.count_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, Entry>}\n     */\n    this.entries_ = {};\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.oldest_ = null;\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.newest_ = null;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.highWaterMark > 0 && this.getCount() > this.highWaterMark;\n  }\n\n  /**\n   * Expire the cache.\n   * @param {!Object<string, boolean>} [keep] Keys to keep. To be implemented by subclasses.\n   */\n  expireCache(keep) {\n    while (this.canExpireCache()) {\n      this.pop();\n    }\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.count_ = 0;\n    this.entries_ = {};\n    this.oldest_ = null;\n    this.newest_ = null;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Contains key.\n   */\n  containsKey(key) {\n    return this.entries_.hasOwnProperty(key);\n  }\n\n  /**\n   * @param {function(T, string, LRUCache<T>): ?} f The function\n   *     to call for every entry from the oldest to the newer. This function takes\n   *     3 arguments (the entry value, the entry key and the LRUCache object).\n   *     The return value is ignored.\n   */\n  forEach(f) {\n    let entry = this.oldest_;\n    while (entry) {\n      f(entry.value_, entry.key_, this);\n      entry = entry.newer;\n    }\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {*} [options] Options (reserved for subclasses).\n   * @return {T} Value.\n   */\n  get(key, options) {\n    const entry = this.entries_[key];\n    assert(\n      entry !== undefined,\n      'Tried to get a value for a key that does not exist in the cache',\n    );\n    if (entry === this.newest_) {\n      return entry.value_;\n    }\n    if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (this.oldest_.newer);\n      this.oldest_.older = null;\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    entry.newer = null;\n    entry.older = this.newest_;\n    this.newest_.newer = entry;\n    this.newest_ = entry;\n    return entry.value_;\n  }\n\n  /**\n   * Remove an entry from the cache.\n   * @param {string} key The entry key.\n   * @return {T} The removed entry.\n   */\n  remove(key) {\n    const entry = this.entries_[key];\n    assert(\n      entry !== undefined,\n      'Tried to get a value for a key that does not exist in the cache',\n    );\n    if (entry === this.newest_) {\n      this.newest_ = /** @type {Entry} */ (entry.older);\n      if (this.newest_) {\n        this.newest_.newer = null;\n      }\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (entry.newer);\n      if (this.oldest_) {\n        this.oldest_.older = null;\n      }\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    delete this.entries_[key];\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.count_;\n  }\n\n  /**\n   * @return {Array<string>} Keys.\n   */\n  getKeys() {\n    const keys = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      keys[i++] = entry.key_;\n    }\n    return keys;\n  }\n\n  /**\n   * @return {Array<T>} Values.\n   */\n  getValues() {\n    const values = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      values[i++] = entry.value_;\n    }\n    return values;\n  }\n\n  /**\n   * @return {T} Last value.\n   */\n  peekLast() {\n    return this.oldest_.value_;\n  }\n\n  /**\n   * @return {string} Last key.\n   */\n  peekLastKey() {\n    return this.oldest_.key_;\n  }\n\n  /**\n   * Get the key of the newest item in the cache.  Throws if the cache is empty.\n   * @return {string} The newest key.\n   */\n  peekFirstKey() {\n    return this.newest_.key_;\n  }\n\n  /**\n   * Return an entry without updating least recently used time.\n   * @param {string} key Key.\n   * @return {T|undefined} Value.\n   */\n  peek(key) {\n    return this.entries_[key]?.value_;\n  }\n\n  /**\n   * @return {T} value Value.\n   */\n  pop() {\n    const entry = this.oldest_;\n    delete this.entries_[entry.key_];\n    if (entry.newer) {\n      entry.newer.older = null;\n    }\n    this.oldest_ = /** @type {Entry} */ (entry.newer);\n    if (!this.oldest_) {\n      this.newest_ = null;\n    }\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  replace(key, value) {\n    this.get(key); // update `newest_`\n    this.entries_[key].value_ = value;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  set(key, value) {\n    assert(\n      !(key in this.entries_),\n      'Tried to set a value for a key that is used already',\n    );\n    const entry = {\n      key_: key,\n      newer: null,\n      older: this.newest_,\n      value_: value,\n    };\n    if (!this.newest_) {\n      this.oldest_ = entry;\n    } else {\n      this.newest_.newer = entry;\n    }\n    this.newest_ = entry;\n    this.entries_[key] = entry;\n    ++this.count_;\n  }\n\n  /**\n   * Set a maximum number of entries for the cache.\n   * @param {number} size Cache size.\n   * @api\n   */\n  setSize(size) {\n    this.highWaterMark = size;\n  }\n}\n\nexport default LRUCache;\n","/**\n * @module ol/tilecoord\n */\n\n/**\n * An array of three numbers representing the location of a tile in a tile\n * grid. The order is `z` (zoom level), `x` (column), and `y` (row).\n * @typedef {Array<number>} TileCoord\n * @api\n */\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {TileCoord} [tileCoord] Tile coordinate.\n * @return {TileCoord} Tile coordinate.\n */\nexport function createOrUpdate(z, x, y, tileCoord) {\n  if (tileCoord !== undefined) {\n    tileCoord[0] = z;\n    tileCoord[1] = x;\n    tileCoord[2] = y;\n    return tileCoord;\n  }\n  return [z, x, y];\n}\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {string} Key.\n */\nexport function getKeyZXY(z, x, y) {\n  return z + '/' + x + '/' + y;\n}\n\n/**\n * Get the key for a tile coord.\n * @param {TileCoord} tileCoord The tile coord.\n * @return {string} Key.\n */\nexport function getKey(tileCoord) {\n  return getKeyZXY(tileCoord[0], tileCoord[1], tileCoord[2]);\n}\n\n/**\n * Get the tile cache key for a tile key obtained through `tile.getKey()`.\n * @param {string} tileKey The tile key.\n * @return {string} The cache key.\n */\nexport function getCacheKeyForTileKey(tileKey) {\n  const [z, x, y] = tileKey\n    .substring(tileKey.lastIndexOf('/') + 1, tileKey.length)\n    .split(',')\n    .map(Number);\n  return getKeyZXY(z, x, y);\n}\n\n/**\n * Get a tile coord given a key.\n * @param {string} key The tile coord key.\n * @return {TileCoord} The tile coord.\n */\nexport function fromKey(key) {\n  return key.split('/').map(Number);\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coord.\n * @return {number} Hash.\n */\nexport function hash(tileCoord) {\n  return (tileCoord[1] << tileCoord[0]) + tileCoord[2];\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coordinate.\n * @param {!import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {boolean} Tile coordinate is within extent and zoom level range.\n */\nexport function withinExtentAndZ(tileCoord, tileGrid) {\n  const z = tileCoord[0];\n  const x = tileCoord[1];\n  const y = tileCoord[2];\n\n  if (tileGrid.getMinZoom() > z || z > tileGrid.getMaxZoom()) {\n    return false;\n  }\n  const tileRange = tileGrid.getFullTileRange(z);\n  if (!tileRange) {\n    return true;\n  }\n  return tileRange.containsXY(x, y);\n}\n","/**\n * @module ol/TileCache\n */\nimport LRUCache from './structs/LRUCache.js';\nimport {fromKey, getKey} from './tilecoord.js';\n\nclass TileCache extends LRUCache {\n  clear() {\n    while (this.getCount() > 0) {\n      this.pop().release();\n    }\n    super.clear();\n  }\n\n  /**\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(usedTiles) {\n    while (this.canExpireCache()) {\n      const tile = this.peekLast();\n      if (tile.getKey() in usedTiles) {\n        break;\n      } else {\n        this.pop().release();\n      }\n    }\n  }\n\n  /**\n   * Prune all tiles from the cache that don't have the same z as the newest tile.\n   */\n  pruneExceptNewestZ() {\n    if (this.getCount() === 0) {\n      return;\n    }\n    const key = this.peekFirstKey();\n    const tileCoord = fromKey(key);\n    const z = tileCoord[0];\n    this.forEach((tile) => {\n      if (tile.tileCoord[0] !== z) {\n        this.remove(getKey(tile.tileCoord));\n        tile.release();\n      }\n    });\n  }\n}\n\nexport default TileCache;\n","/**\n * @module ol/TileRange\n */\n\n/**\n * A representation of a contiguous block of tiles.  A tile range is specified\n * by its min/max tile coordinates and is inclusive of coordinates.\n */\nclass TileRange {\n  /**\n   * @param {number} minX Minimum X.\n   * @param {number} maxX Maximum X.\n   * @param {number} minY Minimum Y.\n   * @param {number} maxY Maximum Y.\n   */\n  constructor(minX, maxX, minY, maxY) {\n    /**\n     * @type {number}\n     */\n    this.minX = minX;\n\n    /**\n     * @type {number}\n     */\n    this.maxX = maxX;\n\n    /**\n     * @type {number}\n     */\n    this.minY = minY;\n\n    /**\n     * @type {number}\n     */\n    this.maxY = maxY;\n  }\n\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {boolean} Contains tile coordinate.\n   */\n  contains(tileCoord) {\n    return this.containsXY(tileCoord[1], tileCoord[2]);\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Contains.\n   */\n  containsTileRange(tileRange) {\n    return (\n      this.minX <= tileRange.minX &&\n      tileRange.maxX <= this.maxX &&\n      this.minY <= tileRange.minY &&\n      tileRange.maxY <= this.maxY\n    );\n  }\n\n  /**\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @return {boolean} Contains coordinate.\n   */\n  containsXY(x, y) {\n    return this.minX <= x && x <= this.maxX && this.minY <= y && y <= this.maxY;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Equals.\n   */\n  equals(tileRange) {\n    return (\n      this.minX == tileRange.minX &&\n      this.minY == tileRange.minY &&\n      this.maxX == tileRange.maxX &&\n      this.maxY == tileRange.maxY\n    );\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   */\n  extend(tileRange) {\n    if (tileRange.minX < this.minX) {\n      this.minX = tileRange.minX;\n    }\n    if (tileRange.maxX > this.maxX) {\n      this.maxX = tileRange.maxX;\n    }\n    if (tileRange.minY < this.minY) {\n      this.minY = tileRange.minY;\n    }\n    if (tileRange.maxY > this.maxY) {\n      this.maxY = tileRange.maxY;\n    }\n  }\n\n  /**\n   * @return {number} Height.\n   */\n  getHeight() {\n    return this.maxY - this.minY + 1;\n  }\n\n  /**\n   * @return {import(\"./size.js\").Size} Size.\n   */\n  getSize() {\n    return [this.getWidth(), this.getHeight()];\n  }\n\n  /**\n   * @return {number} Width.\n   */\n  getWidth() {\n    return this.maxX - this.minX + 1;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Intersects.\n   */\n  intersects(tileRange) {\n    return (\n      this.minX <= tileRange.maxX &&\n      this.maxX >= tileRange.minX &&\n      this.minY <= tileRange.maxY &&\n      this.maxY >= tileRange.minY\n    );\n  }\n}\n\n/**\n * @param {number} minX Minimum X.\n * @param {number} maxX Maximum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxY Maximum Y.\n * @param {TileRange} [tileRange] TileRange.\n * @return {TileRange} Tile range.\n */\nexport function createOrUpdate(minX, maxX, minY, maxY, tileRange) {\n  if (tileRange !== undefined) {\n    tileRange.minX = minX;\n    tileRange.maxX = maxX;\n    tileRange.minY = minY;\n    tileRange.maxY = maxY;\n    return tileRange;\n  }\n  return new TileRange(minX, maxX, minY, maxY);\n}\n\nexport default TileRange;\n","/**\n * @module ol/VectorRenderTile\n */\nimport Tile from './Tile.js';\nimport {createCanvasContext2D, releaseCanvas} from './dom.js';\nimport {getUid} from './util.js';\n\n/**\n * @typedef {Object} ReplayState\n * @property {boolean} dirty Dirty.\n * @property {null|import(\"./render.js\").OrderFunction} renderedRenderOrder RenderedRenderOrder.\n * @property {number} renderedTileRevision RenderedTileRevision.\n * @property {number} renderedResolution RenderedResolution.\n * @property {number} renderedRevision RenderedRevision.\n * @property {number} renderedTileResolution RenderedTileResolution.\n * @property {number} renderedTileZ RenderedTileZ.\n */\n\n/**\n * @type {Array<HTMLCanvasElement>}\n */\nconst canvasPool = [];\n\nclass VectorRenderTile extends Tile {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {import(\"./tilecoord.js\").TileCoord} urlTileCoord Wrapped tile coordinate for source urls.\n   * @param {function(VectorRenderTile):Array<import(\"./VectorTile\").default>} getSourceTiles Function\n   * to get source tiles for this tile.\n   */\n  constructor(tileCoord, state, urlTileCoord, getSourceTiles) {\n    super(tileCoord, state, {transition: 0});\n\n    /**\n     * @private\n     * @type {!Object<string, CanvasRenderingContext2D>}\n     */\n    this.context_ = {};\n\n    /**\n     * Executor groups by layer uid. Entries are read/written by the renderer.\n     * @type {Object<string, Array<import(\"./render/canvas/ExecutorGroup.js\").default>>}\n     */\n    this.executorGroups = {};\n\n    /**\n     * Number of loading source tiles. Read/written by the source.\n     * @type {number}\n     */\n    this.loadingSourceTiles = 0;\n\n    /**\n     * @type {Object<number, ImageData>}\n     */\n    this.hitDetectionImageData = {};\n\n    /**\n     * @private\n     * @type {!Object<string, ReplayState>}\n     */\n    this.replayState_ = {};\n\n    /**\n     * @type {Array<import(\"./VectorTile.js\").default>}\n     */\n    this.sourceTiles = [];\n\n    /**\n     * @type {Object<string, boolean>}\n     */\n    this.errorTileKeys = {};\n\n    /**\n     * @type {number}\n     */\n    this.wantedResolution;\n\n    /**\n     * @type {!function():Array<import(\"./VectorTile.js\").default>}\n     */\n    this.getSourceTiles = getSourceTiles.bind(undefined, this);\n\n    /**\n     * @type {import(\"./tilecoord.js\").TileCoord}\n     */\n    this.wrappedTileCoord = urlTileCoord;\n  }\n\n  /**\n   * @param {import(\"./layer/Layer.js\").default} layer Layer.\n   * @return {CanvasRenderingContext2D} The rendering context.\n   */\n  getContext(layer) {\n    const key = getUid(layer);\n    if (!(key in this.context_)) {\n      this.context_[key] = createCanvasContext2D(1, 1, canvasPool);\n    }\n    return this.context_[key];\n  }\n\n  /**\n   * @param {import(\"./layer/Layer.js\").default} layer Layer.\n   * @return {boolean} Tile has a rendering context for the given layer.\n   */\n  hasContext(layer) {\n    return getUid(layer) in this.context_;\n  }\n\n  /**\n   * Get the Canvas for this tile.\n   * @param {import(\"./layer/Layer.js\").default} layer Layer.\n   * @return {HTMLCanvasElement} Canvas.\n   */\n  getImage(layer) {\n    return this.hasContext(layer) ? this.getContext(layer).canvas : null;\n  }\n\n  /**\n   * @param {import(\"./layer/Layer.js\").default} layer Layer.\n   * @return {ReplayState} The replay state.\n   */\n  getReplayState(layer) {\n    const key = getUid(layer);\n    if (!(key in this.replayState_)) {\n      this.replayState_[key] = {\n        dirty: false,\n        renderedRenderOrder: null,\n        renderedResolution: NaN,\n        renderedRevision: -1,\n        renderedTileResolution: NaN,\n        renderedTileRevision: -1,\n        renderedTileZ: -1,\n      };\n    }\n    return this.replayState_[key];\n  }\n\n  /**\n   * Load the tile.\n   */\n  load() {\n    this.getSourceTiles();\n  }\n\n  /**\n   * Remove from the cache due to expiry\n   */\n  release() {\n    for (const key in this.context_) {\n      const context = this.context_[key];\n      releaseCanvas(context);\n      canvasPool.push(context.canvas);\n      delete this.context_[key];\n    }\n    super.release();\n  }\n}\n\nexport default VectorRenderTile;\n","/**\n * @module ol/VectorTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\n\nclass VectorTile extends Tile {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {string} src Data source url.\n   * @param {import(\"./format/Feature.js\").default<typeof import(\"./Feature.js\").default|typeof import(\"./render/Feature.js\").default>} format Feature format.\n   * @param {import(\"./Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @param {import(\"./Tile.js\").Options} [options] Tile options.\n   */\n  constructor(tileCoord, state, src, format, tileLoadFunction, options) {\n    super(tileCoord, state, options);\n\n    /**\n     * Extent of this tile; set by the source.\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.extent = null;\n\n    /**\n     * @private\n     * @type {import(\"./format/Feature.js\").default<typeof import(\"./Feature.js\").default|typeof import(\"./render/Feature.js\").default>}\n     */\n    this.format_ = format;\n\n    /**\n     * @private\n     * @type {Array<import(\"./Feature.js\").FeatureLike>}\n     */\n    this.features_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./featureloader.js\").FeatureLoader}\n     */\n    this.loader_;\n\n    /**\n     * Feature projection of this tile; set by the source.\n     * @type {import(\"./proj/Projection.js\").default}\n     */\n    this.projection = null;\n\n    /**\n     * Resolution of this tile; set by the source.\n     * @type {number}\n     */\n    this.resolution;\n\n    /**\n     * @private\n     * @type {import(\"./Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction_ = tileLoadFunction;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.url_ = src;\n\n    this.key = src;\n  }\n\n  /**\n   * Get the feature format assigned for reading this tile's features.\n   * @return {import(\"./format/Feature.js\").default<typeof import(\"./Feature.js\").default|typeof import(\"./render/Feature.js\").default>} Feature format.\n   * @api\n   */\n  getFormat() {\n    return this.format_;\n  }\n\n  /**\n   * Get the features for this tile. Geometries will be in the view projection.\n   * @return {Array<import(\"./Feature.js\").FeatureLike>} Features.\n   * @api\n   */\n  getFeatures() {\n    return this.features_;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == TileState.IDLE) {\n      this.setState(TileState.LOADING);\n      this.tileLoadFunction_(this, this.url_);\n      if (this.loader_) {\n        this.loader_(this.extent, this.resolution, this.projection);\n      }\n    }\n  }\n\n  /**\n   * Handler for successful tile load.\n   * @param {Array<import(\"./Feature.js\").default>} features The loaded features.\n   * @param {import(\"./proj/Projection.js\").default} dataProjection Data projection.\n   */\n  onLoad(features, dataProjection) {\n    this.setFeatures(features);\n  }\n\n  /**\n   * Handler for tile load errors.\n   */\n  onError() {\n    this.setState(TileState.ERROR);\n  }\n\n  /**\n   * Function for use in an {@link module:ol/source/VectorTile~VectorTile}'s `tileLoadFunction`.\n   * Sets the features for the tile.\n   * @param {Array<import(\"./Feature.js\").FeatureLike>} features Features.\n   * @api\n   */\n  setFeatures(features) {\n    this.features_ = features;\n    this.setState(TileState.LOADED);\n  }\n\n  /**\n   * Set the feature loader for reading this tile's features.\n   * @param {import(\"./featureloader.js\").FeatureLoader} loader Feature loader.\n   * @api\n   */\n  setLoader(loader) {\n    this.loader_ = loader;\n  }\n}\n\nexport default VectorTile;\n","/**\n * @module ol\n */\n\nexport {default as Collection} from './Collection.js';\nexport {default as Disposable} from './Disposable.js';\nexport {default as Feature} from './Feature.js';\nexport {default as Geolocation} from './Geolocation.js';\nexport {default as Graticule} from './layer/Graticule.js';\nexport {default as Image} from './Image.js';\nexport {default as ImageWrapper} from './Image.js';\nexport {default as ImageCanvas} from './ImageCanvas.js';\nexport {default as ImageTile} from './ImageTile.js';\nexport {default as Kinetic} from './Kinetic.js';\nexport {default as Map} from './Map.js';\nexport {default as MapBrowserEvent} from './MapBrowserEvent.js';\nexport {default as MapBrowserEventHandler} from './MapBrowserEventHandler.js';\nexport {default as MapEvent} from './MapEvent.js';\nexport {default as Object} from './Object.js';\nexport {default as Observable} from './Observable.js';\nexport {default as Overlay} from './Overlay.js';\nexport {default as Tile} from './Tile.js';\nexport {default as TileCache} from './TileCache.js';\nexport {default as TileQueue} from './TileQueue.js';\nexport {default as TileRange} from './TileRange.js';\nexport {default as VectorRenderTile} from './VectorRenderTile.js';\nexport {default as VectorTile} from './VectorTile.js';\nexport {default as View} from './View.js';\n\nexport {getUid, VERSION} from './util.js';\n","/**\n * @module ol/webgl\n */\n\nimport {SAFARI_BUG_237906} from './has.js';\n\n/**\n * Constants taken from goog.webgl\n */\n\n/**\n * Used by {@link module:ol/webgl/Helper~WebGLHelper} for buffers containing vertices data, such as\n * position, color, texture coordinate, etc. These vertices are then referenced by an index buffer\n * to be drawn on screen (see {@link module:ol/webgl.ELEMENT_ARRAY_BUFFER}).\n * @const\n * @type {number}\n * @api\n */\nexport const ARRAY_BUFFER = 0x8892;\n\n/**\n * Used by {@link module:ol/webgl/Helper~WebGLHelper} for buffers containing indices data.\n * Index buffers are essentially lists of references to vertices defined in a vertex buffer\n * (see {@link module:ol/webgl.ARRAY_BUFFER}), and define the primitives (triangles) to be drawn.\n * @const\n * @type {number}\n * @api\n */\nexport const ELEMENT_ARRAY_BUFFER = 0x8893;\n\n/**\n * Used by {link module:ol/webgl/Buffer~WebGLArrayBuffer}.\n * @const\n * @type {number}\n * @api\n */\nexport const STREAM_DRAW = 0x88e0;\n\n/**\n * Used by {link module:ol/webgl/Buffer~WebGLArrayBuffer}.\n * @const\n * @type {number}\n * @api\n */\nexport const STATIC_DRAW = 0x88e4;\n\n/**\n * Used by {link module:ol/webgl/Buffer~WebGLArrayBuffer}.\n * @const\n * @type {number}\n * @api\n */\nexport const DYNAMIC_DRAW = 0x88e8;\n\n/**\n * @const\n * @type {number}\n */\nexport const UNSIGNED_BYTE = 0x1401;\n\n/**\n * @const\n * @type {number}\n */\nexport const UNSIGNED_SHORT = 0x1403;\n\n/**\n * @const\n * @type {number}\n */\nexport const UNSIGNED_INT = 0x1405;\n\n/**\n * @const\n * @type {number}\n */\nexport const FLOAT = 0x1406;\n\n/** end of goog.webgl constants\n */\n\n/**\n * @const\n * @type {Array<string>}\n */\nconst CONTEXT_IDS = ['experimental-webgl', 'webgl', 'webkit-3d', 'moz-webgl'];\n\n/**\n * @param {HTMLCanvasElement} canvas Canvas.\n * @param {Object} [attributes] Attributes.\n * @return {WebGLRenderingContext|null} WebGL rendering context.\n */\nexport function getContext(canvas, attributes) {\n  attributes = Object.assign(\n    {\n      preserveDrawingBuffer: true,\n      antialias: SAFARI_BUG_237906 ? false : true, // https://bugs.webkit.org/show_bug.cgi?id=237906\n    },\n    attributes,\n  );\n  const ii = CONTEXT_IDS.length;\n  for (let i = 0; i < ii; ++i) {\n    try {\n      const context = canvas.getContext(CONTEXT_IDS[i], attributes);\n      if (context) {\n        return /** @type {!WebGLRenderingContext} */ (context);\n      }\n    } catch (e) {\n      // pass\n    }\n  }\n  return null;\n}\n\n/**\n * @type {Array<string>|null}\n */\nlet supportedExtensions = null;\n\n/**\n * @return {Array<string>|null} List of supported WebGL extensions.\n */\nexport function getSupportedExtensions() {\n  if (!supportedExtensions) {\n    const canvas = document.createElement('canvas');\n    const gl = getContext(canvas);\n    if (gl) {\n      supportedExtensions = gl.getSupportedExtensions();\n    }\n  }\n  return supportedExtensions;\n}\n","/**\n * @module ol/webgl/Buffer\n */\nimport {\n  ARRAY_BUFFER,\n  DYNAMIC_DRAW,\n  ELEMENT_ARRAY_BUFFER,\n  STATIC_DRAW,\n  STREAM_DRAW,\n} from '../webgl.js';\nimport {assert} from '../asserts.js';\n\n/**\n * Used to describe the intended usage for the data: `STATIC_DRAW`, `STREAM_DRAW`\n * or `DYNAMIC_DRAW`.\n * @enum {number}\n */\nexport const BufferUsage = {\n  STATIC_DRAW: STATIC_DRAW,\n  STREAM_DRAW: STREAM_DRAW,\n  DYNAMIC_DRAW: DYNAMIC_DRAW,\n};\n\n/**\n * @classdesc\n * Object used to store an array of data as well as usage information for that data.\n * Stores typed arrays internally, either Float32Array or Uint16/32Array depending on\n * the buffer type (ARRAY_BUFFER or ELEMENT_ARRAY_BUFFER) and available extensions.\n *\n * To populate the array, you can either use:\n * * A size using `#ofSize(buffer)`\n * * An `ArrayBuffer` object using `#fromArrayBuffer(buffer)`\n * * A plain array using `#fromArray(array)`\n *\n * Note:\n * See the documentation of [WebGLRenderingContext.bufferData](https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/bufferData)\n * for more info on buffer usage.\n */\nclass WebGLArrayBuffer {\n  /**\n   * @param {number} type Buffer type, either ARRAY_BUFFER or ELEMENT_ARRAY_BUFFER.\n   * @param {number} [usage] Intended usage, either `STATIC_DRAW`, `STREAM_DRAW` or `DYNAMIC_DRAW`.\n   * Default is `DYNAMIC_DRAW`.\n   */\n  constructor(type, usage) {\n    /**\n     * @private\n     * @type {Float32Array|Uint32Array|null}\n     */\n    this.array_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.type_ = type;\n\n    assert(\n      type === ARRAY_BUFFER || type === ELEMENT_ARRAY_BUFFER,\n      'A `WebGLArrayBuffer` must either be of type `ELEMENT_ARRAY_BUFFER` or `ARRAY_BUFFER`',\n    );\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.usage_ = usage !== undefined ? usage : BufferUsage.STATIC_DRAW;\n  }\n\n  /**\n   * Populates the buffer with an array of the given size (all values will be zeroes).\n   * @param {number} size Array size\n   * @return {WebGLArrayBuffer} This\n   */\n  ofSize(size) {\n    this.array_ = new (getArrayClassForType(this.type_))(size);\n    return this;\n  }\n\n  /**\n   * Populates the buffer with an array of the given size.\n   * @param {Array<number>} array Numerical array\n   * @return {WebGLArrayBuffer} This\n   */\n  fromArray(array) {\n    this.array_ = getArrayClassForType(this.type_).from(array);\n    return this;\n  }\n\n  /**\n   * Populates the buffer with a raw binary array buffer.\n   * @param {ArrayBuffer} buffer Raw binary buffer to populate the array with. Note that this buffer must have been\n   * initialized for the same typed array class.\n   * @return {WebGLArrayBuffer} This\n   */\n  fromArrayBuffer(buffer) {\n    this.array_ = new (getArrayClassForType(this.type_))(buffer);\n    return this;\n  }\n\n  /**\n   * @return {number} Buffer type.\n   */\n  getType() {\n    return this.type_;\n  }\n\n  /**\n   * Will return null if the buffer was not initialized\n   * @return {Float32Array|Uint32Array|null} Array.\n   */\n  getArray() {\n    return this.array_;\n  }\n\n  /**\n   * @return {number} Usage.\n   */\n  getUsage() {\n    return this.usage_;\n  }\n\n  /**\n   * Will return 0 if the buffer is not initialized\n   * @return {number} Array size\n   */\n  getSize() {\n    return this.array_ ? this.array_.length : 0;\n  }\n}\n\n/**\n * Returns a typed array constructor based on the given buffer type\n * @param {number} type Buffer type, either ARRAY_BUFFER or ELEMENT_ARRAY_BUFFER.\n * @return {Float32ArrayConstructor|Uint32ArrayConstructor} The typed array class to use for this buffer.\n */\nexport function getArrayClassForType(type) {\n  switch (type) {\n    case ARRAY_BUFFER:\n      return Float32Array;\n    case ELEMENT_ARRAY_BUFFER:\n      return Uint32Array;\n    default:\n      return Float32Array;\n  }\n}\n\nexport default WebGLArrayBuffer;\n","/**\n * @module ol/webgl/ContextEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  LOST: 'webglcontextlost',\n  RESTORED: 'webglcontextrestored',\n};\n","/**\n * @module ol/webgl/PostProcessingPass\n */\n\nimport {getUid} from '../util.js';\n\nconst DEFAULT_VERTEX_SHADER = `\n  precision mediump float;\n  \n  attribute vec2 a_position;\n  varying vec2 v_texCoord;\n  varying vec2 v_screenCoord;\n  \n  uniform vec2 u_screenSize;\n   \n  void main() {\n    v_texCoord = a_position * 0.5 + 0.5;\n    v_screenCoord = v_texCoord * u_screenSize;\n    gl_Position = vec4(a_position, 0.0, 1.0);\n  }\n`;\n\nconst DEFAULT_FRAGMENT_SHADER = `\n  precision mediump float;\n   \n  uniform sampler2D u_image;\n  uniform float u_opacity;\n   \n  varying vec2 v_texCoord;\n   \n  void main() {\n    gl_FragColor = texture2D(u_image, v_texCoord) * u_opacity;\n  }\n`;\n\n/**\n * @typedef {Object} Options\n * @property {WebGLRenderingContext} webGlContext WebGL context; mandatory.\n * @property {number} [scaleRatio] Scale ratio; if < 1, the post process will render to a texture smaller than\n * the main canvas that will then be sampled up (useful for saving resource on blur steps).\n * @property {string} [vertexShader] Vertex shader source\n * @property {string} [fragmentShader] Fragment shader source\n * @property {Object<string,import(\"./Helper\").UniformValue>} [uniforms] Uniform definitions for the post process step\n */\n\n/**\n * @typedef {Object} UniformInternalDescription\n * @property {import(\"./Helper\").UniformValue} value Value\n * @property {WebGLUniformLocation} location Location\n * @property {WebGLTexture} [texture] Texture\n * @private\n */\n\n/**\n * @classdesc\n * This class is used to define Post Processing passes with custom shaders and uniforms.\n * This is used internally by {@link module:ol/webgl/Helper~WebGLHelper}.\n *\n * Please note that the final output on the DOM canvas is expected to have premultiplied alpha, which means that\n * a pixel which is 100% red with an opacity of 50% must have a color of (r=0.5, g=0, b=0, a=0.5).\n * Failing to provide pixel colors with premultiplied alpha will result in render anomalies.\n *\n * The default post-processing pass does *not* multiply color values with alpha value, it expects color values to be\n * premultiplied.\n *\n * Default shaders are shown hereafter:\n *\n * * Vertex shader:\n *\n *   ```\n *   precision mediump float;\n *\n *   attribute vec2 a_position;\n *   varying vec2 v_texCoord;\n *   varying vec2 v_screenCoord;\n *\n *   uniform vec2 u_screenSize;\n *\n *   void main() {\n *     v_texCoord = a_position * 0.5 + 0.5;\n *     v_screenCoord = v_texCoord * u_screenSize;\n *     gl_Position = vec4(a_position, 0.0, 1.0);\n *   }\n *   ```\n *\n * * Fragment shader:\n *\n *   ```\n *   precision mediump float;\n *\n *   uniform sampler2D u_image;\n *   uniform float u_opacity;\n *\n *   varying vec2 v_texCoord;\n *\n *   void main() {\n *     gl_FragColor = texture2D(u_image, v_texCoord) * u_opacity;\n *   }\n *   ```\n */\nclass WebGLPostProcessingPass {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    this.gl_ = options.webGlContext;\n    const gl = this.gl_;\n\n    this.scaleRatio_ = options.scaleRatio || 1;\n\n    this.renderTargetTexture_ = gl.createTexture();\n    this.renderTargetTextureSize_ = null;\n\n    this.frameBuffer_ = gl.createFramebuffer();\n    this.depthBuffer_ = gl.createRenderbuffer();\n\n    // compile the program for the frame buffer\n    // TODO: make compilation errors show up\n    const vertexShader = gl.createShader(gl.VERTEX_SHADER);\n    gl.shaderSource(\n      vertexShader,\n      options.vertexShader || DEFAULT_VERTEX_SHADER,\n    );\n    gl.compileShader(vertexShader);\n    const fragmentShader = gl.createShader(gl.FRAGMENT_SHADER);\n    gl.shaderSource(\n      fragmentShader,\n      options.fragmentShader || DEFAULT_FRAGMENT_SHADER,\n    );\n    gl.compileShader(fragmentShader);\n    this.renderTargetProgram_ = gl.createProgram();\n    gl.attachShader(this.renderTargetProgram_, vertexShader);\n    gl.attachShader(this.renderTargetProgram_, fragmentShader);\n    gl.linkProgram(this.renderTargetProgram_);\n\n    // bind the vertices buffer for the frame buffer\n    this.renderTargetVerticesBuffer_ = gl.createBuffer();\n    const verticesArray = [-1, -1, 1, -1, -1, 1, 1, -1, 1, 1, -1, 1];\n    gl.bindBuffer(gl.ARRAY_BUFFER, this.renderTargetVerticesBuffer_);\n    gl.bufferData(\n      gl.ARRAY_BUFFER,\n      new Float32Array(verticesArray),\n      gl.STATIC_DRAW,\n    );\n\n    this.renderTargetAttribLocation_ = gl.getAttribLocation(\n      this.renderTargetProgram_,\n      'a_position',\n    );\n    this.renderTargetUniformLocation_ = gl.getUniformLocation(\n      this.renderTargetProgram_,\n      'u_screenSize',\n    );\n    this.renderTargetOpacityLocation_ = gl.getUniformLocation(\n      this.renderTargetProgram_,\n      'u_opacity',\n    );\n    this.renderTargetTextureLocation_ = gl.getUniformLocation(\n      this.renderTargetProgram_,\n      'u_image',\n    );\n\n    /**\n     * Holds info about custom uniforms used in the post processing pass\n     * @type {Array<UniformInternalDescription>}\n     * @private\n     */\n    this.uniforms_ = [];\n    options.uniforms &&\n      Object.keys(options.uniforms).forEach((name) => {\n        this.uniforms_.push({\n          value: options.uniforms[name],\n          location: gl.getUniformLocation(this.renderTargetProgram_, name),\n        });\n      });\n  }\n\n  /**\n   * Get the WebGL rendering context\n   * @return {WebGLRenderingContext} The rendering context.\n   */\n  getGL() {\n    return this.gl_;\n  }\n\n  /**\n   * Initialize the render target texture of the post process, make sure it is at the\n   * right size and bind it as a render target for the next draw calls.\n   * The last step to be initialized will be the one where the primitives are rendered.\n   * @param {import(\"../Map.js\").FrameState} frameState current frame state\n   */\n  init(frameState) {\n    const gl = this.getGL();\n    const textureSize = [\n      gl.drawingBufferWidth * this.scaleRatio_,\n      gl.drawingBufferHeight * this.scaleRatio_,\n    ];\n\n    // rendering goes to my buffer\n    gl.bindFramebuffer(gl.FRAMEBUFFER, this.getFrameBuffer());\n    gl.bindRenderbuffer(gl.RENDERBUFFER, this.getDepthBuffer());\n    gl.viewport(0, 0, textureSize[0], textureSize[1]);\n\n    // if size has changed: adjust canvas & render target texture\n    if (\n      !this.renderTargetTextureSize_ ||\n      this.renderTargetTextureSize_[0] !== textureSize[0] ||\n      this.renderTargetTextureSize_[1] !== textureSize[1]\n    ) {\n      this.renderTargetTextureSize_ = textureSize;\n\n      // create a new texture\n      const level = 0;\n      const internalFormat = gl.RGBA;\n      const border = 0;\n      const format = gl.RGBA;\n      const type = gl.UNSIGNED_BYTE;\n      const data = null;\n      gl.bindTexture(gl.TEXTURE_2D, this.renderTargetTexture_);\n      gl.texImage2D(\n        gl.TEXTURE_2D,\n        level,\n        internalFormat,\n        textureSize[0],\n        textureSize[1],\n        border,\n        format,\n        type,\n        data,\n      );\n\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\n      // bind the texture to the framebuffer\n      gl.framebufferTexture2D(\n        gl.FRAMEBUFFER,\n        gl.COLOR_ATTACHMENT0,\n        gl.TEXTURE_2D,\n        this.renderTargetTexture_,\n        0,\n      );\n\n      gl.renderbufferStorage(\n        gl.RENDERBUFFER,\n        gl.DEPTH_COMPONENT16,\n        textureSize[0],\n        textureSize[1],\n      );\n      gl.framebufferRenderbuffer(\n        gl.FRAMEBUFFER,\n        gl.DEPTH_ATTACHMENT,\n        gl.RENDERBUFFER,\n        this.depthBuffer_,\n      );\n    }\n  }\n\n  /**\n   * Render to the next postprocessing pass (or to the canvas if final pass).\n   * @param {import(\"../Map.js\").FrameState} frameState current frame state\n   * @param {WebGLPostProcessingPass} [nextPass] Next pass, optional\n   * @param {function(WebGLRenderingContext, import(\"../Map.js\").FrameState):void} [preCompose] Called before composing.\n   * @param {function(WebGLRenderingContext, import(\"../Map.js\").FrameState):void} [postCompose] Called before composing.\n   */\n  apply(frameState, nextPass, preCompose, postCompose) {\n    const gl = this.getGL();\n    const size = frameState.size;\n\n    gl.bindFramebuffer(\n      gl.FRAMEBUFFER,\n      nextPass ? nextPass.getFrameBuffer() : null,\n    );\n    gl.activeTexture(gl.TEXTURE0);\n    gl.bindTexture(gl.TEXTURE_2D, this.renderTargetTexture_);\n\n    if (!nextPass) {\n      // clear the canvas if we are the first to render to it\n      // and preserveDrawingBuffer is true\n      const canvasId = getUid(gl.canvas);\n      if (!frameState.renderTargets[canvasId]) {\n        const attributes = gl.getContextAttributes();\n        if (attributes && attributes.preserveDrawingBuffer) {\n          gl.clearColor(0.0, 0.0, 0.0, 0.0);\n          gl.clearDepth(1.0);\n          gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n        }\n\n        frameState.renderTargets[canvasId] = true;\n      }\n    }\n\n    gl.disable(gl.DEPTH_TEST);\n    gl.enable(gl.BLEND);\n    gl.blendFunc(gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n    gl.viewport(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight);\n\n    gl.bindBuffer(gl.ARRAY_BUFFER, this.renderTargetVerticesBuffer_);\n\n    gl.useProgram(this.renderTargetProgram_);\n    gl.enableVertexAttribArray(this.renderTargetAttribLocation_);\n    gl.vertexAttribPointer(\n      this.renderTargetAttribLocation_,\n      2,\n      gl.FLOAT,\n      false,\n      0,\n      0,\n    );\n    gl.uniform2f(this.renderTargetUniformLocation_, size[0], size[1]);\n    gl.uniform1i(this.renderTargetTextureLocation_, 0);\n\n    const opacity = frameState.layerStatesArray[frameState.layerIndex].opacity;\n    gl.uniform1f(this.renderTargetOpacityLocation_, opacity);\n\n    this.applyUniforms(frameState);\n\n    if (preCompose) {\n      preCompose(gl, frameState);\n    }\n    gl.drawArrays(gl.TRIANGLES, 0, 6);\n    if (postCompose) {\n      postCompose(gl, frameState);\n    }\n  }\n\n  /**\n   * @return {WebGLFramebuffer} Frame buffer\n   */\n  getFrameBuffer() {\n    return this.frameBuffer_;\n  }\n\n  /**\n   * @return {WebGLRenderbuffer} Depth buffer\n   */\n  getDepthBuffer() {\n    return this.depthBuffer_;\n  }\n\n  /**\n   * Sets the custom uniforms based on what was given in the constructor.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @private\n   */\n  applyUniforms(frameState) {\n    const gl = this.getGL();\n\n    let value;\n    let textureSlot = 1;\n    this.uniforms_.forEach(function (uniform) {\n      value =\n        typeof uniform.value === 'function'\n          ? uniform.value(frameState)\n          : uniform.value;\n\n      // apply value based on type\n      if (value instanceof HTMLCanvasElement || value instanceof ImageData) {\n        // create a texture & put data\n        if (!uniform.texture) {\n          uniform.texture = gl.createTexture();\n        }\n        gl.activeTexture(gl[`TEXTURE${textureSlot}`]);\n        gl.bindTexture(gl.TEXTURE_2D, uniform.texture);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\n        if (value instanceof ImageData) {\n          gl.texImage2D(\n            gl.TEXTURE_2D,\n            0,\n            gl.RGBA,\n            gl.RGBA,\n            value.width,\n            value.height,\n            0,\n            gl.UNSIGNED_BYTE,\n            new Uint8Array(value.data),\n          );\n        } else {\n          gl.texImage2D(\n            gl.TEXTURE_2D,\n            0,\n            gl.RGBA,\n            gl.RGBA,\n            gl.UNSIGNED_BYTE,\n            value,\n          );\n        }\n\n        // fill texture slots\n        gl.uniform1i(uniform.location, textureSlot++);\n      } else if (Array.isArray(value)) {\n        switch (value.length) {\n          case 2:\n            gl.uniform2f(uniform.location, value[0], value[1]);\n            return;\n          case 3:\n            gl.uniform3f(uniform.location, value[0], value[1], value[2]);\n            return;\n          case 4:\n            gl.uniform4f(\n              uniform.location,\n              value[0],\n              value[1],\n              value[2],\n              value[3],\n            );\n            return;\n          default:\n            return;\n        }\n      } else if (typeof value === 'number') {\n        gl.uniform1f(uniform.location, value);\n      }\n    });\n  }\n}\n\nexport default WebGLPostProcessingPass;\n","/**\n * @module ol/vec/mat4\n */\n\n/**\n * @return {Array<number>} \"4x4 matrix representing a 3D identity transform.\"\n */\nexport function create() {\n  return [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];\n}\n\n/**\n * @param {Array<number>} mat4 Flattened 4x4 matrix receiving the result.\n * @param {import(\"../transform.js\").Transform} transform Transformation matrix.\n * @return {Array<number>} \"2D transformation matrix as flattened 4x4 matrix.\"\n */\nexport function fromTransform(mat4, transform) {\n  mat4[0] = transform[0];\n  mat4[1] = transform[1];\n  mat4[4] = transform[2];\n  mat4[5] = transform[3];\n  mat4[12] = transform[4];\n  mat4[13] = transform[5];\n  return mat4;\n}\n","/**\n * @module ol/webgl/Helper\n */\nimport ContextEventType from '../webgl/ContextEventType.js';\nimport Disposable from '../Disposable.js';\nimport WebGLPostProcessingPass from './PostProcessingPass.js';\nimport {\n  FLOAT,\n  UNSIGNED_BYTE,\n  UNSIGNED_INT,\n  UNSIGNED_SHORT,\n  getContext,\n} from '../webgl.js';\nimport {clear} from '../obj.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../transform.js';\nimport {create, fromTransform} from '../vec/mat4.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} BufferCacheEntry\n * @property {import(\"./Buffer.js\").default} buffer Buffer.\n * @property {WebGLBuffer} webGlBuffer WebGlBuffer.\n */\n\n/**\n * Shader types, either `FRAGMENT_SHADER` or `VERTEX_SHADER`.\n * @enum {number}\n */\nexport const ShaderType = {\n  FRAGMENT_SHADER: 0x8b30,\n  VERTEX_SHADER: 0x8b31,\n};\n\n/**\n * Names of uniforms made available to all shaders.\n * Please note: changing these *will* break custom shaders!\n * @enum {string}\n */\nexport const DefaultUniform = {\n  PROJECTION_MATRIX: 'u_projectionMatrix',\n  SCREEN_TO_WORLD_MATRIX: 'u_screenToWorldMatrix',\n  TIME: 'u_time',\n  ZOOM: 'u_zoom',\n  RESOLUTION: 'u_resolution',\n  ROTATION: 'u_rotation',\n  VIEWPORT_SIZE_PX: 'u_viewportSizePx',\n  PIXEL_RATIO: 'u_pixelRatio',\n  HIT_DETECTION: 'u_hitDetection',\n};\n\n/**\n * Attribute types, either `UNSIGNED_BYTE`, `UNSIGNED_SHORT`, `UNSIGNED_INT` or `FLOAT`\n * Note: an attribute stored in a `Float32Array` should be of type `FLOAT`.\n * @enum {number}\n */\nexport const AttributeType = {\n  UNSIGNED_BYTE: UNSIGNED_BYTE,\n  UNSIGNED_SHORT: UNSIGNED_SHORT,\n  UNSIGNED_INT: UNSIGNED_INT,\n  FLOAT: FLOAT,\n};\n\n/**\n * Description of an attribute in a buffer\n * @typedef {Object} AttributeDescription\n * @property {string} name Attribute name to use in shaders\n * @property {number} size Number of components per attributes\n * @property {AttributeType} [type] Attribute type, i.e. number of bytes used to store the value. This is\n * determined by the class of typed array which the buffer uses (eg. `Float32Array` for a `FLOAT` attribute).\n * Default is `FLOAT`.\n */\n\n/**\n * @typedef {number|Array<number>|HTMLCanvasElement|HTMLImageElement|ImageData|WebGLTexture|import(\"../transform\").Transform} UniformLiteralValue\n */\n\n/**\n * Uniform value can be a number, array of numbers (2 to 4), canvas element or a callback returning\n * one of the previous types.\n * @typedef {UniformLiteralValue|function(import(\"../Map.js\").FrameState):UniformLiteralValue} UniformValue\n */\n\n/**\n * @typedef {Object} PostProcessesOptions\n * @property {number} [scaleRatio] Scale ratio; if < 1, the post process will render to a texture smaller than\n * the main canvas which will then be sampled up (useful for saving resource on blur steps).\n * @property {string} [vertexShader] Vertex shader source\n * @property {string} [fragmentShader] Fragment shader source\n * @property {Object<string,UniformValue>} [uniforms] Uniform definitions for the post process step\n */\n\n/**\n * @typedef {Object} Options\n * @property {Object<string,UniformValue>} [uniforms] Uniform definitions; property names must match the uniform\n * names in the provided or default shaders.\n * @property {Array<PostProcessesOptions>} [postProcesses] Post-processes definitions\n * @property {string} [canvasCacheKey] The cache key for the canvas.\n */\n\n/**\n * @typedef {Object} UniformInternalDescription\n * @property {string} name Name\n * @property {UniformValue} [value] Value\n * @property {UniformValue} [prevValue] The previous value.\n * @property {WebGLTexture} [texture] Texture\n * @private\n */\n\n/**\n * @typedef {Object} CanvasCacheItem\n * @property {WebGLRenderingContext} context The context of this canvas.\n * @property {number} users The count of users of this canvas.\n */\n\n/**\n * @type {Object<string,CanvasCacheItem>}\n */\nconst canvasCache = {};\n\n/**\n * @param {string} key The cache key for the canvas.\n * @return {string} The shared cache key.\n */\nfunction getSharedCanvasCacheKey(key) {\n  return 'shared/' + key;\n}\n\nlet uniqueCanvasCacheKeyCount = 0;\n\n/**\n * @return {string} The unique cache key.\n */\nfunction getUniqueCanvasCacheKey() {\n  const key = 'unique/' + uniqueCanvasCacheKeyCount;\n  uniqueCanvasCacheKeyCount += 1;\n  return key;\n}\n\n/**\n * @param {string} key The cache key for the canvas.\n * @return {WebGLRenderingContext} The canvas.\n */\nfunction getOrCreateContext(key) {\n  let cacheItem = canvasCache[key];\n  if (!cacheItem) {\n    const canvas = document.createElement('canvas');\n    canvas.width = 1;\n    canvas.height = 1;\n    canvas.style.position = 'absolute';\n    canvas.style.left = '0';\n    const context = getContext(canvas);\n    cacheItem = {users: 0, context};\n    canvasCache[key] = cacheItem;\n  }\n\n  cacheItem.users += 1;\n  return cacheItem.context;\n}\n\n/**\n * @param {string} key The cache key for the canvas.\n */\nfunction releaseCanvas(key) {\n  const cacheItem = canvasCache[key];\n  if (!cacheItem) {\n    return;\n  }\n\n  cacheItem.users -= 1;\n  if (cacheItem.users > 0) {\n    return;\n  }\n\n  const gl = cacheItem.context;\n  const extension = gl.getExtension('WEBGL_lose_context');\n  if (extension) {\n    extension.loseContext();\n  }\n  const canvas = gl.canvas;\n  canvas.width = 1;\n  canvas.height = 1;\n\n  delete canvasCache[key];\n}\n\n/**\n * @classdesc\n * This class is intended to provide low-level functions related to WebGL rendering, so that accessing\n * directly the WebGL API should not be required anymore.\n *\n * Several operations are handled by the `WebGLHelper` class:\n *\n * ### Define custom shaders and uniforms\n *\n *   *Shaders* are low-level programs executed on the GPU and written in GLSL. There are two types of shaders:\n *\n *   Vertex shaders are used to manipulate the position and attribute of *vertices* of rendered primitives (ie. corners of a square).\n *   Outputs are:\n *\n *   * `gl_Position`: position of the vertex in screen space\n *\n *   * Varyings usually prefixed with `v_` are passed on to the fragment shader\n *\n *   Fragment shaders are used to control the actual color of the pixels drawn on screen. Their only output is `gl_FragColor`.\n *\n *   Both shaders can take *uniforms* or *attributes* as input. Attributes are explained later. Uniforms are common, read-only values that\n *   can be changed at every frame and can be of type float, arrays of float or images.\n *\n *   Shaders must be compiled and assembled into a program like so:\n *   ```js\n *   // here we simply create two shaders and assemble them in a program which is then used\n *   // for subsequent rendering calls; note how a frameState is required to set up a program,\n *   // as several default uniforms are computed from it (projection matrix, zoom level, etc.)\n *   const vertexShader = new WebGLVertex(VERTEX_SHADER);\n *   const fragmentShader = new WebGLFragment(FRAGMENT_SHADER);\n *   const program = this.context.getProgram(fragmentShader, vertexShader);\n *   helper.useProgram(this.program, frameState);\n *   ```\n *\n *   Uniforms are defined using the `uniforms` option and can either be explicit values or callbacks taking the frame state as argument.\n *   You can also change their value along the way like so:\n *   ```js\n *   helper.setUniformFloatValue('u_value', valueAsNumber);\n *   ```\n *\n * ### Defining post processing passes\n *\n *   *Post processing* describes the act of rendering primitives to a texture, and then rendering this texture to the final canvas\n *   while applying special effects in screen space.\n *   Typical uses are: blurring, color manipulation, depth of field, filtering...\n *\n *   The `WebGLHelper` class offers the possibility to define post processes at creation time using the `postProcesses` option.\n *   A post process step accepts the following options:\n *\n *   * `fragmentShader` and `vertexShader`: text literals in GLSL language that will be compiled and used in the post processing step.\n *   * `uniforms`: uniforms can be defined for the post processing steps just like for the main render.\n *   * `scaleRatio`: allows using an intermediate texture smaller or higher than the final canvas in the post processing step.\n *     This is typically used in blur steps to reduce the performance overhead by using an already downsampled texture as input.\n *\n *   The {@link module:ol/webgl/PostProcessingPass~WebGLPostProcessingPass} class is used internally, refer to its documentation for more info.\n *\n * ### Binding WebGL buffers and flushing data into them\n *\n *   Data that must be passed to the GPU has to be transferred using {@link module:ol/webgl/Buffer~WebGLArrayBuffer} objects.\n *   A buffer has to be created only once, but must be bound every time the buffer content will be used for rendering.\n *   This is done using {@link bindBuffer}.\n *   When the buffer's array content has changed, the new data has to be flushed to the GPU memory; this is done using\n *   {@link flushBufferData}. Note: this operation is expensive and should be done as infrequently as possible.\n *\n *   When binding an array buffer, a `target` parameter must be given: it should be either {@link module:ol/webgl.ARRAY_BUFFER}\n *   (if the buffer contains vertices data) or {@link module:ol/webgl.ELEMENT_ARRAY_BUFFER} (if the buffer contains indices data).\n *\n *   Examples below:\n *   ```js\n *   // at initialization phase\n *   const verticesBuffer = new WebGLArrayBuffer([], DYNAMIC_DRAW);\n *   const indicesBuffer = new WebGLArrayBuffer([], DYNAMIC_DRAW);\n *\n *   // when array values have changed\n *   helper.flushBufferData(ARRAY_BUFFER, this.verticesBuffer);\n *   helper.flushBufferData(ELEMENT_ARRAY_BUFFER, this.indicesBuffer);\n *\n *   // at rendering phase\n *   helper.bindBuffer(ARRAY_BUFFER, this.verticesBuffer);\n *   helper.bindBuffer(ELEMENT_ARRAY_BUFFER, this.indicesBuffer);\n *   ```\n *\n * ### Specifying attributes\n *\n *   The GPU only receives the data as arrays of numbers. These numbers must be handled differently depending on what it describes (position, texture coordinate...).\n *   Attributes are used to specify these uses. Specify the attribute names with\n *   {@link module:ol/webgl/Helper~WebGLHelper#enableAttributes} (see code snippet below).\n *\n *   Please note that you will have to specify the type and offset of the attributes in the data array. You can refer to the documentation of [WebGLRenderingContext.vertexAttribPointer](https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/vertexAttribPointer) for more explanation.\n *   ```js\n *   // here we indicate that the data array has the following structure:\n *   // [posX, posY, offsetX, offsetY, texCoordU, texCoordV, posX, posY, ...]\n *   helper.enableAttributes([\n *     {\n *        name: 'a_position',\n *        size: 2\n *     },\n *     {\n *       name: 'a_offset',\n *       size: 2\n *     },\n *     {\n *       name: 'a_texCoord',\n *       size: 2\n *     }\n *   ])\n *   ```\n *\n * ### Rendering primitives\n *\n *   Once all the steps above have been achieved, rendering primitives to the screen is done using {@link prepareDraw}, {@link drawElements} and {@link finalizeDraw}.\n *   ```js\n *   // frame preparation step\n *   helper.prepareDraw(frameState);\n *\n *   // call this for every data array that has to be rendered on screen\n *   helper.drawElements(0, this.indicesBuffer.getArray().length);\n *\n *   // finalize the rendering by applying post processes\n *   helper.finalizeDraw(frameState);\n *   ```\n *\n * For an example usage of this class, refer to {@link module:ol/renderer/webgl/PointsLayer~WebGLPointsLayerRenderer}.\n */\nclass WebGLHelper extends Disposable {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n    options = options || {};\n\n    /** @private */\n    this.boundHandleWebGLContextLost_ = this.handleWebGLContextLost.bind(this);\n\n    /** @private */\n    this.boundHandleWebGLContextRestored_ =\n      this.handleWebGLContextRestored.bind(this);\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.canvasCacheKey_ = options.canvasCacheKey\n      ? getSharedCanvasCacheKey(options.canvasCacheKey)\n      : getUniqueCanvasCacheKey();\n\n    /**\n     * @private\n     * @type {WebGLRenderingContext}\n     */\n    this.gl_ = getOrCreateContext(this.canvasCacheKey_);\n\n    /**\n     * @private\n     * @type {!Object<string, BufferCacheEntry>}\n     */\n    this.bufferCache_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, Object>}\n     */\n    this.extensionCache_ = {};\n\n    /**\n     * @private\n     * @type {WebGLProgram}\n     */\n    this.currentProgram_ = null;\n\n    /**\n     * @private\n     * @type boolean\n     */\n    this.needsToBeRecreated_ = false;\n\n    const canvas = this.gl_.canvas;\n\n    canvas.addEventListener(\n      ContextEventType.LOST,\n      this.boundHandleWebGLContextLost_,\n    );\n    canvas.addEventListener(\n      ContextEventType.RESTORED,\n      this.boundHandleWebGLContextRestored_,\n    );\n\n    /**\n     * @private\n     * @type {import(\"../transform.js\").Transform}\n     */\n    this.offsetRotateMatrix_ = createTransform();\n\n    /**\n     * @private\n     * @type {import(\"../transform.js\").Transform}\n     */\n    this.offsetScaleMatrix_ = createTransform();\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.tmpMat4_ = create();\n\n    /**\n     * @private\n     * @type {Object<string, Object<string, WebGLUniformLocation>>}\n     */\n    this.uniformLocationsByProgram_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, Object<string, number>>}\n     */\n    this.attribLocationsByProgram_ = {};\n\n    /**\n     * Holds info about custom uniforms used in the post processing pass.\n     * If the uniform is a texture, the WebGL Texture object will be stored here.\n     * @type {Array<UniformInternalDescription>}\n     * @private\n     */\n    this.uniforms_ = [];\n    if (options.uniforms) {\n      this.setUniforms(options.uniforms);\n    }\n\n    /**\n     * An array of PostProcessingPass objects is kept in this variable, built from the steps provided in the\n     * options. If no post process was given, a default one is used (so as not to have to make an exception to\n     * the frame buffer logic).\n     * @type {Array<WebGLPostProcessingPass>}\n     * @private\n     */\n    this.postProcessPasses_ = options.postProcesses\n      ? options.postProcesses.map(\n          (options) =>\n            new WebGLPostProcessingPass({\n              webGlContext: this.gl_,\n              scaleRatio: options.scaleRatio,\n              vertexShader: options.vertexShader,\n              fragmentShader: options.fragmentShader,\n              uniforms: options.uniforms,\n            }),\n        )\n      : [new WebGLPostProcessingPass({webGlContext: this.gl_})];\n\n    /**\n     * @type {string|null}\n     * @private\n     */\n    this.shaderCompileErrors_ = null;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.startTime_ = Date.now();\n  }\n\n  /**\n   * @param {Object<string, UniformValue>} uniforms Uniform definitions.\n   */\n  setUniforms(uniforms) {\n    this.uniforms_ = [];\n    this.addUniforms(uniforms);\n  }\n\n  /**\n   * @param {Object<string, UniformValue>} uniforms Uniform definitions.\n   */\n  addUniforms(uniforms) {\n    for (const name in uniforms) {\n      this.uniforms_.push({\n        name: name,\n        value: uniforms[name],\n      });\n    }\n  }\n\n  /**\n   * @param {string} canvasCacheKey The canvas cache key.\n   * @return {boolean} The provided key matches the one this helper was constructed with.\n   */\n  canvasCacheKeyMatches(canvasCacheKey) {\n    return this.canvasCacheKey_ === getSharedCanvasCacheKey(canvasCacheKey);\n  }\n\n  /**\n   * Get a WebGL extension.  If the extension is not supported, null is returned.\n   * Extensions are cached after they are enabled for the first time.\n   * @param {string} name The extension name.\n   * @return {Object|null} The extension or null if not supported.\n   */\n  getExtension(name) {\n    if (name in this.extensionCache_) {\n      return this.extensionCache_[name];\n    }\n    const extension = this.gl_.getExtension(name);\n    this.extensionCache_[name] = extension;\n    return extension;\n  }\n\n  /**\n   * Just bind the buffer if it's in the cache. Otherwise create\n   * the WebGL buffer, bind it, populate it, and add an entry to\n   * the cache.\n   * @param {import(\"./Buffer\").default} buffer Buffer.\n   */\n  bindBuffer(buffer) {\n    const gl = this.gl_;\n    const bufferKey = getUid(buffer);\n    let bufferCache = this.bufferCache_[bufferKey];\n    if (!bufferCache) {\n      const webGlBuffer = gl.createBuffer();\n      bufferCache = {\n        buffer: buffer,\n        webGlBuffer: webGlBuffer,\n      };\n      this.bufferCache_[bufferKey] = bufferCache;\n    }\n    gl.bindBuffer(buffer.getType(), bufferCache.webGlBuffer);\n  }\n\n  /**\n   * Update the data contained in the buffer array; this is required for the\n   * new data to be rendered\n   * @param {import(\"./Buffer\").default} buffer Buffer.\n   */\n  flushBufferData(buffer) {\n    const gl = this.gl_;\n    this.bindBuffer(buffer);\n    gl.bufferData(buffer.getType(), buffer.getArray(), buffer.getUsage());\n  }\n\n  /**\n   * @param {import(\"./Buffer.js\").default} buf Buffer.\n   */\n  deleteBuffer(buf) {\n    const gl = this.gl_;\n    const bufferKey = getUid(buf);\n    const bufferCacheEntry = this.bufferCache_[bufferKey];\n    if (bufferCacheEntry && !gl.isContextLost()) {\n      gl.deleteBuffer(bufferCacheEntry.webGlBuffer);\n    }\n    delete this.bufferCache_[bufferKey];\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    const canvas = this.gl_.canvas;\n    canvas.removeEventListener(\n      ContextEventType.LOST,\n      this.boundHandleWebGLContextLost_,\n    );\n    canvas.removeEventListener(\n      ContextEventType.RESTORED,\n      this.boundHandleWebGLContextRestored_,\n    );\n\n    releaseCanvas(this.canvasCacheKey_);\n\n    delete this.gl_;\n  }\n\n  /**\n   * Clear the buffer & set the viewport to draw.\n   * Post process passes will be initialized here, the first one being bound as a render target for\n   * subsequent draw calls.\n   * @param {import(\"../Map.js\").FrameState} frameState current frame state\n   * @param {boolean} [disableAlphaBlend] If true, no alpha blending will happen.\n   * @param {boolean} [enableDepth] If true, enables depth testing.\n   */\n  prepareDraw(frameState, disableAlphaBlend, enableDepth) {\n    const gl = this.gl_;\n    const canvas = this.getCanvas();\n    const size = frameState.size;\n    const pixelRatio = frameState.pixelRatio;\n\n    if (\n      canvas.width !== size[0] * pixelRatio ||\n      canvas.height !== size[1] * pixelRatio\n    ) {\n      canvas.width = size[0] * pixelRatio;\n      canvas.height = size[1] * pixelRatio;\n      canvas.style.width = size[0] + 'px';\n      canvas.style.height = size[1] + 'px';\n    }\n\n    // loop backwards in post processes list\n    for (let i = this.postProcessPasses_.length - 1; i >= 0; i--) {\n      this.postProcessPasses_[i].init(frameState);\n    }\n\n    gl.bindTexture(gl.TEXTURE_2D, null);\n\n    gl.clearColor(0.0, 0.0, 0.0, 0.0);\n    gl.depthRange(0.0, 1.0);\n    gl.clearDepth(1.0);\n    gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n\n    gl.enable(gl.BLEND);\n    gl.blendFunc(gl.ONE, disableAlphaBlend ? gl.ZERO : gl.ONE_MINUS_SRC_ALPHA);\n    if (enableDepth) {\n      gl.enable(gl.DEPTH_TEST);\n      gl.depthFunc(gl.LEQUAL);\n    } else {\n      gl.disable(gl.DEPTH_TEST);\n    }\n  }\n\n  /**\n   * Prepare a program to use a texture.\n   * @param {WebGLTexture} texture The texture.\n   * @param {number} slot The texture slot.\n   * @param {string} uniformName The corresponding uniform name.\n   */\n  bindTexture(texture, slot, uniformName) {\n    const gl = this.gl_;\n    gl.activeTexture(gl.TEXTURE0 + slot);\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    gl.uniform1i(this.getUniformLocation(uniformName), slot);\n  }\n\n  /**\n   * Clear the render target & bind it for future draw operations.\n   * This is similar to `prepareDraw`, only post processes will not be applied.\n   * Note: the whole viewport will be drawn to the render target, regardless of its size.\n   * @param {import(\"../Map.js\").FrameState} frameState current frame state\n   * @param {import(\"./RenderTarget.js\").default} renderTarget Render target to draw to\n   * @param {boolean} [disableAlphaBlend] If true, no alpha blending will happen.\n   * @param {boolean} [enableDepth] If true, enables depth testing.\n   */\n  prepareDrawToRenderTarget(\n    frameState,\n    renderTarget,\n    disableAlphaBlend,\n    enableDepth,\n  ) {\n    const gl = this.gl_;\n    const size = renderTarget.getSize();\n\n    gl.bindFramebuffer(gl.FRAMEBUFFER, renderTarget.getFramebuffer());\n    gl.bindRenderbuffer(gl.RENDERBUFFER, renderTarget.getDepthbuffer());\n    gl.viewport(0, 0, size[0], size[1]);\n    gl.bindTexture(gl.TEXTURE_2D, renderTarget.getTexture());\n    gl.clearColor(0.0, 0.0, 0.0, 0.0);\n    gl.depthRange(0.0, 1.0);\n    gl.clearDepth(1.0);\n    gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n    gl.enable(gl.BLEND);\n    gl.blendFunc(gl.ONE, disableAlphaBlend ? gl.ZERO : gl.ONE_MINUS_SRC_ALPHA);\n    if (enableDepth) {\n      gl.enable(gl.DEPTH_TEST);\n      gl.depthFunc(gl.LEQUAL);\n    } else {\n      gl.disable(gl.DEPTH_TEST);\n    }\n  }\n\n  /**\n   * Execute a draw call based on the currently bound program, texture, buffers, attributes.\n   * @param {number} start Start index.\n   * @param {number} end End index.\n   */\n  drawElements(start, end) {\n    const gl = this.gl_;\n    this.getExtension('OES_element_index_uint');\n\n    const elementType = gl.UNSIGNED_INT;\n    const elementSize = 4;\n\n    const numItems = end - start;\n    const offsetInBytes = start * elementSize;\n    gl.drawElements(gl.TRIANGLES, numItems, elementType, offsetInBytes);\n  }\n\n  /**\n   * Apply the successive post process passes which will eventually render to the actual canvas.\n   * @param {import(\"../Map.js\").FrameState} frameState current frame state\n   * @param {function(WebGLRenderingContext, import(\"../Map.js\").FrameState):void} [preCompose] Called before composing.\n   * @param {function(WebGLRenderingContext, import(\"../Map.js\").FrameState):void} [postCompose] Called before composing.\n   */\n  finalizeDraw(frameState, preCompose, postCompose) {\n    // apply post processes using the next one as target\n    for (let i = 0, ii = this.postProcessPasses_.length; i < ii; i++) {\n      if (i === ii - 1) {\n        this.postProcessPasses_[i].apply(\n          frameState,\n          null,\n          preCompose,\n          postCompose,\n        );\n      } else {\n        this.postProcessPasses_[i].apply(\n          frameState,\n          this.postProcessPasses_[i + 1],\n        );\n      }\n    }\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Canvas.\n   */\n  getCanvas() {\n    return /** @type {HTMLCanvasElement} */ (this.gl_.canvas);\n  }\n\n  /**\n   * Get the WebGL rendering context\n   * @return {WebGLRenderingContext} The rendering context.\n   */\n  getGL() {\n    return this.gl_;\n  }\n\n  /**\n   * Sets the default matrix uniforms for a given frame state. This is called internally in `prepareDraw`.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  applyFrameState(frameState) {\n    const size = frameState.size;\n    const rotation = frameState.viewState.rotation;\n    const pixelRatio = frameState.pixelRatio;\n\n    this.setUniformFloatValue(\n      DefaultUniform.TIME,\n      (Date.now() - this.startTime_) * 0.001,\n    );\n    this.setUniformFloatValue(DefaultUniform.ZOOM, frameState.viewState.zoom);\n    this.setUniformFloatValue(\n      DefaultUniform.RESOLUTION,\n      frameState.viewState.resolution,\n    );\n    this.setUniformFloatValue(DefaultUniform.PIXEL_RATIO, pixelRatio);\n    this.setUniformFloatVec2(DefaultUniform.VIEWPORT_SIZE_PX, [\n      size[0],\n      size[1],\n    ]);\n    this.setUniformFloatValue(DefaultUniform.ROTATION, rotation);\n  }\n\n  /**\n   * Sets the `u_hitDetection` uniform.\n   * @param {boolean} enabled Whether to enable the hit detection code path\n   */\n  applyHitDetectionUniform(enabled) {\n    const loc = this.getUniformLocation(DefaultUniform.HIT_DETECTION);\n    this.getGL().uniform1i(loc, enabled ? 1 : 0);\n\n    // hit detection uses a fixed pixel ratio\n    if (enabled) {\n      this.setUniformFloatValue(DefaultUniform.PIXEL_RATIO, 0.5);\n    }\n  }\n\n  /**\n   * Sets the custom uniforms based on what was given in the constructor. This is called internally in `prepareDraw`.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  applyUniforms(frameState) {\n    const gl = this.gl_;\n\n    let value;\n    let textureSlot = 0;\n    this.uniforms_.forEach((uniform) => {\n      value =\n        typeof uniform.value === 'function'\n          ? uniform.value(frameState)\n          : uniform.value;\n\n      // apply value based on type\n      if (\n        value instanceof HTMLCanvasElement ||\n        value instanceof HTMLImageElement ||\n        value instanceof ImageData ||\n        value instanceof WebGLTexture\n      ) {\n        // create a texture & put data\n        if (value instanceof WebGLTexture && !uniform.texture) {\n          uniform.prevValue = undefined;\n          uniform.texture = value;\n        } else if (!uniform.texture) {\n          uniform.prevValue = undefined;\n          uniform.texture = gl.createTexture();\n        }\n        this.bindTexture(uniform.texture, textureSlot, uniform.name);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\n        const imageReady =\n          !(value instanceof HTMLImageElement) ||\n          /** @type {HTMLImageElement} */ (value).complete;\n        if (\n          !(value instanceof WebGLTexture) &&\n          imageReady &&\n          uniform.prevValue !== value\n        ) {\n          uniform.prevValue = value;\n          gl.texImage2D(\n            gl.TEXTURE_2D,\n            0,\n            gl.RGBA,\n            gl.RGBA,\n            gl.UNSIGNED_BYTE,\n            value,\n          );\n        }\n        textureSlot++;\n      } else if (Array.isArray(value) && value.length === 6) {\n        this.setUniformMatrixValue(\n          uniform.name,\n          fromTransform(this.tmpMat4_, value),\n        );\n      } else if (Array.isArray(value) && value.length <= 4) {\n        switch (value.length) {\n          case 2:\n            gl.uniform2f(\n              this.getUniformLocation(uniform.name),\n              value[0],\n              value[1],\n            );\n            return;\n          case 3:\n            gl.uniform3f(\n              this.getUniformLocation(uniform.name),\n              value[0],\n              value[1],\n              value[2],\n            );\n            return;\n          case 4:\n            gl.uniform4f(\n              this.getUniformLocation(uniform.name),\n              value[0],\n              value[1],\n              value[2],\n              value[3],\n            );\n            return;\n          default:\n            return;\n        }\n      } else if (typeof value === 'number') {\n        gl.uniform1f(this.getUniformLocation(uniform.name), value);\n      }\n    });\n  }\n\n  /**\n   * Set up a program for use. The program will be set as the current one. Then, the uniforms used\n   * in the program will be set based on the current frame state and the helper configuration.\n   * @param {WebGLProgram} program Program.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  useProgram(program, frameState) {\n    const gl = this.gl_;\n    gl.useProgram(program);\n    this.currentProgram_ = program;\n    this.applyFrameState(frameState);\n    this.applyUniforms(frameState);\n  }\n\n  /**\n   * Will attempt to compile a vertex or fragment shader based on source\n   * On error, the shader will be returned but\n   * `gl.getShaderParameter(shader, gl.COMPILE_STATUS)` will return `true`\n   * Use `gl.getShaderInfoLog(shader)` to have details\n   * @param {string} source Shader source\n   * @param {ShaderType} type VERTEX_SHADER or FRAGMENT_SHADER\n   * @return {WebGLShader} Shader object\n   */\n  compileShader(source, type) {\n    const gl = this.gl_;\n    const shader = gl.createShader(type);\n    gl.shaderSource(shader, source);\n    gl.compileShader(shader);\n    return shader;\n  }\n\n  /**\n   * Create a program for a vertex and fragment shader.  Throws if shader compilation fails.\n   * @param {string} fragmentShaderSource Fragment shader source.\n   * @param {string} vertexShaderSource Vertex shader source.\n   * @return {WebGLProgram} Program\n   */\n  getProgram(fragmentShaderSource, vertexShaderSource) {\n    const gl = this.gl_;\n\n    const fragmentShader = this.compileShader(\n      fragmentShaderSource,\n      gl.FRAGMENT_SHADER,\n    );\n\n    const vertexShader = this.compileShader(\n      vertexShaderSource,\n      gl.VERTEX_SHADER,\n    );\n\n    const program = gl.createProgram();\n    gl.attachShader(program, fragmentShader);\n    gl.attachShader(program, vertexShader);\n    gl.linkProgram(program);\n\n    if (!gl.getShaderParameter(fragmentShader, gl.COMPILE_STATUS)) {\n      const message = `Fragment shader compilation failed: ${gl.getShaderInfoLog(\n        fragmentShader,\n      )}`;\n      throw new Error(message);\n    }\n    gl.deleteShader(fragmentShader);\n\n    if (!gl.getShaderParameter(vertexShader, gl.COMPILE_STATUS)) {\n      const message = `Vertex shader compilation failed: ${gl.getShaderInfoLog(\n        vertexShader,\n      )}`;\n      throw new Error(message);\n    }\n    gl.deleteShader(vertexShader);\n\n    if (!gl.getProgramParameter(program, gl.LINK_STATUS)) {\n      const message = `GL program linking failed: ${gl.getProgramInfoLog(\n        program,\n      )}`;\n      throw new Error(message);\n    }\n\n    return program;\n  }\n\n  /**\n   * Will get the location from the shader or the cache\n   * @param {string} name Uniform name\n   * @return {WebGLUniformLocation} uniformLocation\n   */\n  getUniformLocation(name) {\n    const programUid = getUid(this.currentProgram_);\n    if (this.uniformLocationsByProgram_[programUid] === undefined) {\n      this.uniformLocationsByProgram_[programUid] = {};\n    }\n    if (this.uniformLocationsByProgram_[programUid][name] === undefined) {\n      this.uniformLocationsByProgram_[programUid][name] =\n        this.gl_.getUniformLocation(this.currentProgram_, name);\n    }\n    return this.uniformLocationsByProgram_[programUid][name];\n  }\n\n  /**\n   * Will get the location from the shader or the cache\n   * @param {string} name Attribute name\n   * @return {number} attribLocation\n   */\n  getAttributeLocation(name) {\n    const programUid = getUid(this.currentProgram_);\n    if (this.attribLocationsByProgram_[programUid] === undefined) {\n      this.attribLocationsByProgram_[programUid] = {};\n    }\n    if (this.attribLocationsByProgram_[programUid][name] === undefined) {\n      this.attribLocationsByProgram_[programUid][name] =\n        this.gl_.getAttribLocation(this.currentProgram_, name);\n    }\n    return this.attribLocationsByProgram_[programUid][name];\n  }\n\n  /**\n   * Sets the given transform to apply the rotation/translation/scaling of the given frame state.\n   * The resulting transform can be used to convert world space coordinates to view coordinates in the [-1, 1] range.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../transform\").Transform} transform Transform to update.\n   * @return {import(\"../transform\").Transform} The updated transform object.\n   */\n  makeProjectionTransform(frameState, transform) {\n    const size = frameState.size;\n    const rotation = frameState.viewState.rotation;\n    const resolution = frameState.viewState.resolution;\n    const center = frameState.viewState.center;\n    composeTransform(\n      transform,\n      0,\n      0,\n      2 / (resolution * size[0]),\n      2 / (resolution * size[1]),\n      -rotation,\n      -center[0],\n      -center[1],\n    );\n    return transform;\n  }\n\n  /**\n   * Give a value for a standard float uniform\n   * @param {string} uniform Uniform name\n   * @param {number} value Value\n   */\n  setUniformFloatValue(uniform, value) {\n    this.gl_.uniform1f(this.getUniformLocation(uniform), value);\n  }\n\n  /**\n   * Give a value for a vec2 uniform\n   * @param {string} uniform Uniform name\n   * @param {Array<number>} value Array of length 4.\n   */\n  setUniformFloatVec2(uniform, value) {\n    this.gl_.uniform2fv(this.getUniformLocation(uniform), value);\n  }\n\n  /**\n   * Give a value for a vec4 uniform\n   * @param {string} uniform Uniform name\n   * @param {Array<number>} value Array of length 4.\n   */\n  setUniformFloatVec4(uniform, value) {\n    this.gl_.uniform4fv(this.getUniformLocation(uniform), value);\n  }\n\n  /**\n   * Give a value for a standard matrix4 uniform\n   * @param {string} uniform Uniform name\n   * @param {Array<number>} value Matrix value\n   */\n  setUniformMatrixValue(uniform, value) {\n    this.gl_.uniformMatrix4fv(this.getUniformLocation(uniform), false, value);\n  }\n\n  /**\n   * Will set the currently bound buffer to an attribute of the shader program. Used by `#enableAttributes`\n   * internally.\n   * @param {string} attribName Attribute name\n   * @param {number} size Number of components per attributes\n   * @param {number} type UNSIGNED_INT, UNSIGNED_BYTE, UNSIGNED_SHORT or FLOAT\n   * @param {number} stride Stride in bytes (0 means attribs are packed)\n   * @param {number} offset Offset in bytes\n   * @private\n   */\n  enableAttributeArray_(attribName, size, type, stride, offset) {\n    const location = this.getAttributeLocation(attribName);\n    // the attribute has not been found in the shaders or is not used; do not enable it\n    if (location < 0) {\n      return;\n    }\n    this.gl_.enableVertexAttribArray(location);\n    this.gl_.vertexAttribPointer(location, size, type, false, stride, offset);\n  }\n\n  /**\n   * Will enable the following attributes to be read from the currently bound buffer,\n   * i.e. tell the GPU where to read the different attributes in the buffer. An error in the\n   * size/type/order of attributes will most likely break the rendering and throw a WebGL exception.\n   * @param {Array<AttributeDescription>} attributes Ordered list of attributes to read from the buffer\n   */\n  enableAttributes(attributes) {\n    const stride = computeAttributesStride(attributes);\n    let offset = 0;\n    for (let i = 0; i < attributes.length; i++) {\n      const attr = attributes[i];\n      this.enableAttributeArray_(\n        attr.name,\n        attr.size,\n        attr.type || FLOAT,\n        stride,\n        offset,\n      );\n      offset += attr.size * getByteSizeFromType(attr.type);\n    }\n  }\n\n  /**\n   * WebGL context was lost\n   * @param {WebGLContextEvent} event The context loss event.\n   * @private\n   */\n  handleWebGLContextLost(event) {\n    clear(this.bufferCache_);\n    this.currentProgram_ = null;\n\n    event.preventDefault();\n  }\n\n  /**\n   * WebGL context was restored\n   * @private\n   */\n  handleWebGLContextRestored() {\n    this.needsToBeRecreated_ = true;\n  }\n\n  /**\n   * Returns whether this helper needs to be recreated, as the context was lost and then restored.\n   * @return {boolean} Whether this helper needs to be recreated.\n   */\n  needsToBeRecreated() {\n    return this.needsToBeRecreated_;\n  }\n\n  /**\n   * Will create or reuse a given webgl texture and apply the given size. If no image data\n   * specified, the texture will be empty, otherwise image data will be used and the `size`\n   * parameter will be ignored.\n   * Note: wrap parameters are set to clamp to edge, min filter is set to linear.\n   * @param {Array<number>} size Expected size of the texture\n   * @param {ImageData|HTMLImageElement|HTMLCanvasElement} [data] Image data/object to bind to the texture\n   * @param {WebGLTexture} [texture] Existing texture to reuse\n   * @return {WebGLTexture} The generated texture\n   */\n  createTexture(size, data, texture) {\n    const gl = this.gl_;\n    texture = texture || gl.createTexture();\n\n    // set params & size\n    const level = 0;\n    const internalFormat = gl.RGBA;\n    const border = 0;\n    const format = gl.RGBA;\n    const type = gl.UNSIGNED_BYTE;\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    if (data) {\n      gl.texImage2D(gl.TEXTURE_2D, level, internalFormat, format, type, data);\n    } else {\n      gl.texImage2D(\n        gl.TEXTURE_2D,\n        level,\n        internalFormat,\n        size[0],\n        size[1],\n        border,\n        format,\n        type,\n        null,\n      );\n    }\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\n    return texture;\n  }\n}\n\n/**\n * Compute a stride in bytes based on a list of attributes\n * @param {Array<AttributeDescription>} attributes Ordered list of attributes\n * @return {number} Stride, ie amount of values for each vertex in the vertex buffer\n */\nexport function computeAttributesStride(attributes) {\n  let stride = 0;\n  for (let i = 0; i < attributes.length; i++) {\n    const attr = attributes[i];\n    stride += attr.size * getByteSizeFromType(attr.type);\n  }\n  return stride;\n}\n\n/**\n * Computes the size in byte of an attribute type.\n * @param {AttributeType} type Attribute type\n * @return {number} The size in bytes\n */\nfunction getByteSizeFromType(type) {\n  switch (type) {\n    case AttributeType.UNSIGNED_BYTE:\n      return Uint8Array.BYTES_PER_ELEMENT;\n    case AttributeType.UNSIGNED_SHORT:\n      return Uint16Array.BYTES_PER_ELEMENT;\n    case AttributeType.UNSIGNED_INT:\n      return Uint32Array.BYTES_PER_ELEMENT;\n    case AttributeType.FLOAT:\n    default:\n      return Float32Array.BYTES_PER_ELEMENT;\n  }\n}\n\nexport default WebGLHelper;\n","/**\n * @module ol/renderer/webgl/Layer\n */\nimport LayerProperty from '../../layer/Property.js';\nimport LayerRenderer from '../Layer.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport WebGLHelper from '../../webgl/Helper.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\n\n/**\n * @typedef {Object} PostProcessesOptions\n * @property {number} [scaleRatio] Scale ratio; if < 1, the post process will render to a texture smaller than\n * the main canvas that will then be sampled up (useful for saving resource on blur steps).\n * @property {string} [vertexShader] Vertex shader source\n * @property {string} [fragmentShader] Fragment shader source\n * @property {Object<string,import(\"../../webgl/Helper\").UniformValue>} [uniforms] Uniform definitions for the post process step\n */\n\n/**\n * @typedef {Object} Options\n * @property {Object<string,import(\"../../webgl/Helper\").UniformValue>} [uniforms] Uniform definitions for the post process steps\n * @property {Array<PostProcessesOptions>} [postProcesses] Post-processes definitions\n */\n\n/**\n * @classdesc\n * Base WebGL renderer class.\n * Holds all logic related to data manipulation & some common rendering logic\n * @template {import(\"../../layer/Layer.js\").default} LayerType\n * @extends {LayerRenderer<LayerType>}\n */\nclass WebGLLayerRenderer extends LayerRenderer {\n  /**\n   * @param {LayerType} layer Layer.\n   * @param {Options} [options] Options.\n   */\n  constructor(layer, options) {\n    super(layer);\n\n    options = options || {};\n\n    /**\n     * The transform for viewport CSS pixels to rendered pixels.  This transform is only\n     * set before dispatching rendering events.\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.inversePixelTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.pixelContext_ = null;\n\n    /**\n     * @private\n     */\n    this.postProcesses_ = options.postProcesses;\n\n    /**\n     * @private\n     */\n    this.uniforms_ = options.uniforms;\n\n    /**\n     * @type {WebGLHelper}\n     * @protected\n     */\n    this.helper;\n\n    layer.addChangeListener(LayerProperty.MAP, this.removeHelper.bind(this));\n\n    this.dispatchPreComposeEvent = this.dispatchPreComposeEvent.bind(this);\n    this.dispatchPostComposeEvent = this.dispatchPostComposeEvent.bind(this);\n  }\n\n  /**\n   * @param {WebGLRenderingContext} context The WebGL rendering context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  dispatchPreComposeEvent(context, frameState) {\n    const layer = this.getLayer();\n    if (layer.hasListener(RenderEventType.PRECOMPOSE)) {\n      const event = new RenderEvent(\n        RenderEventType.PRECOMPOSE,\n        undefined,\n        frameState,\n        context,\n      );\n      layer.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * @param {WebGLRenderingContext} context The WebGL rendering context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  dispatchPostComposeEvent(context, frameState) {\n    const layer = this.getLayer();\n    if (layer.hasListener(RenderEventType.POSTCOMPOSE)) {\n      const event = new RenderEvent(\n        RenderEventType.POSTCOMPOSE,\n        undefined,\n        frameState,\n        context,\n      );\n      layer.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * Reset options (only handles uniforms).\n   * @param {Options} options Options.\n   */\n  reset(options) {\n    this.uniforms_ = options.uniforms;\n    if (this.helper) {\n      this.helper.setUniforms(this.uniforms_);\n    }\n  }\n\n  /**\n   * @protected\n   */\n  removeHelper() {\n    if (this.helper) {\n      this.helper.dispose();\n      delete this.helper;\n    }\n  }\n\n  /**\n   * Determine whether renderFrame should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    if (this.getLayer().getRenderSource()) {\n      let incrementGroup = true;\n      let groupNumber = -1;\n      let className;\n      for (let i = 0, ii = frameState.layerStatesArray.length; i < ii; i++) {\n        const layer = frameState.layerStatesArray[i].layer;\n        const renderer = layer.getRenderer();\n        if (!(renderer instanceof WebGLLayerRenderer)) {\n          incrementGroup = true;\n          continue;\n        }\n        const layerClassName = layer.getClassName();\n        if (incrementGroup || layerClassName !== className) {\n          groupNumber += 1;\n          incrementGroup = false;\n        }\n        className = layerClassName;\n        if (renderer === this) {\n          break;\n        }\n      }\n\n      const canvasCacheKey =\n        'map/' + frameState.mapId + '/group/' + groupNumber;\n\n      if (\n        !this.helper ||\n        !this.helper.canvasCacheKeyMatches(canvasCacheKey) ||\n        this.helper.needsToBeRecreated()\n      ) {\n        this.removeHelper();\n\n        this.helper = new WebGLHelper({\n          postProcesses: this.postProcesses_,\n          uniforms: this.uniforms_,\n          canvasCacheKey: canvasCacheKey,\n        });\n\n        if (className) {\n          this.helper.getCanvas().className = className;\n        }\n\n        this.afterHelperCreated();\n      }\n    }\n\n    return this.prepareFrameInternal(frameState);\n  }\n\n  /**\n   * @protected\n   */\n  afterHelperCreated() {}\n\n  /**\n   * Determine whether renderFrame should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   * @protected\n   */\n  prepareFrameInternal(frameState) {\n    return true;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.removeHelper();\n    super.disposeInternal();\n  }\n\n  /**\n   * @param {import(\"../../render/EventType.js\").default} type Event type.\n   * @param {WebGLRenderingContext} context The rendering context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @private\n   */\n  dispatchRenderEvent_(type, context, frameState) {\n    const layer = this.getLayer();\n    if (layer.hasListener(type)) {\n      composeTransform(\n        this.inversePixelTransform_,\n        0,\n        0,\n        frameState.pixelRatio,\n        -frameState.pixelRatio,\n        0,\n        0,\n        -frameState.size[1],\n      );\n\n      const event = new RenderEvent(\n        type,\n        this.inversePixelTransform_,\n        frameState,\n        context,\n      );\n      layer.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * @param {WebGLRenderingContext} context The rendering context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  preRender(context, frameState) {\n    this.dispatchRenderEvent_(RenderEventType.PRERENDER, context, frameState);\n  }\n\n  /**\n   * @param {WebGLRenderingContext} context The rendering context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  postRender(context, frameState) {\n    this.dispatchRenderEvent_(RenderEventType.POSTRENDER, context, frameState);\n  }\n}\n\nexport default WebGLLayerRenderer;\n","/**\n * A wrapper class to simplify rendering to a texture instead of the final canvas\n * @module ol/webgl/RenderTarget\n */\nimport {equals} from '../array.js';\n\n// for pixel color reading\nconst tmpArray4 = new Uint8Array(4);\n\n/**\n * @classdesc\n * This class is a wrapper around the association of both a `WebGLTexture` and a `WebGLFramebuffer` instances,\n * simplifying initialization and binding for rendering.\n */\nclass WebGLRenderTarget {\n  /**\n   * @param {import(\"./Helper.js\").default} helper WebGL helper; mandatory.\n   * @param {Array<number>} [size] Expected size of the render target texture; note: this can be changed later on.\n   */\n  constructor(helper, size) {\n    /**\n     * @private\n     * @type {import(\"./Helper.js\").default}\n     */\n    this.helper_ = helper;\n    const gl = helper.getGL();\n\n    /**\n     * @private\n     * @type {WebGLTexture}\n     */\n    this.texture_ = gl.createTexture();\n\n    /**\n     * @private\n     * @type {WebGLFramebuffer}\n     */\n    this.framebuffer_ = gl.createFramebuffer();\n\n    /**\n     * @private\n     * @type {WebGLRenderbuffer}\n     */\n    this.depthbuffer_ = gl.createRenderbuffer();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.size_ = size || [1, 1];\n\n    /**\n     * @type {Uint8Array}\n     * @private\n     */\n    this.data_ = new Uint8Array(0);\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.dataCacheDirty_ = true;\n\n    this.updateSize_();\n  }\n\n  /**\n   * Changes the size of the render target texture. Note: will do nothing if the size\n   * is already the same.\n   * @param {Array<number>} size Expected size of the render target texture\n   */\n  setSize(size) {\n    if (equals(size, this.size_)) {\n      return;\n    }\n    this.size_[0] = size[0];\n    this.size_[1] = size[1];\n    this.updateSize_();\n  }\n\n  /**\n   * Returns the size of the render target texture\n   * @return {Array<number>} Size of the render target texture\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * This will cause following calls to `#readAll` or `#readPixel` to download the content of the\n   * render target into memory, which is an expensive operation.\n   * This content will be kept in cache but should be cleared after each new render.\n   */\n  clearCachedData() {\n    this.dataCacheDirty_ = true;\n  }\n\n  /**\n   * Returns the full content of the frame buffer as a series of r, g, b, a components\n   * in the 0-255 range (unsigned byte).\n   * @return {Uint8Array} Integer array of color values\n   */\n  readAll() {\n    if (this.dataCacheDirty_) {\n      const size = this.size_;\n      const gl = this.helper_.getGL();\n\n      gl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer_);\n      gl.readPixels(\n        0,\n        0,\n        size[0],\n        size[1],\n        gl.RGBA,\n        gl.UNSIGNED_BYTE,\n        this.data_,\n      );\n      this.dataCacheDirty_ = false;\n    }\n    return this.data_;\n  }\n\n  /**\n   * Reads one pixel of the frame buffer as an array of r, g, b, a components\n   * in the 0-255 range (unsigned byte).\n   * If x and/or y are outside of existing data, an array filled with 0 is returned.\n   * @param {number} x Pixel coordinate\n   * @param {number} y Pixel coordinate\n   * @return {Uint8Array} Integer array with one color value (4 components)\n   */\n  readPixel(x, y) {\n    if (x < 0 || y < 0 || x > this.size_[0] || y >= this.size_[1]) {\n      tmpArray4[0] = 0;\n      tmpArray4[1] = 0;\n      tmpArray4[2] = 0;\n      tmpArray4[3] = 0;\n      return tmpArray4;\n    }\n\n    this.readAll();\n    const index =\n      Math.floor(x) + (this.size_[1] - Math.floor(y) - 1) * this.size_[0];\n    tmpArray4[0] = this.data_[index * 4];\n    tmpArray4[1] = this.data_[index * 4 + 1];\n    tmpArray4[2] = this.data_[index * 4 + 2];\n    tmpArray4[3] = this.data_[index * 4 + 3];\n    return tmpArray4;\n  }\n\n  /**\n   * @return {WebGLTexture} Texture to render to\n   */\n  getTexture() {\n    return this.texture_;\n  }\n\n  /**\n   * @return {WebGLFramebuffer} Frame buffer of the render target\n   */\n  getFramebuffer() {\n    return this.framebuffer_;\n  }\n\n  /**\n   * @return {WebGLRenderbuffer} Depth buffer of the render target\n   */\n  getDepthbuffer() {\n    return this.depthbuffer_;\n  }\n\n  /**\n   * @private\n   */\n  updateSize_() {\n    const size = this.size_;\n    const gl = this.helper_.getGL();\n\n    this.texture_ = this.helper_.createTexture(size, null, this.texture_);\n\n    gl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer_);\n    gl.viewport(0, 0, size[0], size[1]);\n    gl.framebufferTexture2D(\n      gl.FRAMEBUFFER,\n      gl.COLOR_ATTACHMENT0,\n      gl.TEXTURE_2D,\n      this.texture_,\n      0,\n    );\n\n    gl.bindRenderbuffer(gl.RENDERBUFFER, this.depthbuffer_);\n    gl.renderbufferStorage(\n      gl.RENDERBUFFER,\n      gl.DEPTH_COMPONENT16,\n      size[0],\n      size[1],\n    );\n    gl.framebufferRenderbuffer(\n      gl.FRAMEBUFFER,\n      gl.DEPTH_ATTACHMENT,\n      gl.RENDERBUFFER,\n      this.depthbuffer_,\n    );\n\n    this.data_ = new Uint8Array(size[0] * size[1] * 4);\n  }\n}\n\nexport default WebGLRenderTarget;\n","/**\n * @module ol/render/webgl/constants\n */\n\n/**\n * @enum {string}\n */\nexport const WebGLWorkerMessageType = {\n  GENERATE_POLYGON_BUFFERS: 'GENERATE_POLYGON_BUFFERS',\n  GENERATE_POINT_BUFFERS: 'GENERATE_POINT_BUFFERS',\n  GENERATE_LINE_STRING_BUFFERS: 'GENERATE_LINE_STRING_BUFFERS',\n};\n\n/**\n * @typedef {Object} WebGLWorkerGenerateBuffersMessage\n * This message will trigger the generation of a vertex and an index buffer based on the given render instructions.\n * When the buffers are generated, the worked will send a message of the same type to the main thread, with\n * the generated buffers in it.\n * Note that any addition properties present in the message *will* be sent back to the main thread.\n * @property {number} id Message id; will be used both in request and response as a means of identification\n * @property {WebGLWorkerMessageType} type Message type\n * @property {ArrayBuffer} renderInstructions render instructions raw binary buffer.\n * @property {number} [customAttributesSize] Amount of hit detection + custom attributes count in the render instructions.\n * @property {ArrayBuffer} [vertexBuffer] Vertices array raw binary buffer (sent by the worker).\n * @property {ArrayBuffer} [indexBuffer] Indices array raw binary buffer (sent by the worker).\n * @property {import(\"../../transform\").Transform} [renderInstructionsTransform] Transformation matrix used to project the instructions coordinates\n */\n","'use strict';\n\nmodule.exports = earcut;\nmodule.exports.default = earcut;\n\nfunction earcut(data, holeIndices, dim) {\n\n    dim = dim || 2;\n\n    var hasHoles = holeIndices && holeIndices.length,\n        outerLen = hasHoles ? holeIndices[0] * dim : data.length,\n        outerNode = linkedList(data, 0, outerLen, dim, true),\n        triangles = [];\n\n    if (!outerNode || outerNode.next === outerNode.prev) return triangles;\n\n    var minX, minY, maxX, maxY, x, y, invSize;\n\n    if (hasHoles) outerNode = eliminateHoles(data, holeIndices, outerNode, dim);\n\n    // if the shape is not too simple, we'll use z-order curve hash later; calculate polygon bbox\n    if (data.length > 80 * dim) {\n        minX = maxX = data[0];\n        minY = maxY = data[1];\n\n        for (var i = dim; i < outerLen; i += dim) {\n            x = data[i];\n            y = data[i + 1];\n            if (x < minX) minX = x;\n            if (y < minY) minY = y;\n            if (x > maxX) maxX = x;\n            if (y > maxY) maxY = y;\n        }\n\n        // minX, minY and invSize are later used to transform coords into integers for z-order calculation\n        invSize = Math.max(maxX - minX, maxY - minY);\n        invSize = invSize !== 0 ? 32767 / invSize : 0;\n    }\n\n    earcutLinked(outerNode, triangles, dim, minX, minY, invSize, 0);\n\n    return triangles;\n}\n\n// create a circular doubly linked list from polygon points in the specified winding order\nfunction linkedList(data, start, end, dim, clockwise) {\n    var i, last;\n\n    if (clockwise === (signedArea(data, start, end, dim) > 0)) {\n        for (i = start; i < end; i += dim) last = insertNode(i, data[i], data[i + 1], last);\n    } else {\n        for (i = end - dim; i >= start; i -= dim) last = insertNode(i, data[i], data[i + 1], last);\n    }\n\n    if (last && equals(last, last.next)) {\n        removeNode(last);\n        last = last.next;\n    }\n\n    return last;\n}\n\n// eliminate colinear or duplicate points\nfunction filterPoints(start, end) {\n    if (!start) return start;\n    if (!end) end = start;\n\n    var p = start,\n        again;\n    do {\n        again = false;\n\n        if (!p.steiner && (equals(p, p.next) || area(p.prev, p, p.next) === 0)) {\n            removeNode(p);\n            p = end = p.prev;\n            if (p === p.next) break;\n            again = true;\n\n        } else {\n            p = p.next;\n        }\n    } while (again || p !== end);\n\n    return end;\n}\n\n// main ear slicing loop which triangulates a polygon (given as a linked list)\nfunction earcutLinked(ear, triangles, dim, minX, minY, invSize, pass) {\n    if (!ear) return;\n\n    // interlink polygon nodes in z-order\n    if (!pass && invSize) indexCurve(ear, minX, minY, invSize);\n\n    var stop = ear,\n        prev, next;\n\n    // iterate through ears, slicing them one by one\n    while (ear.prev !== ear.next) {\n        prev = ear.prev;\n        next = ear.next;\n\n        if (invSize ? isEarHashed(ear, minX, minY, invSize) : isEar(ear)) {\n            // cut off the triangle\n            triangles.push(prev.i / dim | 0);\n            triangles.push(ear.i / dim | 0);\n            triangles.push(next.i / dim | 0);\n\n            removeNode(ear);\n\n            // skipping the next vertex leads to less sliver triangles\n            ear = next.next;\n            stop = next.next;\n\n            continue;\n        }\n\n        ear = next;\n\n        // if we looped through the whole remaining polygon and can't find any more ears\n        if (ear === stop) {\n            // try filtering points and slicing again\n            if (!pass) {\n                earcutLinked(filterPoints(ear), triangles, dim, minX, minY, invSize, 1);\n\n            // if this didn't work, try curing all small self-intersections locally\n            } else if (pass === 1) {\n                ear = cureLocalIntersections(filterPoints(ear), triangles, dim);\n                earcutLinked(ear, triangles, dim, minX, minY, invSize, 2);\n\n            // as a last resort, try splitting the remaining polygon into two\n            } else if (pass === 2) {\n                splitEarcut(ear, triangles, dim, minX, minY, invSize);\n            }\n\n            break;\n        }\n    }\n}\n\n// check whether a polygon node forms a valid ear with adjacent nodes\nfunction isEar(ear) {\n    var a = ear.prev,\n        b = ear,\n        c = ear.next;\n\n    if (area(a, b, c) >= 0) return false; // reflex, can't be an ear\n\n    // now make sure we don't have other points inside the potential ear\n    var ax = a.x, bx = b.x, cx = c.x, ay = a.y, by = b.y, cy = c.y;\n\n    // triangle bbox; min & max are calculated like this for speed\n    var x0 = ax < bx ? (ax < cx ? ax : cx) : (bx < cx ? bx : cx),\n        y0 = ay < by ? (ay < cy ? ay : cy) : (by < cy ? by : cy),\n        x1 = ax > bx ? (ax > cx ? ax : cx) : (bx > cx ? bx : cx),\n        y1 = ay > by ? (ay > cy ? ay : cy) : (by > cy ? by : cy);\n\n    var p = c.next;\n    while (p !== a) {\n        if (p.x >= x0 && p.x <= x1 && p.y >= y0 && p.y <= y1 &&\n            pointInTriangle(ax, ay, bx, by, cx, cy, p.x, p.y) &&\n            area(p.prev, p, p.next) >= 0) return false;\n        p = p.next;\n    }\n\n    return true;\n}\n\nfunction isEarHashed(ear, minX, minY, invSize) {\n    var a = ear.prev,\n        b = ear,\n        c = ear.next;\n\n    if (area(a, b, c) >= 0) return false; // reflex, can't be an ear\n\n    var ax = a.x, bx = b.x, cx = c.x, ay = a.y, by = b.y, cy = c.y;\n\n    // triangle bbox; min & max are calculated like this for speed\n    var x0 = ax < bx ? (ax < cx ? ax : cx) : (bx < cx ? bx : cx),\n        y0 = ay < by ? (ay < cy ? ay : cy) : (by < cy ? by : cy),\n        x1 = ax > bx ? (ax > cx ? ax : cx) : (bx > cx ? bx : cx),\n        y1 = ay > by ? (ay > cy ? ay : cy) : (by > cy ? by : cy);\n\n    // z-order range for the current triangle bbox;\n    var minZ = zOrder(x0, y0, minX, minY, invSize),\n        maxZ = zOrder(x1, y1, minX, minY, invSize);\n\n    var p = ear.prevZ,\n        n = ear.nextZ;\n\n    // look for points inside the triangle in both directions\n    while (p && p.z >= minZ && n && n.z <= maxZ) {\n        if (p.x >= x0 && p.x <= x1 && p.y >= y0 && p.y <= y1 && p !== a && p !== c &&\n            pointInTriangle(ax, ay, bx, by, cx, cy, p.x, p.y) && area(p.prev, p, p.next) >= 0) return false;\n        p = p.prevZ;\n\n        if (n.x >= x0 && n.x <= x1 && n.y >= y0 && n.y <= y1 && n !== a && n !== c &&\n            pointInTriangle(ax, ay, bx, by, cx, cy, n.x, n.y) && area(n.prev, n, n.next) >= 0) return false;\n        n = n.nextZ;\n    }\n\n    // look for remaining points in decreasing z-order\n    while (p && p.z >= minZ) {\n        if (p.x >= x0 && p.x <= x1 && p.y >= y0 && p.y <= y1 && p !== a && p !== c &&\n            pointInTriangle(ax, ay, bx, by, cx, cy, p.x, p.y) && area(p.prev, p, p.next) >= 0) return false;\n        p = p.prevZ;\n    }\n\n    // look for remaining points in increasing z-order\n    while (n && n.z <= maxZ) {\n        if (n.x >= x0 && n.x <= x1 && n.y >= y0 && n.y <= y1 && n !== a && n !== c &&\n            pointInTriangle(ax, ay, bx, by, cx, cy, n.x, n.y) && area(n.prev, n, n.next) >= 0) return false;\n        n = n.nextZ;\n    }\n\n    return true;\n}\n\n// go through all polygon nodes and cure small local self-intersections\nfunction cureLocalIntersections(start, triangles, dim) {\n    var p = start;\n    do {\n        var a = p.prev,\n            b = p.next.next;\n\n        if (!equals(a, b) && intersects(a, p, p.next, b) && locallyInside(a, b) && locallyInside(b, a)) {\n\n            triangles.push(a.i / dim | 0);\n            triangles.push(p.i / dim | 0);\n            triangles.push(b.i / dim | 0);\n\n            // remove two nodes involved\n            removeNode(p);\n            removeNode(p.next);\n\n            p = start = b;\n        }\n        p = p.next;\n    } while (p !== start);\n\n    return filterPoints(p);\n}\n\n// try splitting polygon into two and triangulate them independently\nfunction splitEarcut(start, triangles, dim, minX, minY, invSize) {\n    // look for a valid diagonal that divides the polygon into two\n    var a = start;\n    do {\n        var b = a.next.next;\n        while (b !== a.prev) {\n            if (a.i !== b.i && isValidDiagonal(a, b)) {\n                // split the polygon in two by the diagonal\n                var c = splitPolygon(a, b);\n\n                // filter colinear points around the cuts\n                a = filterPoints(a, a.next);\n                c = filterPoints(c, c.next);\n\n                // run earcut on each half\n                earcutLinked(a, triangles, dim, minX, minY, invSize, 0);\n                earcutLinked(c, triangles, dim, minX, minY, invSize, 0);\n                return;\n            }\n            b = b.next;\n        }\n        a = a.next;\n    } while (a !== start);\n}\n\n// link every hole into the outer loop, producing a single-ring polygon without holes\nfunction eliminateHoles(data, holeIndices, outerNode, dim) {\n    var queue = [],\n        i, len, start, end, list;\n\n    for (i = 0, len = holeIndices.length; i < len; i++) {\n        start = holeIndices[i] * dim;\n        end = i < len - 1 ? holeIndices[i + 1] * dim : data.length;\n        list = linkedList(data, start, end, dim, false);\n        if (list === list.next) list.steiner = true;\n        queue.push(getLeftmost(list));\n    }\n\n    queue.sort(compareX);\n\n    // process holes from left to right\n    for (i = 0; i < queue.length; i++) {\n        outerNode = eliminateHole(queue[i], outerNode);\n    }\n\n    return outerNode;\n}\n\nfunction compareX(a, b) {\n    return a.x - b.x;\n}\n\n// find a bridge between vertices that connects hole with an outer ring and and link it\nfunction eliminateHole(hole, outerNode) {\n    var bridge = findHoleBridge(hole, outerNode);\n    if (!bridge) {\n        return outerNode;\n    }\n\n    var bridgeReverse = splitPolygon(bridge, hole);\n\n    // filter collinear points around the cuts\n    filterPoints(bridgeReverse, bridgeReverse.next);\n    return filterPoints(bridge, bridge.next);\n}\n\n// David Eberly's algorithm for finding a bridge between hole and outer polygon\nfunction findHoleBridge(hole, outerNode) {\n    var p = outerNode,\n        hx = hole.x,\n        hy = hole.y,\n        qx = -Infinity,\n        m;\n\n    // find a segment intersected by a ray from the hole's leftmost point to the left;\n    // segment's endpoint with lesser x will be potential connection point\n    do {\n        if (hy <= p.y && hy >= p.next.y && p.next.y !== p.y) {\n            var x = p.x + (hy - p.y) * (p.next.x - p.x) / (p.next.y - p.y);\n            if (x <= hx && x > qx) {\n                qx = x;\n                m = p.x < p.next.x ? p : p.next;\n                if (x === hx) return m; // hole touches outer segment; pick leftmost endpoint\n            }\n        }\n        p = p.next;\n    } while (p !== outerNode);\n\n    if (!m) return null;\n\n    // look for points inside the triangle of hole point, segment intersection and endpoint;\n    // if there are no points found, we have a valid connection;\n    // otherwise choose the point of the minimum angle with the ray as connection point\n\n    var stop = m,\n        mx = m.x,\n        my = m.y,\n        tanMin = Infinity,\n        tan;\n\n    p = m;\n\n    do {\n        if (hx >= p.x && p.x >= mx && hx !== p.x &&\n                pointInTriangle(hy < my ? hx : qx, hy, mx, my, hy < my ? qx : hx, hy, p.x, p.y)) {\n\n            tan = Math.abs(hy - p.y) / (hx - p.x); // tangential\n\n            if (locallyInside(p, hole) &&\n                (tan < tanMin || (tan === tanMin && (p.x > m.x || (p.x === m.x && sectorContainsSector(m, p)))))) {\n                m = p;\n                tanMin = tan;\n            }\n        }\n\n        p = p.next;\n    } while (p !== stop);\n\n    return m;\n}\n\n// whether sector in vertex m contains sector in vertex p in the same coordinates\nfunction sectorContainsSector(m, p) {\n    return area(m.prev, m, p.prev) < 0 && area(p.next, m, m.next) < 0;\n}\n\n// interlink polygon nodes in z-order\nfunction indexCurve(start, minX, minY, invSize) {\n    var p = start;\n    do {\n        if (p.z === 0) p.z = zOrder(p.x, p.y, minX, minY, invSize);\n        p.prevZ = p.prev;\n        p.nextZ = p.next;\n        p = p.next;\n    } while (p !== start);\n\n    p.prevZ.nextZ = null;\n    p.prevZ = null;\n\n    sortLinked(p);\n}\n\n// Simon Tatham's linked list merge sort algorithm\n// http://www.chiark.greenend.org.uk/~sgtatham/algorithms/listsort.html\nfunction sortLinked(list) {\n    var i, p, q, e, tail, numMerges, pSize, qSize,\n        inSize = 1;\n\n    do {\n        p = list;\n        list = null;\n        tail = null;\n        numMerges = 0;\n\n        while (p) {\n            numMerges++;\n            q = p;\n            pSize = 0;\n            for (i = 0; i < inSize; i++) {\n                pSize++;\n                q = q.nextZ;\n                if (!q) break;\n            }\n            qSize = inSize;\n\n            while (pSize > 0 || (qSize > 0 && q)) {\n\n                if (pSize !== 0 && (qSize === 0 || !q || p.z <= q.z)) {\n                    e = p;\n                    p = p.nextZ;\n                    pSize--;\n                } else {\n                    e = q;\n                    q = q.nextZ;\n                    qSize--;\n                }\n\n                if (tail) tail.nextZ = e;\n                else list = e;\n\n                e.prevZ = tail;\n                tail = e;\n            }\n\n            p = q;\n        }\n\n        tail.nextZ = null;\n        inSize *= 2;\n\n    } while (numMerges > 1);\n\n    return list;\n}\n\n// z-order of a point given coords and inverse of the longer side of data bbox\nfunction zOrder(x, y, minX, minY, invSize) {\n    // coords are transformed into non-negative 15-bit integer range\n    x = (x - minX) * invSize | 0;\n    y = (y - minY) * invSize | 0;\n\n    x = (x | (x << 8)) & 0x00FF00FF;\n    x = (x | (x << 4)) & 0x0F0F0F0F;\n    x = (x | (x << 2)) & 0x33333333;\n    x = (x | (x << 1)) & 0x55555555;\n\n    y = (y | (y << 8)) & 0x00FF00FF;\n    y = (y | (y << 4)) & 0x0F0F0F0F;\n    y = (y | (y << 2)) & 0x33333333;\n    y = (y | (y << 1)) & 0x55555555;\n\n    return x | (y << 1);\n}\n\n// find the leftmost node of a polygon ring\nfunction getLeftmost(start) {\n    var p = start,\n        leftmost = start;\n    do {\n        if (p.x < leftmost.x || (p.x === leftmost.x && p.y < leftmost.y)) leftmost = p;\n        p = p.next;\n    } while (p !== start);\n\n    return leftmost;\n}\n\n// check if a point lies within a convex triangle\nfunction pointInTriangle(ax, ay, bx, by, cx, cy, px, py) {\n    return (cx - px) * (ay - py) >= (ax - px) * (cy - py) &&\n           (ax - px) * (by - py) >= (bx - px) * (ay - py) &&\n           (bx - px) * (cy - py) >= (cx - px) * (by - py);\n}\n\n// check if a diagonal between two polygon nodes is valid (lies in polygon interior)\nfunction isValidDiagonal(a, b) {\n    return a.next.i !== b.i && a.prev.i !== b.i && !intersectsPolygon(a, b) && // dones't intersect other edges\n           (locallyInside(a, b) && locallyInside(b, a) && middleInside(a, b) && // locally visible\n            (area(a.prev, a, b.prev) || area(a, b.prev, b)) || // does not create opposite-facing sectors\n            equals(a, b) && area(a.prev, a, a.next) > 0 && area(b.prev, b, b.next) > 0); // special zero-length case\n}\n\n// signed area of a triangle\nfunction area(p, q, r) {\n    return (q.y - p.y) * (r.x - q.x) - (q.x - p.x) * (r.y - q.y);\n}\n\n// check if two points are equal\nfunction equals(p1, p2) {\n    return p1.x === p2.x && p1.y === p2.y;\n}\n\n// check if two segments intersect\nfunction intersects(p1, q1, p2, q2) {\n    var o1 = sign(area(p1, q1, p2));\n    var o2 = sign(area(p1, q1, q2));\n    var o3 = sign(area(p2, q2, p1));\n    var o4 = sign(area(p2, q2, q1));\n\n    if (o1 !== o2 && o3 !== o4) return true; // general case\n\n    if (o1 === 0 && onSegment(p1, p2, q1)) return true; // p1, q1 and p2 are collinear and p2 lies on p1q1\n    if (o2 === 0 && onSegment(p1, q2, q1)) return true; // p1, q1 and q2 are collinear and q2 lies on p1q1\n    if (o3 === 0 && onSegment(p2, p1, q2)) return true; // p2, q2 and p1 are collinear and p1 lies on p2q2\n    if (o4 === 0 && onSegment(p2, q1, q2)) return true; // p2, q2 and q1 are collinear and q1 lies on p2q2\n\n    return false;\n}\n\n// for collinear points p, q, r, check if point q lies on segment pr\nfunction onSegment(p, q, r) {\n    return q.x <= Math.max(p.x, r.x) && q.x >= Math.min(p.x, r.x) && q.y <= Math.max(p.y, r.y) && q.y >= Math.min(p.y, r.y);\n}\n\nfunction sign(num) {\n    return num > 0 ? 1 : num < 0 ? -1 : 0;\n}\n\n// check if a polygon diagonal intersects any polygon segments\nfunction intersectsPolygon(a, b) {\n    var p = a;\n    do {\n        if (p.i !== a.i && p.next.i !== a.i && p.i !== b.i && p.next.i !== b.i &&\n                intersects(p, p.next, a, b)) return true;\n        p = p.next;\n    } while (p !== a);\n\n    return false;\n}\n\n// check if a polygon diagonal is locally inside the polygon\nfunction locallyInside(a, b) {\n    return area(a.prev, a, a.next) < 0 ?\n        area(a, b, a.next) >= 0 && area(a, a.prev, b) >= 0 :\n        area(a, b, a.prev) < 0 || area(a, a.next, b) < 0;\n}\n\n// check if the middle point of a polygon diagonal is inside the polygon\nfunction middleInside(a, b) {\n    var p = a,\n        inside = false,\n        px = (a.x + b.x) / 2,\n        py = (a.y + b.y) / 2;\n    do {\n        if (((p.y > py) !== (p.next.y > py)) && p.next.y !== p.y &&\n                (px < (p.next.x - p.x) * (py - p.y) / (p.next.y - p.y) + p.x))\n            inside = !inside;\n        p = p.next;\n    } while (p !== a);\n\n    return inside;\n}\n\n// link two polygon vertices with a bridge; if the vertices belong to the same ring, it splits polygon into two;\n// if one belongs to the outer ring and another to a hole, it merges it into a single ring\nfunction splitPolygon(a, b) {\n    var a2 = new Node(a.i, a.x, a.y),\n        b2 = new Node(b.i, b.x, b.y),\n        an = a.next,\n        bp = b.prev;\n\n    a.next = b;\n    b.prev = a;\n\n    a2.next = an;\n    an.prev = a2;\n\n    b2.next = a2;\n    a2.prev = b2;\n\n    bp.next = b2;\n    b2.prev = bp;\n\n    return b2;\n}\n\n// create a node and optionally link it with previous one (in a circular doubly linked list)\nfunction insertNode(i, x, y, last) {\n    var p = new Node(i, x, y);\n\n    if (!last) {\n        p.prev = p;\n        p.next = p;\n\n    } else {\n        p.next = last.next;\n        p.prev = last;\n        last.next.prev = p;\n        last.next = p;\n    }\n    return p;\n}\n\nfunction removeNode(p) {\n    p.next.prev = p.prev;\n    p.prev.next = p.next;\n\n    if (p.prevZ) p.prevZ.nextZ = p.nextZ;\n    if (p.nextZ) p.nextZ.prevZ = p.prevZ;\n}\n\nfunction Node(i, x, y) {\n    // vertex index in coordinates array\n    this.i = i;\n\n    // vertex coordinates\n    this.x = x;\n    this.y = y;\n\n    // previous and next vertex nodes in a polygon ring\n    this.prev = null;\n    this.next = null;\n\n    // z-order curve value\n    this.z = 0;\n\n    // previous and next nodes in z-order\n    this.prevZ = null;\n    this.nextZ = null;\n\n    // indicates whether this is a steiner point\n    this.steiner = false;\n}\n\n// return a percentage difference between the polygon area and its triangulation area;\n// used to verify correctness of triangulation\nearcut.deviation = function (data, holeIndices, dim, triangles) {\n    var hasHoles = holeIndices && holeIndices.length;\n    var outerLen = hasHoles ? holeIndices[0] * dim : data.length;\n\n    var polygonArea = Math.abs(signedArea(data, 0, outerLen, dim));\n    if (hasHoles) {\n        for (var i = 0, len = holeIndices.length; i < len; i++) {\n            var start = holeIndices[i] * dim;\n            var end = i < len - 1 ? holeIndices[i + 1] * dim : data.length;\n            polygonArea -= Math.abs(signedArea(data, start, end, dim));\n        }\n    }\n\n    var trianglesArea = 0;\n    for (i = 0; i < triangles.length; i += 3) {\n        var a = triangles[i] * dim;\n        var b = triangles[i + 1] * dim;\n        var c = triangles[i + 2] * dim;\n        trianglesArea += Math.abs(\n            (data[a] - data[c]) * (data[b + 1] - data[a + 1]) -\n            (data[a] - data[b]) * (data[c + 1] - data[a + 1]));\n    }\n\n    return polygonArea === 0 && trianglesArea === 0 ? 0 :\n        Math.abs((trianglesArea - polygonArea) / polygonArea);\n};\n\nfunction signedArea(data, start, end, dim) {\n    var sum = 0;\n    for (var i = start, j = end - dim; i < end; i += dim) {\n        sum += (data[j] - data[i]) * (data[i + 1] + data[j + 1]);\n        j = i;\n    }\n    return sum;\n}\n\n// turn a polygon in a multi-dimensional array form (e.g. as in GeoJSON) into a form Earcut accepts\nearcut.flatten = function (data) {\n    var dim = data[0][0].length,\n        result = {vertices: [], holes: [], dimensions: dim},\n        holeIndex = 0;\n\n    for (var i = 0; i < data.length; i++) {\n        for (var j = 0; j < data[i].length; j++) {\n            for (var d = 0; d < dim; d++) result.vertices.push(data[i][j][d]);\n        }\n        if (i > 0) {\n            holeIndex += data[i - 1].length;\n            result.holes.push(holeIndex);\n        }\n    }\n    return result;\n};\n","/**\n * @module ol/render/webgl/utils\n */\nimport earcut from 'earcut';\nimport {apply as applyTransform} from '../../transform.js';\nimport {clamp} from '../../math.js';\n\nexport const LINESTRING_ANGLE_COSINE_CUTOFF = 0.985;\n\n/** @type {Array<number>} */\nconst tmpArray_ = [];\n\n/**\n * An object holding positions both in an index and a vertex buffer.\n * @typedef {Object} BufferPositions\n * @property {number} vertexPosition Position in the vertex buffer\n * @property {number} indexPosition Position in the index buffer\n */\nconst bufferPositions_ = {vertexPosition: 0, indexPosition: 0};\n\n/**\n * @param {Float32Array} buffer Buffer\n * @param {number} pos Position\n * @param {number} x X\n * @param {number} y Y\n * @param {number} index Index\n */\nfunction writePointVertex(buffer, pos, x, y, index) {\n  buffer[pos + 0] = x;\n  buffer[pos + 1] = y;\n  buffer[pos + 2] = index;\n}\n\n/**\n * Pushes a quad (two triangles) based on a point geometry\n * @param {Float32Array} instructions Array of render instructions for points.\n * @param {number} elementIndex Index from which render instructions will be read.\n * @param {Float32Array} vertexBuffer Buffer in the form of a typed array.\n * @param {Uint32Array} indexBuffer Buffer in the form of a typed array.\n * @param {number} customAttributesSize Amount of custom attributes for each element.\n * @param {BufferPositions} [bufferPositions] Buffer write positions; if not specified, positions will be set at 0.\n * @return {BufferPositions} New buffer positions where to write next\n * @property {number} vertexPosition New position in the vertex buffer where future writes should start.\n * @property {number} indexPosition New position in the index buffer where future writes should start.\n * @private\n */\nexport function writePointFeatureToBuffers(\n  instructions,\n  elementIndex,\n  vertexBuffer,\n  indexBuffer,\n  customAttributesSize,\n  bufferPositions,\n) {\n  // This is for x, y and index\n  const baseVertexAttrsCount = 3;\n  const baseInstructionsCount = 2;\n  const stride = baseVertexAttrsCount + customAttributesSize;\n\n  const x = instructions[elementIndex + 0];\n  const y = instructions[elementIndex + 1];\n\n  // read custom numerical attributes on the feature\n  const customAttrs = tmpArray_;\n  customAttrs.length = customAttributesSize;\n  for (let i = 0; i < customAttrs.length; i++) {\n    customAttrs[i] = instructions[elementIndex + baseInstructionsCount + i];\n  }\n\n  let vPos = bufferPositions ? bufferPositions.vertexPosition : 0;\n  let iPos = bufferPositions ? bufferPositions.indexPosition : 0;\n  const baseIndex = vPos / stride;\n\n  // push vertices for each of the four quad corners (first standard then custom attributes)\n  writePointVertex(vertexBuffer, vPos, x, y, 0);\n  customAttrs.length &&\n    vertexBuffer.set(customAttrs, vPos + baseVertexAttrsCount);\n  vPos += stride;\n\n  writePointVertex(vertexBuffer, vPos, x, y, 1);\n  customAttrs.length &&\n    vertexBuffer.set(customAttrs, vPos + baseVertexAttrsCount);\n  vPos += stride;\n\n  writePointVertex(vertexBuffer, vPos, x, y, 2);\n  customAttrs.length &&\n    vertexBuffer.set(customAttrs, vPos + baseVertexAttrsCount);\n  vPos += stride;\n\n  writePointVertex(vertexBuffer, vPos, x, y, 3);\n  customAttrs.length &&\n    vertexBuffer.set(customAttrs, vPos + baseVertexAttrsCount);\n  vPos += stride;\n\n  indexBuffer[iPos++] = baseIndex;\n  indexBuffer[iPos++] = baseIndex + 1;\n  indexBuffer[iPos++] = baseIndex + 3;\n  indexBuffer[iPos++] = baseIndex + 1;\n  indexBuffer[iPos++] = baseIndex + 2;\n  indexBuffer[iPos++] = baseIndex + 3;\n\n  bufferPositions_.vertexPosition = vPos;\n  bufferPositions_.indexPosition = iPos;\n\n  return bufferPositions_;\n}\n\n/**\n * Pushes a single quad to form a line segment; also includes a computation for the join angles with previous and next\n * segment, in order to be able to offset the vertices correctly in the shader.\n * Join angles are between 0 and 2PI.\n * This also computes the length of the current segment and the sum of the join angle tangents in order\n * to store this information on each subsequent segment along the line. This is necessary to correctly render dashes\n * and symbols along the line.\n *\n *   pB (before)                          pA (after)\n *    X             negative             X\n *     \\             offset             /\n *      \\                              /\n *       \\   join              join   /\n *        \\ angle 0          angle 1 /\n *         \\←---                ←---/      positive\n *          \\   ←--          ←--   /        offset\n *           \\     ↑       ↓      /\n *            X────┴───────┴─────X\n *            p0                  p1\n *\n * @param {Float32Array} instructions Array of render instructions for lines.s\n * @param {number} segmentStartIndex Index of the segment start point from which render instructions will be read.\n * @param {number} segmentEndIndex Index of the segment end point from which render instructions will be read.\n * @param {number|null} beforeSegmentIndex Index of the point right before the segment (null if none, e.g this is a line start)\n * @param {number|null} afterSegmentIndex Index of the point right after the segment (null if none, e.g this is a line end)\n * @param {Array<number>} vertexArray Array containing vertices.\n * @param {Array<number>} indexArray Array containing indices.\n * @param {Array<number>} customAttributes Array of custom attributes value\n * @param {import('../../transform.js').Transform} toWorldTransform Transform matrix used to obtain world coordinates from instructions\n * @param {number} currentLength Cumulated length of segments processed so far\n * @param {number} currentAngleTangentSum Cumulated tangents of the join angles processed so far\n * @return {{length: number, angle: number}} Cumulated length with the newly processed segment (in world units), new sum of the join angle tangents\n * @private\n */\nexport function writeLineSegmentToBuffers(\n  instructions,\n  segmentStartIndex,\n  segmentEndIndex,\n  beforeSegmentIndex,\n  afterSegmentIndex,\n  vertexArray,\n  indexArray,\n  customAttributes,\n  toWorldTransform,\n  currentLength,\n  currentAngleTangentSum,\n) {\n  // compute the stride to determine how many vertices were already pushed\n  const baseVertexAttrsCount = 8; // base attributes: x0, y0, x1, y1, angle0, angle1, distance, params\n  const stride = baseVertexAttrsCount + customAttributes.length;\n  const baseIndex = vertexArray.length / stride;\n\n  // The segment is composed of two positions called P0[x0, y0] and P1[x1, y1]\n  // Depending on whether there are points before and after the segment, its final shape\n  // will be different\n  const p0 = [\n    instructions[segmentStartIndex + 0],\n    instructions[segmentStartIndex + 1],\n  ];\n  const p1 = [instructions[segmentEndIndex], instructions[segmentEndIndex + 1]];\n\n  // to compute join angles we need to reproject coordinates back in world units\n  const p0world = applyTransform(toWorldTransform, [...p0]);\n  const p1world = applyTransform(toWorldTransform, [...p1]);\n\n  /**\n   * Compute the angle between p0pA and p0pB\n   * @param {import(\"../../coordinate.js\").Coordinate} p0 Point 0\n   * @param {import(\"../../coordinate.js\").Coordinate} pA Point A\n   * @param {import(\"../../coordinate.js\").Coordinate} pB Point B\n   * @return {number} a value in [0, 2PI]\n   */\n  function angleBetween(p0, pA, pB) {\n    const lenA = Math.sqrt(\n      (pA[0] - p0[0]) * (pA[0] - p0[0]) + (pA[1] - p0[1]) * (pA[1] - p0[1]),\n    );\n    const tangentA = [(pA[0] - p0[0]) / lenA, (pA[1] - p0[1]) / lenA];\n    const orthoA = [-tangentA[1], tangentA[0]];\n    const lenB = Math.sqrt(\n      (pB[0] - p0[0]) * (pB[0] - p0[0]) + (pB[1] - p0[1]) * (pB[1] - p0[1]),\n    );\n    const tangentB = [(pB[0] - p0[0]) / lenB, (pB[1] - p0[1]) / lenB];\n\n    // this angle can be clockwise or anticlockwise; hence the computation afterwards\n    const angle =\n      lenA === 0 || lenB === 0\n        ? 0\n        : Math.acos(\n            clamp(tangentB[0] * tangentA[0] + tangentB[1] * tangentA[1], -1, 1),\n          );\n    const isClockwise = tangentB[0] * orthoA[0] + tangentB[1] * orthoA[1] > 0;\n    return !isClockwise ? Math.PI * 2 - angle : angle;\n  }\n\n  // a negative angle indicates a line cap\n  let angle0 = -1;\n  let angle1 = -1;\n  let newAngleTangentSum = currentAngleTangentSum;\n\n  const joinBefore = beforeSegmentIndex !== null;\n  const joinAfter = afterSegmentIndex !== null;\n\n  // add vertices and adapt offsets for P0 in case of join\n  if (joinBefore) {\n    // B for before\n    const pB = [\n      instructions[beforeSegmentIndex],\n      instructions[beforeSegmentIndex + 1],\n    ];\n    const pBworld = applyTransform(toWorldTransform, [...pB]);\n    angle0 = angleBetween(p0world, p1world, pBworld);\n\n    // only add to the sum if the angle isn't too close to 0 or 2PI\n    if (Math.cos(angle0) <= LINESTRING_ANGLE_COSINE_CUTOFF) {\n      newAngleTangentSum += Math.tan((angle0 - Math.PI) / 2);\n    }\n  }\n  // adapt offsets for P1 in case of join; add to angle sum\n  if (joinAfter) {\n    // A for after\n    const pA = [\n      instructions[afterSegmentIndex],\n      instructions[afterSegmentIndex + 1],\n    ];\n    const pAworld = applyTransform(toWorldTransform, [...pA]);\n    angle1 = angleBetween(p1world, p0world, pAworld);\n\n    // only add to the sum if the angle isn't too close to 0 or 2PI\n    if (Math.cos(angle1) <= LINESTRING_ANGLE_COSINE_CUTOFF) {\n      newAngleTangentSum += Math.tan((Math.PI - angle1) / 2);\n    }\n  }\n\n  /**\n   * @param {number} vertexIndex From 0 to 3, indicating position in the quad\n   * @param {number} angleSum Sum of the join angles encountered so far (used to compute distance offset\n   * @return {number} A float value containing both information\n   */\n  function computeParameters(vertexIndex, angleSum) {\n    if (angleSum === 0) {\n      return vertexIndex * 10000;\n    }\n    return Math.sign(angleSum) * (vertexIndex * 10000 + Math.abs(angleSum));\n  }\n\n  // add main segment triangles\n  vertexArray.push(\n    p0[0],\n    p0[1],\n    p1[0],\n    p1[1],\n    angle0,\n    angle1,\n    currentLength,\n    computeParameters(0, currentAngleTangentSum),\n  );\n  vertexArray.push(...customAttributes);\n\n  vertexArray.push(\n    p0[0],\n    p0[1],\n    p1[0],\n    p1[1],\n    angle0,\n    angle1,\n    currentLength,\n    computeParameters(1, currentAngleTangentSum),\n  );\n  vertexArray.push(...customAttributes);\n\n  vertexArray.push(\n    p0[0],\n    p0[1],\n    p1[0],\n    p1[1],\n    angle0,\n    angle1,\n    currentLength,\n    computeParameters(2, currentAngleTangentSum),\n  );\n  vertexArray.push(...customAttributes);\n\n  vertexArray.push(\n    p0[0],\n    p0[1],\n    p1[0],\n    p1[1],\n    angle0,\n    angle1,\n    currentLength,\n    computeParameters(3, currentAngleTangentSum),\n  );\n  vertexArray.push(...customAttributes);\n\n  indexArray.push(\n    baseIndex,\n    baseIndex + 1,\n    baseIndex + 2,\n    baseIndex + 1,\n    baseIndex + 3,\n    baseIndex + 2,\n  );\n\n  return {\n    length:\n      currentLength +\n      Math.sqrt(\n        (p1world[0] - p0world[0]) * (p1world[0] - p0world[0]) +\n          (p1world[1] - p0world[1]) * (p1world[1] - p0world[1]),\n      ),\n    angle: newAngleTangentSum,\n  };\n}\n\n/**\n * Pushes several triangles to form a polygon, including holes\n * @param {Float32Array} instructions Array of render instructions for lines.\n * @param {number} polygonStartIndex Index of the polygon start point from which render instructions will be read.\n * @param {Array<number>} vertexArray Array containing vertices.\n * @param {Array<number>} indexArray Array containing indices.\n * @param {number} customAttributesSize Amount of custom attributes for each element.\n * @return {number} Next polygon instructions index\n * @private\n */\nexport function writePolygonTrianglesToBuffers(\n  instructions,\n  polygonStartIndex,\n  vertexArray,\n  indexArray,\n  customAttributesSize,\n) {\n  const instructionsPerVertex = 2; // x, y\n  const attributesPerVertex = 2 + customAttributesSize;\n  let instructionsIndex = polygonStartIndex;\n  const customAttributes = instructions.slice(\n    instructionsIndex,\n    instructionsIndex + customAttributesSize,\n  );\n  instructionsIndex += customAttributesSize;\n  const ringsCount = instructions[instructionsIndex++];\n  let verticesCount = 0;\n  const holes = new Array(ringsCount - 1);\n  for (let i = 0; i < ringsCount; i++) {\n    verticesCount += instructions[instructionsIndex++];\n    if (i < ringsCount - 1) {\n      holes[i] = verticesCount;\n    }\n  }\n  const flatCoords = instructions.slice(\n    instructionsIndex,\n    instructionsIndex + verticesCount * instructionsPerVertex,\n  );\n\n  // pushing to vertices and indices!! this is where the magic happens\n  const result = earcut(flatCoords, holes, instructionsPerVertex);\n  for (let i = 0; i < result.length; i++) {\n    indexArray.push(result[i] + vertexArray.length / attributesPerVertex);\n  }\n  for (let i = 0; i < flatCoords.length; i += 2) {\n    vertexArray.push(flatCoords[i], flatCoords[i + 1], ...customAttributes);\n  }\n\n  return instructionsIndex + verticesCount * instructionsPerVertex;\n}\n\n/**\n * Returns a texture of 1x1 pixel, white\n * @private\n * @return {ImageData} Image data.\n */\nexport function getBlankImageData() {\n  const canvas = document.createElement('canvas');\n  const image = canvas.getContext('2d').createImageData(1, 1);\n  image.data[0] = 255;\n  image.data[1] = 255;\n  image.data[2] = 255;\n  image.data[3] = 255;\n  return image;\n}\n\n/**\n * Generates a color array based on a numerical id\n * Note: the range for each component is 0 to 1 with 256 steps\n * @param {number} id Id\n * @param {Array<number>} [array] Reusable array\n * @return {Array<number>} Color array containing the encoded id\n */\nexport function colorEncodeId(id, array) {\n  array = array || [];\n  const radix = 256;\n  const divide = radix - 1;\n  array[0] = Math.floor(id / radix / radix / radix) / divide;\n  array[1] = (Math.floor(id / radix / radix) % radix) / divide;\n  array[2] = (Math.floor(id / radix) % radix) / divide;\n  array[3] = (id % radix) / divide;\n  return array;\n}\n\n/**\n * Reads an id from a color-encoded array\n * Note: the expected range for each component is 0 to 1 with 256 steps.\n * @param {Array<number>} color Color array containing the encoded id\n * @return {number} Decoded id\n */\nexport function colorDecodeId(color) {\n  let id = 0;\n  const radix = 256;\n  const mult = radix - 1;\n  id += Math.round(color[0] * radix * radix * radix * mult);\n  id += Math.round(color[1] * radix * radix * mult);\n  id += Math.round(color[2] * radix * mult);\n  id += Math.round(color[3] * mult);\n  return id;\n}\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('isarray')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n","\n        export function create() {\n          const source = \"const e=\\\"GENERATE_POLYGON_BUFFERS\\\",t=\\\"GENERATE_POINT_BUFFERS\\\",n=\\\"GENERATE_LINE_STRING_BUFFERS\\\";function r(e,t){const n=t[0],r=t[1];return t[0]=e[0]*n+e[2]*r+e[4],t[1]=e[1]*n+e[3]*r+e[5],t}function x(e,t){const n=(r=t)[0]*r[3]-r[1]*r[2];var r;!function(e,t){if(!e)throw new Error(t)}(0!==n,\\\"Transformation matrix cannot be inverted\\\");const x=t[0],i=t[1],u=t[2],o=t[3],f=t[4],s=t[5];return e[0]=o/n,e[1]=-i/n,e[2]=-u/n,e[3]=x/n,e[4]=(u*s-o*f)/n,e[5]=-(x*s-i*f)/n,e}function i(e){return e&&e.__esModule&&Object.prototype.hasOwnProperty.call(e,\\\"default\\\")?e.default:e}new Array(6);var u={exports:{}};function o(e,t,n){n=n||2;var r,x,i,u,o,s,l,v=t&&t.length,h=v?t[0]*n:e.length,c=f(e,0,h,n,!0),g=[];if(!c||c.next===c.prev)return g;if(v&&(c=function(e,t,n,r){var x,i,u,o=[];for(x=0,i=t.length;x<i;x++)(u=f(e,t[x]*r,x<i-1?t[x+1]*r:e.length,r,!1))===u.next&&(u.steiner=!0),o.push(d(u));for(o.sort(p),x=0;x<o.length;x++)n=y(o[x],n);return n}(e,t,c,n)),e.length>80*n){r=i=e[0],x=u=e[1];for(var b=n;b<h;b+=n)(o=e[b])<r&&(r=o),(s=e[b+1])<x&&(x=s),o>i&&(i=o),s>u&&(u=s);l=0!==(l=Math.max(i-r,u-x))?32767/l:0}return a(c,g,n,r,x,l,0),g}function f(e,t,n,r,x){var i,u;if(x===O(e,t,n,r)>0)for(i=t;i<n;i+=r)u=P(i,e[i],e[i+1],u);else for(i=n-r;i>=t;i-=r)u=P(i,e[i],e[i+1],u);return u&&m(u,u.next)&&(B(u),u=u.next),u}function s(e,t){if(!e)return e;t||(t=e);var n,r=e;do{if(n=!1,r.steiner||!m(r,r.next)&&0!==w(r.prev,r,r.next))r=r.next;else{if(B(r),(r=t=r.prev)===r.next)break;n=!0}}while(n||r!==t);return t}function a(e,t,n,r,x,i,u){if(e){!u&&i&&function(e,t,n,r){var x=e;do{0===x.z&&(x.z=b(x.x,x.y,t,n,r)),x.prevZ=x.prev,x.nextZ=x.next,x=x.next}while(x!==e);x.prevZ.nextZ=null,x.prevZ=null,function(e){var t,n,r,x,i,u,o,f,s=1;do{for(n=e,e=null,i=null,u=0;n;){for(u++,r=n,o=0,t=0;t<s&&(o++,r=r.nextZ);t++);for(f=s;o>0||f>0&&r;)0!==o&&(0===f||!r||n.z<=r.z)?(x=n,n=n.nextZ,o--):(x=r,r=r.nextZ,f--),i?i.nextZ=x:e=x,x.prevZ=i,i=x;n=r}i.nextZ=null,s*=2}while(u>1)}(x)}(e,r,x,i);for(var o,f,p=e;e.prev!==e.next;)if(o=e.prev,f=e.next,i?v(e,r,x,i):l(e))t.push(o.i/n|0),t.push(e.i/n|0),t.push(f.i/n|0),B(e),e=f.next,p=f.next;else if((e=f)===p){u?1===u?a(e=h(s(e),t,n),t,n,r,x,i,2):2===u&&c(e,t,n,r,x,i):a(s(e),t,n,r,x,i,1);break}}}function l(e){var t=e.prev,n=e,r=e.next;if(w(t,n,r)>=0)return!1;for(var x=t.x,i=n.x,u=r.x,o=t.y,f=n.y,s=r.y,a=x<i?x<u?x:u:i<u?i:u,l=o<f?o<s?o:s:f<s?f:s,v=x>i?x>u?x:u:i>u?i:u,h=o>f?o>s?o:s:f>s?f:s,c=r.next;c!==t;){if(c.x>=a&&c.x<=v&&c.y>=l&&c.y<=h&&M(x,o,i,f,u,s,c.x,c.y)&&w(c.prev,c,c.next)>=0)return!1;c=c.next}return!0}function v(e,t,n,r){var x=e.prev,i=e,u=e.next;if(w(x,i,u)>=0)return!1;for(var o=x.x,f=i.x,s=u.x,a=x.y,l=i.y,v=u.y,h=o<f?o<s?o:s:f<s?f:s,c=a<l?a<v?a:v:l<v?l:v,p=o>f?o>s?o:s:f>s?f:s,y=a>l?a>v?a:v:l>v?l:v,g=b(h,c,t,n,r),d=b(p,y,t,n,r),Z=e.prevZ,m=e.nextZ;Z&&Z.z>=g&&m&&m.z<=d;){if(Z.x>=h&&Z.x<=p&&Z.y>=c&&Z.y<=y&&Z!==x&&Z!==u&&M(o,a,f,l,s,v,Z.x,Z.y)&&w(Z.prev,Z,Z.next)>=0)return!1;if(Z=Z.prevZ,m.x>=h&&m.x<=p&&m.y>=c&&m.y<=y&&m!==x&&m!==u&&M(o,a,f,l,s,v,m.x,m.y)&&w(m.prev,m,m.next)>=0)return!1;m=m.nextZ}for(;Z&&Z.z>=g;){if(Z.x>=h&&Z.x<=p&&Z.y>=c&&Z.y<=y&&Z!==x&&Z!==u&&M(o,a,f,l,s,v,Z.x,Z.y)&&w(Z.prev,Z,Z.next)>=0)return!1;Z=Z.prevZ}for(;m&&m.z<=d;){if(m.x>=h&&m.x<=p&&m.y>=c&&m.y<=y&&m!==x&&m!==u&&M(o,a,f,l,s,v,m.x,m.y)&&w(m.prev,m,m.next)>=0)return!1;m=m.nextZ}return!0}function h(e,t,n){var r=e;do{var x=r.prev,i=r.next.next;!m(x,i)&&A(x,r,r.next,i)&&z(x,i)&&z(i,x)&&(t.push(x.i/n|0),t.push(r.i/n|0),t.push(i.i/n|0),B(r),B(r.next),r=e=i),r=r.next}while(r!==e);return s(r)}function c(e,t,n,r,x,i){var u=e;do{for(var o=u.next.next;o!==u.prev;){if(u.i!==o.i&&Z(u,o)){var f=F(u,o);return u=s(u,u.next),f=s(f,f.next),a(u,t,n,r,x,i,0),void a(f,t,n,r,x,i,0)}o=o.next}u=u.next}while(u!==e)}function p(e,t){return e.x-t.x}function y(e,t){var n=function(e,t){var n,r=t,x=e.x,i=e.y,u=-1/0;do{if(i<=r.y&&i>=r.next.y&&r.next.y!==r.y){var o=r.x+(i-r.y)*(r.next.x-r.x)/(r.next.y-r.y);if(o<=x&&o>u&&(u=o,n=r.x<r.next.x?r:r.next,o===x))return n}r=r.next}while(r!==t);if(!n)return null;var f,s=n,a=n.x,l=n.y,v=1/0;r=n;do{x>=r.x&&r.x>=a&&x!==r.x&&M(i<l?x:u,i,a,l,i<l?u:x,i,r.x,r.y)&&(f=Math.abs(i-r.y)/(x-r.x),z(r,e)&&(f<v||f===v&&(r.x>n.x||r.x===n.x&&g(n,r)))&&(n=r,v=f)),r=r.next}while(r!==s);return n}(e,t);if(!n)return t;var r=F(n,e);return s(r,r.next),s(n,n.next)}function g(e,t){return w(e.prev,e,t.prev)<0&&w(t.next,e,e.next)<0}function b(e,t,n,r,x){return(e=1431655765&((e=858993459&((e=252645135&((e=16711935&((e=(e-n)*x|0)|e<<8))|e<<4))|e<<2))|e<<1))|(t=1431655765&((t=858993459&((t=252645135&((t=16711935&((t=(t-r)*x|0)|t<<8))|t<<4))|t<<2))|t<<1))<<1}function d(e){var t=e,n=e;do{(t.x<n.x||t.x===n.x&&t.y<n.y)&&(n=t),t=t.next}while(t!==e);return n}function M(e,t,n,r,x,i,u,o){return(x-u)*(t-o)>=(e-u)*(i-o)&&(e-u)*(r-o)>=(n-u)*(t-o)&&(n-u)*(i-o)>=(x-u)*(r-o)}function Z(e,t){return e.next.i!==t.i&&e.prev.i!==t.i&&!function(e,t){var n=e;do{if(n.i!==e.i&&n.next.i!==e.i&&n.i!==t.i&&n.next.i!==t.i&&A(n,n.next,e,t))return!0;n=n.next}while(n!==e);return!1}(e,t)&&(z(e,t)&&z(t,e)&&function(e,t){var n=e,r=!1,x=(e.x+t.x)/2,i=(e.y+t.y)/2;do{n.y>i!=n.next.y>i&&n.next.y!==n.y&&x<(n.next.x-n.x)*(i-n.y)/(n.next.y-n.y)+n.x&&(r=!r),n=n.next}while(n!==e);return r}(e,t)&&(w(e.prev,e,t.prev)||w(e,t.prev,t))||m(e,t)&&w(e.prev,e,e.next)>0&&w(t.prev,t,t.next)>0)}function w(e,t,n){return(t.y-e.y)*(n.x-t.x)-(t.x-e.x)*(n.y-t.y)}function m(e,t){return e.x===t.x&&e.y===t.y}function A(e,t,n,r){var x=I(w(e,t,n)),i=I(w(e,t,r)),u=I(w(n,r,e)),o=I(w(n,r,t));return x!==i&&u!==o||(!(0!==x||!E(e,n,t))||(!(0!==i||!E(e,r,t))||(!(0!==u||!E(n,e,r))||!(0!==o||!E(n,t,r)))))}function E(e,t,n){return t.x<=Math.max(e.x,n.x)&&t.x>=Math.min(e.x,n.x)&&t.y<=Math.max(e.y,n.y)&&t.y>=Math.min(e.y,n.y)}function I(e){return e>0?1:e<0?-1:0}function z(e,t){return w(e.prev,e,e.next)<0?w(e,t,e.next)>=0&&w(e,e.prev,t)>=0:w(e,t,e.prev)<0||w(e,e.next,t)<0}function F(e,t){var n=new _(e.i,e.x,e.y),r=new _(t.i,t.x,t.y),x=e.next,i=t.prev;return e.next=t,t.prev=e,n.next=x,x.prev=n,r.next=n,n.prev=r,i.next=r,r.prev=i,r}function P(e,t,n,r){var x=new _(e,t,n);return r?(x.next=r.next,x.prev=r,r.next.prev=x,r.next=x):(x.prev=x,x.next=x),x}function B(e){e.next.prev=e.prev,e.prev.next=e.next,e.prevZ&&(e.prevZ.nextZ=e.nextZ),e.nextZ&&(e.nextZ.prevZ=e.prevZ)}function _(e,t,n){this.i=e,this.x=t,this.y=n,this.prev=null,this.next=null,this.z=0,this.prevZ=null,this.nextZ=null,this.steiner=!1}function O(e,t,n,r){for(var x=0,i=t,u=n-r;i<n;i+=r)x+=(e[u]-e[i])*(e[i+1]+e[u+1]),u=i;return x}u.exports=o,u.exports.default=o,o.deviation=function(e,t,n,r){var x=t&&t.length,i=x?t[0]*n:e.length,u=Math.abs(O(e,0,i,n));if(x)for(var o=0,f=t.length;o<f;o++){var s=t[o]*n,a=o<f-1?t[o+1]*n:e.length;u-=Math.abs(O(e,s,a,n))}var l=0;for(o=0;o<r.length;o+=3){var v=r[o]*n,h=r[o+1]*n,c=r[o+2]*n;l+=Math.abs((e[v]-e[c])*(e[h+1]-e[v+1])-(e[v]-e[h])*(e[c+1]-e[v+1]))}return 0===u&&0===l?0:Math.abs((l-u)/u)},o.flatten=function(e){for(var t=e[0][0].length,n={vertices:[],holes:[],dimensions:t},r=0,x=0;x<e.length;x++){for(var i=0;i<e[x].length;i++)for(var u=0;u<t;u++)n.vertices.push(e[x][i][u]);x>0&&(r+=e[x-1].length,n.holes.push(r))}return n};var N=i(u.exports);const R=[],S={vertexPosition:0,indexPosition:0};function T(e,t,n,r,x){e[t+0]=n,e[t+1]=r,e[t+2]=x}function U(e,t,n,r,x,i){const u=3+x,o=e[t+0],f=e[t+1],s=R;s.length=x;for(let n=0;n<s.length;n++)s[n]=e[t+2+n];let a=i?i.vertexPosition:0,l=i?i.indexPosition:0;const v=a/u;return T(n,a,o,f,0),s.length&&n.set(s,a+3),a+=u,T(n,a,o,f,1),s.length&&n.set(s,a+3),a+=u,T(n,a,o,f,2),s.length&&n.set(s,a+3),a+=u,T(n,a,o,f,3),s.length&&n.set(s,a+3),a+=u,r[l++]=v,r[l++]=v+1,r[l++]=v+3,r[l++]=v+1,r[l++]=v+2,r[l++]=v+3,S.vertexPosition=a,S.indexPosition=l,S}function k(e,t,n,x,i,u,o,f,s,a,l){const v=8+f.length,h=u.length/v,c=[e[t+0],e[t+1]],p=[e[n],e[n+1]],y=r(s,[...c]),g=r(s,[...p]);function b(e,t,n){const r=Math.sqrt((t[0]-e[0])*(t[0]-e[0])+(t[1]-e[1])*(t[1]-e[1])),x=[(t[0]-e[0])/r,(t[1]-e[1])/r],i=[-x[1],x[0]],u=Math.sqrt((n[0]-e[0])*(n[0]-e[0])+(n[1]-e[1])*(n[1]-e[1])),o=[(n[0]-e[0])/u,(n[1]-e[1])/u],f=0===r||0===u?0:Math.acos((s=o[0]*x[0]+o[1]*x[1],a=-1,l=1,Math.min(Math.max(s,a),l)));var s,a,l;return o[0]*i[0]+o[1]*i[1]>0?f:2*Math.PI-f}let d=-1,M=-1,Z=l;const w=null!==i;if(null!==x){d=b(y,g,r(s,[...[e[x],e[x+1]]])),Math.cos(d)<=.985&&(Z+=Math.tan((d-Math.PI)/2))}if(w){M=b(g,y,r(s,[...[e[i],e[i+1]]])),Math.cos(M)<=.985&&(Z+=Math.tan((Math.PI-M)/2))}function m(e,t){return 0===t?1e4*e:Math.sign(t)*(1e4*e+Math.abs(t))}return u.push(c[0],c[1],p[0],p[1],d,M,a,m(0,l)),u.push(...f),u.push(c[0],c[1],p[0],p[1],d,M,a,m(1,l)),u.push(...f),u.push(c[0],c[1],p[0],p[1],d,M,a,m(2,l)),u.push(...f),u.push(c[0],c[1],p[0],p[1],d,M,a,m(3,l)),u.push(...f),o.push(h,h+1,h+2,h+1,h+3,h+2),{length:a+Math.sqrt((g[0]-y[0])*(g[0]-y[0])+(g[1]-y[1])*(g[1]-y[1])),angle:Z}}function G(e,t,n,r,x){const i=2+x;let u=t;const o=e.slice(u,u+x);u+=x;const f=e[u++];let s=0;const a=new Array(f-1);for(let t=0;t<f;t++)s+=e[u++],t<f-1&&(a[t]=s);const l=e.slice(u,u+2*s),v=N(l,a,2);for(let e=0;e<v.length;e++)r.push(v[e]+n.length/i);for(let e=0;e<l.length;e+=2)n.push(l[e],l[e+1],...o);return u+2*s}const j=self;j.onmessage=r=>{const i=r.data;switch(i.type){case t:{const e=3,t=2,n=i.customAttributesSize,r=t+n,x=new Float32Array(i.renderInstructions),u=x.length/r,o=4*u*(n+e),f=new Uint32Array(6*u),s=new Float32Array(o);let a;for(let e=0;e<x.length;e+=r)a=U(x,e,s,f,n,a);const l=Object.assign({vertexBuffer:s.buffer,indexBuffer:f.buffer,renderInstructions:x.buffer},i);j.postMessage(l,[s.buffer,f.buffer,x.buffer]);break}case n:{const e=[],t=[],n=i.customAttributesSize,r=2,u=new Float32Array(i.renderInstructions);let o=0;const f=[1,0,0,1,0,0];let s,a;for(x(f,i.renderInstructionsTransform);o<u.length;){a=Array.from(u.slice(o,o+n)),o+=n,s=u[o++];const x=o,i=o+(s-1)*r,l=u[x]===u[i]&&u[x+1]===u[i+1];let v=0,h=0;for(let n=0;n<s-1;n++){let c=null;n>0?c=o+(n-1)*r:l&&(c=i-r);let p=null;n<s-2?p=o+(n+2)*r:l&&(p=x+r);const y=k(u,o+n*r,o+(n+1)*r,c,p,e,t,a,f,v,h);v=y.length,h=y.angle}o+=s*r}const l=Uint32Array.from(t),v=Float32Array.from(e),h=Object.assign({vertexBuffer:v.buffer,indexBuffer:l.buffer,renderInstructions:u.buffer},i);j.postMessage(h,[v.buffer,l.buffer,u.buffer]);break}case e:{const e=[],t=[],n=i.customAttributesSize,r=new Float32Array(i.renderInstructions);let x=0;for(;x<r.length;)x=G(r,x,e,t,n);const u=Uint32Array.from(t),o=Float32Array.from(e),f=Object.assign({vertexBuffer:o.buffer,indexBuffer:u.buffer,renderInstructions:r.buffer},i);j.postMessage(f,[o.buffer,u.buffer,r.buffer]);break}}};\";\n          return new Worker(typeof Blob === 'undefined'\n            ? 'data:application/javascript;base64,' + Buffer.from(source, 'binary').toString('base64')\n            : URL.createObjectURL(new Blob([source], {type: 'application/javascript'})));\n        }\n      \n","import {getWidth} from '../../extent.js';\n\n/**\n * Compute world params\n * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n * @param {any} layer The layer\n * @return {Array<number>} The world start, end and width.\n */\nexport function getWorldParameters(frameState, layer) {\n  const projection = frameState.viewState.projection;\n\n  const vectorSource = layer.getSource();\n  const multiWorld = vectorSource.getWrapX() && projection.canWrapX();\n  const projectionExtent = projection.getExtent();\n\n  const extent = frameState.extent;\n  const worldWidth = multiWorld ? getWidth(projectionExtent) : null;\n  const endWorld = multiWorld\n    ? Math.ceil((extent[2] - projectionExtent[2]) / worldWidth) + 1\n    : 1;\n\n  const startWorld = multiWorld\n    ? Math.floor((extent[0] - projectionExtent[0]) / worldWidth)\n    : 0;\n\n  return [startWorld, endWorld, worldWidth];\n}\n","/**\n * @module ol/renderer/webgl/PointsLayer\n */\nimport BaseVector from '../../layer/BaseVector.js';\nimport VectorEventType from '../../source/VectorEventType.js';\nimport ViewHint from '../../ViewHint.js';\nimport WebGLArrayBuffer from '../../webgl/Buffer.js';\nimport WebGLLayerRenderer from './Layer.js';\nimport WebGLRenderTarget from '../../webgl/RenderTarget.js';\nimport {ARRAY_BUFFER, DYNAMIC_DRAW, ELEMENT_ARRAY_BUFFER} from '../../webgl.js';\nimport {AttributeType, DefaultUniform} from '../../webgl/Helper.js';\nimport {WebGLWorkerMessageType} from '../../render/webgl/constants.js';\nimport {\n  apply as applyTransform,\n  create as createTransform,\n  makeInverse as makeInverseTransform,\n  multiply as multiplyTransform,\n  translate as translateTransform,\n} from '../../transform.js';\nimport {assert} from '../../asserts.js';\nimport {buffer, createEmpty, equals} from '../../extent.js';\nimport {colorDecodeId, colorEncodeId} from '../../render/webgl/utils.js';\nimport {create as createWebGLWorker} from '../../worker/webgl.js';\nimport {fromUserCoordinate, getUserProjection} from '../../proj.js';\nimport {getUid} from '../../util.js';\nimport {getWorldParameters} from './worldUtil.js';\nimport {listen, unlistenByKey} from '../../events.js';\n\n/**\n * @typedef {Object} CustomAttribute A description of a custom attribute to be passed on to the GPU, with a value different\n * for each feature.\n * @property {string} name Attribute name.\n * @property {function(import(\"../../Feature\").default, Object<string, *>):number} callback This callback computes the numerical value of the\n * attribute for a given feature (properties are available as 2nd arg for quicker access).\n */\n\n/**\n * @typedef {Object} FeatureCacheItem Object that holds a reference to a feature, its geometry and properties. Used to optimize\n * rebuildBuffers by accessing these objects quicker.\n * @property {import(\"../../Feature\").default} feature Feature\n * @property {Object<string, *>} properties Feature properties\n * @property {import(\"../../geom\").Geometry} geometry Feature geometry\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the canvas element.\n * @property {Array<CustomAttribute>} [attributes] These attributes will be read from the features in the source and then\n * passed to the GPU. The `name` property of each attribute will serve as its identifier:\n *  * In the vertex shader as an `attribute` by prefixing it with `a_`\n *  * In the fragment shader as a `varying` by prefixing it with `v_`\n * Please note that these can only be numerical values.\n * @property {string} vertexShader Vertex shader source, mandatory.\n * @property {string} fragmentShader Fragment shader source, mandatory.\n * @property {boolean} [hitDetectionEnabled] Whether shader is hit detection aware.\n * @property {Object<string,import(\"../../webgl/Helper\").UniformValue>} [uniforms] Uniform definitions for the post process steps\n * Please note that `u_texture` is reserved for the main texture slot and `u_opacity` is reserved for the layer opacity.\n * @property {Array<import(\"./Layer\").PostProcessesOptions>} [postProcesses] Post-processes definitions\n */\n\n/**\n * @classdesc\n * WebGL vector renderer optimized for points.\n * All features will be rendered as quads (two triangles forming a square). New data will be flushed to the GPU\n * every time the vector source changes.\n *\n * You need to provide vertex and fragment shaders for rendering. This can be done using\n * {@link module:ol/webgl/ShaderBuilder~ShaderBuilder} utilities. These shaders shall expect a `a_position` attribute\n * containing the screen-space projected center of the quad, as well as a `a_index` attribute\n * whose value (0, 1, 2 or 3) indicates which quad vertex is currently getting processed (see structure below).\n *\n * To include variable attributes in the shaders, you need to declare them using the `attributes` property of\n * the options object like so:\n * ```js\n * new WebGLPointsLayerRenderer(layer, {\n *   attributes: [\n *     {\n *       name: 'size',\n *       callback: function(feature) {\n *         // compute something with the feature\n *       }\n *     },\n *     {\n *       name: 'weight',\n *       callback: function(feature) {\n *         // compute something with the feature\n *       }\n *     },\n *   ],\n *   vertexShader:\n *     // shader using attribute a_weight and a_size\n *   fragmentShader:\n *     // shader using varying v_weight and v_size\n * ```\n *\n * To enable hit detection, you must as well provide dedicated shaders using the `hitVertexShader`\n * and `hitFragmentShader` properties. These shall expect the `a_hitColor` attribute to contain\n * the final color that will have to be output for hit detection to work.\n *\n * The following uniform is used for the main texture: `u_texture`.\n * The following uniform is used for the layer opacity: `u_opacity`.\n *\n * Please note that the main shader output should have premultiplied alpha, otherwise visual anomalies may occur.\n *\n * Points are rendered as quads with the following structure:\n *\n * ```\n *   (u0, v1)      (u1, v1)\n *  [3]----------[2]\n *   |`           |\n *   |  `         |\n *   |    `       |\n *   |      `     |\n *   |        `   |\n *   |          ` |\n *  [0]----------[1]\n *   (u0, v0)      (u1, v0)\n *  ```\n *\n * This uses {@link module:ol/webgl/Helper~WebGLHelper} internally.\n *\n * @api\n */\nclass WebGLPointsLayerRenderer extends WebGLLayerRenderer {\n  /**\n   * @param {import(\"../../layer/Layer.js\").default} layer Layer.\n   * @param {Options} options Options.\n   */\n  constructor(layer, options) {\n    const uniforms = options.uniforms || {};\n    const projectionMatrixTransform = createTransform();\n    uniforms[DefaultUniform.PROJECTION_MATRIX] = projectionMatrixTransform;\n\n    super(layer, {\n      uniforms: uniforms,\n      postProcesses: options.postProcesses,\n    });\n\n    this.sourceRevision_ = -1;\n\n    this.verticesBuffer_ = new WebGLArrayBuffer(ARRAY_BUFFER, DYNAMIC_DRAW);\n    this.indicesBuffer_ = new WebGLArrayBuffer(\n      ELEMENT_ARRAY_BUFFER,\n      DYNAMIC_DRAW,\n    );\n\n    /**\n     * @private\n     */\n    this.vertexShader_ = options.vertexShader;\n\n    /**\n     * @private\n     */\n    this.fragmentShader_ = options.fragmentShader;\n\n    /**\n     * @type {WebGLProgram}\n     * @private\n     */\n    this.program_;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.hitDetectionEnabled_ = options.hitDetectionEnabled ?? true;\n\n    const customAttributes = options.attributes\n      ? options.attributes.map(function (attribute) {\n          return {\n            name: 'a_prop_' + attribute.name,\n            size: 1,\n            type: AttributeType.FLOAT,\n          };\n        })\n      : [];\n\n    /**\n     * A list of attributes used by the renderer. By default only the position and\n     * index of the vertex (0 to 3) are required.\n     * @type {Array<import('../../webgl/Helper.js').AttributeDescription>}\n     */\n    this.attributes = [\n      {\n        name: 'a_position',\n        size: 2,\n        type: AttributeType.FLOAT,\n      },\n      {\n        name: 'a_index',\n        size: 1,\n        type: AttributeType.FLOAT,\n      },\n    ];\n\n    if (this.hitDetectionEnabled_) {\n      this.attributes.push({\n        name: 'a_prop_hitColor',\n        size: 4,\n        type: AttributeType.FLOAT,\n      });\n      this.attributes.push({\n        name: 'a_featureUid',\n        size: 1,\n        type: AttributeType.FLOAT,\n      });\n    }\n    this.attributes.push(...customAttributes);\n\n    this.customAttributes = options.attributes ? options.attributes : [];\n\n    this.previousExtent_ = createEmpty();\n\n    /**\n     * This transform is updated on every frame and is the composition of:\n     * - invert of the world->screen transform that was used when rebuilding buffers (see `this.renderTransform_`)\n     * - current world->screen transform\n     * @type {import(\"../../transform.js\").Transform}\n     * @private\n     */\n    this.currentTransform_ = projectionMatrixTransform;\n\n    /**\n     * This transform is updated when buffers are rebuilt and converts world space coordinates to screen space\n     * @type {import(\"../../transform.js\").Transform}\n     * @private\n     */\n    this.renderTransform_ = createTransform();\n\n    /**\n     * @type {import(\"../../transform.js\").Transform}\n     * @private\n     */\n    this.invertRenderTransform_ = createTransform();\n\n    /**\n     * @type {Float32Array}\n     * @private\n     */\n    this.renderInstructions_ = new Float32Array(0);\n\n    /**\n     * @type {WebGLRenderTarget}\n     * @private\n     */\n    this.hitRenderTarget_;\n\n    /**\n     * Keep track of latest message sent to worker\n     * @type {number}\n     * @private\n     */\n    this.lastSentId = 0;\n\n    /**\n     * @private\n     */\n    this.worker_ = createWebGLWorker();\n\n    this.worker_.addEventListener(\n      'message',\n      /**\n       * @param {*} event Event.\n       */\n      (event) => {\n        const received = event.data;\n        if (received.type === WebGLWorkerMessageType.GENERATE_POINT_BUFFERS) {\n          const projectionTransform = received.projectionTransform;\n          this.verticesBuffer_.fromArrayBuffer(received.vertexBuffer);\n          this.helper.flushBufferData(this.verticesBuffer_);\n          this.indicesBuffer_.fromArrayBuffer(received.indexBuffer);\n          this.helper.flushBufferData(this.indicesBuffer_);\n\n          this.renderTransform_ = projectionTransform;\n          makeInverseTransform(\n            this.invertRenderTransform_,\n            this.renderTransform_,\n          );\n          this.renderInstructions_ = new Float32Array(\n            event.data.renderInstructions,\n          );\n          if (received.id === this.lastSentId) {\n            this.ready = true;\n          }\n          this.getLayer().changed();\n        }\n      },\n    );\n\n    /**\n     * This object will be updated when the source changes. Key is uid.\n     * @type {Object<string, FeatureCacheItem>}\n     * @private\n     */\n    this.featureCache_ = {};\n\n    /**\n     * Amount of features in the cache.\n     * @type {number}\n     * @private\n     */\n    this.featureCount_ = 0;\n\n    const source = this.getLayer().getSource();\n    this.sourceListenKeys_ = [\n      listen(\n        source,\n        VectorEventType.ADDFEATURE,\n        this.handleSourceFeatureAdded_,\n        this,\n      ),\n      listen(\n        source,\n        VectorEventType.CHANGEFEATURE,\n        this.handleSourceFeatureChanged_,\n        this,\n      ),\n      listen(\n        source,\n        VectorEventType.REMOVEFEATURE,\n        this.handleSourceFeatureDelete_,\n        this,\n      ),\n      listen(\n        source,\n        VectorEventType.CLEAR,\n        this.handleSourceFeatureClear_,\n        this,\n      ),\n    ];\n    source.forEachFeature((feature) => {\n      this.featureCache_[getUid(feature)] = {\n        feature: feature,\n        properties: feature.getProperties(),\n        geometry: feature.getGeometry(),\n      };\n      this.featureCount_++;\n    });\n  }\n\n  afterHelperCreated() {\n    this.program_ = this.helper.getProgram(\n      this.fragmentShader_,\n      this.vertexShader_,\n    );\n\n    if (this.hitDetectionEnabled_) {\n      this.hitRenderTarget_ = new WebGLRenderTarget(this.helper);\n    }\n  }\n\n  /**\n   * @param {import(\"../../source/Vector.js\").VectorSourceEvent} event Event.\n   * @private\n   */\n  handleSourceFeatureAdded_(event) {\n    const feature = event.feature;\n    this.featureCache_[getUid(feature)] = {\n      feature: feature,\n      properties: feature.getProperties(),\n      geometry: feature.getGeometry(),\n    };\n    this.featureCount_++;\n  }\n\n  /**\n   * @param {import(\"../../source/Vector.js\").VectorSourceEvent} event Event.\n   * @private\n   */\n  handleSourceFeatureChanged_(event) {\n    const feature = event.feature;\n    this.featureCache_[getUid(feature)] = {\n      feature: feature,\n      properties: feature.getProperties(),\n      geometry: feature.getGeometry(),\n    };\n  }\n\n  /**\n   * @param {import(\"../../source/Vector.js\").VectorSourceEvent} event Event.\n   * @private\n   */\n  handleSourceFeatureDelete_(event) {\n    const feature = event.feature;\n    delete this.featureCache_[getUid(feature)];\n    this.featureCount_--;\n  }\n\n  /**\n   * @private\n   */\n  handleSourceFeatureClear_() {\n    this.featureCache_ = {};\n    this.featureCount_ = 0;\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState) {\n    const gl = this.helper.getGL();\n    this.preRender(gl, frameState);\n    const [startWorld, endWorld, worldWidth] = getWorldParameters(\n      frameState,\n      this.getLayer(),\n    );\n\n    // draw the normal canvas\n    this.renderWorlds(frameState, false, startWorld, endWorld, worldWidth);\n    this.helper.finalizeDraw(\n      frameState,\n      this.dispatchPreComposeEvent,\n      this.dispatchPostComposeEvent,\n    );\n\n    if (this.hitDetectionEnabled_) {\n      // draw the hit buffer\n      this.renderWorlds(frameState, true, startWorld, endWorld, worldWidth);\n      this.hitRenderTarget_.clearCachedData();\n    }\n\n    this.postRender(gl, frameState);\n\n    const canvas = this.helper.getCanvas();\n    return canvas;\n  }\n\n  /**\n   * Determine whether renderFrame should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrameInternal(frameState) {\n    const layer = this.getLayer();\n    const vectorSource = layer.getSource();\n    const viewState = frameState.viewState;\n    const viewNotMoving =\n      !frameState.viewHints[ViewHint.ANIMATING] &&\n      !frameState.viewHints[ViewHint.INTERACTING];\n    const extentChanged = !equals(this.previousExtent_, frameState.extent);\n    const sourceChanged = this.sourceRevision_ < vectorSource.getRevision();\n\n    if (sourceChanged) {\n      this.sourceRevision_ = vectorSource.getRevision();\n    }\n\n    if (viewNotMoving && (extentChanged || sourceChanged)) {\n      const projection = viewState.projection;\n      const resolution = viewState.resolution;\n\n      const renderBuffer =\n        layer instanceof BaseVector ? layer.getRenderBuffer() : 0;\n      const extent = buffer(frameState.extent, renderBuffer * resolution);\n      vectorSource.loadFeatures(extent, resolution, projection);\n\n      this.rebuildBuffers_(frameState);\n      this.previousExtent_ = frameState.extent.slice();\n    }\n\n    this.helper.useProgram(this.program_, frameState);\n    this.helper.prepareDraw(frameState);\n\n    // write new data\n    this.helper.bindBuffer(this.verticesBuffer_);\n    this.helper.bindBuffer(this.indicesBuffer_);\n    this.helper.enableAttributes(this.attributes);\n\n    return true;\n  }\n\n  /**\n   * Rebuild internal webgl buffers based on current view extent; costly, should not be called too much\n   * @param {import(\"../../Map\").FrameState} frameState Frame state.\n   * @private\n   */\n  rebuildBuffers_(frameState) {\n    // saves the projection transform for the current frame state\n    const projectionTransform = createTransform();\n    this.helper.makeProjectionTransform(frameState, projectionTransform);\n\n    const userProjection = getUserProjection();\n\n    const baseInstructionLength = this.hitDetectionEnabled_ ? 7 : 2; // see below\n    const singleInstructionLength =\n      baseInstructionLength + this.customAttributes.length;\n    const totalSize = singleInstructionLength * this.featureCount_;\n    if (\n      !this.renderInstructions_ ||\n      this.renderInstructions_.length !== totalSize\n    ) {\n      this.renderInstructions_ = new Float32Array(totalSize);\n    }\n\n    // loop on features to fill the buffer\n    let featureCache, geometry;\n    const tmpCoords = [];\n    const tmpColor = [];\n    let idx = -1;\n    for (const featureUid in this.featureCache_) {\n      featureCache = this.featureCache_[featureUid];\n      geometry = /** @type {import(\"../../geom\").Point} */ (\n        featureCache.geometry\n      );\n      if (!geometry || geometry.getType() !== 'Point') {\n        continue;\n      }\n      if (userProjection) {\n        const userCoords = fromUserCoordinate(\n          geometry.getFlatCoordinates(),\n          frameState.viewState.projection,\n        );\n        tmpCoords[0] = userCoords[0];\n        tmpCoords[1] = userCoords[1];\n      } else {\n        tmpCoords[0] = geometry.getFlatCoordinates()[0];\n        tmpCoords[1] = geometry.getFlatCoordinates()[1];\n      }\n      applyTransform(projectionTransform, tmpCoords);\n\n      this.renderInstructions_[++idx] = tmpCoords[0];\n      this.renderInstructions_[++idx] = tmpCoords[1];\n\n      // for hit detection, the feature uid is saved in the opacity value\n      // and the index of the opacity value is encoded in the color values\n      if (this.hitDetectionEnabled_) {\n        const hitColor = colorEncodeId(idx + 5, tmpColor);\n        this.renderInstructions_[++idx] = hitColor[0];\n        this.renderInstructions_[++idx] = hitColor[1];\n        this.renderInstructions_[++idx] = hitColor[2];\n        this.renderInstructions_[++idx] = hitColor[3];\n        this.renderInstructions_[++idx] = Number(featureUid);\n      }\n\n      // pushing custom attributes\n      for (let j = 0; j < this.customAttributes.length; j++) {\n        const value = this.customAttributes[j].callback(\n          featureCache.feature,\n          featureCache.properties,\n        );\n        this.renderInstructions_[++idx] = value;\n      }\n    }\n\n    /** @type {import('../../render/webgl/constants.js').WebGLWorkerGenerateBuffersMessage} */\n    const message = {\n      id: ++this.lastSentId,\n      type: WebGLWorkerMessageType.GENERATE_POINT_BUFFERS,\n      renderInstructions: this.renderInstructions_.buffer,\n      customAttributesSize: singleInstructionLength - 2,\n    };\n    // additional properties will be sent back as-is by the worker\n    message['projectionTransform'] = projectionTransform;\n    this.ready = false;\n    this.worker_.postMessage(message, [this.renderInstructions_.buffer]);\n    this.renderInstructions_ = null;\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"../vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"../Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches,\n  ) {\n    assert(\n      this.hitDetectionEnabled_,\n      '`forEachFeatureAtCoordinate` cannot be used on a WebGL layer if the hit detection logic has been disabled using the `disableHitDetection: true` option.',\n    );\n    if (!this.renderInstructions_ || !this.hitDetectionEnabled_) {\n      return undefined;\n    }\n\n    const pixel = applyTransform(\n      frameState.coordinateToPixelTransform,\n      coordinate.slice(),\n    );\n\n    const data = this.hitRenderTarget_.readPixel(pixel[0] / 2, pixel[1] / 2);\n    const color = [data[0] / 255, data[1] / 255, data[2] / 255, data[3] / 255];\n    const index = colorDecodeId(color);\n    const opacity = this.renderInstructions_[index];\n    const uid = Math.floor(opacity).toString();\n\n    const source = this.getLayer().getSource();\n    const feature = source.getFeatureByUid(uid);\n    if (feature) {\n      return callback(feature, this.getLayer(), null);\n    }\n    return undefined;\n  }\n\n  /**\n   * Render the world, either to the main framebuffer or to the hit framebuffer\n   * @param {import(\"../../Map.js\").FrameState} frameState current frame state\n   * @param {boolean} forHitDetection whether the rendering is for hit detection\n   * @param {number} startWorld the world to render in the first iteration\n   * @param {number} endWorld the last world to render\n   * @param {number} worldWidth the width of the worlds being rendered\n   */\n  renderWorlds(frameState, forHitDetection, startWorld, endWorld, worldWidth) {\n    let world = startWorld;\n\n    this.helper.useProgram(this.program_, frameState);\n\n    if (forHitDetection) {\n      this.hitRenderTarget_.setSize([\n        Math.floor(frameState.size[0] / 2),\n        Math.floor(frameState.size[1] / 2),\n      ]);\n      this.helper.prepareDrawToRenderTarget(\n        frameState,\n        this.hitRenderTarget_,\n        true,\n      );\n    }\n\n    this.helper.bindBuffer(this.verticesBuffer_);\n    this.helper.bindBuffer(this.indicesBuffer_);\n    this.helper.enableAttributes(this.attributes);\n\n    do {\n      this.helper.makeProjectionTransform(frameState, this.currentTransform_);\n      translateTransform(this.currentTransform_, world * worldWidth, 0);\n      multiplyTransform(this.currentTransform_, this.invertRenderTransform_);\n      this.helper.applyUniforms(frameState);\n      this.helper.applyHitDetectionUniform(forHitDetection);\n      const renderCount = this.indicesBuffer_.getSize();\n      this.helper.drawElements(0, renderCount);\n    } while (++world < endWorld);\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.worker_.terminate();\n    this.layer_ = null;\n    this.sourceListenKeys_.forEach(function (key) {\n      unlistenByKey(key);\n    });\n    this.sourceListenKeys_ = null;\n    super.disposeInternal();\n  }\n\n  renderDeclutter() {}\n}\n\nexport default WebGLPointsLayerRenderer;\n","/**\n * @module ol/webgl/PaletteTexture\n */\n\nclass PaletteTexture {\n  /**\n   * @param {string} name The name of the texture.\n   * @param {Uint8Array} data The texture data.\n   */\n  constructor(name, data) {\n    this.name = name;\n    this.data = data;\n\n    /**\n     * @type {WebGLTexture|null}\n     * @private\n     */\n    this.texture_ = null;\n  }\n\n  /**\n   * @param {WebGLRenderingContext} gl Rendering context.\n   * @return {WebGLTexture} The texture.\n   */\n  getTexture(gl) {\n    if (!this.texture_) {\n      const texture = gl.createTexture();\n      gl.bindTexture(gl.TEXTURE_2D, texture);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n      gl.texImage2D(\n        gl.TEXTURE_2D,\n        0,\n        gl.RGBA,\n        this.data.length / 4,\n        1,\n        0,\n        gl.RGBA,\n        gl.UNSIGNED_BYTE,\n        this.data,\n      );\n      this.texture_ = texture;\n    }\n    return this.texture_;\n  }\n\n  /**\n   * @param {WebGLRenderingContext} gl Rendering context.\n   */\n  delete(gl) {\n    if (this.texture_) {\n      gl.deleteTexture(this.texture_);\n    }\n    this.texture_ = null;\n  }\n}\n\nexport default PaletteTexture;\n","/**\n * @module ol/reproj/common\n */\n\n/**\n * Default maximum allowed threshold  (in pixels) for reprojection\n * triangulation.\n * @type {number}\n */\nexport const ERROR_THRESHOLD = 0.5;\n","/**\n * @module ol/DataTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport {createCanvasContext2D} from './dom.js';\n\n/**\n * @typedef {HTMLImageElement|HTMLCanvasElement|HTMLVideoElement|ImageBitmap} ImageLike\n */\n\n/**\n * @typedef {Uint8Array|Uint8ClampedArray|Float32Array|DataView} ArrayLike\n */\n\n/**\n * Data that can be used with a DataTile.\n * @typedef {ArrayLike|ImageLike} Data\n */\n\n/**\n * @param {Data} data Tile data.\n * @return {ImageLike|null} The image-like data.\n */\nexport function asImageLike(data) {\n  return data instanceof Image ||\n    data instanceof HTMLCanvasElement ||\n    data instanceof HTMLVideoElement ||\n    data instanceof ImageBitmap\n    ? data\n    : null;\n}\n\n/**\n * @param {Data} data Tile data.\n * @return {ArrayLike|null} The array-like data.\n */\nexport function asArrayLike(data) {\n  return data instanceof Uint8Array ||\n    data instanceof Uint8ClampedArray ||\n    data instanceof Float32Array ||\n    data instanceof DataView\n    ? data\n    : null;\n}\n\n/**\n * @type {CanvasRenderingContext2D|null}\n */\nlet sharedContext = null;\n\n/**\n * @param {ImageLike} image The image.\n * @return {Uint8ClampedArray} The data.\n */\nexport function toArray(image) {\n  if (!sharedContext) {\n    sharedContext = createCanvasContext2D(\n      image.width,\n      image.height,\n      undefined,\n      {willReadFrequently: true},\n    );\n  }\n  const canvas = sharedContext.canvas;\n  const width = image.width;\n  if (canvas.width !== width) {\n    canvas.width = width;\n  }\n  const height = image.height;\n  if (canvas.height !== height) {\n    canvas.height = height;\n  }\n  sharedContext.clearRect(0, 0, width, height);\n  sharedContext.drawImage(image, 0, 0);\n  return sharedContext.getImageData(0, 0, width, height).data;\n}\n\n/**\n * @type {import('./size.js').Size}\n */\nconst defaultSize = [256, 256];\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @property {function(): Promise<Data>} loader Data loader.  For loaders that generate images,\n * the promise should not resolve until the image is loaded.\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n * @property {import('./size.js').Size} [size=[256, 256]] Tile size.\n * @api\n */\n\nclass DataTile extends Tile {\n  /**\n   * @param {Options} options Tile options.\n   */\n  constructor(options) {\n    const state = TileState.IDLE;\n\n    super(options.tileCoord, state, {\n      transition: options.transition,\n      interpolate: options.interpolate,\n    });\n\n    /**\n     * @type {function(): Promise<Data>}\n     * @private\n     */\n    this.loader_ = options.loader;\n\n    /**\n     * @type {Data}\n     * @private\n     */\n    this.data_ = null;\n\n    /**\n     * @type {Error}\n     * @private\n     */\n    this.error_ = null;\n\n    /**\n     * @type {import('./size.js').Size|null}\n     * @private\n     */\n    this.size_ = options.size || null;\n  }\n\n  /**\n   * Get the tile size.\n   * @return {import('./size.js').Size} Tile size.\n   */\n  getSize() {\n    if (this.size_) {\n      return this.size_;\n    }\n    const imageData = asImageLike(this.data_);\n    if (imageData) {\n      return [imageData.width, imageData.height];\n    }\n    return defaultSize;\n  }\n\n  /**\n   * Get the data for the tile.\n   * @return {Data} Tile data.\n   * @api\n   */\n  getData() {\n    return this.data_;\n  }\n\n  /**\n   * Get any loading error.\n   * @return {Error} Loading error.\n   * @api\n   */\n  getError() {\n    return this.error_;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @api\n   */\n  load() {\n    if (this.state !== TileState.IDLE && this.state !== TileState.ERROR) {\n      return;\n    }\n    this.state = TileState.LOADING;\n    this.changed();\n\n    const self = this;\n    this.loader_()\n      .then(function (data) {\n        self.data_ = data;\n        self.state = TileState.LOADED;\n        self.changed();\n      })\n      .catch(function (error) {\n        self.error_ = error;\n        self.state = TileState.ERROR;\n        self.changed();\n      });\n  }\n}\n\nexport default DataTile;\n","/**\n * @module ol/reproj/Triangulation\n */\nimport {\n  boundingExtent,\n  createEmpty,\n  extendCoordinate,\n  getArea,\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n  getWidth,\n  intersects,\n} from '../extent.js';\nimport {getTransform} from '../proj.js';\nimport {modulo} from '../math.js';\n\n/**\n * Single triangle; consists of 3 source points and 3 target points.\n * @typedef {Object} Triangle\n * @property {Array<import(\"../coordinate.js\").Coordinate>} source Source.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} target Target.\n */\n\n/**\n * Maximum number of subdivision steps during raster reprojection triangulation.\n * Prevents high memory usage and large number of proj4 calls (for certain\n * transformations and areas). At most `2*(2^this)` triangles are created for\n * each triangulated extent (tile/image).\n * @type {number}\n */\nconst MAX_SUBDIVISION = 10;\n\n/**\n * Maximum allowed size of triangle relative to world width. When transforming\n * corners of world extent between certain projections, the resulting\n * triangulation seems to have zero error and no subdivision is performed. If\n * the triangle width is more than this (relative to world width; 0-1),\n * subdivison is forced (up to `MAX_SUBDIVISION`). Default is `0.25`.\n * @type {number}\n */\nconst MAX_TRIANGLE_WIDTH = 0.25;\n\n/**\n * @classdesc\n * Class containing triangulation of the given target extent.\n * Used for determining source data and the reprojection itself.\n */\nclass Triangulation {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../extent.js\").Extent} targetExtent Target extent to triangulate.\n   * @param {import(\"../extent.js\").Extent} maxSourceExtent Maximal source extent that can be used.\n   * @param {number} errorThreshold Acceptable error (in source units).\n   * @param {?number} destinationResolution The (optional) resolution of the destination.\n   */\n  constructor(\n    sourceProj,\n    targetProj,\n    targetExtent,\n    maxSourceExtent,\n    errorThreshold,\n    destinationResolution,\n  ) {\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.sourceProj_ = sourceProj;\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.targetProj_ = targetProj;\n\n    /** @type {!Object<string, import(\"../coordinate.js\").Coordinate>} */\n    let transformInvCache = {};\n    const transformInv = getTransform(this.targetProj_, this.sourceProj_);\n\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} c A coordinate.\n     * @return {import(\"../coordinate.js\").Coordinate} Transformed coordinate.\n     * @private\n     */\n    this.transformInv_ = function (c) {\n      const key = c[0] + '/' + c[1];\n      if (!transformInvCache[key]) {\n        transformInvCache[key] = transformInv(c);\n      }\n      return transformInvCache[key];\n    };\n\n    /**\n     * @type {import(\"../extent.js\").Extent}\n     * @private\n     */\n    this.maxSourceExtent_ = maxSourceExtent;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.errorThresholdSquared_ = errorThreshold * errorThreshold;\n\n    /**\n     * @type {Array<Triangle>}\n     * @private\n     */\n    this.triangles_ = [];\n\n    /**\n     * Indicates that the triangulation crosses edge of the source projection.\n     * @type {boolean}\n     * @private\n     */\n    this.wrapsXInSource_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.canWrapXInSource_ =\n      this.sourceProj_.canWrapX() &&\n      !!maxSourceExtent &&\n      !!this.sourceProj_.getExtent() &&\n      getWidth(maxSourceExtent) >= getWidth(this.sourceProj_.getExtent());\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.sourceWorldWidth_ = this.sourceProj_.getExtent()\n      ? getWidth(this.sourceProj_.getExtent())\n      : null;\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.targetWorldWidth_ = this.targetProj_.getExtent()\n      ? getWidth(this.targetProj_.getExtent())\n      : null;\n\n    const destinationTopLeft = getTopLeft(targetExtent);\n    const destinationTopRight = getTopRight(targetExtent);\n    const destinationBottomRight = getBottomRight(targetExtent);\n    const destinationBottomLeft = getBottomLeft(targetExtent);\n    const sourceTopLeft = this.transformInv_(destinationTopLeft);\n    const sourceTopRight = this.transformInv_(destinationTopRight);\n    const sourceBottomRight = this.transformInv_(destinationBottomRight);\n    const sourceBottomLeft = this.transformInv_(destinationBottomLeft);\n\n    /*\n     * The maxSubdivision controls how many splittings of the target area can\n     * be done. The idea here is to do a linear mapping of the target areas\n     * but the actual overall reprojection (can be) extremely non-linear. The\n     * default value of MAX_SUBDIVISION was chosen based on mapping a 256x256\n     * tile size. However this function is also called to remap canvas rendered\n     * layers which can be much larger. This calculation increases the maxSubdivision\n     * value by the right factor so that each 256x256 pixel area has\n     * MAX_SUBDIVISION divisions.\n     */\n    const maxSubdivision =\n      MAX_SUBDIVISION +\n      (destinationResolution\n        ? Math.max(\n            0,\n            Math.ceil(\n              Math.log2(\n                getArea(targetExtent) /\n                  (destinationResolution * destinationResolution * 256 * 256),\n              ),\n            ),\n          )\n        : 0);\n\n    this.addQuad_(\n      destinationTopLeft,\n      destinationTopRight,\n      destinationBottomRight,\n      destinationBottomLeft,\n      sourceTopLeft,\n      sourceTopRight,\n      sourceBottomRight,\n      sourceBottomLeft,\n      maxSubdivision,\n    );\n\n    if (this.wrapsXInSource_) {\n      let leftBound = Infinity;\n      this.triangles_.forEach(function (triangle, i, arr) {\n        leftBound = Math.min(\n          leftBound,\n          triangle.source[0][0],\n          triangle.source[1][0],\n          triangle.source[2][0],\n        );\n      });\n\n      // Shift triangles to be as close to `leftBound` as possible\n      // (if the distance is more than `worldWidth / 2` it can be closer.\n      this.triangles_.forEach((triangle) => {\n        if (\n          Math.max(\n            triangle.source[0][0],\n            triangle.source[1][0],\n            triangle.source[2][0],\n          ) -\n            leftBound >\n          this.sourceWorldWidth_ / 2\n        ) {\n          const newTriangle = [\n            [triangle.source[0][0], triangle.source[0][1]],\n            [triangle.source[1][0], triangle.source[1][1]],\n            [triangle.source[2][0], triangle.source[2][1]],\n          ];\n          if (newTriangle[0][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[0][0] -= this.sourceWorldWidth_;\n          }\n          if (newTriangle[1][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[1][0] -= this.sourceWorldWidth_;\n          }\n          if (newTriangle[2][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[2][0] -= this.sourceWorldWidth_;\n          }\n\n          // Rarely (if the extent contains both the dateline and prime meridian)\n          // the shift can in turn break some triangles.\n          // Detect this here and don't shift in such cases.\n          const minX = Math.min(\n            newTriangle[0][0],\n            newTriangle[1][0],\n            newTriangle[2][0],\n          );\n          const maxX = Math.max(\n            newTriangle[0][0],\n            newTriangle[1][0],\n            newTriangle[2][0],\n          );\n          if (maxX - minX < this.sourceWorldWidth_ / 2) {\n            triangle.source = newTriangle;\n          }\n        }\n      });\n    }\n\n    transformInvCache = {};\n  }\n\n  /**\n   * Adds triangle to the triangulation.\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @private\n   */\n  addTriangle_(a, b, c, aSrc, bSrc, cSrc) {\n    this.triangles_.push({\n      source: [aSrc, bSrc, cSrc],\n      target: [a, b, c],\n    });\n  }\n\n  /**\n   * Adds quad (points in clock-wise order) to the triangulation\n   * (and reprojects the vertices) if valid.\n   * Performs quad subdivision if needed to increase precision.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} d The target d coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} dSrc The source d coordinate.\n   * @param {number} maxSubdivision Maximal allowed subdivision of the quad.\n   * @private\n   */\n  addQuad_(a, b, c, d, aSrc, bSrc, cSrc, dSrc, maxSubdivision) {\n    const sourceQuadExtent = boundingExtent([aSrc, bSrc, cSrc, dSrc]);\n    const sourceCoverageX = this.sourceWorldWidth_\n      ? getWidth(sourceQuadExtent) / this.sourceWorldWidth_\n      : null;\n    const sourceWorldWidth = /** @type {number} */ (this.sourceWorldWidth_);\n\n    // when the quad is wrapped in the source projection\n    // it covers most of the projection extent, but not fully\n    const wrapsX =\n      this.sourceProj_.canWrapX() &&\n      sourceCoverageX > 0.5 &&\n      sourceCoverageX < 1;\n\n    let needsSubdivision = false;\n\n    if (maxSubdivision > 0) {\n      if (this.targetProj_.isGlobal() && this.targetWorldWidth_) {\n        const targetQuadExtent = boundingExtent([a, b, c, d]);\n        const targetCoverageX =\n          getWidth(targetQuadExtent) / this.targetWorldWidth_;\n        needsSubdivision =\n          targetCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n      if (!wrapsX && this.sourceProj_.isGlobal() && sourceCoverageX) {\n        needsSubdivision =\n          sourceCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n    }\n\n    if (!needsSubdivision && this.maxSourceExtent_) {\n      if (\n        isFinite(sourceQuadExtent[0]) &&\n        isFinite(sourceQuadExtent[1]) &&\n        isFinite(sourceQuadExtent[2]) &&\n        isFinite(sourceQuadExtent[3])\n      ) {\n        if (!intersects(sourceQuadExtent, this.maxSourceExtent_)) {\n          // whole quad outside source projection extent -> ignore\n          return;\n        }\n      }\n    }\n\n    let isNotFinite = 0;\n\n    if (!needsSubdivision) {\n      if (\n        !isFinite(aSrc[0]) ||\n        !isFinite(aSrc[1]) ||\n        !isFinite(bSrc[0]) ||\n        !isFinite(bSrc[1]) ||\n        !isFinite(cSrc[0]) ||\n        !isFinite(cSrc[1]) ||\n        !isFinite(dSrc[0]) ||\n        !isFinite(dSrc[1])\n      ) {\n        if (maxSubdivision > 0) {\n          needsSubdivision = true;\n        } else {\n          // It might be the case that only 1 of the points is infinite. In this case\n          // we can draw a single triangle with the other three points\n          isNotFinite =\n            (!isFinite(aSrc[0]) || !isFinite(aSrc[1]) ? 8 : 0) +\n            (!isFinite(bSrc[0]) || !isFinite(bSrc[1]) ? 4 : 0) +\n            (!isFinite(cSrc[0]) || !isFinite(cSrc[1]) ? 2 : 0) +\n            (!isFinite(dSrc[0]) || !isFinite(dSrc[1]) ? 1 : 0);\n          if (\n            isNotFinite != 1 &&\n            isNotFinite != 2 &&\n            isNotFinite != 4 &&\n            isNotFinite != 8\n          ) {\n            return;\n          }\n        }\n      }\n    }\n\n    if (maxSubdivision > 0) {\n      if (!needsSubdivision) {\n        const center = [(a[0] + c[0]) / 2, (a[1] + c[1]) / 2];\n        const centerSrc = this.transformInv_(center);\n\n        let dx;\n        if (wrapsX) {\n          const centerSrcEstimX =\n            (modulo(aSrc[0], sourceWorldWidth) +\n              modulo(cSrc[0], sourceWorldWidth)) /\n            2;\n          dx = centerSrcEstimX - modulo(centerSrc[0], sourceWorldWidth);\n        } else {\n          dx = (aSrc[0] + cSrc[0]) / 2 - centerSrc[0];\n        }\n        const dy = (aSrc[1] + cSrc[1]) / 2 - centerSrc[1];\n        const centerSrcErrorSquared = dx * dx + dy * dy;\n        needsSubdivision = centerSrcErrorSquared > this.errorThresholdSquared_;\n      }\n      if (needsSubdivision) {\n        if (Math.abs(a[0] - c[0]) <= Math.abs(a[1] - c[1])) {\n          // split horizontally (top & bottom)\n          const bc = [(b[0] + c[0]) / 2, (b[1] + c[1]) / 2];\n          const bcSrc = this.transformInv_(bc);\n          const da = [(d[0] + a[0]) / 2, (d[1] + a[1]) / 2];\n          const daSrc = this.transformInv_(da);\n\n          this.addQuad_(\n            a,\n            b,\n            bc,\n            da,\n            aSrc,\n            bSrc,\n            bcSrc,\n            daSrc,\n            maxSubdivision - 1,\n          );\n          this.addQuad_(\n            da,\n            bc,\n            c,\n            d,\n            daSrc,\n            bcSrc,\n            cSrc,\n            dSrc,\n            maxSubdivision - 1,\n          );\n        } else {\n          // split vertically (left & right)\n          const ab = [(a[0] + b[0]) / 2, (a[1] + b[1]) / 2];\n          const abSrc = this.transformInv_(ab);\n          const cd = [(c[0] + d[0]) / 2, (c[1] + d[1]) / 2];\n          const cdSrc = this.transformInv_(cd);\n\n          this.addQuad_(\n            a,\n            ab,\n            cd,\n            d,\n            aSrc,\n            abSrc,\n            cdSrc,\n            dSrc,\n            maxSubdivision - 1,\n          );\n          this.addQuad_(\n            ab,\n            b,\n            c,\n            cd,\n            abSrc,\n            bSrc,\n            cSrc,\n            cdSrc,\n            maxSubdivision - 1,\n          );\n        }\n        return;\n      }\n    }\n\n    if (wrapsX) {\n      if (!this.canWrapXInSource_) {\n        return;\n      }\n      this.wrapsXInSource_ = true;\n    }\n\n    // Exactly zero or one of *Src is not finite\n    // The triangles must have the diagonal line as the first side\n    // This is to allow easy code in reproj.s to make it straight for broken\n    // browsers that can't handle diagonal clipping\n    if ((isNotFinite & 0xb) == 0) {\n      this.addTriangle_(a, c, d, aSrc, cSrc, dSrc);\n    }\n    if ((isNotFinite & 0xe) == 0) {\n      this.addTriangle_(a, c, b, aSrc, cSrc, bSrc);\n    }\n    if (isNotFinite) {\n      // Try the other two triangles\n      if ((isNotFinite & 0xd) == 0) {\n        this.addTriangle_(b, d, a, bSrc, dSrc, aSrc);\n      }\n      if ((isNotFinite & 0x7) == 0) {\n        this.addTriangle_(b, d, c, bSrc, dSrc, cSrc);\n      }\n    }\n  }\n\n  /**\n   * Calculates extent of the `source` coordinates from all the triangles.\n   *\n   * @return {import(\"../extent.js\").Extent} Calculated extent.\n   */\n  calculateSourceExtent() {\n    const extent = createEmpty();\n\n    this.triangles_.forEach(function (triangle, i, arr) {\n      const src = triangle.source;\n      extendCoordinate(extent, src[0]);\n      extendCoordinate(extent, src[1]);\n      extendCoordinate(extent, src[2]);\n    });\n\n    return extent;\n  }\n\n  /**\n   * @return {Array<Triangle>} Array of the calculated triangles.\n   */\n  getTriangles() {\n    return this.triangles_;\n  }\n}\n\nexport default Triangulation;\n","/**\n * @module ol/reproj\n */\nimport {\n  containsCoordinate,\n  createEmpty,\n  extend,\n  forEachCorner,\n  getCenter,\n  getHeight,\n  getTopLeft,\n  getWidth,\n} from './extent.js';\nimport {createCanvasContext2D, releaseCanvas} from './dom.js';\nimport {getPointResolution, transform} from './proj.js';\nimport {solveLinearSystem} from './math.js';\n\nlet brokenDiagonalRendering_;\n\n/**\n * @type {Array<HTMLCanvasElement>}\n */\nexport const canvasPool = [];\n\n/**\n * This draws a small triangle into a canvas by setting the triangle as the clip region\n * and then drawing a (too large) rectangle\n *\n * @param {CanvasRenderingContext2D} ctx The context in which to draw the triangle\n * @param {number} u1 The x-coordinate of the second point. The first point is 0,0.\n * @param {number} v1 The y-coordinate of the second point.\n * @param {number} u2 The x-coordinate of the third point.\n * @param {number} v2 The y-coordinate of the third point.\n */\nfunction drawTestTriangle(ctx, u1, v1, u2, v2) {\n  ctx.beginPath();\n  ctx.moveTo(0, 0);\n  ctx.lineTo(u1, v1);\n  ctx.lineTo(u2, v2);\n  ctx.closePath();\n  ctx.save();\n  ctx.clip();\n  ctx.fillRect(0, 0, Math.max(u1, u2) + 1, Math.max(v1, v2));\n  ctx.restore();\n}\n\n/**\n * Given the data from getImageData, see if the right values appear at the provided offset.\n * Returns true if either the color or transparency is off\n *\n * @param {Uint8ClampedArray} data The data returned from getImageData\n * @param {number} offset The pixel offset from the start of data.\n * @return {boolean} true if the diagonal rendering is broken\n */\nfunction verifyBrokenDiagonalRendering(data, offset) {\n  // the values ought to be close to the rgba(210, 0, 0, 0.75)\n  return (\n    Math.abs(data[offset * 4] - 210) > 2 ||\n    Math.abs(data[offset * 4 + 3] - 0.75 * 255) > 2\n  );\n}\n\n/**\n * Determines if the current browser configuration can render triangular clip regions correctly.\n * This value is cached so the function is only expensive the first time called.\n * Firefox on Windows (as of now) does not if HWA is enabled. See https://bugzilla.mozilla.org/show_bug.cgi?id=1606976\n * Chrome works, and everything seems to work on OSX and Android. This function caches the\n * result. I suppose that it is conceivably possible that a browser might flip modes while the app is\n * running, but lets hope not.\n *\n * @return {boolean} true if the Diagonal Rendering is broken.\n */\nfunction isBrokenDiagonalRendering() {\n  if (brokenDiagonalRendering_ === undefined) {\n    const ctx = createCanvasContext2D(6, 6, canvasPool);\n    ctx.globalCompositeOperation = 'lighter';\n    ctx.fillStyle = 'rgba(210, 0, 0, 0.75)';\n    drawTestTriangle(ctx, 4, 5, 4, 0);\n    drawTestTriangle(ctx, 4, 5, 0, 5);\n    const data = ctx.getImageData(0, 0, 3, 3).data;\n    brokenDiagonalRendering_ =\n      verifyBrokenDiagonalRendering(data, 0) ||\n      verifyBrokenDiagonalRendering(data, 4) ||\n      verifyBrokenDiagonalRendering(data, 8);\n    releaseCanvas(ctx);\n    canvasPool.push(ctx.canvas);\n  }\n\n  return brokenDiagonalRendering_;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./coordinate.js\").Coordinate} targetCenter Target center.\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceResolution(\n  sourceProj,\n  targetProj,\n  targetCenter,\n  targetResolution,\n) {\n  const sourceCenter = transform(targetCenter, targetProj, sourceProj);\n\n  // calculate the ideal resolution of the source data\n  let sourceResolution = getPointResolution(\n    targetProj,\n    targetResolution,\n    targetCenter,\n  );\n\n  const targetMetersPerUnit = targetProj.getMetersPerUnit();\n  if (targetMetersPerUnit !== undefined) {\n    sourceResolution *= targetMetersPerUnit;\n  }\n  const sourceMetersPerUnit = sourceProj.getMetersPerUnit();\n  if (sourceMetersPerUnit !== undefined) {\n    sourceResolution /= sourceMetersPerUnit;\n  }\n\n  // Based on the projection properties, the point resolution at the specified\n  // coordinates may be slightly different. We need to reverse-compensate this\n  // in order to achieve optimal results.\n\n  const sourceExtent = sourceProj.getExtent();\n  if (!sourceExtent || containsCoordinate(sourceExtent, sourceCenter)) {\n    const compensationFactor =\n      getPointResolution(sourceProj, sourceResolution, sourceCenter) /\n      sourceResolution;\n    if (isFinite(compensationFactor) && compensationFactor > 0) {\n      sourceResolution /= compensationFactor;\n    }\n  }\n\n  return sourceResolution;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceExtentResolution(\n  sourceProj,\n  targetProj,\n  targetExtent,\n  targetResolution,\n) {\n  const targetCenter = getCenter(targetExtent);\n  let sourceResolution = calculateSourceResolution(\n    sourceProj,\n    targetProj,\n    targetCenter,\n    targetResolution,\n  );\n\n  if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n    forEachCorner(targetExtent, function (corner) {\n      sourceResolution = calculateSourceResolution(\n        sourceProj,\n        targetProj,\n        corner,\n        targetResolution,\n      );\n      return isFinite(sourceResolution) && sourceResolution > 0;\n    });\n  }\n\n  return sourceResolution;\n}\n\n/**\n * @typedef {Object} ImageExtent\n * @property {import(\"./extent.js\").Extent} extent Extent.\n * @property {import(\"./extent.js\").Extent} [clipExtent] Clip extent.\n * @property {import('./DataTile.js').ImageLike} image Image.\n */\n\n/**\n * Renders the source data into new canvas based on the triangulation.\n *\n * @param {number} width Width of the canvas.\n * @param {number} height Height of the canvas.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} sourceResolution Source resolution.\n * @param {import(\"./extent.js\").Extent} sourceExtent Extent of the data source.\n * @param {number} targetResolution Target resolution.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent.\n * @param {import(\"./reproj/Triangulation.js\").default} triangulation Calculated triangulation.\n * @param {Array<ImageExtent>} sources Array of sources.\n * @param {number} gutter Gutter of the sources.\n * @param {boolean} [renderEdges] Render reprojection edges.\n * @param {boolean} [interpolate] Use linear interpolation when resampling.\n * @param {boolean} [drawSingle] Draw single source images directly without stitchContext.\n * @param {boolean} [clipExtent] Clip stitchContext to sourceExtent.\n * @return {HTMLCanvasElement} Canvas with reprojected data.\n */\nexport function render(\n  width,\n  height,\n  pixelRatio,\n  sourceResolution,\n  sourceExtent,\n  targetResolution,\n  targetExtent,\n  triangulation,\n  sources,\n  gutter,\n  renderEdges,\n  interpolate,\n  drawSingle,\n  clipExtent,\n) {\n  const context = createCanvasContext2D(\n    Math.round(pixelRatio * width),\n    Math.round(pixelRatio * height),\n    canvasPool,\n  );\n\n  if (!interpolate) {\n    context.imageSmoothingEnabled = false;\n  }\n\n  if (sources.length === 0) {\n    return context.canvas;\n  }\n\n  context.scale(pixelRatio, pixelRatio);\n\n  function pixelRound(value) {\n    return Math.round(value * pixelRatio) / pixelRatio;\n  }\n\n  context.globalCompositeOperation = 'lighter';\n\n  const sourceDataExtent = createEmpty();\n  sources.forEach(function (src, i, arr) {\n    extend(sourceDataExtent, src.extent);\n  });\n\n  let stitchContext;\n  const stitchScale = pixelRatio / sourceResolution;\n  // Round up Float32 scale values to prevent interpolation in Firefox.\n  const inverseScale = (interpolate ? 1 : 1 + Math.pow(2, -24)) / stitchScale;\n\n  if (!drawSingle || sources.length !== 1 || gutter !== 0) {\n    stitchContext = createCanvasContext2D(\n      Math.round(getWidth(sourceDataExtent) * stitchScale),\n      Math.round(getHeight(sourceDataExtent) * stitchScale),\n      canvasPool,\n    );\n\n    if (!interpolate) {\n      stitchContext.imageSmoothingEnabled = false;\n    }\n    if (sourceExtent && clipExtent) {\n      const xPos = (sourceExtent[0] - sourceDataExtent[0]) * stitchScale;\n      const yPos = -(sourceExtent[3] - sourceDataExtent[3]) * stitchScale;\n      const width = getWidth(sourceExtent) * stitchScale;\n      const height = getHeight(sourceExtent) * stitchScale;\n      stitchContext.rect(xPos, yPos, width, height);\n      stitchContext.clip();\n    }\n\n    sources.forEach(function (src, i, arr) {\n      // This test should never fail -- but it does. Need to find a fix the upstream condition\n      if (src.image.width > 0 && src.image.height > 0) {\n        if (src.clipExtent) {\n          stitchContext.save();\n          const xPos = (src.clipExtent[0] - sourceDataExtent[0]) * stitchScale;\n          const yPos = -(src.clipExtent[3] - sourceDataExtent[3]) * stitchScale;\n          const width = getWidth(src.clipExtent) * stitchScale;\n          const height = getHeight(src.clipExtent) * stitchScale;\n          stitchContext.rect(\n            interpolate ? xPos : Math.round(xPos),\n            interpolate ? yPos : Math.round(yPos),\n            interpolate ? width : Math.round(xPos + width) - Math.round(xPos),\n            interpolate ? height : Math.round(yPos + height) - Math.round(yPos),\n          );\n          stitchContext.clip();\n        }\n\n        const xPos = (src.extent[0] - sourceDataExtent[0]) * stitchScale;\n        const yPos = -(src.extent[3] - sourceDataExtent[3]) * stitchScale;\n        const srcWidth = getWidth(src.extent) * stitchScale;\n        const srcHeight = getHeight(src.extent) * stitchScale;\n        stitchContext.drawImage(\n          src.image,\n          gutter,\n          gutter,\n          src.image.width - 2 * gutter,\n          src.image.height - 2 * gutter,\n          interpolate ? xPos : Math.round(xPos),\n          interpolate ? yPos : Math.round(yPos),\n          interpolate\n            ? srcWidth\n            : Math.round(xPos + srcWidth) - Math.round(xPos),\n          interpolate\n            ? srcHeight\n            : Math.round(yPos + srcHeight) - Math.round(yPos),\n        );\n\n        if (src.clipExtent) {\n          stitchContext.restore();\n        }\n      }\n    });\n  }\n  const targetTopLeft = getTopLeft(targetExtent);\n\n  triangulation.getTriangles().forEach(function (triangle, i, arr) {\n    /* Calculate affine transform (src -> dst)\n     * Resulting matrix can be used to transform coordinate\n     * from `sourceProjection` to destination pixels.\n     *\n     * To optimize number of context calls and increase numerical stability,\n     * we also do the following operations:\n     * trans(-topLeftExtentCorner), scale(1 / targetResolution), scale(1, -1)\n     * here before solving the linear system so [ui, vi] are pixel coordinates.\n     *\n     * Src points: xi, yi\n     * Dst points: ui, vi\n     * Affine coefficients: aij\n     *\n     * | x0 y0 1  0  0 0 |   |a00|   |u0|\n     * | x1 y1 1  0  0 0 |   |a01|   |u1|\n     * | x2 y2 1  0  0 0 | x |a02| = |u2|\n     * |  0  0 0 x0 y0 1 |   |a10|   |v0|\n     * |  0  0 0 x1 y1 1 |   |a11|   |v1|\n     * |  0  0 0 x2 y2 1 |   |a12|   |v2|\n     */\n    const source = triangle.source;\n    const target = triangle.target;\n    let x0 = source[0][0],\n      y0 = source[0][1];\n    let x1 = source[1][0],\n      y1 = source[1][1];\n    let x2 = source[2][0],\n      y2 = source[2][1];\n    // Make sure that everything is on pixel boundaries\n    const u0 = pixelRound((target[0][0] - targetTopLeft[0]) / targetResolution);\n    const v0 = pixelRound(\n      -(target[0][1] - targetTopLeft[1]) / targetResolution,\n    );\n    const u1 = pixelRound((target[1][0] - targetTopLeft[0]) / targetResolution);\n    const v1 = pixelRound(\n      -(target[1][1] - targetTopLeft[1]) / targetResolution,\n    );\n    const u2 = pixelRound((target[2][0] - targetTopLeft[0]) / targetResolution);\n    const v2 = pixelRound(\n      -(target[2][1] - targetTopLeft[1]) / targetResolution,\n    );\n\n    // Shift all the source points to improve numerical stability\n    // of all the subsequent calculations. The [x0, y0] is used here.\n    // This is also used to simplify the linear system.\n    const sourceNumericalShiftX = x0;\n    const sourceNumericalShiftY = y0;\n    x0 = 0;\n    y0 = 0;\n    x1 -= sourceNumericalShiftX;\n    y1 -= sourceNumericalShiftY;\n    x2 -= sourceNumericalShiftX;\n    y2 -= sourceNumericalShiftY;\n\n    const augmentedMatrix = [\n      [x1, y1, 0, 0, u1 - u0],\n      [x2, y2, 0, 0, u2 - u0],\n      [0, 0, x1, y1, v1 - v0],\n      [0, 0, x2, y2, v2 - v0],\n    ];\n    const affineCoefs = solveLinearSystem(augmentedMatrix);\n    if (!affineCoefs) {\n      return;\n    }\n\n    context.save();\n    context.beginPath();\n\n    if (isBrokenDiagonalRendering() || !interpolate) {\n      // Make sure that all lines are horizontal or vertical\n      context.moveTo(u1, v1);\n      // This is the diagonal line. Do it in 4 steps\n      const steps = 4;\n      const ud = u0 - u1;\n      const vd = v0 - v1;\n      for (let step = 0; step < steps; step++) {\n        // Go horizontally\n        context.lineTo(\n          u1 + pixelRound(((step + 1) * ud) / steps),\n          v1 + pixelRound((step * vd) / (steps - 1)),\n        );\n        // Go vertically\n        if (step != steps - 1) {\n          context.lineTo(\n            u1 + pixelRound(((step + 1) * ud) / steps),\n            v1 + pixelRound(((step + 1) * vd) / (steps - 1)),\n          );\n        }\n      }\n      // We are almost at u0r, v0r\n      context.lineTo(u2, v2);\n    } else {\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n    }\n\n    context.clip();\n\n    context.transform(\n      affineCoefs[0],\n      affineCoefs[2],\n      affineCoefs[1],\n      affineCoefs[3],\n      u0,\n      v0,\n    );\n\n    context.translate(\n      sourceDataExtent[0] - sourceNumericalShiftX,\n      sourceDataExtent[3] - sourceNumericalShiftY,\n    );\n\n    let image;\n    if (stitchContext) {\n      image = stitchContext.canvas;\n      context.scale(inverseScale, -inverseScale);\n    } else {\n      const source = sources[0];\n      const extent = source.extent;\n      image = source.image;\n      context.scale(\n        getWidth(extent) / image.width,\n        -getHeight(extent) / image.height,\n      );\n    }\n\n    context.drawImage(image, 0, 0);\n    context.restore();\n  });\n\n  if (stitchContext) {\n    releaseCanvas(stitchContext);\n    canvasPool.push(stitchContext.canvas);\n  }\n\n  if (renderEdges) {\n    context.save();\n\n    context.globalCompositeOperation = 'source-over';\n    context.strokeStyle = 'black';\n    context.lineWidth = 1;\n\n    triangulation.getTriangles().forEach(function (triangle, i, arr) {\n      const target = triangle.target;\n      const u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n      const v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n      const u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n      const v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n      const u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n      const v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n\n      context.beginPath();\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n      context.closePath();\n      context.stroke();\n    });\n\n    context.restore();\n  }\n  return context.canvas;\n}\n","/**\n * @module ol/reproj/DataTile\n */\nimport {ERROR_THRESHOLD} from './common.js';\n\nimport DataTile, {asArrayLike, asImageLike, toArray} from '../DataTile.js';\nimport EventType from '../events/EventType.js';\nimport TileState from '../TileState.js';\nimport Triangulation from './Triangulation.js';\nimport {\n  calculateSourceExtentResolution,\n  canvasPool,\n  render as renderReprojected,\n} from '../reproj.js';\nimport {clamp} from '../math.js';\nimport {createCanvasContext2D, releaseCanvas} from '../dom.js';\nimport {getArea, getIntersection, getWidth, wrapAndSliceX} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {function(number, number, number, number) : import(\"../DataTile.js\").default} TileGetter\n */\n\n/**\n * @typedef {Object} TileOffset\n * @property {DataTile} tile Tile.\n * @property {number} offset Offset.\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n * @property {import(\"../tilegrid/TileGrid.js\").default} sourceTileGrid Source tile grid.\n * @property {import(\"../proj/Projection.js\").default} targetProj Target projection.\n * @property {import(\"../tilegrid/TileGrid.js\").default} targetTileGrid Target tile grid.\n * @property {import(\"../tilecoord.js\").TileCoord} tileCoord Coordinate of the tile.\n * @property {import(\"../tilecoord.js\").TileCoord} [wrappedTileCoord] Coordinate of the tile wrapped in X.\n * @property {number} pixelRatio Pixel ratio.\n * @property {number} gutter Gutter of the source tiles.\n * @property {TileGetter} getTileFunction Function returning source tiles (z, x, y, pixelRatio).\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n * @property {number} [errorThreshold] Acceptable reprojection error (in px).\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n */\n\n/**\n * @classdesc\n * Class encapsulating single reprojected data tile.\n * See {@link module:ol/source/DataTile~DataTileSource}.\n *\n */\nclass ReprojDataTile extends DataTile {\n  /**\n   * @param {Options} options Tile options.\n   */\n  constructor(options) {\n    super({\n      tileCoord: options.tileCoord,\n      loader: () => Promise.resolve(new Uint8Array(4)),\n      interpolate: options.interpolate,\n      transition: options.transition,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = options.pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = options.gutter;\n\n    /**\n     * @type {import(\"../DataTile.js\").Data}\n     * @private\n     */\n    this.reprojData_ = null;\n\n    /**\n     * @type {Error}\n     * @private\n     */\n    this.reprojError_ = null;\n\n    /**\n     * @type {import('../size.js').Size}\n     * @private\n     */\n    this.reprojSize_ = undefined;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.sourceTileGrid_ = options.sourceTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.targetTileGrid_ = options.targetTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilecoord.js\").TileCoord}\n     */\n    this.wrappedTileCoord_ = options.wrappedTileCoord || options.tileCoord;\n\n    /**\n     * @private\n     * @type {!Array<TileOffset>}\n     */\n    this.sourceTiles_ = [];\n\n    /**\n     * @private\n     * @type {?Array<import(\"../events.js\").EventsKey>}\n     */\n    this.sourcesListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.sourceZ_ = 0;\n\n    const sourceProj = options.sourceProj;\n    const sourceProjExtent = sourceProj.getExtent();\n    const sourceTileGridExtent = options.sourceTileGrid.getExtent();\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.clipExtent_ = sourceProj.canWrapX()\n      ? sourceTileGridExtent\n        ? getIntersection(sourceProjExtent, sourceTileGridExtent)\n        : sourceProjExtent\n      : sourceTileGridExtent;\n\n    const targetExtent = this.targetTileGrid_.getTileCoordExtent(\n      this.wrappedTileCoord_,\n    );\n    const maxTargetExtent = this.targetTileGrid_.getExtent();\n    let maxSourceExtent = this.sourceTileGrid_.getExtent();\n\n    const limitedTargetExtent = maxTargetExtent\n      ? getIntersection(targetExtent, maxTargetExtent)\n      : targetExtent;\n\n    if (getArea(limitedTargetExtent) === 0) {\n      // Tile is completely outside range -> EMPTY\n      // TODO: is it actually correct that the source even creates the tile ?\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    if (sourceProjExtent) {\n      if (!maxSourceExtent) {\n        maxSourceExtent = sourceProjExtent;\n      } else {\n        maxSourceExtent = getIntersection(maxSourceExtent, sourceProjExtent);\n      }\n    }\n\n    const targetResolution = this.targetTileGrid_.getResolution(\n      this.wrappedTileCoord_[0],\n    );\n\n    const targetProj = options.targetProj;\n    const sourceResolution = calculateSourceExtentResolution(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      targetResolution,\n    );\n\n    if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n      // invalid sourceResolution -> EMPTY\n      // probably edges of the projections when no extent is defined\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const errorThresholdInPixels =\n      options.errorThreshold !== undefined\n        ? options.errorThreshold\n        : ERROR_THRESHOLD;\n\n    /**\n     * @private\n     * @type {!import(\"./Triangulation.js\").default}\n     */\n    this.triangulation_ = new Triangulation(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      maxSourceExtent,\n      sourceResolution * errorThresholdInPixels,\n      targetResolution,\n    );\n\n    if (this.triangulation_.getTriangles().length === 0) {\n      // no valid triangles -> EMPTY\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    this.sourceZ_ = this.sourceTileGrid_.getZForResolution(sourceResolution);\n    let sourceExtent = this.triangulation_.calculateSourceExtent();\n\n    if (maxSourceExtent) {\n      if (sourceProj.canWrapX()) {\n        sourceExtent[1] = clamp(\n          sourceExtent[1],\n          maxSourceExtent[1],\n          maxSourceExtent[3],\n        );\n        sourceExtent[3] = clamp(\n          sourceExtent[3],\n          maxSourceExtent[1],\n          maxSourceExtent[3],\n        );\n      } else {\n        sourceExtent = getIntersection(sourceExtent, maxSourceExtent);\n      }\n    }\n\n    if (!getArea(sourceExtent)) {\n      this.state = TileState.EMPTY;\n    } else {\n      let worldWidth = 0;\n      let worldsAway = 0;\n      if (sourceProj.canWrapX()) {\n        worldWidth = getWidth(sourceProjExtent);\n        worldsAway = Math.floor(\n          (sourceExtent[0] - sourceProjExtent[0]) / worldWidth,\n        );\n      }\n\n      const sourceExtents = wrapAndSliceX(\n        sourceExtent.slice(),\n        sourceProj,\n        true,\n      );\n      sourceExtents.forEach((extent) => {\n        const sourceRange = this.sourceTileGrid_.getTileRangeForExtentAndZ(\n          extent,\n          this.sourceZ_,\n        );\n        const getTile = options.getTileFunction;\n        for (let srcX = sourceRange.minX; srcX <= sourceRange.maxX; srcX++) {\n          for (let srcY = sourceRange.minY; srcY <= sourceRange.maxY; srcY++) {\n            const tile = getTile(this.sourceZ_, srcX, srcY, this.pixelRatio_);\n            if (tile) {\n              const offset = worldsAway * worldWidth;\n              this.sourceTiles_.push({tile, offset});\n            }\n          }\n        }\n        ++worldsAway;\n      });\n\n      if (this.sourceTiles_.length === 0) {\n        this.state = TileState.EMPTY;\n      }\n    }\n  }\n\n  /**\n   * Get the tile size.\n   * @return {import('../size.js').Size} Tile size.\n   */\n  getSize() {\n    return this.reprojSize_;\n  }\n\n  /**\n   * Get the data for the tile.\n   * @return {import(\"../DataTile.js\").Data} Tile data.\n   */\n  getData() {\n    return this.reprojData_;\n  }\n\n  /**\n   * Get any loading error.\n   * @return {Error} Loading error.\n   */\n  getError() {\n    return this.reprojError_;\n  }\n\n  /**\n   * @private\n   */\n  reproject_() {\n    const dataSources = [];\n    this.sourceTiles_.forEach((source) => {\n      const tile = source.tile;\n      if (!tile || tile.getState() !== TileState.LOADED) {\n        return;\n      }\n      const size = tile.getSize();\n      const gutter = this.gutter_;\n      /**\n       * @type {import(\"../DataTile.js\").ArrayLike}\n       */\n      let tileData;\n      const arrayData = asArrayLike(tile.getData());\n      if (arrayData) {\n        tileData = arrayData;\n      } else {\n        tileData = toArray(asImageLike(tile.getData()));\n      }\n      const pixelSize = [size[0] + 2 * gutter, size[1] + 2 * gutter];\n      const isFloat = tileData instanceof Float32Array;\n      const pixelCount = pixelSize[0] * pixelSize[1];\n      const DataType = isFloat ? Float32Array : Uint8Array;\n      const tileDataR = new DataType(tileData.buffer);\n      const bytesPerElement = DataType.BYTES_PER_ELEMENT;\n      const bytesPerPixel = (bytesPerElement * tileDataR.length) / pixelCount;\n      const bytesPerRow = tileDataR.byteLength / pixelSize[1];\n      const bandCount = Math.floor(\n        bytesPerRow / bytesPerElement / pixelSize[0],\n      );\n      const packedLength = pixelCount * bandCount;\n      let packedData = tileDataR;\n      if (tileDataR.length !== packedLength) {\n        packedData = new DataType(packedLength);\n        let dataIndex = 0;\n        let rowOffset = 0;\n        const colCount = pixelSize[0] * bandCount;\n        for (let rowIndex = 0; rowIndex < pixelSize[1]; ++rowIndex) {\n          for (let colIndex = 0; colIndex < colCount; ++colIndex) {\n            packedData[dataIndex++] = tileDataR[rowOffset + colIndex];\n          }\n          rowOffset += bytesPerRow / bytesPerElement;\n        }\n      }\n      const extent = this.sourceTileGrid_.getTileCoordExtent(tile.tileCoord);\n      extent[0] += source.offset;\n      extent[2] += source.offset;\n      const clipExtent = this.clipExtent_?.slice();\n      if (clipExtent) {\n        clipExtent[0] += source.offset;\n        clipExtent[2] += source.offset;\n      }\n      dataSources.push({\n        extent: extent,\n        clipExtent: clipExtent,\n        data: new Uint8Array(packedData.buffer),\n        dataType: DataType,\n        bytesPerPixel: bytesPerPixel,\n        pixelSize: pixelSize,\n      });\n    });\n    this.sourceTiles_.length = 0;\n\n    if (dataSources.length === 0) {\n      this.state = TileState.ERROR;\n    } else {\n      const z = this.wrappedTileCoord_[0];\n      const size = this.targetTileGrid_.getTileSize(z);\n      const targetWidth = typeof size === 'number' ? size : size[0];\n      const targetHeight = typeof size === 'number' ? size : size[1];\n      const targetResolution = this.targetTileGrid_.getResolution(z);\n      const sourceResolution = this.sourceTileGrid_.getResolution(\n        this.sourceZ_,\n      );\n\n      const targetExtent = this.targetTileGrid_.getTileCoordExtent(\n        this.wrappedTileCoord_,\n      );\n\n      let dataR, dataU;\n\n      const bytesPerPixel = dataSources[0].bytesPerPixel;\n\n      const reprojs = Math.ceil(bytesPerPixel / 3);\n      for (let reproj = reprojs - 1; reproj >= 0; --reproj) {\n        const sources = [];\n        for (let i = 0, len = dataSources.length; i < len; ++i) {\n          const dataSource = dataSources[i];\n          const buffer = dataSource.data;\n          const pixelSize = dataSource.pixelSize;\n          const width = pixelSize[0];\n          const height = pixelSize[1];\n          const context = createCanvasContext2D(width, height, canvasPool);\n          const imageData = context.createImageData(width, height);\n          const data = imageData.data;\n          let offset = reproj * 3;\n          for (let j = 0, len = data.length; j < len; j += 4) {\n            data[j] = buffer[offset];\n            data[j + 1] = buffer[offset + 1];\n            data[j + 2] = buffer[offset + 2];\n            data[j + 3] = 255;\n            offset += bytesPerPixel;\n          }\n          context.putImageData(imageData, 0, 0);\n          sources.push({\n            extent: dataSource.extent,\n            clipExtent: dataSource.clipExtent,\n            image: context.canvas,\n          });\n        }\n\n        const canvas = renderReprojected(\n          targetWidth,\n          targetHeight,\n          this.pixelRatio_,\n          sourceResolution,\n          this.sourceTileGrid_.getExtent(),\n          targetResolution,\n          targetExtent,\n          this.triangulation_,\n          sources,\n          this.gutter_,\n          false,\n          false,\n          false,\n          //true,\n        );\n\n        for (let i = 0, len = sources.length; i < len; ++i) {\n          const canvas = sources[i].image;\n          const context = canvas.getContext('2d');\n          releaseCanvas(context);\n          canvasPool.push(context.canvas);\n        }\n\n        const context = canvas.getContext('2d');\n        const imageData = context.getImageData(\n          0,\n          0,\n          canvas.width,\n          canvas.height,\n        );\n\n        releaseCanvas(context);\n        canvasPool.push(canvas);\n\n        if (!dataR) {\n          dataU = new Uint8Array(\n            bytesPerPixel * imageData.width * imageData.height,\n          );\n          dataR = new dataSources[0].dataType(dataU.buffer);\n        }\n\n        const data = imageData.data;\n        let offset = reproj * 3;\n        for (let i = 0, len = data.length; i < len; i += 4) {\n          if (data[i + 3] === 255) {\n            dataU[offset] = data[i];\n            dataU[offset + 1] = data[i + 1];\n            dataU[offset + 2] = data[i + 2];\n          } else {\n            dataU[offset] = 0;\n            dataU[offset + 1] = 0;\n            dataU[offset + 2] = 0;\n          }\n          offset += bytesPerPixel;\n        }\n      }\n\n      this.reprojData_ = dataR;\n      this.reprojSize_ = [\n        Math.round(targetWidth * this.pixelRatio_),\n        Math.round(targetHeight * this.pixelRatio_),\n      ];\n      this.state = TileState.LOADED;\n    }\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state !== TileState.IDLE && this.state !== TileState.ERROR) {\n      return;\n    }\n    this.state = TileState.LOADING;\n    this.changed();\n\n    let leftToLoad = 0;\n\n    this.sourcesListenerKeys_ = [];\n    this.sourceTiles_.forEach(({tile}) => {\n      const state = tile.getState();\n      if (state !== TileState.IDLE && state !== TileState.LOADING) {\n        return;\n      }\n      leftToLoad++;\n\n      const sourceListenKey = listen(\n        tile,\n        EventType.CHANGE,\n        function () {\n          const state = tile.getState();\n          if (\n            state == TileState.LOADED ||\n            state == TileState.ERROR ||\n            state == TileState.EMPTY\n          ) {\n            unlistenByKey(sourceListenKey);\n            leftToLoad--;\n            if (leftToLoad === 0) {\n              this.unlistenSources_();\n              this.reproject_();\n            }\n          }\n        },\n        this,\n      );\n      this.sourcesListenerKeys_.push(sourceListenKey);\n    });\n\n    if (leftToLoad === 0) {\n      setTimeout(this.reproject_.bind(this), 0);\n    } else {\n      this.sourceTiles_.forEach(function ({tile}) {\n        const state = tile.getState();\n        if (state == TileState.IDLE) {\n          tile.load();\n        }\n      });\n    }\n  }\n\n  /**\n   * @private\n   */\n  unlistenSources_() {\n    this.sourcesListenerKeys_.forEach(unlistenByKey);\n    this.sourcesListenerKeys_ = null;\n  }\n}\n\nexport default ReprojDataTile;\n","/**\n * @module ol/reproj/Tile\n */\nimport {ERROR_THRESHOLD} from './common.js';\n\nimport EventType from '../events/EventType.js';\nimport Tile from '../Tile.js';\nimport TileState from '../TileState.js';\nimport Triangulation from './Triangulation.js';\nimport {\n  calculateSourceExtentResolution,\n  canvasPool,\n  render as renderReprojected,\n} from '../reproj.js';\nimport {clamp} from '../math.js';\nimport {getArea, getIntersection, getWidth, wrapAndSliceX} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {releaseCanvas} from '../dom.js';\n\n/**\n * @typedef {function(number, number, number, number) : (import(\"../ImageTile.js\").default)} FunctionType\n */\n\n/**\n * @typedef {Object} TileOffset\n * @property {import(\"../ImageTile.js\").default} tile Tile.\n * @property {number} offset Offset.\n */\n\n/**\n * @classdesc\n * Class encapsulating single reprojected tile.\n * See {@link module:ol/source/TileImage~TileImage}.\n *\n */\nclass ReprojTile extends Tile {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} sourceTileGrid Source tile grid.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} targetTileGrid Target tile grid.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Coordinate of the tile.\n   * @param {import(\"../tilecoord.js\").TileCoord} wrappedTileCoord Coordinate of the tile wrapped in X.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} gutter Gutter of the source tiles.\n   * @param {FunctionType} getTileFunction\n   *     Function returning source tiles (z, x, y, pixelRatio).\n   * @param {number} [errorThreshold] Acceptable reprojection error (in px).\n   * @param {boolean} [renderEdges] Render reprojection edges.\n   * @param {import(\"../Tile.js\").Options} [options] Tile options.\n   */\n  constructor(\n    sourceProj,\n    sourceTileGrid,\n    targetProj,\n    targetTileGrid,\n    tileCoord,\n    wrappedTileCoord,\n    pixelRatio,\n    gutter,\n    getTileFunction,\n    errorThreshold,\n    renderEdges,\n    options,\n  ) {\n    super(tileCoord, TileState.IDLE, options);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderEdges_ = renderEdges !== undefined ? renderEdges : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = gutter;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.sourceTileGrid_ = sourceTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.targetTileGrid_ = targetTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilecoord.js\").TileCoord}\n     */\n    this.wrappedTileCoord_ = wrappedTileCoord ? wrappedTileCoord : tileCoord;\n\n    /**\n     * @private\n     * @type {!Array<TileOffset>}\n     */\n    this.sourceTiles_ = [];\n\n    /**\n     * @private\n     * @type {?Array<import(\"../events.js\").EventsKey>}\n     */\n    this.sourcesListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.sourceZ_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.clipExtent_ = sourceProj.canWrapX()\n      ? sourceProj.getExtent()\n      : undefined;\n\n    const targetExtent = targetTileGrid.getTileCoordExtent(\n      this.wrappedTileCoord_,\n    );\n    const maxTargetExtent = this.targetTileGrid_.getExtent();\n    let maxSourceExtent = this.sourceTileGrid_.getExtent();\n\n    const limitedTargetExtent = maxTargetExtent\n      ? getIntersection(targetExtent, maxTargetExtent)\n      : targetExtent;\n\n    if (getArea(limitedTargetExtent) === 0) {\n      // Tile is completely outside range -> EMPTY\n      // TODO: is it actually correct that the source even creates the tile ?\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const sourceProjExtent = sourceProj.getExtent();\n    if (sourceProjExtent) {\n      if (!maxSourceExtent) {\n        maxSourceExtent = sourceProjExtent;\n      } else {\n        maxSourceExtent = getIntersection(maxSourceExtent, sourceProjExtent);\n      }\n    }\n\n    const targetResolution = targetTileGrid.getResolution(\n      this.wrappedTileCoord_[0],\n    );\n\n    const sourceResolution = calculateSourceExtentResolution(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      targetResolution,\n    );\n\n    if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n      // invalid sourceResolution -> EMPTY\n      // probably edges of the projections when no extent is defined\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const errorThresholdInPixels =\n      errorThreshold !== undefined ? errorThreshold : ERROR_THRESHOLD;\n\n    /**\n     * @private\n     * @type {!import(\"./Triangulation.js\").default}\n     */\n    this.triangulation_ = new Triangulation(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      maxSourceExtent,\n      sourceResolution * errorThresholdInPixels,\n      targetResolution,\n    );\n\n    if (this.triangulation_.getTriangles().length === 0) {\n      // no valid triangles -> EMPTY\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    this.sourceZ_ = sourceTileGrid.getZForResolution(sourceResolution);\n    let sourceExtent = this.triangulation_.calculateSourceExtent();\n\n    if (maxSourceExtent) {\n      if (sourceProj.canWrapX()) {\n        sourceExtent[1] = clamp(\n          sourceExtent[1],\n          maxSourceExtent[1],\n          maxSourceExtent[3],\n        );\n        sourceExtent[3] = clamp(\n          sourceExtent[3],\n          maxSourceExtent[1],\n          maxSourceExtent[3],\n        );\n      } else {\n        sourceExtent = getIntersection(sourceExtent, maxSourceExtent);\n      }\n    }\n\n    if (!getArea(sourceExtent)) {\n      this.state = TileState.EMPTY;\n    } else {\n      let worldWidth = 0;\n      let worldsAway = 0;\n      if (sourceProj.canWrapX()) {\n        worldWidth = getWidth(sourceProjExtent);\n        worldsAway = Math.floor(\n          (sourceExtent[0] - sourceProjExtent[0]) / worldWidth,\n        );\n      }\n\n      const sourceExtents = wrapAndSliceX(\n        sourceExtent.slice(),\n        sourceProj,\n        true,\n      );\n      sourceExtents.forEach((extent) => {\n        const sourceRange = sourceTileGrid.getTileRangeForExtentAndZ(\n          extent,\n          this.sourceZ_,\n        );\n\n        for (let srcX = sourceRange.minX; srcX <= sourceRange.maxX; srcX++) {\n          for (let srcY = sourceRange.minY; srcY <= sourceRange.maxY; srcY++) {\n            const tile = getTileFunction(this.sourceZ_, srcX, srcY, pixelRatio);\n            if (tile) {\n              const offset = worldsAway * worldWidth;\n              this.sourceTiles_.push({tile, offset});\n            }\n          }\n        }\n        ++worldsAway;\n      });\n\n      if (this.sourceTiles_.length === 0) {\n        this.state = TileState.EMPTY;\n      }\n    }\n  }\n\n  /**\n   * Get the HTML Canvas element for this tile.\n   * @return {HTMLCanvasElement} Canvas.\n   */\n  getImage() {\n    return this.canvas_;\n  }\n\n  /**\n   * @private\n   */\n  reproject_() {\n    const sources = [];\n    this.sourceTiles_.forEach((source) => {\n      const tile = source.tile;\n      if (tile && tile.getState() == TileState.LOADED) {\n        const extent = this.sourceTileGrid_.getTileCoordExtent(tile.tileCoord);\n        extent[0] += source.offset;\n        extent[2] += source.offset;\n        const clipExtent = this.clipExtent_?.slice();\n        if (clipExtent) {\n          clipExtent[0] += source.offset;\n          clipExtent[2] += source.offset;\n        }\n        sources.push({\n          extent: extent,\n          clipExtent: clipExtent,\n          image: tile.getImage(),\n        });\n      }\n    });\n    this.sourceTiles_.length = 0;\n\n    if (sources.length === 0) {\n      this.state = TileState.ERROR;\n    } else {\n      const z = this.wrappedTileCoord_[0];\n      const size = this.targetTileGrid_.getTileSize(z);\n      const width = typeof size === 'number' ? size : size[0];\n      const height = typeof size === 'number' ? size : size[1];\n      const targetResolution = this.targetTileGrid_.getResolution(z);\n      const sourceResolution = this.sourceTileGrid_.getResolution(\n        this.sourceZ_,\n      );\n\n      const targetExtent = this.targetTileGrid_.getTileCoordExtent(\n        this.wrappedTileCoord_,\n      );\n\n      this.canvas_ = renderReprojected(\n        width,\n        height,\n        this.pixelRatio_,\n        sourceResolution,\n        this.sourceTileGrid_.getExtent(),\n        targetResolution,\n        targetExtent,\n        this.triangulation_,\n        sources,\n        this.gutter_,\n        this.renderEdges_,\n        this.interpolate,\n      );\n\n      this.state = TileState.LOADED;\n    }\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n\n      let leftToLoad = 0;\n\n      this.sourcesListenerKeys_ = [];\n      this.sourceTiles_.forEach(({tile}) => {\n        const state = tile.getState();\n        if (state == TileState.IDLE || state == TileState.LOADING) {\n          leftToLoad++;\n\n          const sourceListenKey = listen(\n            tile,\n            EventType.CHANGE,\n            function (e) {\n              const state = tile.getState();\n              if (\n                state == TileState.LOADED ||\n                state == TileState.ERROR ||\n                state == TileState.EMPTY\n              ) {\n                unlistenByKey(sourceListenKey);\n                leftToLoad--;\n                if (leftToLoad === 0) {\n                  this.unlistenSources_();\n                  this.reproject_();\n                }\n              }\n            },\n            this,\n          );\n          this.sourcesListenerKeys_.push(sourceListenKey);\n        }\n      });\n\n      if (leftToLoad === 0) {\n        setTimeout(this.reproject_.bind(this), 0);\n      } else {\n        this.sourceTiles_.forEach(function ({tile}, i, arr) {\n          const state = tile.getState();\n          if (state == TileState.IDLE) {\n            tile.load();\n          }\n        });\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  unlistenSources_() {\n    this.sourcesListenerKeys_.forEach(unlistenByKey);\n    this.sourcesListenerKeys_ = null;\n  }\n\n  /**\n   * Remove from the cache due to expiry\n   */\n  release() {\n    if (this.canvas_) {\n      releaseCanvas(this.canvas_.getContext('2d'));\n      canvasPool.push(this.canvas_);\n      this.canvas_ = null;\n    }\n    super.release();\n  }\n}\n\nexport default ReprojTile;\n","/**\n * @module ol/webgl/BaseTileRepresentation\n */\n\nimport EventTarget from '../events/Target.js';\nimport EventType from '../events/EventType.js';\nimport ImageTile from '../ImageTile.js';\nimport TileState from '../TileState.js';\nimport {abstract} from '../util.js';\n\n/**\n * @typedef {import(\"../Tile.js\").default} BaseTileType\n */\n\n/**\n * @template {BaseTileType} TileType\n * @typedef {Object} TileRepresentationOptions\n * @property {TileType} tile The tile.\n * @property {import(\"../tilegrid/TileGrid.js\").default} grid Tile grid.\n * @property {import(\"../webgl/Helper.js\").default} helper WebGL helper.\n * @property {number} [gutter=0] The size in pixels of the gutter around image tiles to ignore.\n */\n\n/**\n * @classdesc\n * Base class for representing a tile in a webgl context\n * @template {import(\"../Tile.js\").default} TileType\n * @abstract\n */\nclass BaseTileRepresentation extends EventTarget {\n  /**\n   * @param {TileRepresentationOptions<TileType>} options The tile representation options.\n   */\n  constructor(options) {\n    super();\n\n    /**\n     * @type {TileType}\n     */\n    this.tile;\n    this.handleTileChange_ = this.handleTileChange_.bind(this);\n\n    /**\n     * @type {number}\n     * @protected\n     */\n    this.gutter_ = options.gutter || 0;\n\n    /**\n     * @type {import(\"../webgl/Helper.js\").default}\n     * @protected\n     */\n    this.helper_ = options.helper;\n\n    this.loaded = false;\n    this.ready = false;\n  }\n\n  /**\n   * @param {TileType} tile Tile.\n   */\n  setTile(tile) {\n    if (tile !== this.tile) {\n      if (this.tile) {\n        this.tile.removeEventListener(EventType.CHANGE, this.handleTileChange_);\n      }\n      this.tile = tile;\n      this.loaded = tile.getState() === TileState.LOADED;\n      if (this.loaded) {\n        this.uploadTile();\n      } else {\n        if (tile instanceof ImageTile) {\n          const image = tile.getImage();\n          if (image instanceof Image && !image.crossOrigin) {\n            image.crossOrigin = 'anonymous';\n          }\n        }\n        tile.addEventListener(EventType.CHANGE, this.handleTileChange_);\n      }\n    }\n  }\n\n  /**\n   * @abstract\n   * @protected\n   */\n  uploadTile() {\n    abstract();\n  }\n\n  setReady() {\n    this.ready = true;\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  handleTileChange_() {\n    if (this.tile.getState() === TileState.LOADED) {\n      this.loaded = true;\n      this.uploadTile();\n    }\n  }\n\n  disposeInternal() {\n    this.tile.removeEventListener(EventType.CHANGE, this.handleTileChange_);\n  }\n}\n\nexport default BaseTileRepresentation;\n","/**\n * @module ol/webgl/TileTexture\n */\n\nimport BaseTileRepresentation from './BaseTileRepresentation.js';\nimport DataTile, {asArrayLike, asImageLike} from '../DataTile.js';\nimport EventType from '../events/EventType.js';\nimport ImageTile from '../ImageTile.js';\nimport ReprojTile from '../reproj/Tile.js';\nimport WebGLArrayBuffer from './Buffer.js';\nimport {ARRAY_BUFFER, STATIC_DRAW} from '../webgl.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {toSize} from '../size.js';\n\n/**\n * @param {WebGLRenderingContext} gl The WebGL context.\n * @param {WebGLTexture} texture The texture.\n * @param {boolean} interpolate Interpolate when resampling.\n */\nfunction bindAndConfigure(gl, texture, interpolate) {\n  const resampleFilter = interpolate ? gl.LINEAR : gl.NEAREST;\n  gl.bindTexture(gl.TEXTURE_2D, texture);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, resampleFilter);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, resampleFilter);\n}\n\n/**\n * @param {WebGLRenderingContext} gl The WebGL context.\n * @param {WebGLTexture} texture The texture.\n * @param {import(\"../DataTile.js\").ImageLike} image The image.\n * @param {boolean} interpolate Interpolate when resampling.\n */\nfunction uploadImageTexture(gl, texture, image, interpolate) {\n  bindAndConfigure(gl, texture, interpolate);\n\n  gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, image);\n}\n\n/**\n * @param {import(\"./Helper.js\").default} helper The WebGL helper.\n * @param {WebGLTexture} texture The texture.\n * @param {import(\"../DataTile.js\").ArrayLike} data The pixel data.\n * @param {import(\"../size.js\").Size} size The pixel size.\n * @param {number} bandCount The band count.\n * @param {boolean} interpolate Interpolate when resampling.\n */\nfunction uploadDataTexture(\n  helper,\n  texture,\n  data,\n  size,\n  bandCount,\n  interpolate,\n) {\n  const gl = helper.getGL();\n  let textureType;\n  let canInterpolate;\n  if (data instanceof Float32Array) {\n    textureType = gl.FLOAT;\n    helper.getExtension('OES_texture_float');\n    const extension = helper.getExtension('OES_texture_float_linear');\n    canInterpolate = extension !== null;\n  } else {\n    textureType = gl.UNSIGNED_BYTE;\n    canInterpolate = true;\n  }\n  bindAndConfigure(gl, texture, interpolate && canInterpolate);\n\n  const bytesPerRow = data.byteLength / size[1];\n  let unpackAlignment = 1;\n  if (bytesPerRow % 8 === 0) {\n    unpackAlignment = 8;\n  } else if (bytesPerRow % 4 === 0) {\n    unpackAlignment = 4;\n  } else if (bytesPerRow % 2 === 0) {\n    unpackAlignment = 2;\n  }\n\n  let format;\n  switch (bandCount) {\n    case 1: {\n      format = gl.LUMINANCE;\n      break;\n    }\n    case 2: {\n      format = gl.LUMINANCE_ALPHA;\n      break;\n    }\n    case 3: {\n      format = gl.RGB;\n      break;\n    }\n    case 4: {\n      format = gl.RGBA;\n      break;\n    }\n    default: {\n      throw new Error(`Unsupported number of bands: ${bandCount}`);\n    }\n  }\n\n  const oldUnpackAlignment = gl.getParameter(gl.UNPACK_ALIGNMENT);\n  gl.pixelStorei(gl.UNPACK_ALIGNMENT, unpackAlignment);\n  gl.texImage2D(\n    gl.TEXTURE_2D,\n    0,\n    format,\n    size[0],\n    size[1],\n    0,\n    format,\n    textureType,\n    data,\n  );\n  gl.pixelStorei(gl.UNPACK_ALIGNMENT, oldUnpackAlignment);\n}\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet pixelContext = null;\n\nfunction createPixelContext() {\n  pixelContext = createCanvasContext2D(1, 1, undefined, {\n    willReadFrequently: true,\n  });\n}\n\n/**\n * @typedef {import(\"../DataTile.js\").default|ImageTile|ReprojTile} TileType\n */\n\n/**\n * @extends {BaseTileRepresentation<TileType>}\n */\nclass TileTexture extends BaseTileRepresentation {\n  /**\n   * @param {import(\"./BaseTileRepresentation.js\").TileRepresentationOptions<TileType>} options The tile texture options.\n   */\n  constructor(options) {\n    super(options);\n\n    /**\n     * @type {Array<WebGLTexture>}\n     */\n    this.textures = [];\n\n    /**\n     * @type {import(\"../size.js\").Size}\n     * @private\n     */\n    this.renderSize_ = toSize(\n      options.grid.getTileSize(options.tile.tileCoord[0]),\n    );\n\n    /**\n     * @type {number}\n     */\n    this.bandCount = NaN;\n\n    const coords = new WebGLArrayBuffer(ARRAY_BUFFER, STATIC_DRAW);\n    coords.fromArray([\n      0, // P0\n      1,\n      1, // P1\n      1,\n      1, // P2\n      0,\n      0, // P3\n      0,\n    ]);\n    this.helper_.flushBufferData(coords);\n\n    /**\n     * @type {WebGLArrayBuffer}\n     */\n    this.coords = coords;\n\n    this.setTile(options.tile);\n  }\n\n  uploadTile() {\n    const helper = this.helper_;\n    const gl = helper.getGL();\n    const tile = this.tile;\n\n    this.textures.length = 0;\n\n    /**\n     * @type {import(\"../DataTile.js\").Data}\n     */\n    let data;\n\n    if (tile instanceof ImageTile || tile instanceof ReprojTile) {\n      data = tile.getImage();\n    } else {\n      data = tile.getData();\n    }\n\n    const image = asImageLike(data);\n    if (image) {\n      const texture = gl.createTexture();\n      this.textures.push(texture);\n      this.bandCount = 4;\n      uploadImageTexture(gl, texture, image, tile.interpolate);\n      this.setReady();\n      return;\n    }\n\n    data = asArrayLike(data);\n\n    const sourceTileSize = /** @type {DataTile} */ (tile).getSize();\n    const pixelSize = [\n      sourceTileSize[0] + 2 * this.gutter_,\n      sourceTileSize[1] + 2 * this.gutter_,\n    ];\n    const isFloat = data instanceof Float32Array;\n    const pixelCount = pixelSize[0] * pixelSize[1];\n    const DataType = isFloat ? Float32Array : Uint8Array;\n    const bytesPerElement = DataType.BYTES_PER_ELEMENT;\n    const bytesPerRow = data.byteLength / pixelSize[1];\n\n    this.bandCount = Math.floor(bytesPerRow / bytesPerElement / pixelSize[0]);\n    const textureCount = Math.ceil(this.bandCount / 4);\n\n    if (textureCount === 1) {\n      const texture = gl.createTexture();\n      this.textures.push(texture);\n      uploadDataTexture(\n        helper,\n        texture,\n        data,\n        pixelSize,\n        this.bandCount,\n        tile.interpolate,\n      );\n      this.setReady();\n      return;\n    }\n\n    const textureDataArrays = new Array(textureCount);\n    for (let textureIndex = 0; textureIndex < textureCount; ++textureIndex) {\n      const texture = gl.createTexture();\n      this.textures.push(texture);\n\n      const bandCount =\n        textureIndex < textureCount - 1 ? 4 : ((this.bandCount - 1) % 4) + 1;\n      textureDataArrays[textureIndex] = new DataType(pixelCount * bandCount);\n    }\n\n    let dataIndex = 0;\n    let rowOffset = 0;\n    const colCount = pixelSize[0] * this.bandCount;\n    for (let rowIndex = 0; rowIndex < pixelSize[1]; ++rowIndex) {\n      for (let colIndex = 0; colIndex < colCount; ++colIndex) {\n        const dataValue = data[rowOffset + colIndex];\n\n        const pixelIndex = Math.floor(dataIndex / this.bandCount);\n        const bandIndex = colIndex % this.bandCount;\n        const textureIndex = Math.floor(bandIndex / 4);\n        const textureData = textureDataArrays[textureIndex];\n        const bandCount = textureData.length / pixelCount;\n        const textureBandIndex = bandIndex % 4;\n        textureData[pixelIndex * bandCount + textureBandIndex] = dataValue;\n\n        ++dataIndex;\n      }\n      rowOffset += bytesPerRow / bytesPerElement;\n    }\n\n    for (let textureIndex = 0; textureIndex < textureCount; ++textureIndex) {\n      const texture = this.textures[textureIndex];\n      const textureData = textureDataArrays[textureIndex];\n      const bandCount = textureData.length / pixelCount;\n      uploadDataTexture(\n        helper,\n        texture,\n        textureData,\n        pixelSize,\n        bandCount,\n        tile.interpolate,\n      );\n    }\n\n    this.setReady();\n  }\n\n  disposeInternal() {\n    const gl = this.helper_.getGL();\n    this.helper_.deleteBuffer(this.coords);\n    for (let i = 0; i < this.textures.length; ++i) {\n      gl.deleteTexture(this.textures[i]);\n    }\n    this.tile.removeEventListener(EventType.CHANGE, this.handleTileChange_);\n  }\n\n  /**\n   * @param {import(\"../DataTile.js\").ImageLike} image The image.\n   * @param {number} renderCol The column index (in rendered tile space).\n   * @param {number} renderRow The row index (in rendered tile space).\n   * @return {Uint8ClampedArray|null} The data.\n   * @private\n   */\n  getImagePixelData_(image, renderCol, renderRow) {\n    const gutter = this.gutter_;\n    const renderWidth = this.renderSize_[0];\n    const renderHeight = this.renderSize_[1];\n\n    if (!pixelContext) {\n      createPixelContext();\n    }\n    pixelContext.clearRect(0, 0, 1, 1);\n\n    const sourceWidth = image.width;\n    const sourceHeight = image.height;\n\n    const sourceWidthWithoutGutter = sourceWidth - 2 * gutter;\n    const sourceHeightWithoutGutter = sourceHeight - 2 * gutter;\n\n    const sourceCol =\n      gutter + Math.floor(sourceWidthWithoutGutter * (renderCol / renderWidth));\n\n    const sourceRow =\n      gutter +\n      Math.floor(sourceHeightWithoutGutter * (renderRow / renderHeight));\n\n    let data;\n    try {\n      pixelContext.drawImage(image, sourceCol, sourceRow, 1, 1, 0, 0, 1, 1);\n      data = pixelContext.getImageData(0, 0, 1, 1).data;\n    } catch (err) {\n      pixelContext = null;\n      return null;\n    }\n    return data;\n  }\n\n  /**\n   * @param {import(\"../DataTile.js\").ArrayLike} data The data.\n   * @param {import(\"../size.js\").Size} sourceSize The size.\n   * @param {number} renderCol The column index (in rendered tile space).\n   * @param {number} renderRow The row index (in rendered tile space).\n   * @return {import(\"../DataTile.js\").ArrayLike|null} The data.\n   * @private\n   */\n  getArrayPixelData_(data, sourceSize, renderCol, renderRow) {\n    const gutter = this.gutter_;\n    const renderWidth = this.renderSize_[0];\n    const renderHeight = this.renderSize_[1];\n\n    const sourceWidthWithoutGutter = sourceSize[0];\n    const sourceHeightWithoutGutter = sourceSize[1];\n    const sourceWidth = sourceWidthWithoutGutter + 2 * gutter;\n    const sourceHeight = sourceHeightWithoutGutter + 2 * gutter;\n\n    const sourceCol =\n      gutter + Math.floor(sourceWidthWithoutGutter * (renderCol / renderWidth));\n\n    const sourceRow =\n      gutter +\n      Math.floor(sourceHeightWithoutGutter * (renderRow / renderHeight));\n\n    if (data instanceof DataView) {\n      const bytesPerPixel = data.byteLength / (sourceWidth * sourceHeight);\n      const offset = bytesPerPixel * (sourceRow * sourceWidth + sourceCol);\n      const buffer = data.buffer.slice(offset, offset + bytesPerPixel);\n      return new DataView(buffer);\n    }\n\n    const offset = this.bandCount * (sourceRow * sourceWidth + sourceCol);\n    return data.slice(offset, offset + this.bandCount);\n  }\n\n  /**\n   * Get data for a pixel.  If the tile is not loaded, null is returned.\n   * @param {number} renderCol The column index (in rendered tile space).\n   * @param {number} renderRow The row index (in rendered tile space).\n   * @return {import(\"../DataTile.js\").ArrayLike|null} The data.\n   */\n  getPixelData(renderCol, renderRow) {\n    if (!this.loaded) {\n      return null;\n    }\n\n    if (this.tile instanceof DataTile) {\n      const data = this.tile.getData();\n      const arrayData = asArrayLike(data);\n      if (arrayData) {\n        const sourceSize = this.tile.getSize();\n        return this.getArrayPixelData_(\n          arrayData,\n          sourceSize,\n          renderCol,\n          renderRow,\n        );\n      }\n      return this.getImagePixelData_(asImageLike(data), renderCol, renderRow);\n    }\n\n    return this.getImagePixelData_(this.tile.getImage(), renderCol, renderRow);\n  }\n}\n\nexport default TileTexture;\n","/**\n * @module ol/renderer/webgl/TileLayerBase\n */\nimport LRUCache from '../../structs/LRUCache.js';\nimport ReprojDataTile from '../../reproj/DataTile.js';\nimport ReprojTile from '../../reproj/Tile.js';\nimport TileRange from '../../TileRange.js';\nimport TileState from '../../TileState.js';\nimport WebGLLayerRenderer from './Layer.js';\nimport {abstract, getUid} from '../../util.js';\nimport {create as createMat4} from '../../vec/mat4.js';\nimport {\n  createOrUpdate as createTileCoord,\n  getKey as getTileCoordKey,\n} from '../../tilecoord.js';\nimport {\n  create as createTransform,\n  reset as resetTransform,\n  rotate as rotateTransform,\n  scale as scaleTransform,\n  translate as translateTransform,\n} from '../../transform.js';\nimport {descending} from '../../array.js';\nimport {fromUserExtent} from '../../proj.js';\nimport {getIntersection, isEmpty} from '../../extent.js';\nimport {toSize} from '../../size.js';\n\nexport const Uniforms = {\n  TILE_TRANSFORM: 'u_tileTransform',\n  TRANSITION_ALPHA: 'u_transitionAlpha',\n  DEPTH: 'u_depth',\n  RENDER_EXTENT: 'u_renderExtent', // intersection of layer, source, and view extent\n  PATTERN_ORIGIN: 'u_patternOrigin',\n  RESOLUTION: 'u_resolution',\n  ZOOM: 'u_zoom',\n  GLOBAL_ALPHA: 'u_globalAlpha',\n  PROJECTION_MATRIX: 'u_projectionMatrix',\n  SCREEN_TO_WORLD_MATRIX: 'u_screenToWorldMatrix',\n};\n\n/**\n * @type {Object<string, boolean>}\n */\nconst empty = {};\n\n/**\n * Transform a zoom level into a depth value; zoom level zero has a depth value of 0.5, and increasing values\n * have a depth trending towards 0\n * @param {number} z A zoom level.\n * @return {number} A depth value.\n */\nfunction depthForZ(z) {\n  return 1 / (z + 2);\n}\n\n/**\n * @typedef {import(\"../../webgl/BaseTileRepresentation.js\").default<import(\"../../Tile.js\").default>} AbstractTileRepresentation\n */\n/**\n * @typedef {Object} TileRepresentationLookup\n * @property {Set<string>} tileIds The set of tile ids in the lookup.\n * @property {Object<number, Set<AbstractTileRepresentation>>} representationsByZ Tile representations by zoom level.\n */\n\n/**\n * @return {TileRepresentationLookup} A new tile representation lookup.\n */\nexport function newTileRepresentationLookup() {\n  return {tileIds: new Set(), representationsByZ: {}};\n}\n\n/**\n * Check if a tile is already in the tile representation lookup.\n * @param {TileRepresentationLookup} tileRepresentationLookup Lookup of tile representations by zoom level.\n * @param {import(\"../../Tile.js\").default} tile A tile.\n * @return {boolean} The tile is already in the lookup.\n */\nfunction lookupHasTile(tileRepresentationLookup, tile) {\n  return tileRepresentationLookup.tileIds.has(getUid(tile));\n}\n\n/**\n * Add a tile representation to the lookup.\n * @param {TileRepresentationLookup} tileRepresentationLookup Lookup of tile representations by zoom level.\n * @param {AbstractTileRepresentation} tileRepresentation A tile representation.\n * @param {number} z The zoom level.\n */\nfunction addTileRepresentationToLookup(\n  tileRepresentationLookup,\n  tileRepresentation,\n  z,\n) {\n  const representationsByZ = tileRepresentationLookup.representationsByZ;\n  if (!(z in representationsByZ)) {\n    representationsByZ[z] = new Set();\n  }\n  representationsByZ[z].add(tileRepresentation);\n  tileRepresentationLookup.tileIds.add(getUid(tileRepresentation.tile));\n}\n\n/**\n * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n * @param {import(\"../../extent.js\").Extent} extent The frame extent.\n * @return {import(\"../../extent.js\").Extent} Frame extent intersected with layer extents.\n */\nfunction getRenderExtent(frameState, extent) {\n  const layerState = frameState.layerStatesArray[frameState.layerIndex];\n  if (layerState.extent) {\n    extent = getIntersection(\n      extent,\n      fromUserExtent(layerState.extent, frameState.viewState.projection),\n    );\n  }\n  const source = /** @type {import(\"../../source/Tile.js\").default} */ (\n    layerState.layer.getRenderSource()\n  );\n  if (!source.getWrapX()) {\n    const gridExtent = source\n      .getTileGridForProjection(frameState.viewState.projection)\n      .getExtent();\n    if (gridExtent) {\n      extent = getIntersection(extent, gridExtent);\n    }\n  }\n  return extent;\n}\n\nexport function getCacheKey(source, tileCoord) {\n  return `${source.getKey()},${getTileCoordKey(tileCoord)}`;\n}\n\n/**\n * @typedef {Object} Options\n * @property {Object<string, import(\"../../webgl/Helper\").UniformValue>} [uniforms] Additional uniforms\n * made available to shaders.\n * @property {number} [cacheSize=512] The tile representation cache size.\n * @property {Array<import('./Layer.js').PostProcessesOptions>} [postProcesses] Post-processes definitions.\n */\n\n/**\n * @typedef {import(\"../../layer/BaseTile.js\").default} BaseLayerType\n */\n\n/**\n * @classdesc\n * Base WebGL renderer for tile layers.\n * @template {BaseLayerType} LayerType\n * @template {import(\"../../Tile.js\").default} TileType\n * @template {import(\"../../webgl/BaseTileRepresentation.js\").default<TileType>} TileRepresentation\n * @extends {WebGLLayerRenderer<LayerType>}\n */\nclass WebGLBaseTileLayerRenderer extends WebGLLayerRenderer {\n  /**\n   * @param {LayerType} tileLayer Tile layer.\n   * @param {Options} options Options.\n   */\n  constructor(tileLayer, options) {\n    super(tileLayer, {\n      uniforms: options.uniforms,\n      postProcesses: options.postProcesses,\n    });\n\n    /**\n     * The last call to `renderFrame` was completed with all tiles loaded\n     * @type {boolean}\n     */\n    this.renderComplete = false;\n\n    /**\n     * This transform converts representation coordinates to screen coordinates.\n     * @type {import(\"../../transform.js\").Transform}\n     * @private\n     */\n    this.tileTransform_ = createTransform();\n\n    /**\n     * @type {Array<number>}\n     * @protected\n     */\n    this.tempMat4 = createMat4();\n\n    /**\n     * @type {import(\"../../TileRange.js\").default}\n     * @private\n     */\n    this.tempTileRange_ = new TileRange(0, 0, 0, 0);\n\n    /**\n     * @type {import(\"../../tilecoord.js\").TileCoord}\n     * @private\n     */\n    this.tempTileCoord_ = createTileCoord(0, 0, 0);\n\n    /**\n     * @type {import(\"../../size.js\").Size}\n     * @private\n     */\n    this.tempSize_ = [0, 0];\n\n    const cacheSize = options.cacheSize !== undefined ? options.cacheSize : 512;\n    /**\n     * @type {import(\"../../structs/LRUCache.js\").default<TileRepresentation>}\n     * @protected\n     */\n    this.tileRepresentationCache = new LRUCache(cacheSize);\n\n    /**\n     * @protected\n     * @type {import(\"../../Map.js\").FrameState|null}\n     */\n    this.frameState = null;\n\n    /**\n     * @private\n     * @type {import(\"../../proj/Projection.js\").default}\n     */\n    this.projection_ = undefined;\n  }\n\n  /**\n   * @param {Options} options Options.\n   */\n  reset(options) {\n    super.reset({\n      uniforms: options.uniforms,\n    });\n  }\n\n  /**\n   * @param {TileType} tile Tile.\n   * @return {boolean} Tile is drawable.\n   * @private\n   */\n  isDrawableTile_(tile) {\n    const tileLayer = this.getLayer();\n    const tileState = tile.getState();\n    const useInterimTilesOnError = tileLayer.getUseInterimTilesOnError();\n    return (\n      tileState == TileState.LOADED ||\n      tileState == TileState.EMPTY ||\n      (tileState == TileState.ERROR && !useInterimTilesOnError)\n    );\n  }\n\n  /**\n   * Determine whether renderFrame should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrameInternal(frameState) {\n    if (!this.projection_) {\n      this.projection_ = frameState.viewState.projection;\n    } else if (frameState.viewState.projection !== this.projection_) {\n      this.clearCache();\n      this.projection_ = frameState.viewState.projection;\n    }\n\n    const layer = this.getLayer();\n    const source = layer.getRenderSource();\n    if (!source) {\n      return false;\n    }\n\n    if (isEmpty(getRenderExtent(frameState, frameState.extent))) {\n      return false;\n    }\n    return source.getState() === 'ready';\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../../webgl/BaseTileRepresentation.js\").TileRepresentationOptions<TileType>} options tile representation options\n   * @return {TileRepresentation} A new tile representation\n   * @protected\n   */\n  createTileRepresentation(options) {\n    return abstract();\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../extent.js\").Extent} extent The extent to be rendered.\n   * @param {number} initialZ The zoom level.\n   * @param {TileRepresentationLookup} tileRepresentationLookup The zoom level.\n   * @param {number} preload Number of additional levels to load.\n   */\n  enqueueTiles(\n    frameState,\n    extent,\n    initialZ,\n    tileRepresentationLookup,\n    preload,\n  ) {\n    const viewState = frameState.viewState;\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getRenderSource();\n    const tileGrid = tileSource.getTileGridForProjection(viewState.projection);\n    const gutter = tileSource.getGutterForProjection(viewState.projection);\n\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in frameState.wantedTiles)) {\n      frameState.wantedTiles[tileSourceKey] = {};\n    }\n\n    const wantedTiles = frameState.wantedTiles[tileSourceKey];\n    const tileRepresentationCache = this.tileRepresentationCache;\n\n    const map = tileLayer.getMapInternal();\n    const minZ = Math.max(\n      initialZ - preload,\n      tileGrid.getMinZoom(),\n      tileGrid.getZForResolution(\n        Math.min(\n          tileLayer.getMaxResolution(),\n          map\n            ? map\n                .getView()\n                .getResolutionForZoom(Math.max(tileLayer.getMinZoom(), 0))\n            : tileGrid.getResolution(0),\n        ),\n        tileSource.zDirection,\n      ),\n    );\n    for (let z = initialZ; z >= minZ; --z) {\n      const tileRange = tileGrid.getTileRangeForExtentAndZ(\n        extent,\n        z,\n        this.tempTileRange_,\n      );\n\n      const tileResolution = tileGrid.getResolution(z);\n\n      for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n        for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n          const tileCoord = createTileCoord(z, x, y, this.tempTileCoord_);\n          const cacheKey = getCacheKey(tileSource, tileCoord);\n\n          /** @type {TileRepresentation} */\n          let tileRepresentation;\n\n          /** @type {TileType} */\n          let tile;\n\n          if (tileRepresentationCache.containsKey(cacheKey)) {\n            tileRepresentation = tileRepresentationCache.get(cacheKey);\n            tile = tileRepresentation.tile;\n          }\n          if (\n            !tileRepresentation ||\n            tileRepresentation.tile.key !== tileSource.getKey()\n          ) {\n            tile = tileSource.getTile(\n              z,\n              x,\n              y,\n              frameState.pixelRatio,\n              viewState.projection,\n            );\n          }\n\n          if (lookupHasTile(tileRepresentationLookup, tile)) {\n            continue;\n          }\n\n          if (!tileRepresentation) {\n            tileRepresentation = this.createTileRepresentation({\n              tile: tile,\n              grid: tileGrid,\n              helper: this.helper,\n              gutter: gutter,\n            });\n            tileRepresentationCache.set(cacheKey, tileRepresentation);\n          } else {\n            if (this.isDrawableTile_(tile)) {\n              tileRepresentation.setTile(tile);\n            } else {\n              const interimTile = /** @type {TileType} */ (\n                tile.getInterimTile()\n              );\n              tileRepresentation.setTile(interimTile);\n            }\n          }\n\n          addTileRepresentationToLookup(\n            tileRepresentationLookup,\n            tileRepresentation,\n            z,\n          );\n\n          const tileQueueKey = tile.getKey();\n          wantedTiles[tileQueueKey] = true;\n\n          if (tile.getState() === TileState.IDLE) {\n            if (!frameState.tileQueue.isKeyQueued(tileQueueKey)) {\n              frameState.tileQueue.enqueue([\n                tile,\n                tileSourceKey,\n                tileGrid.getTileCoordCenter(tileCoord),\n                tileResolution,\n              ]);\n            }\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {boolean} tilesWithAlpha True if at least one of the rendered tiles has alpha\n   * @protected\n   */\n  beforeTilesRender(frameState, tilesWithAlpha) {\n    this.helper.prepareDraw(this.frameState, !tilesWithAlpha, true);\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} If returns false, tile mask rendering will be skipped\n   * @protected\n   */\n  beforeTilesMaskRender(frameState) {\n    return false;\n  }\n\n  /**\n   * @param {TileRepresentation} tileRepresentation Tile representation\n   * @param {import(\"../../transform.js\").Transform} tileTransform Tile transform\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state\n   * @param {import(\"../../extent.js\").Extent} renderExtent Render extent\n   * @param {number} tileResolution Tile resolution\n   * @param {import(\"../../size.js\").Size} tileSize Tile size\n   * @param {import(\"../../coordinate.js\").Coordinate} tileOrigin Tile origin\n   * @param {import(\"../../extent.js\").Extent} tileExtent tile Extent\n   * @param {number} depth Depth\n   * @param {number} gutter Gutter\n   * @param {number} alpha Alpha\n   * @protected\n   */\n  renderTile(\n    tileRepresentation,\n    tileTransform,\n    frameState,\n    renderExtent,\n    tileResolution,\n    tileSize,\n    tileOrigin,\n    tileExtent,\n    depth,\n    gutter,\n    alpha,\n  ) {}\n\n  /**\n   * @param {TileRepresentation} tileRepresentation Tile representation\n   * @param {number} tileZ Tile Z\n   * @param {import(\"../../extent.js\").Extent} extent Render extent\n   * @param {number} depth Depth\n   * @protected\n   */\n  renderTileMask(tileRepresentation, tileZ, extent, depth) {}\n\n  drawTile_(\n    frameState,\n    tileRepresentation,\n    tileZ,\n    gutter,\n    extent,\n    alphaLookup,\n    tileGrid,\n  ) {\n    if (!tileRepresentation.ready) {\n      return;\n    }\n    const tile = tileRepresentation.tile;\n    const tileCoord = tile.tileCoord;\n    const tileCoordKey = getTileCoordKey(tileCoord);\n    const alpha = tileCoordKey in alphaLookup ? alphaLookup[tileCoordKey] : 1;\n\n    const tileResolution = tileGrid.getResolution(tileZ);\n    const tileSize = toSize(tileGrid.getTileSize(tileZ), this.tempSize_);\n    const tileOrigin = tileGrid.getOrigin(tileZ);\n    const tileExtent = tileGrid.getTileCoordExtent(tileCoord);\n    // tiles with alpha are rendered last to allow blending\n    const depth = alpha < 1 ? -1 : depthForZ(tileZ);\n    if (alpha < 1) {\n      frameState.animate = true;\n    }\n\n    const viewState = frameState.viewState;\n    const centerX = viewState.center[0];\n    const centerY = viewState.center[1];\n\n    const tileWidthWithGutter = tileSize[0] + 2 * gutter;\n    const tileHeightWithGutter = tileSize[1] + 2 * gutter;\n\n    const aspectRatio = tileWidthWithGutter / tileHeightWithGutter;\n\n    const centerI = (centerX - tileOrigin[0]) / (tileSize[0] * tileResolution);\n    const centerJ = (tileOrigin[1] - centerY) / (tileSize[1] * tileResolution);\n\n    const tileScale = viewState.resolution / tileResolution;\n\n    const tileCenterI = tileCoord[1];\n    const tileCenterJ = tileCoord[2];\n\n    resetTransform(this.tileTransform_);\n    scaleTransform(\n      this.tileTransform_,\n      2 / ((frameState.size[0] * tileScale) / tileWidthWithGutter),\n      -2 / ((frameState.size[1] * tileScale) / tileWidthWithGutter),\n    );\n    rotateTransform(this.tileTransform_, viewState.rotation);\n    scaleTransform(this.tileTransform_, 1, 1 / aspectRatio);\n    translateTransform(\n      this.tileTransform_,\n      (tileSize[0] * (tileCenterI - centerI) - gutter) / tileWidthWithGutter,\n      (tileSize[1] * (tileCenterJ - centerJ) - gutter) / tileHeightWithGutter,\n    );\n\n    this.renderTile(\n      /** @type {TileRepresentation} */ (tileRepresentation),\n      this.tileTransform_,\n      frameState,\n      extent,\n      tileResolution,\n      tileSize,\n      tileOrigin,\n      tileExtent,\n      depth,\n      gutter,\n      alpha,\n    );\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState) {\n    this.frameState = frameState;\n    this.renderComplete = true;\n    const gl = this.helper.getGL();\n    this.preRender(gl, frameState);\n\n    const viewState = frameState.viewState;\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getRenderSource();\n    const tileGrid = tileSource.getTileGridForProjection(viewState.projection);\n    const gutter = tileSource.getGutterForProjection(viewState.projection);\n    const extent = getRenderExtent(frameState, frameState.extent);\n    const z = tileGrid.getZForResolution(\n      viewState.resolution,\n      tileSource.zDirection,\n    );\n\n    /**\n     * @type {TileRepresentationLookup}\n     */\n    const tileRepresentationLookup = newTileRepresentationLookup();\n\n    const preload = tileLayer.getPreload();\n    if (frameState.nextExtent) {\n      const targetZ = tileGrid.getZForResolution(\n        viewState.nextResolution,\n        tileSource.zDirection,\n      );\n      const nextExtent = getRenderExtent(frameState, frameState.nextExtent);\n      this.enqueueTiles(\n        frameState,\n        nextExtent,\n        targetZ,\n        tileRepresentationLookup,\n        preload,\n      );\n    }\n\n    this.enqueueTiles(frameState, extent, z, tileRepresentationLookup, 0);\n    if (preload > 0) {\n      setTimeout(() => {\n        this.enqueueTiles(\n          frameState,\n          extent,\n          z - 1,\n          tileRepresentationLookup,\n          preload - 1,\n        );\n      }, 0);\n    }\n\n    /**\n     * A lookup of alpha values for tiles at the target rendering resolution\n     * for tiles that are in transition.  If a tile coord key is absent from\n     * this lookup, the tile should be rendered at alpha 1.\n     * @type {Object<string, number>}\n     */\n    const alphaLookup = {};\n\n    const uid = getUid(this);\n    const time = frameState.time;\n    let blend = false;\n\n    // look for cached tiles to use if a target tile is not ready\n    for (const tileRepresentation of tileRepresentationLookup\n      .representationsByZ[z]) {\n      const tile = tileRepresentation.tile;\n      if (\n        (tile instanceof ReprojTile || tile instanceof ReprojDataTile) &&\n        tile.getState() === TileState.EMPTY\n      ) {\n        continue;\n      }\n      const tileCoord = tile.tileCoord;\n\n      if (tileRepresentation.ready) {\n        const alpha = tile.getAlpha(uid, time);\n        if (alpha === 1) {\n          // no need to look for alt tiles\n          tile.endTransition(uid);\n          continue;\n        }\n        blend = true;\n        const tileCoordKey = getTileCoordKey(tileCoord);\n        alphaLookup[tileCoordKey] = alpha;\n      }\n      this.renderComplete = false;\n\n      // first look for child tiles (at z + 1)\n      const coveredByChildren = this.findAltTiles_(\n        tileGrid,\n        tileCoord,\n        z + 1,\n        tileRepresentationLookup,\n      );\n\n      if (coveredByChildren) {\n        continue;\n      }\n\n      // next look for parent tiles\n      const minZoom = tileGrid.getMinZoom();\n      for (let parentZ = z - 1; parentZ >= minZoom; --parentZ) {\n        const coveredByParent = this.findAltTiles_(\n          tileGrid,\n          tileCoord,\n          parentZ,\n          tileRepresentationLookup,\n        );\n\n        if (coveredByParent) {\n          break;\n        }\n      }\n    }\n\n    const representationsByZ = tileRepresentationLookup.representationsByZ;\n    const zs = Object.keys(representationsByZ).map(Number).sort(descending);\n\n    const renderTileMask = this.beforeTilesMaskRender(frameState);\n\n    if (renderTileMask) {\n      for (let j = 0, jj = zs.length; j < jj; ++j) {\n        const tileZ = zs[j];\n        for (const tileRepresentation of representationsByZ[tileZ]) {\n          const tileCoord = tileRepresentation.tile.tileCoord;\n          const tileCoordKey = getTileCoordKey(tileCoord);\n          // do not render the tile mask if alpha < 1\n          if (tileCoordKey in alphaLookup) {\n            continue;\n          }\n          const tileExtent = tileGrid.getTileCoordExtent(tileCoord);\n          this.renderTileMask(\n            /** @type {TileRepresentation} */ (tileRepresentation),\n            tileZ,\n            tileExtent,\n            depthForZ(tileZ),\n          );\n        }\n      }\n    }\n\n    this.beforeTilesRender(frameState, blend);\n\n    for (let j = 0, jj = zs.length; j < jj; ++j) {\n      const tileZ = zs[j];\n      for (const tileRepresentation of representationsByZ[tileZ]) {\n        const tileCoord = tileRepresentation.tile.tileCoord;\n        const tileCoordKey = getTileCoordKey(tileCoord);\n        if (tileCoordKey in alphaLookup) {\n          continue;\n        }\n\n        this.drawTile_(\n          frameState,\n          tileRepresentation,\n          tileZ,\n          gutter,\n          extent,\n          alphaLookup,\n          tileGrid,\n        );\n      }\n    }\n\n    for (const tileRepresentation of representationsByZ[z]) {\n      const tileCoord = tileRepresentation.tile.tileCoord;\n      const tileCoordKey = getTileCoordKey(tileCoord);\n      if (tileCoordKey in alphaLookup) {\n        this.drawTile_(\n          frameState,\n          tileRepresentation,\n          z,\n          gutter,\n          extent,\n          alphaLookup,\n          tileGrid,\n        );\n      }\n    }\n\n    this.helper.finalizeDraw(\n      frameState,\n      this.dispatchPreComposeEvent,\n      this.dispatchPostComposeEvent,\n    );\n\n    const canvas = this.helper.getCanvas();\n\n    const tileRepresentationCache = this.tileRepresentationCache;\n    while (tileRepresentationCache.canExpireCache()) {\n      const tileRepresentation = tileRepresentationCache.pop();\n      tileRepresentation.dispose();\n    }\n\n    // TODO: let the renderers manage their own cache instead of managing the source cache\n    /**\n     * Here we unconditionally expire the source cache since the renderer maintains\n     * its own cache.\n     * @param {import(\"../../Map.js\").default} map Map.\n     * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n     */\n    const postRenderFunction = function (map, frameState) {\n      tileSource.updateCacheSize(0.1, frameState.viewState.projection);\n      tileSource.expireCache(frameState.viewState.projection, empty);\n    };\n\n    frameState.postRenderFunctions.push(postRenderFunction);\n\n    this.postRender(gl, frameState);\n    return canvas;\n  }\n\n  /**\n   * Look for tiles covering the provided tile coordinate at an alternate\n   * zoom level.  Loaded tiles will be added to the provided tile representation lookup.\n   * @param {import(\"../../tilegrid/TileGrid.js\").default} tileGrid The tile grid.\n   * @param {import(\"../../tilecoord.js\").TileCoord} tileCoord The target tile coordinate.\n   * @param {number} altZ The alternate zoom level.\n   * @param {TileRepresentationLookup} tileRepresentationLookup Lookup of\n   * tile representations by zoom level.\n   * @return {boolean} The tile coordinate is covered by loaded tiles at the alternate zoom level.\n   * @private\n   */\n  findAltTiles_(tileGrid, tileCoord, altZ, tileRepresentationLookup) {\n    const tileRange = tileGrid.getTileRangeForTileCoordAndZ(\n      tileCoord,\n      altZ,\n      this.tempTileRange_,\n    );\n\n    if (!tileRange) {\n      return false;\n    }\n\n    let covered = true;\n    const tileRepresentationCache = this.tileRepresentationCache;\n    const source = this.getLayer().getRenderSource();\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        const cacheKey = getCacheKey(source, [altZ, x, y]);\n        let loaded = false;\n        if (tileRepresentationCache.containsKey(cacheKey)) {\n          const tileRepresentation = tileRepresentationCache.get(cacheKey);\n          if (\n            tileRepresentation.ready &&\n            !lookupHasTile(tileRepresentationLookup, tileRepresentation.tile)\n          ) {\n            addTileRepresentationToLookup(\n              tileRepresentationLookup,\n              tileRepresentation,\n              altZ,\n            );\n            loaded = true;\n          }\n        }\n        if (!loaded) {\n          covered = false;\n        }\n      }\n    }\n    return covered;\n  }\n\n  clearCache() {\n    const tileRepresentationCache = this.tileRepresentationCache;\n    tileRepresentationCache.forEach((tileRepresentation) =>\n      tileRepresentation.dispose(),\n    );\n    tileRepresentationCache.clear();\n  }\n\n  removeHelper() {\n    if (this.helper) {\n      this.clearCache();\n    }\n\n    super.removeHelper();\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    super.disposeInternal();\n    delete this.frameState;\n  }\n}\n\nexport default WebGLBaseTileLayerRenderer;\n","/**\n * @module ol/renderer/webgl/TileLayer\n */\nimport ReprojDataTile from '../../reproj/DataTile.js';\nimport ReprojTile from '../../reproj/Tile.js';\nimport TileState from '../../TileState.js';\nimport TileTexture from '../../webgl/TileTexture.js';\nimport WebGLArrayBuffer from '../../webgl/Buffer.js';\nimport WebGLBaseTileLayerRenderer, {\n  Uniforms as BaseUniforms,\n  getCacheKey,\n} from './TileLayerBase.js';\nimport {AttributeType} from '../../webgl/Helper.js';\nimport {ELEMENT_ARRAY_BUFFER, STATIC_DRAW} from '../../webgl.js';\nimport {apply as applyTransform} from '../../transform.js';\nimport {\n  boundingExtent,\n  containsCoordinate,\n  getIntersection,\n} from '../../extent.js';\nimport {fromUserExtent} from '../../proj.js';\nimport {fromTransform as mat4FromTransform} from '../../vec/mat4.js';\nimport {toSize} from '../../size.js';\n\nexport const Uniforms = {\n  ...BaseUniforms,\n  TILE_TEXTURE_ARRAY: 'u_tileTextures',\n  TEXTURE_PIXEL_WIDTH: 'u_texturePixelWidth',\n  TEXTURE_PIXEL_HEIGHT: 'u_texturePixelHeight',\n  TEXTURE_RESOLUTION: 'u_textureResolution', // map units per texture pixel\n  TEXTURE_ORIGIN_X: 'u_textureOriginX', // map x coordinate of left edge of texture\n  TEXTURE_ORIGIN_Y: 'u_textureOriginY', // map y coordinate of top edge of texture\n};\n\nexport const Attributes = {\n  TEXTURE_COORD: 'a_textureCoord',\n};\n\n/**\n * @type {Array<import('../../webgl/Helper.js').AttributeDescription>}\n */\nconst attributeDescriptions = [\n  {\n    name: Attributes.TEXTURE_COORD,\n    size: 2,\n    type: AttributeType.FLOAT,\n  },\n];\n\n/**\n * @typedef {Object} Options\n * @property {string} vertexShader Vertex shader source.\n * @property {string} fragmentShader Fragment shader source.\n * @property {Object<string, import(\"../../webgl/Helper\").UniformValue>} [uniforms] Additional uniforms\n * made available to shaders.\n * @property {Array<import(\"../../webgl/PaletteTexture.js\").default>} [paletteTextures] Palette textures.\n * @property {number} [cacheSize=512] The texture cache size.\n */\n\n/**\n * @typedef {import(\"../../layer/WebGLTile.js\").default} LayerType\n */\n/**\n * @typedef {import(\"../../webgl/TileTexture.js\").TileType} TileTextureType\n */\n/**\n * @typedef {import(\"../../webgl/TileTexture.js\").default} TileTextureRepresentation\n */\n\n/**\n * @classdesc\n * WebGL renderer for tile layers.\n * @extends {WebGLBaseTileLayerRenderer<LayerType, TileTextureType, TileTextureRepresentation>}\n * @api\n */\nclass WebGLTileLayerRenderer extends WebGLBaseTileLayerRenderer {\n  /**\n   * @param {LayerType} tileLayer Tile layer.\n   * @param {Options} options Options.\n   */\n  constructor(tileLayer, options) {\n    super(tileLayer, options);\n\n    /**\n     * @type {WebGLProgram}\n     * @private\n     */\n    this.program_;\n\n    /**\n     * @private\n     */\n    this.vertexShader_ = options.vertexShader;\n\n    /**\n     * @private\n     */\n    this.fragmentShader_ = options.fragmentShader;\n\n    /**\n     * Tiles are rendered as a quad with the following structure:\n     *\n     *  [P3]---------[P2]\n     *   |`           |\n     *   |  `     B   |\n     *   |    `       |\n     *   |      `     |\n     *   |   A    `   |\n     *   |          ` |\n     *  [P0]---------[P1]\n     *\n     * Triangle A: P0, P1, P3\n     * Triangle B: P1, P2, P3\n     *\n     * @private\n     */\n    this.indices_ = new WebGLArrayBuffer(ELEMENT_ARRAY_BUFFER, STATIC_DRAW);\n    this.indices_.fromArray([0, 1, 3, 1, 2, 3]);\n\n    /**\n     * @type {Array<import(\"../../webgl/PaletteTexture.js\").default>}\n     * @private\n     */\n    this.paletteTextures_ = options.paletteTextures || [];\n  }\n\n  /**\n   * @param {Options} options Options.\n   */\n  reset(options) {\n    super.reset(options);\n    if (this.helper) {\n      const gl = this.helper.getGL();\n      for (const paletteTexture of this.paletteTextures_) {\n        paletteTexture.delete(gl);\n      }\n    }\n\n    this.vertexShader_ = options.vertexShader;\n    this.fragmentShader_ = options.fragmentShader;\n    this.paletteTextures_ = options.paletteTextures || [];\n\n    if (this.helper) {\n      this.program_ = this.helper.getProgram(\n        this.fragmentShader_,\n        this.vertexShader_,\n      );\n    }\n  }\n\n  afterHelperCreated() {\n    this.program_ = this.helper.getProgram(\n      this.fragmentShader_,\n      this.vertexShader_,\n    );\n    this.helper.flushBufferData(this.indices_);\n  }\n\n  removeHelper() {\n    if (this.helper) {\n      const gl = this.helper.getGL();\n      for (const paletteTexture of this.paletteTextures_) {\n        paletteTexture.delete(gl);\n      }\n    }\n\n    super.removeHelper();\n  }\n\n  createTileRepresentation(options) {\n    return new TileTexture(options);\n  }\n\n  beforeTilesRender(frameState, tilesWithAlpha) {\n    super.beforeTilesRender(frameState, tilesWithAlpha);\n    this.helper.useProgram(this.program_, frameState);\n  }\n\n  renderTile(\n    tileTexture,\n    tileTransform,\n    frameState,\n    renderExtent,\n    tileResolution,\n    tileSize,\n    tileOrigin,\n    tileExtent,\n    depth,\n    gutter,\n    alpha,\n  ) {\n    const gl = this.helper.getGL();\n    this.helper.bindBuffer(tileTexture.coords);\n    this.helper.bindBuffer(this.indices_);\n    this.helper.enableAttributes(attributeDescriptions);\n\n    let textureSlot = 0;\n    while (textureSlot < tileTexture.textures.length) {\n      const uniformName = `${Uniforms.TILE_TEXTURE_ARRAY}[${textureSlot}]`;\n      this.helper.bindTexture(\n        tileTexture.textures[textureSlot],\n        textureSlot,\n        uniformName,\n      );\n      ++textureSlot;\n    }\n\n    for (\n      let paletteIndex = 0;\n      paletteIndex < this.paletteTextures_.length;\n      ++paletteIndex\n    ) {\n      const paletteTexture = this.paletteTextures_[paletteIndex];\n      const texture = paletteTexture.getTexture(gl);\n      this.helper.bindTexture(texture, textureSlot, paletteTexture.name);\n      ++textureSlot;\n    }\n\n    const viewState = frameState.viewState;\n\n    const tileWidthWithGutter = tileSize[0] + 2 * gutter;\n    const tileHeightWithGutter = tileSize[1] + 2 * gutter;\n\n    const tile = tileTexture.tile;\n    const tileCoord = tile.tileCoord;\n\n    const tileCenterI = tileCoord[1];\n    const tileCenterJ = tileCoord[2];\n\n    this.helper.setUniformMatrixValue(\n      Uniforms.TILE_TRANSFORM,\n      mat4FromTransform(this.tempMat4, tileTransform),\n    );\n\n    this.helper.setUniformFloatValue(Uniforms.TRANSITION_ALPHA, alpha);\n    this.helper.setUniformFloatValue(Uniforms.DEPTH, depth);\n\n    let gutterExtent = renderExtent;\n    if (gutter > 0) {\n      gutterExtent = tileExtent;\n      getIntersection(gutterExtent, renderExtent, gutterExtent);\n    }\n    this.helper.setUniformFloatVec4(Uniforms.RENDER_EXTENT, gutterExtent);\n\n    this.helper.setUniformFloatValue(Uniforms.RESOLUTION, viewState.resolution);\n    this.helper.setUniformFloatValue(Uniforms.ZOOM, viewState.zoom);\n\n    this.helper.setUniformFloatValue(\n      Uniforms.TEXTURE_PIXEL_WIDTH,\n      tileWidthWithGutter,\n    );\n    this.helper.setUniformFloatValue(\n      Uniforms.TEXTURE_PIXEL_HEIGHT,\n      tileHeightWithGutter,\n    );\n    this.helper.setUniformFloatValue(\n      Uniforms.TEXTURE_RESOLUTION,\n      tileResolution,\n    );\n    this.helper.setUniformFloatValue(\n      Uniforms.TEXTURE_ORIGIN_X,\n      tileOrigin[0] +\n        tileCenterI * tileSize[0] * tileResolution -\n        gutter * tileResolution,\n    );\n    this.helper.setUniformFloatValue(\n      Uniforms.TEXTURE_ORIGIN_Y,\n      tileOrigin[1] -\n        tileCenterJ * tileSize[1] * tileResolution +\n        gutter * tileResolution,\n    );\n\n    this.helper.drawElements(0, this.indices_.getSize());\n  }\n\n  /**\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView} Data at the pixel location.\n   */\n  getData(pixel) {\n    const gl = this.helper.getGL();\n    if (!gl) {\n      return null;\n    }\n\n    const frameState = this.frameState;\n    if (!frameState) {\n      return null;\n    }\n\n    const layer = this.getLayer();\n    const coordinate = applyTransform(\n      frameState.pixelToCoordinateTransform,\n      pixel.slice(),\n    );\n\n    const viewState = frameState.viewState;\n    const layerExtent = layer.getExtent();\n    if (layerExtent) {\n      if (\n        !containsCoordinate(\n          fromUserExtent(layerExtent, viewState.projection),\n          coordinate,\n        )\n      ) {\n        return null;\n      }\n    }\n\n    // determine last source suitable for rendering at coordinate\n    const sources = layer.getSources(\n      boundingExtent([coordinate]),\n      viewState.resolution,\n    );\n    let i, source, tileGrid;\n    for (i = sources.length - 1; i >= 0; --i) {\n      source = sources[i];\n      if (source.getState() === 'ready') {\n        tileGrid = source.getTileGridForProjection(viewState.projection);\n        if (source.getWrapX()) {\n          break;\n        }\n        const gridExtent = tileGrid.getExtent();\n        if (!gridExtent || containsCoordinate(gridExtent, coordinate)) {\n          break;\n        }\n      }\n    }\n    if (i < 0) {\n      return null;\n    }\n\n    const tileTextureCache = this.tileRepresentationCache;\n    for (\n      let z = tileGrid.getZForResolution(viewState.resolution);\n      z >= tileGrid.getMinZoom();\n      --z\n    ) {\n      const tileCoord = tileGrid.getTileCoordForCoordAndZ(coordinate, z);\n      const cacheKey = getCacheKey(source, tileCoord);\n      if (!tileTextureCache.containsKey(cacheKey)) {\n        continue;\n      }\n      const tileTexture = tileTextureCache.get(cacheKey);\n      const tile = tileTexture.tile;\n      if (\n        (tile instanceof ReprojTile || tile instanceof ReprojDataTile) &&\n        tile.getState() === TileState.EMPTY\n      ) {\n        return null;\n      }\n      if (!tileTexture.loaded) {\n        continue;\n      }\n      const tileOrigin = tileGrid.getOrigin(z);\n      const tileSize = toSize(tileGrid.getTileSize(z));\n      const tileResolution = tileGrid.getResolution(z);\n\n      const col =\n        (coordinate[0] - tileOrigin[0]) / tileResolution -\n        tileCoord[1] * tileSize[0];\n\n      const row =\n        (tileOrigin[1] - coordinate[1]) / tileResolution -\n        tileCoord[2] * tileSize[1];\n\n      return tileTexture.getPixelData(col, row);\n    }\n    return null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    const helper = this.helper;\n    if (helper) {\n      const gl = helper.getGL();\n      for (const paletteTexture of this.paletteTextures_) {\n        paletteTexture.delete(gl);\n      }\n      this.paletteTextures_.length = 0;\n\n      gl.deleteProgram(this.program_);\n      delete this.program_;\n      helper.deleteBuffer(this.indices_);\n    }\n    super.disposeInternal();\n    delete this.indices_;\n  }\n}\n\nexport default WebGLTileLayerRenderer;\n","/**\n * @module ol/expr/gpu\n */\nimport PaletteTexture from '../webgl/PaletteTexture.js';\nimport {\n  BooleanType,\n  CallExpression,\n  ColorType,\n  NoneType,\n  NumberArrayType,\n  NumberType,\n  Ops,\n  SizeType,\n  StringType,\n  computeGeometryType,\n  isType,\n  overlapsType,\n  parse,\n  typeName,\n} from './expression.js';\nimport {Uniforms} from '../renderer/webgl/TileLayer.js';\nimport {asArray} from '../color.js';\nimport {toSize} from '../size.js';\n\n/**\n * @param {string} operator Operator\n * @param {CompilationContext} context Compilation context\n * @return {string} A function name based on the operator, unique in the given context\n */\nfunction computeOperatorFunctionName(operator, context) {\n  return `operator_${operator}_${Object.keys(context.functions).length}`;\n}\n\n/**\n * Will return the number as a float with a dot separator, which is required by GLSL.\n * @param {number} v Numerical value.\n * @return {string} The value as string.\n */\nexport function numberToGlsl(v) {\n  const s = v.toString();\n  return s.includes('.') ? s : s + '.0';\n}\n\n/**\n * Will return the number array as a float with a dot separator, concatenated with ', '.\n * @param {Array<number>} array Numerical values array.\n * @return {string} The array as a vector, e. g.: `vec3(1.0, 2.0, 3.0)`.\n */\nexport function arrayToGlsl(array) {\n  if (array.length < 2 || array.length > 4) {\n    throw new Error(\n      '`formatArray` can only output `vec2`, `vec3` or `vec4` arrays.',\n    );\n  }\n  return `vec${array.length}(${array.map(numberToGlsl).join(', ')})`;\n}\n\n/**\n * Will normalize and converts to string a `vec4` color array compatible with GLSL.\n * @param {string|import(\"../color.js\").Color} color Color either in string format or [r, g, b, a] array format,\n * with RGB components in the 0..255 range and the alpha component in the 0..1 range.\n * Note that the final array will always have 4 components.\n * @return {string} The color expressed in the `vec4(1.0, 1.0, 1.0, 1.0)` form.\n */\nexport function colorToGlsl(color) {\n  const array = asArray(color);\n  const alpha = array.length > 3 ? array[3] : 1;\n  // all components are premultiplied with alpha value\n  return arrayToGlsl([\n    (array[0] / 255) * alpha,\n    (array[1] / 255) * alpha,\n    (array[2] / 255) * alpha,\n    alpha,\n  ]);\n}\n\n/**\n * Normalizes and converts a number or array toa `vec2` array compatible with GLSL.\n * @param {number|import('../size.js').Size} size Size.\n * @return {string} The color expressed in the `vec4(1.0, 1.0, 1.0, 1.0)` form.\n */\nexport function sizeToGlsl(size) {\n  const array = toSize(size);\n  return arrayToGlsl(array);\n}\n\n/** @type {Object<string, number>} */\nconst stringToFloatMap = {};\nlet stringToFloatCounter = 0;\n\n/**\n * Returns a stable equivalent number for the string literal.\n * @param {string} string String literal value\n * @return {number} Number equivalent\n */\nexport function getStringNumberEquivalent(string) {\n  if (!(string in stringToFloatMap)) {\n    stringToFloatMap[string] = stringToFloatCounter++;\n  }\n  return stringToFloatMap[string];\n}\n\n/**\n * Returns a stable equivalent number for the string literal, for use in shaders. This number is then\n * converted to be a GLSL-compatible string.\n * Note: with a float precision of `mediump`, the amount of unique strings supported is 16,777,216\n * @param {string} string String literal value\n * @return {string} GLSL-compatible string containing a number\n */\nexport function stringToGlsl(string) {\n  return numberToGlsl(getStringNumberEquivalent(string));\n}\n\n/**\n * Get the uniform name given a variable name.\n * @param {string} variableName The variable name.\n * @return {string} The uniform name.\n */\nexport function uniformNameForVariable(variableName) {\n  return 'u_var_' + variableName;\n}\n\n/**\n * @typedef {import('./expression.js').ParsingContext} ParsingContext\n */\n/**\n *\n * @typedef {import(\"./expression.js\").Expression} Expression\n */\n/**\n *\n * @typedef {import(\"./expression.js\").LiteralExpression} LiteralExpression\n */\n\n/**\n * @typedef {Object} CompilationContextProperty\n * @property {string} name Name\n * @property {number} type Resolved property type\n * @property {function(import(\"../Feature.js\").FeatureLike): *} [evaluator] Function used for evaluating the value;\n */\n\n/**\n * @typedef {Object} CompilationContextVariable\n * @property {string} name Name\n * @property {number} type Resolved variable type\n * @property {function(Object): *} [evaluator] Function used for evaluating the value; argument is the style variables object\n */\n\n/**\n * @typedef {Object} CompilationContext\n * @property {boolean} [inFragmentShader] If false, means the expression output should be made for a vertex shader\n * @property {Object<string, CompilationContextProperty>} properties The values for properties used in 'get' expressions.\n * @property {Object<string, CompilationContextVariable>} variables The values for variables used in 'var' expressions.\n * @property {Object<string, string>} functions Lookup of functions used by the style.\n * @property {number} [bandCount] Number of bands per pixel.\n * @property {Array<PaletteTexture>} [paletteTextures] List of palettes used by the style.\n * @property {import(\"../style/webgl.js\").WebGLStyle} style Literal style.\n */\n\n/**\n * @return {CompilationContext} A new compilation context.\n */\nexport function newCompilationContext() {\n  return {\n    inFragmentShader: false,\n    variables: {},\n    properties: {},\n    functions: {},\n    bandCount: 0,\n    style: {},\n  };\n}\n\nconst GET_BAND_VALUE_FUNC = 'getBandValue';\n\nexport const PALETTE_TEXTURE_ARRAY = 'u_paletteTextures';\n\n/**\n * @typedef {string} CompiledExpression\n */\n\n/**\n * @typedef {function(CompilationContext, CallExpression, number): string} Compiler\n * Third argument is the expected value types\n */\n\n/**\n * @param {import('./expression.js').EncodedExpression} encoded The encoded expression.\n * @param {number} type The expected type.\n * @param {import('./expression.js').ParsingContext} parsingContext The parsing context.\n * @param {CompilationContext} compilationContext An existing compilation context\n * @return {CompiledExpression} The compiled expression.\n */\nexport function buildExpression(\n  encoded,\n  type,\n  parsingContext,\n  compilationContext,\n) {\n  const expression = parse(encoded, parsingContext, type);\n  if (isType(expression.type, NoneType)) {\n    throw new Error(`No matching type was found`);\n  }\n  if (!overlapsType(type, expression.type)) {\n    const expected = typeName(type);\n    const actual = typeName(expression.type);\n    throw new Error(\n      `Expected expression to be of type ${expected}, got ${actual}`,\n    );\n  }\n  return compile(expression, type, compilationContext);\n}\n\n/**\n * @param {function(Array<CompiledExpression>, CompilationContext): string} output Function that takes in parsed arguments and returns a string\n * @return {function(CompilationContext, import(\"./expression.js\").CallExpression, number): string} Compiler for the call expression\n */\nfunction createCompiler(output) {\n  return (context, expression, type) => {\n    const length = expression.args.length;\n    const args = new Array(length);\n    for (let i = 0; i < length; ++i) {\n      args[i] = compile(expression.args[i], type, context);\n    }\n    return output(args, context);\n  };\n}\n\n/**\n * @type {Object<string, Compiler>}\n */\nconst compilers = {\n  [Ops.Get]: (context, expression) => {\n    const firstArg = /** @type {LiteralExpression} */ (expression.args[0]);\n    const propName = /** @type {string} */ (firstArg.value);\n    const isExisting = propName in context.properties;\n    if (!isExisting) {\n      context.properties[propName] = {\n        name: propName,\n        type: expression.type,\n      };\n    }\n    const prefix = context.inFragmentShader ? 'v_prop_' : 'a_prop_';\n    return prefix + propName;\n  },\n  [Ops.GeometryType]: (context, expression, type) => {\n    const propName = 'geometryType';\n    const isExisting = propName in context.properties;\n    if (!isExisting) {\n      context.properties[propName] = {\n        name: propName,\n        type: StringType,\n        evaluator: (feature) => {\n          return computeGeometryType(feature.getGeometry());\n        },\n      };\n    }\n    const prefix = context.inFragmentShader ? 'v_prop_' : 'a_prop_';\n    return prefix + propName;\n  },\n  [Ops.Var]: (context, expression) => {\n    const firstArg = /** @type {LiteralExpression} */ (expression.args[0]);\n    const varName = /** @type {string} */ (firstArg.value);\n    const isExisting = varName in context.variables;\n    if (!isExisting) {\n      context.variables[varName] = {\n        name: varName,\n        type: expression.type,\n      };\n    }\n    return uniformNameForVariable(varName);\n  },\n  [Ops.Resolution]: () => 'u_resolution',\n  [Ops.Zoom]: () => 'u_zoom',\n  [Ops.Time]: () => 'u_time',\n  [Ops.Any]: createCompiler((compiledArgs) => `(${compiledArgs.join(` || `)})`),\n  [Ops.All]: createCompiler((compiledArgs) => `(${compiledArgs.join(` && `)})`),\n  [Ops.Not]: createCompiler(([value]) => `(!${value})`),\n  [Ops.Equal]: createCompiler(\n    ([firstValue, secondValue]) => `(${firstValue} == ${secondValue})`,\n  ),\n  [Ops.NotEqual]: createCompiler(\n    ([firstValue, secondValue]) => `(${firstValue} != ${secondValue})`,\n  ),\n  [Ops.GreaterThan]: createCompiler(\n    ([firstValue, secondValue]) => `(${firstValue} > ${secondValue})`,\n  ),\n  [Ops.GreaterThanOrEqualTo]: createCompiler(\n    ([firstValue, secondValue]) => `(${firstValue} >= ${secondValue})`,\n  ),\n  [Ops.LessThan]: createCompiler(\n    ([firstValue, secondValue]) => `(${firstValue} < ${secondValue})`,\n  ),\n  [Ops.LessThanOrEqualTo]: createCompiler(\n    ([firstValue, secondValue]) => `(${firstValue} <= ${secondValue})`,\n  ),\n  [Ops.Multiply]: createCompiler(\n    (compiledArgs) => `(${compiledArgs.join(' * ')})`,\n  ),\n  [Ops.Divide]: createCompiler(\n    ([firstValue, secondValue]) => `(${firstValue} / ${secondValue})`,\n  ),\n  [Ops.Add]: createCompiler((compiledArgs) => `(${compiledArgs.join(' + ')})`),\n  [Ops.Subtract]: createCompiler(\n    ([firstValue, secondValue]) => `(${firstValue} - ${secondValue})`,\n  ),\n  [Ops.Clamp]: createCompiler(\n    ([value, min, max]) => `clamp(${value}, ${min}, ${max})`,\n  ),\n  [Ops.Mod]: createCompiler(([value, modulo]) => `mod(${value}, ${modulo})`),\n  [Ops.Pow]: createCompiler(([value, power]) => `pow(${value}, ${power})`),\n  [Ops.Abs]: createCompiler(([value]) => `abs(${value})`),\n  [Ops.Floor]: createCompiler(([value]) => `floor(${value})`),\n  [Ops.Ceil]: createCompiler(([value]) => `ceil(${value})`),\n  [Ops.Round]: createCompiler(([value]) => `floor(${value} + 0.5)`),\n  [Ops.Sin]: createCompiler(([value]) => `sin(${value})`),\n  [Ops.Cos]: createCompiler(([value]) => `cos(${value})`),\n  [Ops.Atan]: createCompiler(([firstValue, secondValue]) => {\n    return secondValue !== undefined\n      ? `atan(${firstValue}, ${secondValue})`\n      : `atan(${firstValue})`;\n  }),\n  [Ops.Sqrt]: createCompiler(([value]) => `sqrt(${value})`),\n  [Ops.Match]: createCompiler((compiledArgs) => {\n    const input = compiledArgs[0];\n    const fallback = compiledArgs[compiledArgs.length - 1];\n    let result = null;\n    for (let i = compiledArgs.length - 3; i >= 1; i -= 2) {\n      const match = compiledArgs[i];\n      const output = compiledArgs[i + 1];\n      result = `(${input} == ${match} ? ${output} : ${result || fallback})`;\n    }\n    return result;\n  }),\n  [Ops.Between]: createCompiler(\n    ([value, min, max]) => `(${value} >= ${min} && ${value} <= ${max})`,\n  ),\n  [Ops.Interpolate]: createCompiler(([exponent, input, ...compiledArgs]) => {\n    let result = '';\n    for (let i = 0; i < compiledArgs.length - 2; i += 2) {\n      const stop1 = compiledArgs[i];\n      const output1 = result || compiledArgs[i + 1];\n      const stop2 = compiledArgs[i + 2];\n      const output2 = compiledArgs[i + 3];\n      let ratio;\n      if (exponent === numberToGlsl(1)) {\n        ratio = `(${input} - ${stop1}) / (${stop2} - ${stop1})`;\n      } else {\n        ratio = `(pow(${exponent}, (${input} - ${stop1})) - 1.0) / (pow(${exponent}, (${stop2} - ${stop1})) - 1.0)`;\n      }\n      result = `mix(${output1}, ${output2}, clamp(${ratio}, 0.0, 1.0))`;\n    }\n    return result;\n  }),\n  [Ops.Case]: createCompiler((compiledArgs) => {\n    const fallback = compiledArgs[compiledArgs.length - 1];\n    let result = null;\n    for (let i = compiledArgs.length - 3; i >= 0; i -= 2) {\n      const condition = compiledArgs[i];\n      const output = compiledArgs[i + 1];\n      result = `(${condition} ? ${output} : ${result || fallback})`;\n    }\n    return result;\n  }),\n  [Ops.In]: createCompiler(([needle, ...haystack], context) => {\n    const funcName = computeOperatorFunctionName('in', context);\n    const tests = [];\n    for (let i = 0; i < haystack.length; i += 1) {\n      tests.push(`  if (inputValue == ${haystack[i]}) { return true; }`);\n    }\n    context.functions[funcName] = `bool ${funcName}(float inputValue) {\n${tests.join('\\n')}\n  return false;\n}`;\n    return `${funcName}(${needle})`;\n  }),\n  [Ops.Array]: createCompiler(\n    (args) => `vec${args.length}(${args.join(', ')})`,\n  ),\n  [Ops.Color]: createCompiler((compiledArgs) => {\n    if (compiledArgs.length === 1) {\n      //grayscale\n      return `vec4(vec3(${compiledArgs[0]} / 255.0), 1.0)`;\n    }\n    if (compiledArgs.length === 2) {\n      //grayscale with alpha\n      return `(${compiledArgs[1]} * vec4(vec3(${compiledArgs[0]} / 255.0), 1.0))`;\n    }\n    const rgb = compiledArgs.slice(0, 3).map((color) => `${color} / 255.0`);\n    if (compiledArgs.length === 3) {\n      return `vec4(${rgb.join(', ')}, 1.0)`;\n    }\n    const alpha = compiledArgs[3];\n    return `(${alpha} * vec4(${rgb.join(', ')}, 1.0))`;\n  }),\n  [Ops.Band]: createCompiler(([band, xOffset, yOffset], context) => {\n    if (!(GET_BAND_VALUE_FUNC in context.functions)) {\n      let ifBlocks = '';\n      const bandCount = context.bandCount || 1;\n      for (let i = 0; i < bandCount; i++) {\n        const colorIndex = Math.floor(i / 4);\n        let bandIndex = i % 4;\n        if (i === bandCount - 1 && bandIndex === 1) {\n          // LUMINANCE_ALPHA - band 1 assigned to rgb and band 2 assigned to alpha\n          bandIndex = 3;\n        }\n        const textureName = `${Uniforms.TILE_TEXTURE_ARRAY}[${colorIndex}]`;\n        ifBlocks += `  if (band == ${i + 1}.0) {\n    return texture2D(${textureName}, v_textureCoord + vec2(dx, dy))[${bandIndex}];\n  }\n`;\n      }\n\n      context.functions[GET_BAND_VALUE_FUNC] =\n        `float getBandValue(float band, float xOffset, float yOffset) {\n  float dx = xOffset / ${Uniforms.TEXTURE_PIXEL_WIDTH};\n  float dy = yOffset / ${Uniforms.TEXTURE_PIXEL_HEIGHT};\n${ifBlocks}\n}`;\n    }\n\n    return `${GET_BAND_VALUE_FUNC}(${band}, ${xOffset ?? '0.0'}, ${\n      yOffset ?? '0.0'\n    })`;\n  }),\n  [Ops.Palette]: (context, expression) => {\n    const [index, ...colors] = expression.args;\n    const numColors = colors.length;\n    const palette = new Uint8Array(numColors * 4);\n    for (let i = 0; i < colors.length; i++) {\n      const parsedValue = /** @type {string | Array<number>} */ (\n        /** @type {LiteralExpression} */ (colors[i]).value\n      );\n      const color = asArray(parsedValue);\n      const offset = i * 4;\n      palette[offset] = color[0];\n      palette[offset + 1] = color[1];\n      palette[offset + 2] = color[2];\n      palette[offset + 3] = color[3] * 255;\n    }\n    if (!context.paletteTextures) {\n      context.paletteTextures = [];\n    }\n    const paletteName = `${PALETTE_TEXTURE_ARRAY}[${context.paletteTextures.length}]`;\n    const paletteTexture = new PaletteTexture(paletteName, palette);\n    context.paletteTextures.push(paletteTexture);\n    const compiledIndex = compile(index, NumberType, context);\n    return `texture2D(${paletteName}, vec2((${compiledIndex} + 0.5) / ${numColors}.0, 0.5))`;\n  },\n  // TODO: unimplemented\n  // Ops.Number\n  // Ops.String\n  // Ops.Coalesce\n  // Ops.Concat\n  // Ops.ToString\n};\n\n/**\n * @param {Expression} expression The expression.\n * @param {number} returnType The expected return type.\n * @param {CompilationContext} context The compilation context.\n * @return {CompiledExpression} The compiled expression\n */\nfunction compile(expression, returnType, context) {\n  // operator\n  if (expression instanceof CallExpression) {\n    const compiler = compilers[expression.operator];\n    if (compiler === undefined) {\n      throw new Error(\n        `No compiler defined for this operator: ${JSON.stringify(\n          expression.operator,\n        )}`,\n      );\n    }\n    return compiler(context, expression, returnType);\n  }\n\n  if ((expression.type & NumberType) > 0) {\n    return numberToGlsl(/** @type {number} */ (expression.value));\n  }\n\n  if ((expression.type & BooleanType) > 0) {\n    return expression.value.toString();\n  }\n\n  if ((expression.type & StringType) > 0) {\n    return stringToGlsl(expression.value.toString());\n  }\n\n  if ((expression.type & ColorType) > 0) {\n    return colorToGlsl(\n      /** @type {Array<number> | string} */ (expression.value),\n    );\n  }\n\n  if ((expression.type & NumberArrayType) > 0) {\n    return arrayToGlsl(/** @type {Array<number>} */ (expression.value));\n  }\n\n  if ((expression.type & SizeType) > 0) {\n    return sizeToGlsl(\n      /** @type {number|import('../size.js').Size} */ (expression.value),\n    );\n  }\n\n  throw new Error(\n    `Unexpected expression ${expression.value} (expected type ${typeName(\n      returnType,\n    )})`,\n  );\n}\n","/**\n * @module ol/style/flat\n */\n\n/**\n * @api\n * @fileoverview Vector layers can be styled with an object literal containing properties for\n * stroke, fill, image, and text styles.  The types below can be composed into a single object.\n * For example, a style with both stroke and fill properties could look like this:\n *\n *     const style = {\n *       'stroke-color': 'yellow',\n *       'stroke-width': 1.5,\n *       'fill-color': 'orange',\n *     };\n *\n * See details about the available properties depending on what type of symbolizer should be applied:\n *  * {@link module:ol/style/flat~FlatStroke Stroke} - properties for applying a stroke to lines and polygons\n *  * {@link module:ol/style/flat~FlatFill Fill} - properties for filling polygons\n *  * {@link module:ol/style/flat~FlatText Text} - properties for labeling points, lines, and polygons\n *  * {@link module:ol/style/flat~FlatIcon Icon} - properties for rendering points with an icon\n *  * {@link module:ol/style/flat~FlatCircle Circle} - properties for rendering points with a circle\n *  * {@link module:ol/style/flat~FlatShape Shape} - properties for rendering points with a regular shape\n *\n * To conditionally apply styles based on a filter, a list of {@link module:ol/style/flat~Rule rules} can be used.\n * For example, to style points with a big orange circle if the population is greater than 1 million and\n * a smaller blue circle otherwise:\n *\n *     const rules = [\n *       {\n *         filter: ['>', ['get', 'population'], 1_000_000],\n *         style: {\n *           'circle-radius': 10,\n *           'circle-fill-color': 'red',\n *         }\n *       },\n *       {\n *         else: true,\n *         style: {\n *           'circle-radius': 5,\n *           'circle-fill-color': 'blue',\n *         },\n *       },\n *     ];\n */\n\n/**\n * A literal boolean (e.g. `true`) or an expression that evaluates to a boolean (e.g. `['>', ['get', 'population'], 1_000_000]`).\n *\n * @typedef {boolean|Array} BooleanExpression\n */\n\n/**\n * A literal string (e.g. `'hello'`) or an expression that evaluates to a string (e.g. `['get', 'greeting']`).\n *\n * @typedef {string|Array} StringExpression\n */\n\n/**\n * A literal number (e.g. `42`) or an expression that evaluates to a number (e.g. `['+', 40, 2]`).\n *\n * @typedef {number|Array} NumberExpression\n */\n\n/**\n * A CSS named color (e.g. `'blue'`), an array of 3 RGB values (e.g. `[0, 255, 0]`), an array of 4 RGBA values\n * (e.g. `[0, 255, 0, 0.5]`), or an expression that evaluates to one of these color types (e.g. `['get', 'color']`).\n *\n * @typedef {import(\"../color.js\").Color|string|Array} ColorExpression\n */\n\n/**\n * An array of numbers (e.g. `[1, 2, 3]`) or an expression that evaluates to the same (e.g. `['get', 'values']`).\n *\n * @typedef {Array<number>|Array} NumberArrayExpression\n */\n\n/**\n * An array of two numbers (e.g. `[10, 20]`) or an expression that evaluates to the same (e.g. `['get', 'size']`).\n *\n * @typedef {number|Array<number>|Array} SizeExpression\n */\n\n/**\n * For static styling, the [layer.setStyle()]{@link module:ol/layer/Vector~VectorLayer#setStyle} method\n * can be called with an object literal that has fill, stroke, text, icon, regular shape, and/or circle properties.\n * @api\n *\n * @typedef {FlatFill & FlatStroke & FlatText & FlatIcon & FlatShape & FlatCircle} FlatStyle\n */\n\n/**\n * A flat style literal or an array of the same.\n *\n * @typedef {FlatStyle|Array<FlatStyle>|Array<Rule>} FlatStyleLike\n */\n\n/**\n * Fill style properties applied to polygon features.\n *\n * @typedef {Object} FlatFill\n * @property {ColorExpression} [fill-color] The fill color.\n * @property {StringExpression} [fill-pattern-src] Fill pattern image URL.\n * @property {SizeExpression} [fill-pattern-size] Fill pattern image size in pixels.\n * Can be used together with `fill-pattern-offset` to define the sub-rectangle to use\n * from a fill pattern image sprite sheet.\n * @property {SizeExpression} [fill-pattern-offset] Fill pattern image offset in pixels.\n */\n\n/**\n * Stroke style properties applied to line strings and polygon boundaries.  To apply a stroke, at least one of\n * `stroke-color` or `stroke-width` must be provided.\n *\n * @typedef {Object} FlatStroke\n * @property {ColorExpression} [stroke-color] The stroke color.\n * @property {NumberExpression} [stroke-width] Stroke pixel width.\n * @property {StringExpression} [stroke-line-cap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {StringExpression} [stroke-line-join='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {NumberArrayExpression} [stroke-line-dash] Line dash pattern.\n * @property {NumberExpression} [stroke-line-dash-offset=0] Line dash offset.\n * @property {NumberExpression} [stroke-miter-limit=10] Miter limit.\n * @property {NumberExpression} [z-index] The zIndex of the style.\n */\n\n/**\n * Label style properties applied to all features.  At a minimum, a `text-value` must be provided.\n *\n * @typedef {Object} FlatText\n * @property {StringExpression} [text-value] Text content (with `\\n` for line breaks).\n * @property {StringExpression} [text-font='10px sans-serif'] Font style as [CSS `font`](https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/font) value.\n * @property {NumberExpression} [text-max-angle=Math.PI/4] When `text-placement` is set to `'line'`, allow a maximum angle between adjacent characters.\n * The expected value is in radians, and the default is 45° (`Math.PI / 4`).\n * @property {NumberExpression} [text-offset-x=0] Horizontal text offset in pixels. A positive will shift the text right.\n * @property {NumberExpression} [text-offset-y=0] Vertical text offset in pixels. A positive will shift the text down.\n * @property {BooleanExpression} [text-overflow=false] For polygon labels or when `placement` is set to `'line'`, allow text to exceed\n * the width of the polygon at the label position or the length of the path that it follows.\n * @property {StringExpression} [text-placement='point'] Text placement.\n * @property {NumberExpression} [text-repeat] Repeat interval in pixels. When set, the text will be repeated at this interval. Only available when\n * `text-placement` is set to `'line'`. Overrides `text-align`.\n * @property {SizeExpression} [text-scale] Scale.\n * @property {BooleanExpression} [text-rotate-with-view=false] Whether to rotate the text with the view.\n * @property {NumberExpression} [text-rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {StringExpression} [text-align] Text alignment. Possible values: `'left'`, `'right'`, `'center'`, `'end'` or `'start'`.\n * Default is `'center'` for `'text-placement': 'point'`. For `'text-placement': 'line'`, the default is to let the renderer choose a\n * placement where `text-max-angle` is not exceeded.\n * @property {StringExpression} [text-justify] Text justification within the text box.\n * If not set, text is justified towards the `textAlign` anchor.\n * Otherwise, use options `'left'`, `'center'`, or `'right'` to justify the text within the text box.\n * **Note:** `text-justify` is ignored for immediate rendering and also for `'text-placement': 'line'`.\n * @property {StringExpression} [text-baseline='middle'] Text base line. Possible values: `'bottom'`, `'top'`, `'middle'`, `'alphabetic'`,\n * `'hanging'`, `'ideographic'`.\n * @property {NumberArrayExpression} [text-padding=[0, 0, 0, 0]] Padding in pixels around the text for decluttering and background. The order of\n * values in the array is `[top, right, bottom, left]`.\n * @property {ColorExpression} [text-fill-color] The fill color. Specify `'none'` to avoid hit detection on the fill.\n * @property {ColorExpression} [text-background-fill-color] The fill color.\n * @property {ColorExpression} [text-stroke-color] The stroke color.\n * @property {StringExpression} [text-stroke-line-cap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {StringExpression} [text-stroke-line-join='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {NumberArrayExpression} [text-stroke-line-dash] Line dash pattern.\n * @property {NumberExpression} [text-stroke-line-dash-offset=0] Line dash offset.\n * @property {NumberExpression} [text-stroke-miter-limit=10] Miter limit.\n * @property {NumberExpression} [text-stroke-width] Stroke pixel width.\n * @property {ColorExpression} [text-background-stroke-color] The stroke color.\n * @property {StringExpression} [text-background-stroke-line-cap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {StringExpression} [text-background-stroke-line-join='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {NumberArrayExpression} [text-background-stroke-line-dash] Line dash pattern.\n * @property {NumberExpression} [text-background-stroke-line-dash-offset=0] Line dash offset.\n * @property {NumberExpression} [text-background-stroke-miter-limit=10] Miter limit.\n * @property {NumberExpression} [text-background-stroke-width] Stroke pixel width.\n * @property {import(\"./Style.js\").DeclutterMode} [text-declutter-mode] Declutter mode\n * @property {NumberExpression} [z-index] The zIndex of the style.\n */\n\n/**\n * Icon style properties applied to point features. `icon-src` must be provided to render\n * points with an icon.\n *\n * @typedef {Object} FlatIcon\n * @property {string} [icon-src] Image source URI.\n * @property {NumberArrayExpression} [icon-anchor=[0.5, 0.5]] Anchor. Default value is the icon center.\n * @property {import(\"./Icon.js\").IconOrigin} [icon-anchor-origin='top-left'] Origin of the anchor: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {import(\"./Icon.js\").IconAnchorUnits} [icon-anchor-x-units='fraction'] Units in which the anchor x value is\n * specified. A value of `'fraction'` indicates the x value is a fraction of the icon. A value of `'pixels'` indicates\n * the x value in pixels.\n * @property {import(\"./Icon.js\").IconAnchorUnits} [icon-anchor-y-units='fraction'] Units in which the anchor y value is\n * specified. A value of `'fraction'` indicates the y value is a fraction of the icon. A value of `'pixels'` indicates\n * the y value in pixels.\n * @property {import(\"../color.js\").Color|string} [icon-color] Color to tint the icon. If not specified,\n * the icon will be left as is.\n * @property {null|string} [icon-cross-origin] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `icon-cross-origin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {Array<number>} [icon-offset=[0, 0]] Offset, which, together with the size and the offset origin, define the\n * sub-rectangle to use from the original icon image.\n * @property {NumberArrayExpression} [icon-displacement=[0,0]] Displacement of the icon.\n * @property {import(\"./Icon.js\").IconOrigin} [icon-offset-origin='top-left'] Origin of the offset: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {NumberExpression} [icon-opacity=1] Opacity of the icon.\n * @property {SizeExpression} [icon-scale=1] Scale.\n * @property {number} [icon-width] Width of the icon. If not specified, the actual image width will be used. Cannot be combined\n * with `scale`.\n * @property {number} [icon-height] Height of the icon. If not specified, the actual image height will be used. Cannot be combined\n * with `scale`.\n * @property {NumberExpression} [icon-rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {BooleanExpression} [icon-rotate-with-view=false] Whether to rotate the icon with the view.\n * @property {import(\"../size.js\").Size} [icon-size] Icon size in pixel. Can be used together with `icon-offset` to define the\n * sub-rectangle to use from the origin (sprite) icon image.\n * @property {import(\"./Style.js\").DeclutterMode} [icon-declutter-mode] Declutter mode\n * @property {NumberExpression} [z-index] The zIndex of the style.\n */\n\n/**\n * Regular shape style properties for rendering point features.  At least `shape-points` must be provided.\n *\n * @typedef {Object} FlatShape\n * @property {number} [shape-points] Number of points for stars and regular polygons. In case of a polygon, the number of points\n * is the number of sides.\n * @property {ColorExpression} [shape-fill-color] The fill color.\n * @property {ColorExpression} [shape-stroke-color] The stroke color.\n * @property {NumberExpression} [shape-stroke-width] Stroke pixel width.\n * @property {StringExpression} [shape-stroke-line-cap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {StringExpression} [shape-stroke-line-join='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {NumberArrayExpression} [shape-stroke-line-dash] Line dash pattern.\n * @property {NumberExpression} [shape-stroke-line-dash-offset=0] Line dash offset.\n * @property {NumberExpression} [shape-stroke-miter-limit=10] Miter limit.\n * @property {number} [shape-radius] Radius of a regular polygon.\n * @property {number} [shape-radius2] Second radius to make a star instead of a regular polygon.\n * @property {number} [shape-angle=0] Shape's angle in radians. A value of 0 will have one of the shape's point facing up.\n * @property {NumberArrayExpression} [shape-displacement=[0,0]] Displacement of the shape\n * @property {NumberExpression} [shape-rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {BooleanExpression} [shape-rotate-with-view=false] Whether to rotate the shape with the view.\n * @property {SizeExpression} [shape-scale=1] Scale. Unless two dimensional scaling is required a better\n * result may be obtained with appropriate settings for `shape-radius` and `shape-radius2`.\n * @property {import(\"./Style.js\").DeclutterMode} [shape-declutter-mode] Declutter mode.\n * @property {NumberExpression} [z-index] The zIndex of the style.\n */\n\n/**\n * Circle style properties for rendering point features.  At least `circle-radius` must be provided.\n *\n * @typedef {Object} FlatCircle\n * @property {number} [circle-radius] Circle radius.\n * @property {ColorExpression} [circle-fill-color] The fill color.\n * @property {ColorExpression} [circle-stroke-color] The stroke color.\n * @property {NumberExpression} [circle-stroke-width] Stroke pixel width.\n * @property {StringExpression} [circle-stroke-line-cap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {StringExpression} [circle-stroke-line-join='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {NumberArrayExpression} [circle-stroke-line-dash] Line dash pattern.\n * @property {NumberExpression} [circle-stroke-line-dash-offset=0] Line dash offset.\n * @property {NumberExpression} [circle-stroke-miter-limit=10] Miter limit.\n * @property {NumberArrayExpression} [circle-displacement=[0,0]] displacement\n * @property {SizeExpression} [circle-scale=1] Scale. A two dimensional scale will produce an ellipse.\n * Unless two dimensional scaling is required a better result may be obtained with an appropriate setting for `circle-radius`.\n * @property {NumberExpression} [circle-rotation=0] Rotation in radians\n * (positive rotation clockwise, meaningful only when used in conjunction with a two dimensional scale).\n * @property {BooleanExpression} [circle-rotate-with-view=false] Whether to rotate the shape with the view\n * (meaningful only when used in conjunction with a two dimensional scale).\n * @property {import(\"./Style.js\").DeclutterMode} [circle-declutter-mode] Declutter mode\n * @property {NumberExpression} [z-index] The zIndex of the style.\n */\n\n/**\n * These default style properties are applied when no other style is given.\n *\n * @typedef {Object} DefaultStyle\n * @property {string} fill-color `'rgba(255,255,255,0.4)'`\n * @property {string} stroke-color `'#3399CC'`\n * @property {number} stroke-width `1.25`\n * @property {number} circle-radius `5`\n * @property {string} circle-fill-color `'rgba(255,255,255,0.4)'`\n * @property {number} circle-stroke-width `1.25`\n * @property {string} circle-stroke-color `'#3399CC'`\n */\n\n/**\n * @return {DefaultStyle} The default flat style.\n */\nexport function createDefaultStyle() {\n  return {\n    'fill-color': 'rgba(255,255,255,0.4)',\n    'stroke-color': '#3399CC',\n    'stroke-width': 1.25,\n    'circle-radius': 5,\n    'circle-fill-color': 'rgba(255,255,255,0.4)',\n    'circle-stroke-width': 1.25,\n    'circle-stroke-color': '#3399CC',\n  };\n}\n\n/**\n * A rule is used to conditionally apply a style.  If the rule's filter evaluates to true,\n * the style will be applied.\n *\n * @typedef {Object} Rule\n * @property {FlatStyle|Array<FlatStyle>} style The style to be applied if the filter matches.\n * @property {import(\"../expr/expression.js\").EncodedExpression} [filter] The filter used\n * to determine if a style applies.  If no filter is included, the rule always applies\n * (unless it is an else rule).\n * @property {boolean} [else] If true, the rule applies only if no other previous rule applies.\n * If the else rule also has a filter, the rule will not apply if the filter does not match.\n */\n","/**\n * Class for generating shaders from literal style objects\n * @module ol/webgl/ShaderBuilder\n */\nimport {LINESTRING_ANGLE_COSINE_CUTOFF} from '../render/webgl/utils.js';\nimport {colorToGlsl, numberToGlsl, stringToGlsl} from '../expr/gpu.js';\nimport {createDefaultStyle} from '../style/flat.js';\n\nexport const COMMON_HEADER = `#ifdef GL_FRAGMENT_PRECISION_HIGH\nprecision highp float;\n#else\nprecision mediump float;\n#endif\nuniform mat4 u_projectionMatrix;\nuniform mat4 u_screenToWorldMatrix;\nuniform vec2 u_viewportSizePx;\nuniform float u_pixelRatio;\nuniform float u_globalAlpha;\nuniform float u_time;\nuniform float u_zoom;\nuniform float u_resolution;\nuniform float u_rotation;\nuniform vec4 u_renderExtent;\nuniform vec2 u_patternOrigin;\nuniform float u_depth;\nuniform mediump int u_hitDetection;\n\nconst float PI = 3.141592653589793238;\nconst float TWO_PI = 2.0 * PI;\n\n// this used to produce an alpha-premultiplied color from a texture\nvec4 samplePremultiplied(sampler2D sampler, vec2 texCoord) {\n  vec4 color = texture2D(sampler, texCoord);\n  return vec4(color.rgb * color.a, color.a);\n}\n`;\n\nconst DEFAULT_STYLE = createDefaultStyle();\n\n/**\n * @typedef {Object} VaryingDescription\n * @property {string} name Varying name, as will be declared in the header.\n * @property {string} type Varying type, either `float`, `vec2`, `vec4`...\n * @property {string} expression Expression which will be assigned to the varying in the vertex shader, and\n * passed on to the fragment shader.\n */\n\n/**\n * @classdesc\n * This class implements a classic builder pattern for generating many different types of shaders.\n * Methods can be chained, e. g.:\n *\n * ```js\n * const shader = new ShaderBuilder()\n *   .addVarying('v_width', 'float', 'a_width')\n *   .addUniform('u_time')\n *   .setColorExpression('...')\n *   .setSymbolSizeExpression('...')\n *   .getSymbolFragmentShader();\n * ```\n */\nexport class ShaderBuilder {\n  constructor() {\n    /**\n     * Uniforms; these will be declared in the header (should include the type).\n     * @type {Array<string>}\n     * @private\n     */\n    this.uniforms_ = [];\n\n    /**\n     * Attributes; these will be declared in the header (should include the type).\n     * @type {Array<string>}\n     * @private\n     */\n    this.attributes_ = [];\n\n    /**\n     * Varyings with a name, a type and an expression.\n     * @type {Array<VaryingDescription>}\n     * @private\n     */\n    this.varyings_ = [];\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.hasSymbol_ = false;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.symbolSizeExpression_ = `vec2(${numberToGlsl(\n      DEFAULT_STYLE['circle-radius'],\n    )} + ${numberToGlsl(DEFAULT_STYLE['circle-stroke-width'] * 0.5)})`;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.symbolRotationExpression_ = '0.0';\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.symbolOffsetExpression_ = 'vec2(0.0)';\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.symbolColorExpression_ = colorToGlsl(\n      /** @type {string} */ (DEFAULT_STYLE['circle-fill-color']),\n    );\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.texCoordExpression_ = 'vec4(0.0, 0.0, 1.0, 1.0)';\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.discardExpression_ = 'false';\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.symbolRotateWithView_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.hasStroke_ = false;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.strokeWidthExpression_ = numberToGlsl(DEFAULT_STYLE['stroke-width']);\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.strokeColorExpression_ = colorToGlsl(\n      /** @type {string} */ (DEFAULT_STYLE['stroke-color']),\n    );\n\n    /**\n     * @private\n     */\n    this.strokeOffsetExpression_ = '0.';\n\n    /**\n     * @private\n     */\n    this.strokeCapExpression_ = stringToGlsl('round');\n\n    /**\n     * @private\n     */\n    this.strokeJoinExpression_ = stringToGlsl('round');\n\n    /**\n     * @private\n     */\n    this.strokeMiterLimitExpression_ = '10.';\n\n    /**\n     * @private\n     */\n    this.strokeDistanceFieldExpression_ = '-1000.';\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.hasFill_ = false;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.fillColorExpression_ = colorToGlsl(\n      /** @type {string} */ (DEFAULT_STYLE['fill-color']),\n    );\n\n    /**\n     * @type {Array<string>}\n     * @private\n     */\n    this.vertexShaderFunctions_ = [];\n\n    /**\n     * @type {Array<string>}\n     * @private\n     */\n    this.fragmentShaderFunctions_ = [];\n  }\n\n  /**\n   * Adds a uniform accessible in both fragment and vertex shaders.\n   * The given name should include a type, such as `sampler2D u_texture`.\n   * @param {string} name Uniform name\n   * @return {ShaderBuilder} the builder object\n   */\n  addUniform(name) {\n    this.uniforms_.push(name);\n    return this;\n  }\n\n  /**\n   * Adds an attribute accessible in the vertex shader, read from the geometry buffer.\n   * The given name should include a type, such as `vec2 a_position`.\n   * @param {string} name Attribute name\n   * @return {ShaderBuilder} the builder object\n   */\n  addAttribute(name) {\n    this.attributes_.push(name);\n    return this;\n  }\n\n  /**\n   * Adds a varying defined in the vertex shader and accessible from the fragment shader.\n   * The type and expression of the varying have to be specified separately.\n   * @param {string} name Varying name\n   * @param {'float'|'vec2'|'vec3'|'vec4'} type Type\n   * @param {string} expression Expression used to assign a value to the varying.\n   * @return {ShaderBuilder} the builder object\n   */\n  addVarying(name, type, expression) {\n    this.varyings_.push({\n      name: name,\n      type: type,\n      expression: expression,\n    });\n    return this;\n  }\n\n  /**\n   * Sets an expression to compute the size of the shape.\n   * This expression can use all the uniforms and attributes available\n   * in the vertex shader, and should evaluate to a `vec2` value.\n   * @param {string} expression Size expression\n   * @return {ShaderBuilder} the builder object\n   */\n  setSymbolSizeExpression(expression) {\n    this.hasSymbol_ = true;\n    this.symbolSizeExpression_ = expression;\n    return this;\n  }\n\n  /**\n   * @return {string} The current symbol size expression\n   */\n  getSymbolSizeExpression() {\n    return this.symbolSizeExpression_;\n  }\n\n  /**\n   * Sets an expression to compute the rotation of the shape.\n   * This expression can use all the uniforms and attributes available\n   * in the vertex shader, and should evaluate to a `float` value in radians.\n   * @param {string} expression Size expression\n   * @return {ShaderBuilder} the builder object\n   */\n  setSymbolRotationExpression(expression) {\n    this.symbolRotationExpression_ = expression;\n    return this;\n  }\n\n  /**\n   * Sets an expression to compute the offset of the symbol from the point center.\n   * This expression can use all the uniforms and attributes available\n   * in the vertex shader, and should evaluate to a `vec2` value.\n   * @param {string} expression Offset expression\n   * @return {ShaderBuilder} the builder object\n   */\n  setSymbolOffsetExpression(expression) {\n    this.symbolOffsetExpression_ = expression;\n    return this;\n  }\n\n  /**\n   * @return {string} The current symbol offset expression\n   */\n  getSymbolOffsetExpression() {\n    return this.symbolOffsetExpression_;\n  }\n\n  /**\n   * Sets an expression to compute the color of the shape.\n   * This expression can use all the uniforms, varyings and attributes available\n   * in the fragment shader, and should evaluate to a `vec4` value.\n   * @param {string} expression Color expression\n   * @return {ShaderBuilder} the builder object\n   */\n  setSymbolColorExpression(expression) {\n    this.hasSymbol_ = true;\n    this.symbolColorExpression_ = expression;\n    return this;\n  }\n\n  /**\n   * @return {string} The current symbol color expression\n   */\n  getSymbolColorExpression() {\n    return this.symbolColorExpression_;\n  }\n\n  /**\n   * Sets an expression to compute the texture coordinates of the vertices.\n   * This expression can use all the uniforms and attributes available\n   * in the vertex shader, and should evaluate to a `vec4` value.\n   * @param {string} expression Texture coordinate expression\n   * @return {ShaderBuilder} the builder object\n   */\n  setTextureCoordinateExpression(expression) {\n    this.texCoordExpression_ = expression;\n    return this;\n  }\n\n  /**\n   * Sets an expression to determine whether a fragment (pixel) should be discarded,\n   * i.e. not drawn at all.\n   * This expression can use all the uniforms, varyings and attributes available\n   * in the fragment shader, and should evaluate to a `bool` value (it will be\n   * used in an `if` statement)\n   * @param {string} expression Fragment discard expression\n   * @return {ShaderBuilder} the builder object\n   */\n  setFragmentDiscardExpression(expression) {\n    this.discardExpression_ = expression;\n    return this;\n  }\n\n  /**\n   * @return {string} The current fragment discard expression\n   */\n  getFragmentDiscardExpression() {\n    return this.discardExpression_;\n  }\n\n  /**\n   * Sets whether the symbols should rotate with the view or stay aligned with the map.\n   * Note: will only be used for point geometry shaders.\n   * @param {boolean} rotateWithView Rotate with view\n   * @return {ShaderBuilder} the builder object\n   */\n  setSymbolRotateWithView(rotateWithView) {\n    this.symbolRotateWithView_ = rotateWithView;\n    return this;\n  }\n\n  /**\n   * @param {string} expression Stroke width expression, returning value in pixels\n   * @return {ShaderBuilder} the builder object\n   */\n  setStrokeWidthExpression(expression) {\n    this.hasStroke_ = true;\n    this.strokeWidthExpression_ = expression;\n    return this;\n  }\n\n  /**\n   * @param {string} expression Stroke color expression, evaluate to `vec4`: can rely on currentLengthPx and currentRadiusPx\n   * @return {ShaderBuilder} the builder object\n   */\n  setStrokeColorExpression(expression) {\n    this.hasStroke_ = true;\n    this.strokeColorExpression_ = expression;\n    return this;\n  }\n\n  /**\n   * @return {string} The current stroke color expression\n   */\n  getStrokeColorExpression() {\n    return this.strokeColorExpression_;\n  }\n\n  /**\n   * @param {string} expression Stroke color expression, evaluate to `float`\n   * @return {ShaderBuilder} the builder object\n   */\n  setStrokeOffsetExpression(expression) {\n    this.strokeOffsetExpression_ = expression;\n    return this;\n  }\n\n  /**\n   * @param {string} expression Stroke line cap expression, evaluate to `float`\n   * @return {ShaderBuilder} the builder object\n   */\n  setStrokeCapExpression(expression) {\n    this.strokeCapExpression_ = expression;\n    return this;\n  }\n\n  /**\n   * @param {string} expression Stroke line join expression, evaluate to `float`\n   * @return {ShaderBuilder} the builder object\n   */\n  setStrokeJoinExpression(expression) {\n    this.strokeJoinExpression_ = expression;\n    return this;\n  }\n\n  /**\n   * @param {string} expression Stroke miter limit expression, evaluate to `float`\n   * @return {ShaderBuilder} the builder object\n   */\n  setStrokeMiterLimitExpression(expression) {\n    this.strokeMiterLimitExpression_ = expression;\n    return this;\n  }\n\n  /**\n   * @param {string} expression Stroke distance field expression, evaluate to `float`\n   * This can override the default distance field; can rely on currentLengthPx and currentRadiusPx\n   * @return {ShaderBuilder} the builder object\n   */\n  setStrokeDistanceFieldExpression(expression) {\n    this.strokeDistanceFieldExpression_ = expression;\n    return this;\n  }\n\n  /**\n   * @param {string} expression Fill color expression, evaluate to `vec4`\n   * @return {ShaderBuilder} the builder object\n   */\n  setFillColorExpression(expression) {\n    this.hasFill_ = true;\n    this.fillColorExpression_ = expression;\n    return this;\n  }\n\n  /**\n   * @return {string} The current fill color expression\n   */\n  getFillColorExpression() {\n    return this.fillColorExpression_;\n  }\n\n  addVertexShaderFunction(code) {\n    if (this.vertexShaderFunctions_.includes(code)) {\n      return;\n    }\n    this.vertexShaderFunctions_.push(code);\n  }\n  addFragmentShaderFunction(code) {\n    if (this.fragmentShaderFunctions_.includes(code)) {\n      return;\n    }\n    this.fragmentShaderFunctions_.push(code);\n  }\n\n  /**\n   * Generates a symbol vertex shader from the builder parameters\n   * @return {string|null} The full shader as a string; null if no size or color specified\n   */\n  getSymbolVertexShader() {\n    if (!this.hasSymbol_) {\n      return null;\n    }\n\n    return `${COMMON_HEADER}\n${this.uniforms_\n  .map(function (uniform) {\n    return 'uniform ' + uniform + ';';\n  })\n  .join('\\n')}\nattribute vec2 a_position;\nattribute float a_index;\nattribute vec4 a_prop_hitColor;\n${this.attributes_\n  .map(function (attribute) {\n    return 'attribute ' + attribute + ';';\n  })\n  .join('\\n')}\nvarying vec2 v_texCoord;\nvarying vec2 v_quadCoord;\nvarying vec4 v_prop_hitColor;\nvarying vec2 v_centerPx;\nvarying float v_angle;\nvarying vec2 v_quadSizePx;\n${this.varyings_\n  .map(function (varying) {\n    return 'varying ' + varying.type + ' ' + varying.name + ';';\n  })\n  .join('\\n')}\n${this.vertexShaderFunctions_.join('\\n')}\nvec2 pxToScreen(vec2 coordPx) {\n  vec2 scaled = coordPx / u_viewportSizePx / 0.5;\n  return scaled;\n}\n\nvec2 screenToPx(vec2 coordScreen) {\n  return (coordScreen * 0.5 + 0.5) * u_viewportSizePx;\n}\n\nvoid main(void) {\n  v_quadSizePx = ${this.symbolSizeExpression_};\n  vec2 halfSizePx = v_quadSizePx * 0.5;\n  vec2 centerOffsetPx = ${this.symbolOffsetExpression_};\n  vec2 offsetPx = centerOffsetPx;\n  if (a_index == 0.0) {\n    offsetPx -= halfSizePx;\n  } else if (a_index == 1.0) {\n    offsetPx += halfSizePx * vec2(1., -1.);\n  } else if (a_index == 2.0) {\n    offsetPx += halfSizePx;\n  } else {\n    offsetPx += halfSizePx * vec2(-1., 1.);\n  }\n  float angle = ${this.symbolRotationExpression_};\n  ${this.symbolRotateWithView_ ? 'angle += u_rotation;' : ''}\n  float c = cos(-angle);\n  float s = sin(-angle);\n  offsetPx = vec2(c * offsetPx.x - s * offsetPx.y, s * offsetPx.x + c * offsetPx.y);\n  vec4 center = u_projectionMatrix * vec4(a_position, 0.0, 1.0);\n  gl_Position = center + vec4(pxToScreen(offsetPx), u_depth, 0.);\n  vec4 texCoord = ${this.texCoordExpression_};\n  float u = a_index == 0.0 || a_index == 3.0 ? texCoord.s : texCoord.p;\n  float v = a_index == 2.0 || a_index == 3.0 ? texCoord.t : texCoord.q;\n  v_texCoord = vec2(u, v);\n  v_prop_hitColor = a_prop_hitColor;\n  v_angle = angle;\n  c = cos(-v_angle);\n  s = sin(-v_angle);\n  centerOffsetPx = vec2(c * centerOffsetPx.x - s * centerOffsetPx.y, s * centerOffsetPx.x + c * centerOffsetPx.y); \n  v_centerPx = screenToPx(center.xy) + centerOffsetPx;\n${this.varyings_\n  .map(function (varying) {\n    return '  ' + varying.name + ' = ' + varying.expression + ';';\n  })\n  .join('\\n')}\n}`;\n  }\n\n  /**\n   * Generates a symbol fragment shader from the builder parameters\n   * @return {string|null} The full shader as a string; null if no size or color specified\n   */\n  getSymbolFragmentShader() {\n    if (!this.hasSymbol_) {\n      return null;\n    }\n\n    return `${COMMON_HEADER}\n${this.uniforms_\n  .map(function (uniform) {\n    return 'uniform ' + uniform + ';';\n  })\n  .join('\\n')}\nvarying vec2 v_texCoord;\nvarying vec4 v_prop_hitColor;\nvarying vec2 v_centerPx;\nvarying float v_angle;\nvarying vec2 v_quadSizePx;\n${this.varyings_\n  .map(function (varying) {\n    return 'varying ' + varying.type + ' ' + varying.name + ';';\n  })\n  .join('\\n')}\n${this.fragmentShaderFunctions_.join('\\n')}\n\nvoid main(void) {\n  if (${this.discardExpression_}) { discard; }\n  vec2 coordsPx = gl_FragCoord.xy / u_pixelRatio - v_centerPx; // relative to center\n  float c = cos(v_angle);\n  float s = sin(v_angle);\n  coordsPx = vec2(c * coordsPx.x - s * coordsPx.y, s * coordsPx.x + c * coordsPx.y);\n  gl_FragColor = ${this.symbolColorExpression_};\n  if (u_hitDetection > 0) {\n    if (gl_FragColor.a < 0.05) { discard; };\n    gl_FragColor = v_prop_hitColor;\n  }\n}`;\n  }\n\n  /**\n   * Generates a stroke vertex shader from the builder parameters\n   * @return {string|null} The full shader as a string; null if no size or color specified\n   */\n  getStrokeVertexShader() {\n    if (!this.hasStroke_) {\n      return null;\n    }\n\n    return `${COMMON_HEADER}\n${this.uniforms_\n  .map(function (uniform) {\n    return 'uniform ' + uniform + ';';\n  })\n  .join('\\n')}\nattribute vec2 a_position;\nattribute float a_index;\nattribute vec2 a_segmentStart;\nattribute vec2 a_segmentEnd;\nattribute float a_parameters;\nattribute float a_distance;\nattribute vec2 a_joinAngles;\nattribute vec4 a_prop_hitColor;\n${this.attributes_\n  .map(function (attribute) {\n    return 'attribute ' + attribute + ';';\n  })\n  .join('\\n')}\nvarying vec2 v_segmentStart;\nvarying vec2 v_segmentEnd;\nvarying float v_angleStart;\nvarying float v_angleEnd;\nvarying float v_width;\nvarying vec4 v_prop_hitColor;\nvarying float v_distanceOffsetPx;\n${this.varyings_\n  .map(function (varying) {\n    return 'varying ' + varying.type + ' ' + varying.name + ';';\n  })\n  .join('\\n')}\n${this.vertexShaderFunctions_.join('\\n')}\nvec2 worldToPx(vec2 worldPos) {\n  vec4 screenPos = u_projectionMatrix * vec4(worldPos, 0.0, 1.0);\n  return (0.5 * screenPos.xy + 0.5) * u_viewportSizePx;\n}\n\nvec4 pxToScreen(vec2 pxPos) {\n  vec2 screenPos = 2.0 * pxPos / u_viewportSizePx - 1.0;\n  return vec4(screenPos, u_depth, 1.0);\n}\n\nbool isCap(float joinAngle) {\n  return joinAngle < -0.1;\n}\n\nvec2 getJoinOffsetDirection(vec2 normalPx, float joinAngle) {\n  float halfAngle = joinAngle / 2.0;\n  float c = cos(halfAngle);\n  float s = sin(halfAngle);\n  vec2 angleBisectorNormal = vec2(s * normalPx.x + c * normalPx.y, -c * normalPx.x + s * normalPx.y);\n  float length = 1.0 / s;\n  return angleBisectorNormal * length;\n}\n\nvec2 getOffsetPoint(vec2 point, vec2 normal, float joinAngle, float offsetPx) {\n  // if on a cap or the join angle is too high, offset the line along the segment normal\n  if (cos(joinAngle) > 0.998 || isCap(joinAngle)) {\n    return point - normal * offsetPx;\n  }\n  // offset is applied along the inverted normal (positive offset goes \"right\" relative to line direction)\n  return point - getJoinOffsetDirection(normal, joinAngle) * offsetPx;\n}\n\nvoid main(void) {\n  v_angleStart = a_joinAngles.x;\n  v_angleEnd = a_joinAngles.y;\n  float vertexNumber = floor(abs(a_parameters) / 10000. + 0.5);\n  // we're reading the fractional part while keeping the sign (so -4.12 gives -0.12, 3.45 gives 0.45)\n  float angleTangentSum = fract(abs(a_parameters) / 10000.) * 10000. * sign(a_parameters);\n\n  float lineWidth = ${this.strokeWidthExpression_};\n  float lineOffsetPx = ${this.strokeOffsetExpression_};\n\n  // compute segment start/end in px with offset\n  vec2 segmentStartPx = worldToPx(a_segmentStart);\n  vec2 segmentEndPx = worldToPx(a_segmentEnd);\n  vec2 tangentPx = normalize(segmentEndPx - segmentStartPx);\n  vec2 normalPx = vec2(-tangentPx.y, tangentPx.x);\n  segmentStartPx = getOffsetPoint(segmentStartPx, normalPx, v_angleStart, lineOffsetPx),\n  segmentEndPx = getOffsetPoint(segmentEndPx, normalPx, v_angleEnd, lineOffsetPx);\n  \n  // compute current vertex position\n  float normalDir = vertexNumber < 0.5 || (vertexNumber > 1.5 && vertexNumber < 2.5) ? 1.0 : -1.0;\n  float tangentDir = vertexNumber < 1.5 ? 1.0 : -1.0;\n  float angle = vertexNumber < 1.5 ? v_angleStart : v_angleEnd;\n  vec2 joinDirection;\n  vec2 positionPx = vertexNumber < 1.5 ? segmentStartPx : segmentEndPx;\n  // if angle is too high, do not make a proper join\n  if (cos(angle) > ${LINESTRING_ANGLE_COSINE_CUTOFF} || isCap(angle)) {\n    joinDirection = normalPx * normalDir - tangentPx * tangentDir;\n  } else {\n    joinDirection = getJoinOffsetDirection(normalPx * normalDir, angle);\n  }\n  positionPx = positionPx + joinDirection * (lineWidth * 0.5 + 1.); // adding 1 pixel for antialiasing\n  gl_Position = pxToScreen(positionPx);\n\n  v_segmentStart = segmentStartPx;\n  v_segmentEnd = segmentEndPx;\n  v_width = lineWidth;\n  v_prop_hitColor = a_prop_hitColor;\n  v_distanceOffsetPx = a_distance / u_resolution - (lineOffsetPx * angleTangentSum);\n${this.varyings_\n  .map(function (varying) {\n    return '  ' + varying.name + ' = ' + varying.expression + ';';\n  })\n  .join('\\n')}\n}`;\n  }\n\n  /**\n   * Generates a stroke fragment shader from the builder parameters\n   *\n   * @return {string|null} The full shader as a string; null if no size or color specified\n   */\n  getStrokeFragmentShader() {\n    if (!this.hasStroke_) {\n      return null;\n    }\n\n    return `${COMMON_HEADER}\n${this.uniforms_\n  .map(function (uniform) {\n    return 'uniform ' + uniform + ';';\n  })\n  .join('\\n')}\nvarying vec2 v_segmentStart;\nvarying vec2 v_segmentEnd;\nvarying float v_angleStart;\nvarying float v_angleEnd;\nvarying float v_width;\nvarying vec4 v_prop_hitColor;\nvarying float v_distanceOffsetPx;\n${this.varyings_\n  .map(function (varying) {\n    return 'varying ' + varying.type + ' ' + varying.name + ';';\n  })\n  .join('\\n')}\n${this.fragmentShaderFunctions_.join('\\n')}\n\nvec2 pxToWorld(vec2 pxPos) {\n  vec2 screenPos = 2.0 * pxPos / u_viewportSizePx - 1.0;\n  return (u_screenToWorldMatrix * vec4(screenPos, 0.0, 1.0)).xy;\n}\n\nbool isCap(float joinAngle) {\n  return joinAngle < -0.1;\n}\n\nfloat segmentDistanceField(vec2 point, vec2 start, vec2 end, float width) {\n  vec2 tangent = normalize(end - start);\n  vec2 normal = vec2(-tangent.y, tangent.x);\n  vec2 startToPoint = point - start;\n  return abs(dot(startToPoint, normal)) - width * 0.5;\n}\n\nfloat buttCapDistanceField(vec2 point, vec2 start, vec2 end) {\n  vec2 startToPoint = point - start;\n  vec2 tangent = normalize(end - start);\n  return dot(startToPoint, -tangent);\n}\n\nfloat squareCapDistanceField(vec2 point, vec2 start, vec2 end, float width) {\n  return buttCapDistanceField(point, start, end) - width * 0.5;\n}\n\nfloat roundCapDistanceField(vec2 point, vec2 start, vec2 end, float width) {\n  float onSegment = max(0., 1000. * dot(point - start, end - start)); // this is very high when inside the segment\n  return length(point - start) - width * 0.5 - onSegment;\n}\n\nfloat roundJoinDistanceField(vec2 point, vec2 start, vec2 end, float width) {\n  return roundCapDistanceField(point, start, end, width);\n}\n\nfloat bevelJoinField(vec2 point, vec2 start, vec2 end, float width, float joinAngle) {\n  vec2 startToPoint = point - start;\n  vec2 tangent = normalize(end - start);\n  float c = cos(joinAngle * 0.5);\n  float s = sin(joinAngle * 0.5);\n  float direction = -sign(sin(joinAngle));\n  vec2 bisector = vec2(c * tangent.x - s * tangent.y, s * tangent.x + c * tangent.y);\n  float radius = width * 0.5 * s;\n  return dot(startToPoint, bisector * direction) - radius;\n}\n\nfloat miterJoinDistanceField(vec2 point, vec2 start, vec2 end, float width, float joinAngle) {\n  if (cos(joinAngle) > ${LINESTRING_ANGLE_COSINE_CUTOFF}) { // avoid risking a division by zero\n    return bevelJoinField(point, start, end, width, joinAngle);\n  }\n  float miterLength = 1. / sin(joinAngle * 0.5);\n  float miterLimit = ${this.strokeMiterLimitExpression_};\n  if (miterLength > miterLimit) {\n    return bevelJoinField(point, start, end, width, joinAngle);\n  }\n  return -1000.;\n}\n\nfloat capDistanceField(vec2 point, vec2 start, vec2 end, float width, float capType) {\n   if (capType == ${stringToGlsl('butt')}) {\n    return buttCapDistanceField(point, start, end);\n  } else if (capType == ${stringToGlsl('square')}) {\n    return squareCapDistanceField(point, start, end, width);\n  }\n  return roundCapDistanceField(point, start, end, width);\n}\n\nfloat joinDistanceField(vec2 point, vec2 start, vec2 end, float width, float joinAngle, float joinType) {\n  if (joinType == ${stringToGlsl('bevel')}) {\n    return bevelJoinField(point, start, end, width, joinAngle);\n  } else if (joinType == ${stringToGlsl('miter')}) {\n    return miterJoinDistanceField(point, start, end, width, joinAngle);\n  }\n  return roundJoinDistanceField(point, start, end, width);\n}\n\nfloat computeSegmentPointDistance(vec2 point, vec2 start, vec2 end, float width, float joinAngle, float capType, float joinType) {\n  if (isCap(joinAngle)) {\n    return capDistanceField(point, start, end, width, capType);\n  }\n  return joinDistanceField(point, start, end, width, joinAngle, joinType);\n}\n\nvoid main(void) {\n  vec2 currentPoint = gl_FragCoord.xy / u_pixelRatio;\n  #ifdef GL_FRAGMENT_PRECISION_HIGH\n  vec2 worldPos = pxToWorld(currentPoint);\n  if (\n    abs(u_renderExtent[0] - u_renderExtent[2]) > 0.0 && (\n      worldPos[0] < u_renderExtent[0] ||\n      worldPos[1] < u_renderExtent[1] ||\n      worldPos[0] > u_renderExtent[2] ||\n      worldPos[1] > u_renderExtent[3]\n    )\n  ) {\n    discard;\n  }\n  #endif\n  if (${this.discardExpression_}) { discard; }\n\n  float segmentLength = length(v_segmentEnd - v_segmentStart);\n  vec2 segmentTangent = (v_segmentEnd - v_segmentStart) / segmentLength;\n  vec2 segmentNormal = vec2(-segmentTangent.y, segmentTangent.x);\n  vec2 startToPoint = currentPoint - v_segmentStart;\n  float currentLengthPx = max(0., min(dot(segmentTangent, startToPoint), segmentLength)) + v_distanceOffsetPx; \n  float currentRadiusPx = abs(dot(segmentNormal, startToPoint));\n  float currentRadiusRatio = dot(segmentNormal, startToPoint) * 2. / v_width;\n  vec4 color = ${this.strokeColorExpression_} * u_globalAlpha;\n  float capType = ${this.strokeCapExpression_};\n  float joinType = ${this.strokeJoinExpression_};\n  float segmentStartDistance = computeSegmentPointDistance(currentPoint, v_segmentStart, v_segmentEnd, v_width, v_angleStart, capType, joinType);\n  float segmentEndDistance = computeSegmentPointDistance(currentPoint, v_segmentEnd, v_segmentStart, v_width, v_angleEnd, capType, joinType);\n  float distance = max(\n    segmentDistanceField(currentPoint, v_segmentStart, v_segmentEnd, v_width),\n    max(segmentStartDistance, segmentEndDistance)\n  );\n  distance = max(distance, ${this.strokeDistanceFieldExpression_});\n  gl_FragColor = color * smoothstep(0.5, -0.5, distance);\n  if (u_hitDetection > 0) {\n    if (gl_FragColor.a < 0.1) { discard; };\n    gl_FragColor = v_prop_hitColor;\n  }\n}`;\n  }\n\n  /**\n   * Generates a fill vertex shader from the builder parameters\n   *\n   * @return {string|null} The full shader as a string; null if no color specified\n   */\n  getFillVertexShader() {\n    if (!this.hasFill_) {\n      return null;\n    }\n\n    return `${COMMON_HEADER}\n${this.uniforms_\n  .map(function (uniform) {\n    return 'uniform ' + uniform + ';';\n  })\n  .join('\\n')}\nattribute vec2 a_position;\nattribute vec4 a_prop_hitColor;\n${this.attributes_\n  .map(function (attribute) {\n    return 'attribute ' + attribute + ';';\n  })\n  .join('\\n')}\nvarying vec4 v_prop_hitColor;\n${this.varyings_\n  .map(function (varying) {\n    return 'varying ' + varying.type + ' ' + varying.name + ';';\n  })\n  .join('\\n')}\n${this.vertexShaderFunctions_.join('\\n')}\nvoid main(void) {\n  gl_Position = u_projectionMatrix * vec4(a_position, u_depth, 1.0);\n  v_prop_hitColor = a_prop_hitColor;\n${this.varyings_\n  .map(function (varying) {\n    return '  ' + varying.name + ' = ' + varying.expression + ';';\n  })\n  .join('\\n')}\n}`;\n  }\n\n  /**\n   * Generates a fill fragment shader from the builder parameters\n   * @return {string|null} The full shader as a string; null if no color specified\n   */\n  getFillFragmentShader() {\n    if (!this.hasFill_) {\n      return null;\n    }\n\n    return `${COMMON_HEADER}\n${this.uniforms_\n  .map(function (uniform) {\n    return 'uniform ' + uniform + ';';\n  })\n  .join('\\n')}\nvarying vec4 v_prop_hitColor;\n${this.varyings_\n  .map(function (varying) {\n    return 'varying ' + varying.type + ' ' + varying.name + ';';\n  })\n  .join('\\n')}\n${this.fragmentShaderFunctions_.join('\\n')}\nvec2 pxToWorld(vec2 pxPos) {\n  vec2 screenPos = 2.0 * pxPos / u_viewportSizePx - 1.0;\n  return (u_screenToWorldMatrix * vec4(screenPos, 0.0, 1.0)).xy;\n}\n\nvec2 worldToPx(vec2 worldPos) {\n  vec4 screenPos = u_projectionMatrix * vec4(worldPos, 0.0, 1.0);\n  return (0.5 * screenPos.xy + 0.5) * u_viewportSizePx;\n}\n\nvoid main(void) {\n  vec2 pxPos = gl_FragCoord.xy / u_pixelRatio;\n  vec2 pxOrigin = worldToPx(u_patternOrigin);\n  #ifdef GL_FRAGMENT_PRECISION_HIGH\n  vec2 worldPos = pxToWorld(pxPos);\n  if (\n    abs(u_renderExtent[0] - u_renderExtent[2]) > 0.0 && (\n      worldPos[0] < u_renderExtent[0] ||\n      worldPos[1] < u_renderExtent[1] ||\n      worldPos[0] > u_renderExtent[2] ||\n      worldPos[1] > u_renderExtent[3]\n    )\n  ) {\n    discard;\n  }\n  #endif\n  if (${this.discardExpression_}) { discard; }\n  gl_FragColor = ${this.fillColorExpression_} * u_globalAlpha;\n  if (u_hitDetection > 0) {\n    if (gl_FragColor.a < 0.1) { discard; };\n    gl_FragColor = v_prop_hitColor;\n  }\n}`;\n  }\n}\n","/**\n * @module ol/layer/Heatmap\n */\nimport BaseVector from './BaseVector.js';\nimport WebGLPointsLayerRenderer from '../renderer/webgl/PointsLayer.js';\nimport {ShaderBuilder} from '../webgl/ShaderBuilder.js';\nimport {clamp} from '../math.js';\nimport {createCanvasContext2D} from '../dom.js';\n\n/**\n * @template {import(\"../Feature.js\").FeatureLike} FeatureType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {Array<string>} [gradient=['#00f', '#0ff', '#0f0', '#ff0', '#f00']] The color gradient\n * of the heatmap, specified as an array of CSS color strings.\n * @property {number} [radius=8] Radius size in pixels.\n * @property {number} [blur=15] Blur size in pixels.\n * @property {string|function(import(\"../Feature.js\").default):number} [weight='weight'] The feature\n * attribute to use for the weight or a function that returns a weight from a feature. Weight values\n * should range from 0 to 1 (and values outside will be clamped to that range).\n * @property {import(\"../source/Vector.js\").default<FeatureType>} [source] Point source.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  BLUR: 'blur',\n  GRADIENT: 'gradient',\n  RADIUS: 'radius',\n};\n\n/**\n * @const\n * @type {Array<string>}\n */\nconst DEFAULT_GRADIENT = ['#00f', '#0ff', '#0f0', '#ff0', '#f00'];\n\n/**\n * @classdesc\n * Layer for rendering vector data as a heatmap.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @fires import(\"../render/Event.js\").RenderEvent\n * @template {import(\"../Feature.js\").FeatureLike} FeatureType\n * @extends {BaseVector<import(\"../source/Vector.js\").default<FeatureType>, WebGLPointsLayerRenderer>}\n * @api\n */\nclass Heatmap extends BaseVector {\n  /**\n   * @param {Options<FeatureType>} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = Object.assign({}, options);\n\n    delete baseOptions.gradient;\n    delete baseOptions.radius;\n    delete baseOptions.blur;\n    delete baseOptions.weight;\n    super(baseOptions);\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.gradient_ = null;\n\n    this.addChangeListener(Property.GRADIENT, this.handleGradientChanged_);\n\n    this.setGradient(options.gradient ? options.gradient : DEFAULT_GRADIENT);\n\n    this.setBlur(options.blur !== undefined ? options.blur : 15);\n\n    this.setRadius(options.radius !== undefined ? options.radius : 8);\n\n    const weight = options.weight ? options.weight : 'weight';\n    if (typeof weight === 'string') {\n      this.weightFunction_ = function (feature) {\n        return feature.get(weight);\n      };\n    } else {\n      this.weightFunction_ = weight;\n    }\n\n    // For performance reasons, don't sort the features before rendering.\n    // The render order is not relevant for a heatmap representation.\n    this.setRenderOrder(null);\n  }\n\n  /**\n   * Return the blur size in pixels.\n   * @return {number} Blur size in pixels.\n   * @api\n   * @observable\n   */\n  getBlur() {\n    return /** @type {number} */ (this.get(Property.BLUR));\n  }\n\n  /**\n   * Return the gradient colors as array of strings.\n   * @return {Array<string>} Colors.\n   * @api\n   * @observable\n   */\n  getGradient() {\n    return /** @type {Array<string>} */ (this.get(Property.GRADIENT));\n  }\n\n  /**\n   * Return the size of the radius in pixels.\n   * @return {number} Radius size in pixel.\n   * @api\n   * @observable\n   */\n  getRadius() {\n    return /** @type {number} */ (this.get(Property.RADIUS));\n  }\n\n  /**\n   * @private\n   */\n  handleGradientChanged_() {\n    this.gradient_ = createGradient(this.getGradient());\n  }\n\n  /**\n   * Set the blur size in pixels.\n   * @param {number} blur Blur size in pixels.\n   * @api\n   * @observable\n   */\n  setBlur(blur) {\n    this.set(Property.BLUR, blur);\n  }\n\n  /**\n   * Set the gradient colors as array of strings.\n   * @param {Array<string>} colors Gradient.\n   * @api\n   * @observable\n   */\n  setGradient(colors) {\n    this.set(Property.GRADIENT, colors);\n  }\n\n  /**\n   * Set the size of the radius in pixels.\n   * @param {number} radius Radius size in pixel.\n   * @api\n   * @observable\n   */\n  setRadius(radius) {\n    this.set(Property.RADIUS, radius);\n  }\n\n  createRenderer() {\n    const builder = new ShaderBuilder()\n      .addAttribute('float a_prop_weight')\n      .addVarying('v_prop_weight', 'float', 'a_prop_weight')\n      .addUniform('float u_size')\n      .addUniform('float u_blurSlope')\n      .setSymbolSizeExpression('vec2(u_size)')\n      .setSymbolColorExpression(\n        'vec4(smoothstep(0., 1., (1. - length(coordsPx * 2. / v_quadSizePx)) * u_blurSlope) * v_prop_weight)',\n      );\n\n    return new WebGLPointsLayerRenderer(this, {\n      className: this.getClassName(),\n      attributes: [\n        {\n          name: 'weight',\n          callback: (feature) => {\n            const weight = this.weightFunction_(feature);\n            return weight !== undefined ? clamp(weight, 0, 1) : 1;\n          },\n        },\n      ],\n      uniforms: {\n        u_size: () => {\n          return (this.get(Property.RADIUS) + this.get(Property.BLUR)) * 2;\n        },\n        u_blurSlope: () => {\n          return (\n            this.get(Property.RADIUS) / Math.max(1, this.get(Property.BLUR))\n          );\n        },\n      },\n      hitDetectionEnabled: true,\n      vertexShader: builder.getSymbolVertexShader(),\n      fragmentShader: builder.getSymbolFragmentShader(),\n      postProcesses: [\n        {\n          fragmentShader: `\n            precision mediump float;\n\n            uniform sampler2D u_image;\n            uniform sampler2D u_gradientTexture;\n            uniform float u_opacity;\n\n            varying vec2 v_texCoord;\n\n            void main() {\n              vec4 color = texture2D(u_image, v_texCoord);\n              gl_FragColor.a = color.a * u_opacity;\n              gl_FragColor.rgb = texture2D(u_gradientTexture, vec2(0.5, color.a)).rgb;\n              gl_FragColor.rgb *= gl_FragColor.a;\n            }`,\n          uniforms: {\n            u_gradientTexture: () => this.gradient_,\n            u_opacity: () => this.getOpacity(),\n          },\n        },\n      ],\n    });\n  }\n\n  renderDeclutter() {}\n}\n\n/**\n * @param {Array<string>} colors A list of colored.\n * @return {HTMLCanvasElement} canvas with gradient texture.\n */\nfunction createGradient(colors) {\n  const width = 1;\n  const height = 256;\n  const context = createCanvasContext2D(width, height);\n\n  const gradient = context.createLinearGradient(0, 0, width, height);\n  const step = 1 / (colors.length - 1);\n  for (let i = 0, ii = colors.length; i < ii; ++i) {\n    gradient.addColorStop(i * step, colors[i]);\n  }\n\n  context.fillStyle = gradient;\n  context.fillRect(0, 0, width, height);\n\n  return context.canvas;\n}\n\nexport default Heatmap;\n","/**\n * @module ol/layer/BaseImage\n */\nimport Layer from './Layer.js';\n\n/**\n * @template {import(\"../source/Image.js\").default} ImageSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link import(\"../Map.js\").default#addLayer map.addLayer()}.\n * @property {ImageSourceType} [source] Source for this layer.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Server-rendered images that are available for arbitrary extents and\n * resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Image.js\").default} ImageSourceType\n * @template {import(\"../renderer/Layer.js\").default} RendererType\n * @extends {Layer<ImageSourceType, RendererType>}\n * @api\n */\nclass BaseImageLayer extends Layer {\n  /**\n   * @param {Options<ImageSourceType>} [options] Layer options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n    super(options);\n  }\n}\n\nexport default BaseImageLayer;\n","/**\n * @module ol/renderer/canvas/ImageLayer\n */\nimport CanvasLayerRenderer from './Layer.js';\nimport ImageState from '../../ImageState.js';\nimport ViewHint from '../../ViewHint.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n} from '../../transform.js';\nimport {\n  containsCoordinate,\n  containsExtent,\n  getHeight,\n  getIntersection,\n  getWidth,\n  intersects as intersectsExtent,\n  isEmpty,\n} from '../../extent.js';\nimport {fromUserExtent} from '../../proj.js';\n\n/**\n * @classdesc\n * Canvas renderer for image layers.\n * @api\n */\nclass CanvasImageLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {import(\"../../layer/Image.js\").default} imageLayer Image layer.\n   */\n  constructor(imageLayer) {\n    super(imageLayer);\n\n    /**\n     * @protected\n     * @type {?import(\"../../Image.js\").default}\n     */\n    this.image_ = null;\n  }\n\n  /**\n   * @return {import('../../DataTile.js').ImageLike} Image.\n   */\n  getImage() {\n    return !this.image_ ? null : this.image_.getImage();\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const pixelRatio = frameState.pixelRatio;\n    const viewState = frameState.viewState;\n    const viewResolution = viewState.resolution;\n\n    const imageSource = this.getLayer().getSource();\n\n    const hints = frameState.viewHints;\n\n    let renderedExtent = frameState.extent;\n    if (layerState.extent !== undefined) {\n      renderedExtent = getIntersection(\n        renderedExtent,\n        fromUserExtent(layerState.extent, viewState.projection),\n      );\n    }\n\n    if (\n      !hints[ViewHint.ANIMATING] &&\n      !hints[ViewHint.INTERACTING] &&\n      !isEmpty(renderedExtent)\n    ) {\n      if (imageSource) {\n        const projection = viewState.projection;\n        const image = imageSource.getImage(\n          renderedExtent,\n          viewResolution,\n          pixelRatio,\n          projection,\n        );\n        if (image) {\n          if (this.loadImage(image)) {\n            this.image_ = image;\n          } else if (image.getState() === ImageState.EMPTY) {\n            this.image_ = null;\n          }\n        }\n      } else {\n        this.image_ = null;\n      }\n    }\n\n    return !!this.image_;\n  }\n\n  /**\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray} Data at the pixel location.\n   */\n  getData(pixel) {\n    const frameState = this.frameState;\n    if (!frameState) {\n      return null;\n    }\n\n    const layer = this.getLayer();\n    const coordinate = applyTransform(\n      frameState.pixelToCoordinateTransform,\n      pixel.slice(),\n    );\n\n    const layerExtent = layer.getExtent();\n    if (layerExtent) {\n      if (!containsCoordinate(layerExtent, coordinate)) {\n        return null;\n      }\n    }\n\n    const imageExtent = this.image_.getExtent();\n    const img = this.image_.getImage();\n\n    const imageMapWidth = getWidth(imageExtent);\n    const col = Math.floor(\n      img.width * ((coordinate[0] - imageExtent[0]) / imageMapWidth),\n    );\n    if (col < 0 || col >= img.width) {\n      return null;\n    }\n\n    const imageMapHeight = getHeight(imageExtent);\n    const row = Math.floor(\n      img.height * ((imageExtent[3] - coordinate[1]) / imageMapHeight),\n    );\n    if (row < 0 || row >= img.height) {\n      return null;\n    }\n\n    return this.getImageData(img, col, row);\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    const image = this.image_;\n    const imageExtent = image.getExtent();\n    const imageResolution = image.getResolution();\n    const [imageResolutionX, imageResolutionY] = Array.isArray(imageResolution)\n      ? imageResolution\n      : [imageResolution, imageResolution];\n    const imagePixelRatio = image.getPixelRatio();\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const pixelRatio = frameState.pixelRatio;\n    const viewState = frameState.viewState;\n    const viewCenter = viewState.center;\n    const viewResolution = viewState.resolution;\n    const scaleX =\n      (pixelRatio * imageResolutionX) / (viewResolution * imagePixelRatio);\n    const scaleY =\n      (pixelRatio * imageResolutionY) / (viewResolution * imagePixelRatio);\n\n    this.prepareContainer(frameState, target);\n\n    // desired dimensions of the canvas in pixels\n    const width = this.context.canvas.width;\n    const height = this.context.canvas.height;\n\n    const context = this.getRenderContext(frameState);\n\n    // clipped rendering if layer extent is set\n    let clipped = false;\n    let render = true;\n    if (layerState.extent) {\n      const layerExtent = fromUserExtent(\n        layerState.extent,\n        viewState.projection,\n      );\n      render = intersectsExtent(layerExtent, frameState.extent);\n      clipped = render && !containsExtent(layerExtent, frameState.extent);\n      if (clipped) {\n        this.clipUnrotated(context, frameState, layerExtent);\n      }\n    }\n\n    const img = image.getImage();\n\n    const transform = composeTransform(\n      this.tempTransform,\n      width / 2,\n      height / 2,\n      scaleX,\n      scaleY,\n      0,\n      (imagePixelRatio * (imageExtent[0] - viewCenter[0])) / imageResolutionX,\n      (imagePixelRatio * (viewCenter[1] - imageExtent[3])) / imageResolutionY,\n    );\n\n    this.renderedResolution = (imageResolutionY * pixelRatio) / imagePixelRatio;\n\n    const dw = img.width * transform[0];\n    const dh = img.height * transform[3];\n\n    if (!this.getLayer().getSource().getInterpolate()) {\n      context.imageSmoothingEnabled = false;\n    }\n\n    this.preRender(context, frameState);\n    if (render && dw >= 0.5 && dh >= 0.5) {\n      const dx = transform[4];\n      const dy = transform[5];\n      const opacity = layerState.opacity;\n      if (opacity !== 1) {\n        context.save();\n        context.globalAlpha = opacity;\n      }\n      context.drawImage(img, 0, 0, +img.width, +img.height, dx, dy, dw, dh);\n      if (opacity !== 1) {\n        context.restore();\n      }\n    }\n    this.postRender(this.context, frameState);\n\n    if (clipped) {\n      context.restore();\n    }\n    context.imageSmoothingEnabled = true;\n\n    return this.container;\n  }\n}\n\nexport default CanvasImageLayerRenderer;\n","/**\n * @module ol/layer/Image\n */\nimport BaseImageLayer from './BaseImage.js';\nimport CanvasImageLayerRenderer from '../renderer/canvas/ImageLayer.js';\n\n/**\n * @classdesc\n * Server-rendered images that are available for arbitrary extents and\n * resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Image.js\").default} ImageSourceType\n * @extends {BaseImageLayer<ImageSourceType, CanvasImageLayerRenderer>}\n * @api\n */\nclass ImageLayer extends BaseImageLayer {\n  /**\n   * @param {import(\"./BaseImage.js\").Options<ImageSourceType>} [options] Layer options.\n   */\n  constructor(options) {\n    super(options);\n  }\n\n  createRenderer() {\n    return new CanvasImageLayerRenderer(this);\n  }\n\n  /**\n   * Get data for a pixel location.  A four element RGBA array will be returned.  For requests outside the\n   * layer extent, `null` will be returned.  Data for an image can only be retrieved if the\n   * source's `crossOrigin` property is set.\n   *\n   * ```js\n   * // display layer data on every pointer move\n   * map.on('pointermove', (event) => {\n   *   console.log(layer.getData(event.pixel));\n   * });\n   * ```\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   * @api\n   */\n  getData(pixel) {\n    return super.getData(pixel);\n  }\n}\n\nexport default ImageLayer;\n","/**\n * @module ol/layer/TileProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  PRELOAD: 'preload',\n  USE_INTERIM_TILES_ON_ERROR: 'useInterimTilesOnError',\n};\n","/**\n * @module ol/layer/BaseTile\n */\nimport Layer from './Layer.js';\nimport TileProperty from './TileProperty.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     import(\"./Layer.js\").LayerEventType|'change:preload'|'change:useInterimTilesOnError', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|\n *   import(\"./Layer.js\").LayerEventType|'change:preload'|'change:useInterimTilesOnError'|import(\"../render/EventType\").LayerRenderEventTypes, Return>} BaseTileLayerOnSignature\n */\n\n/**\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {TileSourceType} [source] Source for this layer.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link import(\"../Map.js\").default#addLayer map.addLayer()}.\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @template {import(\"../renderer/Layer.js\").default} RendererType\n * @extends {Layer<TileSourceType, RendererType>}\n * @api\n */\nclass BaseTileLayer extends Layer {\n  /**\n   * @param {Options<TileSourceType>} [options] Tile layer options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = Object.assign({}, options);\n\n    delete baseOptions.preload;\n    delete baseOptions.useInterimTilesOnError;\n    super(baseOptions);\n\n    /***\n     * @type {BaseTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {BaseTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {BaseTileLayerOnSignature<void>}\n     */\n    this.un;\n\n    this.setPreload(options.preload !== undefined ? options.preload : 0);\n    this.setUseInterimTilesOnError(\n      options.useInterimTilesOnError !== undefined\n        ? options.useInterimTilesOnError\n        : true,\n    );\n  }\n\n  /**\n   * Return the level as number to which we will preload tiles up to.\n   * @return {number} The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  getPreload() {\n    return /** @type {number} */ (this.get(TileProperty.PRELOAD));\n  }\n\n  /**\n   * Set the level as number to which we will preload tiles up to.\n   * @param {number} preload The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  setPreload(preload) {\n    this.set(TileProperty.PRELOAD, preload);\n  }\n\n  /**\n   * Whether we use interim tiles on error.\n   * @return {boolean} Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  getUseInterimTilesOnError() {\n    return /** @type {boolean} */ (\n      this.get(TileProperty.USE_INTERIM_TILES_ON_ERROR)\n    );\n  }\n\n  /**\n   * Set whether we use interim tiles on error.\n   * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  setUseInterimTilesOnError(useInterimTilesOnError) {\n    this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n  }\n\n  /**\n   * Get data for a pixel location.  The return type depends on the source data.  For image tiles,\n   * a four element RGBA array will be returned.  For data tiles, the array length will match the\n   * number of bands in the dataset.  For requests outside the layer extent, `null` will be returned.\n   * Data for a image tiles can only be retrieved if the source's `crossOrigin` property is set.\n   *\n   * ```js\n   * // display layer data on every pointer move\n   * map.on('pointermove', (event) => {\n   *   console.log(layer.getData(event.pixel));\n   * });\n   * ```\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   * @api\n   */\n  getData(pixel) {\n    return super.getData(pixel);\n  }\n}\n\nexport default BaseTileLayer;\n","/**\n * @module ol/renderer/canvas/TileLayer\n */\nimport CanvasLayerRenderer from './Layer.js';\nimport ImageTile from '../../ImageTile.js';\nimport ReprojTile from '../../reproj/Tile.js';\nimport TileRange from '../../TileRange.js';\nimport TileState from '../../TileState.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n} from '../../transform.js';\nimport {ascending} from '../../array.js';\nimport {\n  containsCoordinate,\n  createEmpty,\n  equals,\n  getIntersection,\n  getRotatedViewport,\n  getTopLeft,\n  intersects,\n} from '../../extent.js';\nimport {fromUserExtent} from '../../proj.js';\nimport {getUid} from '../../util.js';\nimport {toSize} from '../../size.js';\n\n/**\n * @classdesc\n * Canvas renderer for tile layers.\n * @api\n * @template {import(\"../../layer/Tile.js\").default<import(\"../../source/Tile.js\").default>|import(\"../../layer/VectorTile.js\").default} [LayerType=import(\"../../layer/Tile.js\").default<import(\"../../source/Tile.js\").default>|import(\"../../layer/VectorTile.js\").default]\n * @extends {CanvasLayerRenderer<LayerType>}\n */\nclass CanvasTileLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {LayerType} tileLayer Tile layer.\n   */\n  constructor(tileLayer) {\n    super(tileLayer);\n\n    /**\n     * Rendered extent has changed since the previous `renderFrame()` call\n     * @type {boolean}\n     */\n    this.extentChanged = true;\n\n    /**\n     * @private\n     * @type {?import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedPixelRatio;\n\n    /**\n     * @protected\n     * @type {import(\"../../proj/Projection.js\").default}\n     */\n    this.renderedProjection = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedRevision;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../../Tile.js\").default>}\n     */\n    this.renderedTiles = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.newTiles_ = false;\n\n    /**\n     * @protected\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.tmpExtent = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../TileRange.js\").default}\n     */\n    this.tmpTileRange_ = new TileRange(0, 0, 0, 0);\n  }\n\n  /**\n   * @protected\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {boolean} Tile is drawable.\n   */\n  isDrawableTile(tile) {\n    const tileLayer = this.getLayer();\n    const tileState = tile.getState();\n    const useInterimTilesOnError = tileLayer.getUseInterimTilesOnError();\n    return (\n      tileState == TileState.LOADED ||\n      tileState == TileState.EMPTY ||\n      (tileState == TileState.ERROR && !useInterimTilesOnError)\n    );\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {!import(\"../../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, frameState) {\n    const pixelRatio = frameState.pixelRatio;\n    const projection = frameState.viewState.projection;\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    let tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n    if (tile.getState() == TileState.ERROR) {\n      if (tileLayer.getUseInterimTilesOnError() && tileLayer.getPreload() > 0) {\n        // Preloaded tiles for lower resolutions might have finished loading.\n        this.newTiles_ = true;\n      }\n    }\n    if (!this.isDrawableTile(tile)) {\n      tile = tile.getInterimTile();\n    }\n    return tile;\n  }\n\n  /**\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray} Data at the pixel location.\n   */\n  getData(pixel) {\n    const frameState = this.frameState;\n    if (!frameState) {\n      return null;\n    }\n\n    const layer = this.getLayer();\n    const coordinate = applyTransform(\n      frameState.pixelToCoordinateTransform,\n      pixel.slice(),\n    );\n\n    const layerExtent = layer.getExtent();\n    if (layerExtent) {\n      if (!containsCoordinate(layerExtent, coordinate)) {\n        return null;\n      }\n    }\n\n    const pixelRatio = frameState.pixelRatio;\n    const projection = frameState.viewState.projection;\n    const viewState = frameState.viewState;\n    const source = layer.getRenderSource();\n    const tileGrid = source.getTileGridForProjection(viewState.projection);\n    const tilePixelRatio = source.getTilePixelRatio(frameState.pixelRatio);\n\n    for (\n      let z = tileGrid.getZForResolution(viewState.resolution);\n      z >= tileGrid.getMinZoom();\n      --z\n    ) {\n      const tileCoord = tileGrid.getTileCoordForCoordAndZ(coordinate, z);\n      const tile = source.getTile(\n        z,\n        tileCoord[1],\n        tileCoord[2],\n        pixelRatio,\n        projection,\n      );\n      if (\n        !(tile instanceof ImageTile || tile instanceof ReprojTile) ||\n        (tile instanceof ReprojTile && tile.getState() === TileState.EMPTY)\n      ) {\n        return null;\n      }\n\n      if (tile.getState() !== TileState.LOADED) {\n        continue;\n      }\n\n      const tileOrigin = tileGrid.getOrigin(z);\n      const tileSize = toSize(tileGrid.getTileSize(z));\n      const tileResolution = tileGrid.getResolution(z);\n\n      const col = Math.floor(\n        tilePixelRatio *\n          ((coordinate[0] - tileOrigin[0]) / tileResolution -\n            tileCoord[1] * tileSize[0]),\n      );\n\n      const row = Math.floor(\n        tilePixelRatio *\n          ((tileOrigin[1] - coordinate[1]) / tileResolution -\n            tileCoord[2] * tileSize[1]),\n      );\n\n      const gutter = Math.round(\n        tilePixelRatio * source.getGutterForProjection(viewState.projection),\n      );\n\n      return this.getImageData(tile.getImage(), col + gutter, row + gutter);\n    }\n\n    return null;\n  }\n\n  /**\n   * @param {Object<number, Object<string, import(\"../../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @param {number} zoom Zoom level.\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {boolean|void} If `false`, the tile will not be considered loaded.\n   */\n  loadedTileCallback(tiles, zoom, tile) {\n    if (this.isDrawableTile(tile)) {\n      return super.loadedTileCallback(tiles, zoom, tile);\n    }\n    return false;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return !!this.getLayer().getSource();\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const viewResolution = viewState.resolution;\n    const viewCenter = viewState.center;\n    const rotation = viewState.rotation;\n    const pixelRatio = frameState.pixelRatio;\n\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    const sourceRevision = tileSource.getRevision();\n    const tileGrid = tileSource.getTileGridForProjection(projection);\n    const z = tileGrid.getZForResolution(viewResolution, tileSource.zDirection);\n    const tileResolution = tileGrid.getResolution(z);\n\n    let extent = frameState.extent;\n    const resolution = frameState.viewState.resolution;\n    const tilePixelRatio = tileSource.getTilePixelRatio(pixelRatio);\n\n    this.prepareContainer(frameState, target);\n\n    // desired dimensions of the canvas in pixels\n    const width = this.context.canvas.width;\n    const height = this.context.canvas.height;\n\n    const layerExtent =\n      layerState.extent && fromUserExtent(layerState.extent, projection);\n    if (layerExtent) {\n      extent = getIntersection(\n        extent,\n        fromUserExtent(layerState.extent, projection),\n      );\n    }\n\n    const dx = (tileResolution * width) / 2 / tilePixelRatio;\n    const dy = (tileResolution * height) / 2 / tilePixelRatio;\n    const canvasExtent = [\n      viewCenter[0] - dx,\n      viewCenter[1] - dy,\n      viewCenter[0] + dx,\n      viewCenter[1] + dy,\n    ];\n\n    const tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n\n    /**\n     * @type {Object<number, Object<string, import(\"../../Tile.js\").default>>}\n     */\n    const tilesToDrawByZ = {};\n    tilesToDrawByZ[z] = {};\n\n    const findLoadedTiles = this.createLoadedTileFinder(\n      tileSource,\n      projection,\n      tilesToDrawByZ,\n    );\n\n    const tmpExtent = this.tmpExtent;\n    const tmpTileRange = this.tmpTileRange_;\n    this.newTiles_ = false;\n    const viewport = rotation\n      ? getRotatedViewport(\n          viewState.center,\n          resolution,\n          rotation,\n          frameState.size,\n        )\n      : undefined;\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        if (\n          rotation &&\n          !tileGrid.tileCoordIntersectsViewport([z, x, y], viewport)\n        ) {\n          continue;\n        }\n        const tile = this.getTile(z, x, y, frameState);\n        if (this.isDrawableTile(tile)) {\n          const uid = getUid(this);\n          if (tile.getState() == TileState.LOADED) {\n            tilesToDrawByZ[z][tile.tileCoord.toString()] = tile;\n            let inTransition = tile.inTransition(uid);\n            if (inTransition && layerState.opacity !== 1) {\n              // Skipping transition when layer is not fully opaque avoids visual artifacts.\n              tile.endTransition(uid);\n              inTransition = false;\n            }\n            if (\n              !this.newTiles_ &&\n              (inTransition || !this.renderedTiles.includes(tile))\n            ) {\n              this.newTiles_ = true;\n            }\n          }\n          if (tile.getAlpha(uid, frameState.time) === 1) {\n            // don't look for alt tiles if alpha is 1\n            continue;\n          }\n        }\n\n        const childTileRange = tileGrid.getTileCoordChildTileRange(\n          tile.tileCoord,\n          tmpTileRange,\n          tmpExtent,\n        );\n\n        let covered = false;\n        if (childTileRange) {\n          covered = findLoadedTiles(z + 1, childTileRange);\n        }\n        if (!covered) {\n          tileGrid.forEachTileCoordParentTileRange(\n            tile.tileCoord,\n            findLoadedTiles,\n            tmpTileRange,\n            tmpExtent,\n          );\n        }\n      }\n    }\n\n    const canvasScale =\n      ((tileResolution / viewResolution) * pixelRatio) / tilePixelRatio;\n\n    const context = this.getRenderContext(frameState);\n\n    // set scale transform for calculating tile positions on the canvas\n    composeTransform(\n      this.tempTransform,\n      width / 2,\n      height / 2,\n      canvasScale,\n      canvasScale,\n      0,\n      -width / 2,\n      -height / 2,\n    );\n\n    if (layerExtent) {\n      this.clipUnrotated(context, frameState, layerExtent);\n    }\n\n    if (!tileSource.getInterpolate()) {\n      context.imageSmoothingEnabled = false;\n    }\n\n    this.preRender(context, frameState);\n\n    this.renderedTiles.length = 0;\n    /** @type {Array<number>} */\n    let zs = Object.keys(tilesToDrawByZ).map(Number);\n    zs.sort(ascending);\n\n    let clips, clipZs, currentClip;\n    if (\n      layerState.opacity === 1 &&\n      (!this.containerReused ||\n        tileSource.getOpaque(frameState.viewState.projection))\n    ) {\n      zs = zs.reverse();\n    } else {\n      clips = [];\n      clipZs = [];\n    }\n    for (let i = zs.length - 1; i >= 0; --i) {\n      const currentZ = zs[i];\n      const currentTilePixelSize = tileSource.getTilePixelSize(\n        currentZ,\n        pixelRatio,\n        projection,\n      );\n      const currentResolution = tileGrid.getResolution(currentZ);\n      const currentScale = currentResolution / tileResolution;\n      const dx = currentTilePixelSize[0] * currentScale * canvasScale;\n      const dy = currentTilePixelSize[1] * currentScale * canvasScale;\n      const originTileCoord = tileGrid.getTileCoordForCoordAndZ(\n        getTopLeft(canvasExtent),\n        currentZ,\n      );\n      const originTileExtent = tileGrid.getTileCoordExtent(originTileCoord);\n      const origin = applyTransform(this.tempTransform, [\n        (tilePixelRatio * (originTileExtent[0] - canvasExtent[0])) /\n          tileResolution,\n        (tilePixelRatio * (canvasExtent[3] - originTileExtent[3])) /\n          tileResolution,\n      ]);\n      const tileGutter =\n        tilePixelRatio * tileSource.getGutterForProjection(projection);\n      const tilesToDraw = tilesToDrawByZ[currentZ];\n      for (const tileCoordKey in tilesToDraw) {\n        const tile = /** @type {import(\"../../ImageTile.js\").default} */ (\n          tilesToDraw[tileCoordKey]\n        );\n        const tileCoord = tile.tileCoord;\n\n        // Calculate integer positions and sizes so that tiles align\n        const xIndex = originTileCoord[1] - tileCoord[1];\n        const nextX = Math.round(origin[0] - (xIndex - 1) * dx);\n        const yIndex = originTileCoord[2] - tileCoord[2];\n        const nextY = Math.round(origin[1] - (yIndex - 1) * dy);\n        const x = Math.round(origin[0] - xIndex * dx);\n        const y = Math.round(origin[1] - yIndex * dy);\n        const w = nextX - x;\n        const h = nextY - y;\n        const transition = z === currentZ;\n\n        const inTransition =\n          transition && tile.getAlpha(getUid(this), frameState.time) !== 1;\n        let contextSaved = false;\n        if (!inTransition) {\n          if (clips) {\n            // Clip mask for regions in this tile that already filled by a higher z tile\n            currentClip = [x, y, x + w, y, x + w, y + h, x, y + h];\n            for (let i = 0, ii = clips.length; i < ii; ++i) {\n              if (z !== currentZ && currentZ < clipZs[i]) {\n                const clip = clips[i];\n                if (\n                  intersects(\n                    [x, y, x + w, y + h],\n                    [clip[0], clip[3], clip[4], clip[7]],\n                  )\n                ) {\n                  if (!contextSaved) {\n                    context.save();\n                    contextSaved = true;\n                  }\n                  context.beginPath();\n                  // counter-clockwise (outer ring) for current tile\n                  context.moveTo(currentClip[0], currentClip[1]);\n                  context.lineTo(currentClip[2], currentClip[3]);\n                  context.lineTo(currentClip[4], currentClip[5]);\n                  context.lineTo(currentClip[6], currentClip[7]);\n                  // clockwise (inner ring) for higher z tile\n                  context.moveTo(clip[6], clip[7]);\n                  context.lineTo(clip[4], clip[5]);\n                  context.lineTo(clip[2], clip[3]);\n                  context.lineTo(clip[0], clip[1]);\n                  context.clip();\n                }\n              }\n            }\n            clips.push(currentClip);\n            clipZs.push(currentZ);\n          } else {\n            context.clearRect(x, y, w, h);\n          }\n        }\n        this.drawTileImage(\n          tile,\n          frameState,\n          x,\n          y,\n          w,\n          h,\n          tileGutter,\n          transition,\n        );\n        if (clips && !inTransition) {\n          if (contextSaved) {\n            context.restore();\n          }\n          this.renderedTiles.unshift(tile);\n        } else {\n          this.renderedTiles.push(tile);\n        }\n        this.updateUsedTiles(frameState.usedTiles, tileSource, tile);\n      }\n    }\n\n    this.renderedRevision = sourceRevision;\n    this.renderedResolution = tileResolution;\n    this.extentChanged =\n      !this.renderedExtent_ || !equals(this.renderedExtent_, canvasExtent);\n    this.renderedExtent_ = canvasExtent;\n    this.renderedPixelRatio = pixelRatio;\n    this.renderedProjection = projection;\n\n    this.manageTilePyramid(\n      frameState,\n      tileSource,\n      tileGrid,\n      pixelRatio,\n      projection,\n      extent,\n      z,\n      tileLayer.getPreload(),\n    );\n    this.scheduleExpireCache(frameState, tileSource);\n\n    this.postRender(this.context, frameState);\n\n    if (layerState.extent) {\n      context.restore();\n    }\n    context.imageSmoothingEnabled = true;\n\n    return this.container;\n  }\n\n  /**\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {number} x Left of the tile.\n   * @param {number} y Top of the tile.\n   * @param {number} w Width of the tile.\n   * @param {number} h Height of the tile.\n   * @param {number} gutter Tile gutter.\n   * @param {boolean} transition Apply an alpha transition.\n   */\n  drawTileImage(tile, frameState, x, y, w, h, gutter, transition) {\n    const image = this.getTileImage(tile);\n    if (!image) {\n      return;\n    }\n    const context = this.getRenderContext(frameState);\n    const uid = getUid(this);\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const alpha =\n      layerState.opacity *\n      (transition ? tile.getAlpha(uid, frameState.time) : 1);\n    const alphaChanged = alpha !== context.globalAlpha;\n    if (alphaChanged) {\n      context.save();\n      context.globalAlpha = alpha;\n    }\n    context.drawImage(\n      image,\n      gutter,\n      gutter,\n      image.width - 2 * gutter,\n      image.height - 2 * gutter,\n      x,\n      y,\n      w,\n      h,\n    );\n\n    if (alphaChanged) {\n      context.restore();\n    }\n    if (alpha !== layerState.opacity) {\n      frameState.animate = true;\n    } else if (transition) {\n      tile.endTransition(uid);\n    }\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image\n   */\n  getImage() {\n    const context = this.context;\n    return context ? context.canvas : null;\n  }\n\n  /**\n   * Get the image from a tile.\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @protected\n   */\n  getTileImage(tile) {\n    return tile.getImage();\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @protected\n   */\n  scheduleExpireCache(frameState, tileSource) {\n    if (tileSource.canExpireCache()) {\n      /**\n       * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n       * @param {import(\"../../Map.js\").default} map Map.\n       * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n       */\n      const postRenderFunction = function (tileSource, map, frameState) {\n        const tileSourceKey = getUid(tileSource);\n        if (tileSourceKey in frameState.usedTiles) {\n          tileSource.expireCache(\n            frameState.viewState.projection,\n            frameState.usedTiles[tileSourceKey],\n          );\n        }\n      }.bind(null, tileSource);\n\n      frameState.postRenderFunctions.push(\n        /** @type {import(\"../../Map.js\").PostRenderFunction} */ (\n          postRenderFunction\n        ),\n      );\n    }\n  }\n\n  /**\n   * @param {!Object<string, !Object<string, boolean>>} usedTiles Used tiles.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @param {import('../../Tile.js').default} tile Tile.\n   * @protected\n   */\n  updateUsedTiles(usedTiles, tileSource, tile) {\n    // FIXME should we use tilesToDrawByZ instead?\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in usedTiles)) {\n      usedTiles[tileSourceKey] = {};\n    }\n    usedTiles[tileSourceKey][tile.getKey()] = true;\n  }\n\n  /**\n   * Manage tile pyramid.\n   * This function performs a number of functions related to the tiles at the\n   * current zoom and lower zoom levels:\n   * - registers idle tiles in frameState.wantedTiles so that they are not\n   *   discarded by the tile queue\n   * - enqueues missing tiles\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @param {import(\"../../tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {number} currentZ Current Z.\n   * @param {number} preload Load low resolution tiles up to `preload` levels.\n   * @param {function(import(\"../../Tile.js\").default):void} [tileCallback] Tile callback.\n   * @protected\n   */\n  manageTilePyramid(\n    frameState,\n    tileSource,\n    tileGrid,\n    pixelRatio,\n    projection,\n    extent,\n    currentZ,\n    preload,\n    tileCallback,\n  ) {\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in frameState.wantedTiles)) {\n      frameState.wantedTiles[tileSourceKey] = {};\n    }\n    const wantedTiles = frameState.wantedTiles[tileSourceKey];\n    const tileQueue = frameState.tileQueue;\n    const minZoom = tileGrid.getMinZoom();\n    const rotation = frameState.viewState.rotation;\n    const viewport = rotation\n      ? getRotatedViewport(\n          frameState.viewState.center,\n          frameState.viewState.resolution,\n          rotation,\n          frameState.size,\n        )\n      : undefined;\n    let tileCount = 0;\n    let tile, tileRange, tileResolution, x, y, z;\n    for (z = minZoom; z <= currentZ; ++z) {\n      tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z, tileRange);\n      tileResolution = tileGrid.getResolution(z);\n      for (x = tileRange.minX; x <= tileRange.maxX; ++x) {\n        for (y = tileRange.minY; y <= tileRange.maxY; ++y) {\n          if (\n            rotation &&\n            !tileGrid.tileCoordIntersectsViewport([z, x, y], viewport)\n          ) {\n            continue;\n          }\n          if (currentZ - z <= preload) {\n            ++tileCount;\n            tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n            if (tile.getState() == TileState.IDLE) {\n              wantedTiles[tile.getKey()] = true;\n              if (!tileQueue.isKeyQueued(tile.getKey())) {\n                tileQueue.enqueue([\n                  tile,\n                  tileSourceKey,\n                  tileGrid.getTileCoordCenter(tile.tileCoord),\n                  tileResolution,\n                ]);\n              }\n            }\n            if (tileCallback !== undefined) {\n              tileCallback(tile);\n            }\n          } else {\n            tileSource.useTile(z, x, y, projection);\n          }\n        }\n      }\n    }\n    tileSource.updateCacheSize(tileCount, projection);\n  }\n}\n\nexport default CanvasTileLayerRenderer;\n","/**\n * @module ol/layer/Tile\n */\nimport BaseTileLayer from './BaseTile.js';\nimport CanvasTileLayerRenderer from '../renderer/canvas/TileLayer.js';\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @extends BaseTileLayer<TileSourceType, CanvasTileLayerRenderer>\n * @api\n */\nclass TileLayer extends BaseTileLayer {\n  /**\n   * @param {import(\"./BaseTile.js\").Options<TileSourceType>} [options] Tile layer options.\n   */\n  constructor(options) {\n    super(options);\n  }\n\n  createRenderer() {\n    return new CanvasTileLayerRenderer(this);\n  }\n}\n\nexport default TileLayer;\n","/**\n * @module ol/resolution\n */\n\n/**\n * @typedef {number|Array<number>} ResolutionLike\n */\n\n/**\n * @param {ResolutionLike} resolution Resolution.\n * @return {number} Resolution.\n */\nexport function fromResolutionLike(resolution) {\n  if (Array.isArray(resolution)) {\n    return Math.min(...resolution);\n  }\n  return resolution;\n}\n","/**\n * @module ol/renderer/canvas/VectorImageLayer\n */\nimport CanvasImageLayerRenderer from './ImageLayer.js';\nimport CanvasVectorLayerRenderer from './VectorLayer.js';\nimport EventType from '../../events/EventType.js';\nimport ImageCanvas from '../../ImageCanvas.js';\nimport ImageState from '../../ImageState.js';\nimport RBush from 'rbush';\nimport ViewHint from '../../ViewHint.js';\nimport {apply, compose, create} from '../../transform.js';\nimport {fromResolutionLike} from '../../resolution.js';\nimport {getHeight, getWidth, isEmpty, scaleFromCenter} from '../../extent.js';\n\n/**\n * @classdesc\n * Canvas renderer for image layers.\n * @api\n */\nclass CanvasVectorImageLayerRenderer extends CanvasImageLayerRenderer {\n  /**\n   * @param {import(\"../../layer/VectorImage.js\").default} layer Vector image layer.\n   */\n  constructor(layer) {\n    super(layer);\n\n    /**\n     * @private\n     * @type {import(\"./VectorLayer.js\").default}\n     */\n    this.vectorRenderer_ = new CanvasVectorLayerRenderer(layer);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.layerImageRatio_ = layer.getImageRatio();\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.coordinateToVectorPixelTransform_ = create();\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.renderedPixelToCoordinateTransform_ = null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.vectorRenderer_.dispose();\n    super.disposeInternal();\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../../Feature\").default>>} Promise that resolves with an array of features.\n   */\n  getFeatures(pixel) {\n    if (!this.vectorRenderer_) {\n      return Promise.resolve([]);\n    }\n    const vectorPixel = apply(\n      this.coordinateToVectorPixelTransform_,\n      apply(this.renderedPixelToCoordinateTransform_, pixel.slice()),\n    );\n    return this.vectorRenderer_.getFeatures(vectorPixel);\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   */\n  handleFontsChanged() {\n    this.vectorRenderer_.handleFontsChanged();\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    const pixelRatio = frameState.pixelRatio;\n    const viewState = frameState.viewState;\n    const viewResolution = viewState.resolution;\n\n    const hints = frameState.viewHints;\n    const vectorRenderer = this.vectorRenderer_;\n    let renderedExtent = frameState.extent;\n    if (this.layerImageRatio_ !== 1) {\n      renderedExtent = renderedExtent.slice(0);\n      scaleFromCenter(renderedExtent, this.layerImageRatio_);\n    }\n    const width = getWidth(renderedExtent) / viewResolution;\n    const height = getHeight(renderedExtent) / viewResolution;\n\n    if (\n      !hints[ViewHint.ANIMATING] &&\n      !hints[ViewHint.INTERACTING] &&\n      !isEmpty(renderedExtent)\n    ) {\n      vectorRenderer.useContainer(null, null);\n      const context = vectorRenderer.context;\n      const layerState = frameState.layerStatesArray[frameState.layerIndex];\n      const imageLayerState = Object.assign({}, layerState, {opacity: 1});\n      const imageFrameState = /** @type {import(\"../../Map.js\").FrameState} */ (\n        Object.assign({}, frameState, {\n          extent: renderedExtent,\n          size: [width, height],\n          viewState: /** @type {import(\"../../View.js\").State} */ (\n            Object.assign({}, frameState.viewState, {\n              rotation: 0,\n            })\n          ),\n          layerStatesArray: [imageLayerState],\n          layerIndex: 0,\n          declutter: null,\n        })\n      );\n      const declutter = this.getLayer().getDeclutter();\n      if (declutter) {\n        imageFrameState.declutter = {\n          [declutter]: new RBush(9),\n        };\n      }\n      let emptyImage = true;\n      const image = new ImageCanvas(\n        renderedExtent,\n        viewResolution,\n        pixelRatio,\n        context.canvas,\n        function (callback) {\n          if (\n            vectorRenderer.prepareFrame(imageFrameState) &&\n            vectorRenderer.replayGroupChanged\n          ) {\n            vectorRenderer.clipping = false;\n            if (vectorRenderer.renderFrame(imageFrameState, null)) {\n              vectorRenderer.renderDeclutter(imageFrameState);\n              vectorRenderer.renderDeferred(imageFrameState);\n              emptyImage = false;\n            }\n            callback();\n          }\n        },\n      );\n\n      image.addEventListener(EventType.CHANGE, () => {\n        if (image.getState() !== ImageState.LOADED) {\n          return;\n        }\n        this.image_ = emptyImage ? null : image;\n        const imagePixelRatio = image.getPixelRatio();\n        const renderedResolution =\n          (fromResolutionLike(image.getResolution()) * pixelRatio) /\n          imagePixelRatio;\n        this.renderedResolution = renderedResolution;\n        this.coordinateToVectorPixelTransform_ = compose(\n          this.coordinateToVectorPixelTransform_,\n          width / 2,\n          height / 2,\n          1 / renderedResolution,\n          -1 / renderedResolution,\n          0,\n          -viewState.center[0],\n          -viewState.center[1],\n        );\n      });\n      image.load();\n    }\n\n    if (this.image_) {\n      this.renderedPixelToCoordinateTransform_ =\n        frameState.pixelToCoordinateTransform.slice();\n    }\n\n    return !!this.image_;\n  }\n\n  /**\n   */\n  preRender() {}\n\n  /**\n   */\n  postRender() {}\n\n  /**\n   */\n  renderDeclutter() {}\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"../vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"../Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches,\n  ) {\n    if (this.vectorRenderer_) {\n      return this.vectorRenderer_.forEachFeatureAtCoordinate(\n        coordinate,\n        frameState,\n        hitTolerance,\n        callback,\n        matches,\n      );\n    }\n    return super.forEachFeatureAtCoordinate(\n      coordinate,\n      frameState,\n      hitTolerance,\n      callback,\n      matches,\n    );\n  }\n}\n\nexport default CanvasVectorImageLayerRenderer;\n","/**\n * @module ol/layer/VectorImage\n */\nimport BaseVectorLayer from './BaseVector.js';\nimport CanvasVectorImageLayerRenderer from '../renderer/canvas/VectorImageLayer.js';\n\n/**\n * @template {import(\"../source/Vector.js\").default} VectorSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the\n * renderer when getting features from the vector source for the rendering or hit-detection.\n * Recommended value: the size of the largest symbol, line width or label.\n * @property {VectorSourceType} [source] Source.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * @property {boolean|string|number} [declutter=false] Declutter images and text on this layer. Any truthy value will enable\n * decluttering. The priority is defined by the `zIndex` of the style and the render order of features. Higher z-index means higher\n * priority. Within the same z-index, a feature rendered before another has higher priority. Items will\n * not be decluttered against or together with items on other layers with the same `declutter` value. If\n * that is needed, use {@link import(\"../layer/Vector.js\").default} instead.\n * @property {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style. When set to `null`, only\n * features that have their own style will be rendered. See {@link module:ol/style/Style~Style} for the default style\n * which will be used if this is not set.\n * @property {import(\"./Base.js\").BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {number} [imageRatio=1] Ratio by which the rendered extent should be larger than the\n * viewport extent. A larger ratio avoids cut images during panning, but will cause a decrease in performance.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Vector data is rendered client-side, to an image. This layer type provides great performance\n * during panning and zooming, but point symbols and texts are always rotated with the view and\n * pixels are scaled during zoom animations. For more accurate rendering of vector data, use\n * {@link module:ol/layer/Vector~VectorLayer} instead.\n *\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../Feature.js\").default} FeatureType\n * @extends {BaseVectorLayer<import(\"../source/Vector.js\").default<FeatureType>, CanvasVectorImageLayerRenderer>}\n * @api\n */\nclass VectorImageLayer extends BaseVectorLayer {\n  /**\n   * @param {Options<import(\"../source/Vector.js\").default<FeatureType>>} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = Object.assign({}, options);\n    delete baseOptions.imageRatio;\n    super(baseOptions);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.imageRatio_ =\n      options.imageRatio !== undefined ? options.imageRatio : 1;\n  }\n\n  /**\n   * @return {number} Ratio between rendered extent size and viewport extent size.\n   */\n  getImageRatio() {\n    return this.imageRatio_;\n  }\n\n  createRenderer() {\n    return new CanvasVectorImageLayerRenderer(this);\n  }\n}\n\nexport default VectorImageLayer;\n","/**\n * @module ol/renderer/canvas/VectorTileLayer\n */\nimport CanvasBuilderGroup from '../../render/canvas/BuilderGroup.js';\nimport CanvasExecutorGroup, {\n  DECLUTTER,\n} from '../../render/canvas/ExecutorGroup.js';\nimport CanvasTileLayerRenderer from './TileLayer.js';\nimport TileState from '../../TileState.js';\nimport ViewHint from '../../ViewHint.js';\nimport ZIndexContext from '../../render/canvas/ZIndexContext.js';\nimport {\n  HIT_DETECT_RESOLUTION,\n  createHitDetectionImageData,\n  hitDetect,\n} from '../../render/canvas/hitdetect.js';\nimport {\n  apply as applyTransform,\n  create as createTransform,\n  multiply,\n  reset as resetTransform,\n  scale,\n  scale as scaleTransform,\n  translate as translateTransform,\n} from '../../transform.js';\nimport {ascending} from '../../array.js';\nimport {\n  boundingExtent,\n  buffer,\n  containsExtent,\n  equals,\n  getIntersection,\n  getTopLeft,\n  intersects,\n} from '../../extent.js';\nimport {\n  getSquaredTolerance as getSquaredRenderTolerance,\n  renderFeature,\n} from '../vector.js';\nimport {getUid} from '../../util.js';\nimport {toSize} from '../../size.js';\nimport {wrapX} from '../../coordinate.js';\n\n/**\n * @type {!Object<string, Array<import(\"../../render/canvas.js\").BuilderType>>}\n */\nconst IMAGE_REPLAYS = {\n  'image': ['Polygon', 'Circle', 'LineString', 'Image', 'Text'],\n  'hybrid': ['Polygon', 'LineString'],\n  'vector': [],\n};\n\n/**\n * @type {!Object<string, Array<import(\"../../render/canvas.js\").BuilderType>>}\n */\nconst VECTOR_REPLAYS = {\n  'hybrid': ['Image', 'Text', 'Default'],\n  'vector': ['Polygon', 'Circle', 'LineString', 'Image', 'Text', 'Default'],\n};\n\n/**\n * @classdesc\n * Canvas renderer for vector tile layers.\n * @api\n * @extends {CanvasTileLayerRenderer<import(\"../../layer/VectorTile.js\").default>}\n */\nclass CanvasVectorTileLayerRenderer extends CanvasTileLayerRenderer {\n  /**\n   * @param {import(\"../../layer/VectorTile.js\").default} layer VectorTile layer.\n   */\n  constructor(layer) {\n    super(layer);\n\n    /** @private */\n    this.boundHandleStyleImageChange_ = this.handleStyleImageChange_.bind(this);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedLayerRevision_;\n\n    /**\n     * @private\n     * @type {import(\"../../transform\").Transform}\n     */\n    this.renderedPixelToCoordinateTransform_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRotation_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedOpacity_ = 1;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tmpTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {Array<ZIndexContext>}\n     */\n    this.tileClipContexts_ = null;\n  }\n\n  /**\n   * @param {import(\"../../VectorRenderTile.js\").default} tile Tile.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../proj/Projection\").default} projection Projection.\n   * @return {boolean|undefined} Tile needs to be rendered.\n   */\n  prepareTile(tile, pixelRatio, projection) {\n    let render;\n    const state = tile.getState();\n    if (state === TileState.LOADED || state === TileState.ERROR) {\n      this.updateExecutorGroup_(tile, pixelRatio, projection);\n      if (this.tileImageNeedsRender_(tile)) {\n        render = true;\n      }\n    }\n    return render;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {!import(\"../../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, frameState) {\n    const pixelRatio = frameState.pixelRatio;\n    const viewState = frameState.viewState;\n    const resolution = viewState.resolution;\n    const projection = viewState.projection;\n    const layer = this.getLayer();\n    const tile = layer.getSource().getTile(z, x, y, pixelRatio, projection);\n    const viewHints = frameState.viewHints;\n    const hifi = !(\n      viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]\n    );\n    if (hifi || !tile.wantedResolution) {\n      tile.wantedResolution = resolution;\n    }\n    const render = this.prepareTile(tile, pixelRatio, projection);\n    if (\n      render &&\n      (hifi || Date.now() - frameState.time < 8) &&\n      layer.getRenderMode() !== 'vector'\n    ) {\n      this.renderTileImage_(tile, frameState);\n    }\n    return super.getTile(z, x, y, frameState);\n  }\n\n  /**\n   * @param {import(\"../../VectorRenderTile.js\").default} tile Tile.\n   * @return {boolean} Tile is drawable.\n   */\n  isDrawableTile(tile) {\n    const layer = this.getLayer();\n    return (\n      super.isDrawableTile(tile) &&\n      (layer.getRenderMode() === 'vector'\n        ? getUid(layer) in tile.executorGroups\n        : tile.hasContext(layer))\n    );\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getTileImage(tile) {\n    return tile.getImage(this.getLayer());\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    const layerRevision = this.getLayer().getRevision();\n    if (this.renderedLayerRevision_ !== layerRevision) {\n      this.renderedLayerRevision_ = layerRevision;\n      this.renderedTiles.length = 0;\n    }\n    return super.prepareFrame(frameState);\n  }\n\n  /**\n   * @param {import(\"../../VectorRenderTile.js\").default} tile Tile.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n   * @private\n   */\n  updateExecutorGroup_(tile, pixelRatio, projection) {\n    const layer = /** @type {import(\"../../layer/VectorTile.js\").default} */ (\n      this.getLayer()\n    );\n    const revision = layer.getRevision();\n    const renderOrder = layer.getRenderOrder() || null;\n\n    const resolution = tile.wantedResolution;\n    const builderState = tile.getReplayState(layer);\n    if (\n      !builderState.dirty &&\n      builderState.renderedResolution === resolution &&\n      builderState.renderedRevision == revision &&\n      builderState.renderedRenderOrder == renderOrder\n    ) {\n      return;\n    }\n\n    const source = layer.getSource();\n    const declutter = !!layer.getDeclutter();\n    const sourceTileGrid = source.getTileGrid();\n    const tileGrid = source.getTileGridForProjection(projection);\n    const tileExtent = tileGrid.getTileCoordExtent(tile.wrappedTileCoord);\n\n    const sourceTiles = source.getSourceTiles(pixelRatio, projection, tile);\n    const layerUid = getUid(layer);\n    delete tile.hitDetectionImageData[layerUid];\n    tile.executorGroups[layerUid] = [];\n    builderState.dirty = false;\n    for (let t = 0, tt = sourceTiles.length; t < tt; ++t) {\n      const sourceTile = sourceTiles[t];\n      if (sourceTile.getState() != TileState.LOADED) {\n        continue;\n      }\n      const sourceTileCoord = sourceTile.tileCoord;\n      const sourceTileExtent =\n        sourceTileGrid.getTileCoordExtent(sourceTileCoord);\n      const sharedExtent = getIntersection(tileExtent, sourceTileExtent);\n      const builderExtent = buffer(\n        sharedExtent,\n        layer.getRenderBuffer() * resolution,\n        this.tmpExtent,\n      );\n      const bufferedExtent = equals(sourceTileExtent, sharedExtent)\n        ? null\n        : builderExtent;\n      const builderGroup = new CanvasBuilderGroup(\n        0,\n        sharedExtent,\n        resolution,\n        pixelRatio,\n      );\n      const squaredTolerance = getSquaredRenderTolerance(\n        resolution,\n        pixelRatio,\n      );\n\n      /**\n       * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n       * @param {number} [index] Render order index.\n       * @this {CanvasVectorTileLayerRenderer}\n       */\n      const render = function (feature, index) {\n        let styles;\n        const styleFunction =\n          feature.getStyleFunction() || layer.getStyleFunction();\n        if (styleFunction) {\n          styles = styleFunction(feature, resolution);\n        }\n        if (styles) {\n          const dirty = this.renderFeature(\n            feature,\n            squaredTolerance,\n            styles,\n            builderGroup,\n            declutter,\n            index,\n          );\n          builderState.dirty = builderState.dirty || dirty;\n        }\n      };\n\n      const features = sourceTile.getFeatures();\n      if (renderOrder && renderOrder !== builderState.renderedRenderOrder) {\n        features.sort(renderOrder);\n      }\n      for (let i = 0, ii = features.length; i < ii; ++i) {\n        const feature = features[i];\n        if (\n          !bufferedExtent ||\n          intersects(bufferedExtent, feature.getGeometry().getExtent())\n        ) {\n          render.call(this, feature, i);\n        }\n      }\n      const executorGroupInstructions = builderGroup.finish();\n      // no need to clip when the render tile is covered by a single source tile\n      const replayExtent =\n        layer.getRenderMode() !== 'vector' &&\n        declutter &&\n        sourceTiles.length === 1\n          ? null\n          : sharedExtent;\n      const renderingReplayGroup = new CanvasExecutorGroup(\n        replayExtent,\n        resolution,\n        pixelRatio,\n        source.getOverlaps(),\n        executorGroupInstructions,\n        layer.getRenderBuffer(),\n        true,\n      );\n      tile.executorGroups[layerUid].push(renderingReplayGroup);\n    }\n    builderState.renderedRevision = revision;\n    builderState.renderedRenderOrder = renderOrder;\n    builderState.renderedResolution = resolution;\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"../vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"../Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches,\n  ) {\n    const resolution = frameState.viewState.resolution;\n    const rotation = frameState.viewState.rotation;\n    hitTolerance = hitTolerance == undefined ? 0 : hitTolerance;\n    const layer = this.getLayer();\n    const source = layer.getSource();\n    const tileGrid = source.getTileGridForProjection(\n      frameState.viewState.projection,\n    );\n\n    const hitExtent = boundingExtent([coordinate]);\n    buffer(hitExtent, resolution * hitTolerance, hitExtent);\n\n    /** @type {!Object<string, import(\"../Map.js\").HitMatch<T>|true>} */\n    const features = {};\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @param {number} distanceSq The squared distance to the click position.\n     * @return {T|undefined} Callback result.\n     */\n    const featureCallback = function (feature, geometry, distanceSq) {\n      let key = feature.getId();\n      if (key === undefined) {\n        key = getUid(feature);\n      }\n      const match = features[key];\n      if (!match) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          return callback(feature, layer, geometry);\n        }\n        matches.push(\n          (features[key] = {\n            feature: feature,\n            layer: layer,\n            geometry: geometry,\n            distanceSq: distanceSq,\n            callback: callback,\n          }),\n        );\n      } else if (match !== true && distanceSq < match.distanceSq) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          matches.splice(matches.lastIndexOf(match), 1);\n          return callback(feature, layer, geometry);\n        }\n        match.geometry = geometry;\n        match.distanceSq = distanceSq;\n      }\n      return undefined;\n    };\n\n    const renderedTiles =\n      /** @type {Array<import(\"../../VectorRenderTile.js\").default>} */ (\n        this.renderedTiles\n      );\n\n    let found;\n    for (let i = 0, ii = renderedTiles.length; !found && i < ii; ++i) {\n      const tile = renderedTiles[i];\n      const tileExtent = tileGrid.getTileCoordExtent(tile.wrappedTileCoord);\n      if (!intersects(tileExtent, hitExtent)) {\n        continue;\n      }\n\n      const layerUid = getUid(layer);\n      const executorGroups = [tile.executorGroups[layerUid]];\n      const declutter = layer.getDeclutter();\n      executorGroups.some((executorGroups) => {\n        const declutteredFeatures = declutter\n          ? frameState.declutter[declutter].all().map((item) => item.value)\n          : null;\n        for (let t = 0, tt = executorGroups.length; t < tt; ++t) {\n          const executorGroup = executorGroups[t];\n          found = executorGroup.forEachFeatureAtCoordinate(\n            coordinate,\n            resolution,\n            rotation,\n            hitTolerance,\n            featureCallback,\n            declutteredFeatures,\n          );\n          if (found) {\n            return true;\n          }\n        }\n      });\n    }\n    return found;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../../Feature.js\").FeatureLike>>} Promise that resolves with an array of features.\n   */\n  getFeatures(pixel) {\n    return new Promise((resolve, reject) => {\n      const layer = this.getLayer();\n      const layerUid = getUid(layer);\n      const source = layer.getSource();\n      const projection = this.renderedProjection;\n      const projectionExtent = projection.getExtent();\n      const resolution = this.renderedResolution;\n      const tileGrid = source.getTileGridForProjection(projection);\n      const coordinate = applyTransform(\n        this.renderedPixelToCoordinateTransform_,\n        pixel.slice(),\n      );\n      const tileCoord = tileGrid.getTileCoordForCoordAndResolution(\n        coordinate,\n        resolution,\n      );\n      /** @type {import(\"../../VectorRenderTile.js\").default|undefined} */\n      let tile;\n      for (let i = 0, ii = this.renderedTiles.length; i < ii; ++i) {\n        if (\n          tileCoord.toString() === this.renderedTiles[i].tileCoord.toString()\n        ) {\n          tile = /** @type {import(\"../../VectorRenderTile.js\").default} */ (\n            this.renderedTiles[i]\n          );\n          if (tile.getState() === TileState.LOADED) {\n            const extent = tileGrid.getTileCoordExtent(tile.tileCoord);\n            if (\n              source.getWrapX() &&\n              projection.canWrapX() &&\n              !containsExtent(projectionExtent, extent)\n            ) {\n              wrapX(coordinate, projection);\n            }\n            break;\n          }\n          tile = undefined;\n        }\n      }\n      if (!tile || tile.loadingSourceTiles > 0) {\n        resolve([]);\n        return;\n      }\n      const extent = tileGrid.getTileCoordExtent(tile.wrappedTileCoord);\n      const corner = getTopLeft(extent);\n      const tilePixel = [\n        (coordinate[0] - corner[0]) / resolution,\n        (corner[1] - coordinate[1]) / resolution,\n      ];\n      /** @type {Array<import(\"../../Feature.js\").FeatureLike>} */\n      const features = tile.getSourceTiles().reduce(function (\n        accumulator,\n        sourceTile,\n      ) {\n        return accumulator.concat(sourceTile.getFeatures());\n      }, []);\n      /** @type {ImageData|undefined} */\n      let hitDetectionImageData = tile.hitDetectionImageData[layerUid];\n      if (!hitDetectionImageData) {\n        const tileSize = toSize(\n          tileGrid.getTileSize(\n            tileGrid.getZForResolution(resolution, source.zDirection),\n          ),\n        );\n        const rotation = this.renderedRotation_;\n        const transforms = [\n          this.getRenderTransform(\n            tileGrid.getTileCoordCenter(tile.wrappedTileCoord),\n            resolution,\n            0,\n            HIT_DETECT_RESOLUTION,\n            tileSize[0] * HIT_DETECT_RESOLUTION,\n            tileSize[1] * HIT_DETECT_RESOLUTION,\n            0,\n          ),\n        ];\n        hitDetectionImageData = createHitDetectionImageData(\n          tileSize,\n          transforms,\n          features,\n          layer.getStyleFunction(),\n          tileGrid.getTileCoordExtent(tile.wrappedTileCoord),\n          tile.getReplayState(layer).renderedResolution,\n          rotation,\n        );\n        tile.hitDetectionImageData[layerUid] = hitDetectionImageData;\n      }\n      resolve(hitDetect(tilePixel, features, hitDetectionImageData));\n    });\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   */\n  handleFontsChanged() {\n    const layer = this.getLayer();\n    if (layer.getVisible() && this.renderedLayerRevision_ !== undefined) {\n      layer.changed();\n    }\n  }\n\n  /**\n   * Handle changes in image style state.\n   * @param {import(\"../../events/Event.js\").default} event Image style change event.\n   * @private\n   */\n  handleStyleImageChange_(event) {\n    this.renderIfReadyAndVisible();\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../layer/Layer.js\").State} layerState Layer state.\n   */\n  renderDeclutter(frameState, layerState) {\n    const context = this.context;\n    const alpha = context.globalAlpha;\n    context.globalAlpha = layerState.opacity;\n    const viewHints = frameState.viewHints;\n    const hifi = !(\n      viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]\n    );\n    const tiles =\n      /** @type {Array<import(\"../../VectorRenderTile.js\").default>} */ (\n        this.renderedTiles\n      );\n    for (let i = 0, ii = tiles.length; i < ii; ++i) {\n      const tile = tiles[i];\n      const executorGroups = tile.executorGroups[getUid(this.getLayer())];\n      const declutter = this.getLayer().getDeclutter();\n      if (executorGroups) {\n        for (let j = executorGroups.length - 1; j >= 0; --j) {\n          executorGroups[j].execute(\n            this.context,\n            [this.context.canvas.width, this.context.canvas.height],\n            this.getTileRenderTransform(tile, frameState),\n            frameState.viewState.rotation,\n            hifi,\n            DECLUTTER,\n            declutter ? frameState.declutter[declutter] : undefined,\n          );\n        }\n      }\n    }\n    context.globalAlpha = alpha;\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   */\n  renderDeferredInternal(frameState) {\n    const tiles =\n      /** @type {Array<import(\"../../VectorRenderTile.js\").default>} */ (\n        this.renderedTiles\n      );\n    const executorGroups = tiles.reduce((acc, tile, index) => {\n      tile.executorGroups[getUid(this.getLayer())].forEach((executorGroup) =>\n        acc.push({\n          executorGroup,\n          index,\n        }),\n      );\n      return acc;\n    }, []);\n\n    const executorGroupZIndexContexts = executorGroups.map(({executorGroup}) =>\n      executorGroup.getDeferredZIndexContexts(),\n    );\n    const usedZIndices = {};\n    for (let i = 0, ii = executorGroups.length; i < ii; ++i) {\n      const executorGroupZindexContext =\n        executorGroups[i].executorGroup.getDeferredZIndexContexts();\n      for (const key in executorGroupZindexContext) {\n        usedZIndices[key] = true;\n      }\n    }\n    const zIndexKeys = Object.keys(usedZIndices).sort(ascending);\n    zIndexKeys.map(Number).forEach((zIndex) => {\n      executorGroupZIndexContexts.forEach((zIndexContexts, i) => {\n        if (!zIndexContexts[zIndex]) {\n          return;\n        }\n        zIndexContexts[zIndex].forEach((zIndexContext) => {\n          const {executorGroup, index} = executorGroups[i];\n          const context = executorGroup.getRenderedContext();\n          const alpha = context.globalAlpha;\n          context.globalAlpha = this.renderedOpacity_;\n          const tileClipContext = this.tileClipContexts_[index];\n          if (tileClipContext) {\n            tileClipContext.draw(context);\n          }\n          zIndexContext.draw(context);\n          if (tileClipContext) {\n            context.restore();\n          }\n          context.globalAlpha = alpha;\n          zIndexContext.clear();\n        });\n        zIndexContexts[zIndex].length = 0;\n      });\n    });\n  }\n\n  getTileRenderTransform(tile, frameState) {\n    const pixelRatio = frameState.pixelRatio;\n    const viewState = frameState.viewState;\n    const center = viewState.center;\n    const resolution = viewState.resolution;\n    const rotation = viewState.rotation;\n    const size = frameState.size;\n    const width = Math.round(size[0] * pixelRatio);\n    const height = Math.round(size[1] * pixelRatio);\n\n    const source = this.getLayer().getSource();\n    const tileGrid = source.getTileGridForProjection(\n      frameState.viewState.projection,\n    );\n    const tileCoord = tile.tileCoord;\n    const tileExtent = tileGrid.getTileCoordExtent(tile.wrappedTileCoord);\n    const worldOffset =\n      tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent)[0] - tileExtent[0];\n    const transform = multiply(\n      scale(this.inversePixelTransform.slice(), 1 / pixelRatio, 1 / pixelRatio),\n      this.getRenderTransform(\n        center,\n        resolution,\n        rotation,\n        pixelRatio,\n        width,\n        height,\n        worldOffset,\n      ),\n    );\n    return transform;\n  }\n\n  /**\n   * Render the vectors for this layer.\n   * @param {CanvasRenderingContext2D} context Target context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   */\n  postRender(context, frameState) {\n    const viewHints = frameState.viewHints;\n    const hifi = !(\n      viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]\n    );\n\n    this.renderedPixelToCoordinateTransform_ =\n      frameState.pixelToCoordinateTransform.slice();\n    this.renderedRotation_ = frameState.viewState.rotation;\n    this.renderedOpacity_ =\n      frameState.layerStatesArray[frameState.layerIndex].opacity;\n\n    const layer = /** @type {import(\"../../layer/VectorTile.js\").default} */ (\n      this.getLayer()\n    );\n    const renderMode = layer.getRenderMode();\n    const alpha = context.globalAlpha;\n    context.globalAlpha = this.renderedOpacity_;\n    const declutter = layer.getDeclutter();\n    const replayTypes = declutter\n      ? VECTOR_REPLAYS[renderMode].filter((type) => !DECLUTTER.includes(type))\n      : VECTOR_REPLAYS[renderMode];\n    const viewState = frameState.viewState;\n    const rotation = viewState.rotation;\n    const tileSource = layer.getSource();\n    const tileGrid = tileSource.getTileGridForProjection(viewState.projection);\n    const z = tileGrid.getZForResolution(\n      viewState.resolution,\n      tileSource.zDirection,\n    );\n\n    const tiles = this.renderedTiles;\n    const clips = [];\n    const clipZs = [];\n    const tileClipContexts = [];\n    let ready = true;\n    for (let i = tiles.length - 1; i >= 0; --i) {\n      const tile = /** @type {import(\"../../VectorRenderTile.js\").default} */ (\n        tiles[i]\n      );\n      ready = ready && !tile.getReplayState(layer).dirty;\n      const executorGroups = tile.executorGroups[getUid(layer)].filter(\n        (group) => group.hasExecutors(replayTypes),\n      );\n      if (executorGroups.length === 0) {\n        continue;\n      }\n      const transform = this.getTileRenderTransform(tile, frameState);\n      const currentZ = tile.tileCoord[0];\n      let contextSaved = false;\n      // Clip mask for regions in this tile that already filled by a higher z tile\n      const currentClip = executorGroups[0].getClipCoords(transform);\n      let clipContext = context;\n      let tileClipContext;\n      if (currentClip) {\n        tileClipContext = new ZIndexContext();\n        clipContext = tileClipContext.getContext();\n        for (let j = 0, jj = clips.length; j < jj; ++j) {\n          if (z !== currentZ && currentZ < clipZs[j]) {\n            const clip = clips[j];\n            if (\n              intersects(\n                [\n                  currentClip[0],\n                  currentClip[3],\n                  currentClip[4],\n                  currentClip[7],\n                ],\n                [clip[0], clip[3], clip[4], clip[7]],\n              )\n            ) {\n              if (!contextSaved) {\n                clipContext.save();\n                contextSaved = true;\n              }\n              clipContext.beginPath();\n              // counter-clockwise (outer ring) for current tile\n              clipContext.moveTo(currentClip[0], currentClip[1]);\n              clipContext.lineTo(currentClip[2], currentClip[3]);\n              clipContext.lineTo(currentClip[4], currentClip[5]);\n              clipContext.lineTo(currentClip[6], currentClip[7]);\n              // clockwise (inner ring) for higher z tile\n              clipContext.moveTo(clip[6], clip[7]);\n              clipContext.lineTo(clip[4], clip[5]);\n              clipContext.lineTo(clip[2], clip[3]);\n              clipContext.lineTo(clip[0], clip[1]);\n              clipContext.clip();\n            }\n          }\n        }\n        clips.push(currentClip);\n        clipZs.push(currentZ);\n      }\n      for (let t = 0, tt = executorGroups.length; t < tt; ++t) {\n        const executorGroup = executorGroups[t];\n        executorGroup.execute(\n          context,\n          [context.canvas.width, context.canvas.height],\n          transform,\n          rotation,\n          hifi,\n          replayTypes,\n          frameState.declutter?.[declutter],\n        );\n      }\n      if (contextSaved) {\n        if (clipContext === context) {\n          clipContext.restore();\n        } else {\n          tileClipContexts[i] = tileClipContext;\n        }\n      }\n    }\n    context.globalAlpha = alpha;\n    this.ready = ready;\n    this.tileClipContexts_ = tileClipContexts;\n    if (!frameState.declutter) {\n      this.renderDeferredInternal(frameState);\n    }\n\n    super.postRender(context, frameState);\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../../style/Style.js\").default|Array<import(\"../../style/Style.js\").default>} styles The style or array of styles.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n   * @param {boolean} [declutter] Enable decluttering.\n   * @param {number} [index] Render order index.\n   * @return {boolean} `true` if an image is loading.\n   */\n  renderFeature(\n    feature,\n    squaredTolerance,\n    styles,\n    builderGroup,\n    declutter,\n    index,\n  ) {\n    if (!styles) {\n      return false;\n    }\n    let loading = false;\n    if (Array.isArray(styles)) {\n      for (let i = 0, ii = styles.length; i < ii; ++i) {\n        loading =\n          renderFeature(\n            builderGroup,\n            feature,\n            styles[i],\n            squaredTolerance,\n            this.boundHandleStyleImageChange_,\n            undefined,\n            declutter,\n            index,\n          ) || loading;\n      }\n    } else {\n      loading = renderFeature(\n        builderGroup,\n        feature,\n        styles,\n        squaredTolerance,\n        this.boundHandleStyleImageChange_,\n        undefined,\n        declutter,\n        index,\n      );\n    }\n    return loading;\n  }\n\n  /**\n   * @param {import(\"../../VectorRenderTile.js\").default} tile Tile.\n   * @return {boolean} A new tile image was rendered.\n   * @private\n   */\n  tileImageNeedsRender_(tile) {\n    const layer = /** @type {import(\"../../layer/VectorTile.js\").default} */ (\n      this.getLayer()\n    );\n    if (layer.getRenderMode() === 'vector') {\n      return false;\n    }\n    const replayState = tile.getReplayState(layer);\n    const revision = layer.getRevision();\n    const resolution = tile.wantedResolution;\n    return (\n      replayState.renderedTileResolution !== resolution ||\n      replayState.renderedTileRevision !== revision\n    );\n  }\n\n  /**\n   * @param {import(\"../../VectorRenderTile.js\").default} tile Tile.\n   * @param {import(\"../../Map\").FrameState} frameState Frame state.\n   * @private\n   */\n  renderTileImage_(tile, frameState) {\n    const layer = /** @type {import(\"../../layer/VectorTile.js\").default} */ (\n      this.getLayer()\n    );\n    const replayState = tile.getReplayState(layer);\n    const revision = layer.getRevision();\n    const executorGroups = tile.executorGroups[getUid(layer)];\n    replayState.renderedTileRevision = revision;\n\n    const tileCoord = tile.wrappedTileCoord;\n    const z = tileCoord[0];\n    const source = layer.getSource();\n    let pixelRatio = frameState.pixelRatio;\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const tileGrid = source.getTileGridForProjection(projection);\n    const tileResolution = tileGrid.getResolution(tile.tileCoord[0]);\n    const renderPixelRatio =\n      (frameState.pixelRatio / tile.wantedResolution) * tileResolution;\n    const resolution = tileGrid.getResolution(z);\n    const context = tile.getContext(layer);\n\n    // Increase tile size when overzooming for low pixel ratio, to avoid blurry tiles\n    pixelRatio = Math.round(\n      Math.max(pixelRatio, renderPixelRatio / pixelRatio),\n    );\n    const size = source.getTilePixelSize(z, pixelRatio, projection);\n    context.canvas.width = size[0];\n    context.canvas.height = size[1];\n    const renderScale = pixelRatio / renderPixelRatio;\n    if (renderScale !== 1) {\n      const canvasTransform = resetTransform(this.tmpTransform_);\n      scaleTransform(canvasTransform, renderScale, renderScale);\n      context.setTransform.apply(context, canvasTransform);\n    }\n    const tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent);\n    const pixelScale = renderPixelRatio / resolution;\n    const transform = resetTransform(this.tmpTransform_);\n    scaleTransform(transform, pixelScale, -pixelScale);\n    translateTransform(transform, -tileExtent[0], -tileExtent[3]);\n    for (let i = 0, ii = executorGroups.length; i < ii; ++i) {\n      const executorGroup = executorGroups[i];\n      executorGroup.execute(\n        context,\n        [\n          context.canvas.width * renderScale,\n          context.canvas.height * renderScale,\n        ],\n        transform,\n        0,\n        true,\n        IMAGE_REPLAYS[layer.getRenderMode()],\n        null,\n      );\n    }\n    replayState.renderedTileResolution = tile.wantedResolution;\n  }\n}\n\nexport default CanvasVectorTileLayerRenderer;\n","/**\n * @module ol/layer/VectorTile\n */\nimport BaseVectorLayer from './BaseVector.js';\nimport CanvasVectorTileLayerRenderer from '../renderer/canvas/VectorTileLayer.js';\nimport TileProperty from './TileProperty.js';\nimport {assert} from '../asserts.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     import(\"./Layer.js\").LayerEventType|'change:preload'|'change:useInterimTilesOnError', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|\n *     import(\"./Layer.js\").LayerEventType|'change:preload'|'change:useInterimTilesOnError'|import(\"../render/EventType\").LayerRenderEventTypes, Return>} VectorTileLayerOnSignature\n */\n\n/**\n * @typedef {'hybrid' | 'vector'} VectorTileRenderType\n */\n\n/**\n * @template {import('../Feature').FeatureLike} FeatureType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the tile extent used by the\n * renderer when getting features from the vector tile for the rendering or hit-detection.\n * Recommended value: Vector tiles are usually generated with a buffer, so this value should match\n * the largest possible buffer of the used tiles. It should be at least the size of the largest\n * point symbol or line width.\n * @property {VectorTileRenderType} [renderMode='hybrid'] Render mode for vector tiles:\n *  * `'hybrid'`: Polygon and line elements are rendered as images, so pixels are scaled during zoom\n *    animations. Point symbols and texts are accurately rendered as vectors and can stay upright on\n *    rotated views, but get lifted above all polygon and line elements.\n *  * `'vector'`: Everything is rendered as vectors and the original render order is maintained. Use\n *    this mode for improved performance and visual epxerience on vector tile layers with not too many\n *    rendered features (e.g. for highlighting a subset of features of another layer with the same\n *    source).\n * @property {import(\"../source/VectorTile.js\").default<FeatureType>} [source] Source.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * @property {boolean|string|number} [declutter=false] Declutter images and text. Any truthy value will enable\n * decluttering. Within a layer, a feature rendered before another has higher priority. All layers with the\n * same `declutter` value will be decluttered together. The priority is determined by the drawing order of the\n * layers with the same `declutter` value. Higher in the layer stack means higher priority. To declutter distinct\n * layers or groups of layers separately, use different truthy values for `declutter`.\n * @property {import(\"../style/Style.js\").StyleLike|null} [style] Layer style. When set to `null`, only\n * features that have their own style will be rendered. See {@link module:ol/style/Style~Style} for the default style\n * which will be used if this is not set.\n * @property {import(\"./Base.js\").BackgroundColor} [background] Background color for the layer. If not specified, no\n * background will be rendered.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will be\n * recreated during animations. This means that no vectors will be shown clipped, but the setting\n * will have a performance impact for large amounts of vector data. When set to `false`, batches\n * will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will be\n * recreated during interactions. See also `updateWhileAnimating`.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Layer for vector tile data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import('../Feature').FeatureLike} FeatureType\n * @extends {BaseVectorLayer<import(\"../source/VectorTile.js\").default<FeatureType>, CanvasVectorTileLayerRenderer>}\n * @api\n */\nclass VectorTileLayer extends BaseVectorLayer {\n  /**\n   * @param {Options<FeatureType>} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = /** @type {Options<FeatureType>} */ (\n      Object.assign({}, options)\n    );\n    delete baseOptions.preload;\n    delete baseOptions.useInterimTilesOnError;\n\n    super(baseOptions);\n\n    /***\n     * @type {VectorTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {VectorTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {VectorTileLayerOnSignature<void>}\n     */\n    this.un;\n\n    const renderMode = options.renderMode || 'hybrid';\n    assert(\n      renderMode == 'hybrid' || renderMode == 'vector',\n      \"`renderMode` must be `'hybrid'` or `'vector'`\",\n    );\n\n    /**\n     * @private\n     * @type {VectorTileRenderType}\n     */\n    this.renderMode_ = renderMode;\n\n    this.setPreload(options.preload ? options.preload : 0);\n    this.setUseInterimTilesOnError(\n      options.useInterimTilesOnError !== undefined\n        ? options.useInterimTilesOnError\n        : true,\n    );\n\n    /**\n     * @return {import(\"./Base.js\").BackgroundColor} Background color.\n     * @function\n     * @api\n     */\n    this.getBackground;\n\n    /**\n     * @param {import(\"./Base.js\").BackgroundColor} background Background color.\n     * @function\n     * @api\n     */\n    this.setBackground;\n  }\n\n  createRenderer() {\n    return new CanvasVectorTileLayerRenderer(this);\n  }\n\n  /**\n   * Get the topmost feature that intersects the given pixel on the viewport. Returns a promise\n   * that resolves with an array of features. The array will either contain the topmost feature\n   * when a hit was detected, or it will be empty.\n   *\n   * The hit detection algorithm used for this method is optimized for performance, but is less\n   * accurate than the one used in [map.getFeaturesAtPixel()]{@link import(\"../Map.js\").default#getFeaturesAtPixel}.\n   * Text is not considered, and icons are only represented by their bounding box instead of the exact\n   * image.\n   *\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with an array of features.\n   * @api\n   */\n  getFeatures(pixel) {\n    return super.getFeatures(pixel);\n  }\n\n  /**\n   * @return {VectorTileRenderType} The render mode.\n   */\n  getRenderMode() {\n    return this.renderMode_;\n  }\n\n  /**\n   * Return the level as number to which we will preload tiles up to.\n   * @return {number} The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  getPreload() {\n    return /** @type {number} */ (this.get(TileProperty.PRELOAD));\n  }\n\n  /**\n   * Whether we use interim tiles on error.\n   * @return {boolean} Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  getUseInterimTilesOnError() {\n    return /** @type {boolean} */ (\n      this.get(TileProperty.USE_INTERIM_TILES_ON_ERROR)\n    );\n  }\n\n  /**\n   * Set the level as number to which we will preload tiles up to.\n   * @param {number} preload The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  setPreload(preload) {\n    this.set(TileProperty.PRELOAD, preload);\n  }\n\n  /**\n   * Set whether we use interim tiles on error.\n   * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  setUseInterimTilesOnError(useInterimTilesOnError) {\n    this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n  }\n}\n\nexport default VectorTileLayer;\n","/**\n * Utilities for parsing literal style objects\n * @module ol/webgl/styleparser\n */\nimport {\n  BooleanType,\n  ColorType,\n  NumberArrayType,\n  NumberType,\n  SizeType,\n  StringType,\n  newParsingContext,\n} from '../expr/expression.js';\nimport {ShaderBuilder} from './ShaderBuilder.js';\nimport {\n  arrayToGlsl,\n  buildExpression,\n  getStringNumberEquivalent,\n  stringToGlsl,\n  uniformNameForVariable,\n} from '../expr/gpu.js';\nimport {asArray} from '../color.js';\n\n/**\n * Recursively parses a style expression and outputs a GLSL-compatible string. Takes in a compilation context that\n * will be read and modified during the parsing operation.\n * @param {import(\"../expr/gpu.js\").CompilationContext} compilationContext Compilation context\n * @param {import(\"../expr/expression.js\").EncodedExpression} value Value\n * @param {number} [expectedType] Expected final type (can be several types combined)\n * @return {string} GLSL-compatible output\n */\nexport function expressionToGlsl(compilationContext, value, expectedType) {\n  const parsingContext = newParsingContext();\n  parsingContext.style = compilationContext.style;\n  return buildExpression(\n    value,\n    expectedType,\n    parsingContext,\n    compilationContext,\n  );\n}\n\n/**\n * Packs all components of a color into a two-floats array\n * @param {import(\"../color.js\").Color|string} color Color as array of numbers or string\n * @return {Array<number>} Vec2 array containing the color in compressed form\n */\nexport function packColor(color) {\n  const array = asArray(color);\n  const r = array[0] * 256;\n  const g = array[1];\n  const b = array[2] * 256;\n  const a = Math.round(array[3] * 255);\n  return [r + g, b + a];\n}\n\nconst UNPACK_COLOR_FN = `vec4 unpackColor(vec2 packedColor) {\n  return fract(packedColor[1] / 256.0) * vec4(\n    fract(floor(packedColor[0] / 256.0) / 256.0),\n    fract(packedColor[0] / 256.0),\n    fract(floor(packedColor[1] / 256.0) / 256.0),\n    1.0\n  );\n}`;\n\n/**\n * @param {number} type Value type\n * @return {1|2|3|4} The amount of components for this value\n */\nfunction getGlslSizeFromType(type) {\n  if (type === ColorType || type === SizeType) {\n    return 2;\n  }\n  if (type === NumberArrayType) {\n    return 4;\n  }\n  return 1;\n}\n\n/**\n * @param {number} type Value type\n * @return {'float'|'vec2'|'vec3'|'vec4'} The corresponding GLSL type for this value\n */\nfunction getGlslTypeFromType(type) {\n  const size = getGlslSizeFromType(type);\n  if (size > 1) {\n    return /** @type {'vec2'|'vec3'|'vec4'} */ (`vec${size}`);\n  }\n  return 'float';\n}\n\n/**\n * see https://stackoverflow.com/questions/7616461/generate-a-hash-from-string-in-javascript\n * @param {Object|string} input The hash input, either an object or string\n * @return {string} Hash (if the object cannot be serialized, it is based on `getUid`)\n */\nexport function computeHash(input) {\n  const hash = JSON.stringify(input)\n    .split('')\n    .reduce((prev, curr) => (prev << 5) - prev + curr.charCodeAt(0), 0);\n  return (hash >>> 0).toString();\n}\n\n/**\n * @param {import(\"../style/webgl.js\").WebGLStyle} style Style\n * @param {ShaderBuilder} builder Shader builder\n * @param {import(\"../expr/gpu.js\").CompilationContext} vertContext Vertex shader compilation context\n * @param {'shape-'|'circle-'|'icon-'} prefix Properties prefix\n */\nfunction parseCommonSymbolProperties(style, builder, vertContext, prefix) {\n  if (`${prefix}radius` in style && prefix !== 'icon-') {\n    let radius = expressionToGlsl(\n      vertContext,\n      style[`${prefix}radius`],\n      NumberType,\n    );\n    if (`${prefix}radius2` in style) {\n      const radius2 = expressionToGlsl(\n        vertContext,\n        style[`${prefix}radius2`],\n        NumberType,\n      );\n      radius = `max(${radius}, ${radius2})`;\n    }\n    if (`${prefix}stroke-width` in style) {\n      radius = `(${radius} + ${expressionToGlsl(\n        vertContext,\n        style[`${prefix}stroke-width`],\n        NumberType,\n      )} * 0.5)`;\n    }\n    builder.setSymbolSizeExpression(`vec2(${radius} * 2. + 0.5)`); // adding some padding for antialiasing\n  }\n  if (`${prefix}scale` in style) {\n    const scale = expressionToGlsl(\n      vertContext,\n      style[`${prefix}scale`],\n      SizeType,\n    );\n    builder.setSymbolSizeExpression(\n      `${builder.getSymbolSizeExpression()} * ${scale}`,\n    );\n  }\n  if (`${prefix}displacement` in style) {\n    builder.setSymbolOffsetExpression(\n      expressionToGlsl(\n        vertContext,\n        style[`${prefix}displacement`],\n        NumberArrayType,\n      ),\n    );\n  }\n  if (`${prefix}rotation` in style) {\n    builder.setSymbolRotationExpression(\n      expressionToGlsl(vertContext, style[`${prefix}rotation`], NumberType),\n    );\n  }\n  if (`${prefix}rotate-with-view` in style) {\n    builder.setSymbolRotateWithView(!!style[`${prefix}rotate-with-view`]);\n  }\n}\n\n/**\n * @param {string} distanceField The distance field expression\n * @param {string|null} fillColor The fill color expression; null if no fill\n * @param {string|null} strokeColor The stroke color expression; null if no stroke\n * @param {string|null} strokeWidth The stroke width expression; null if no stroke\n * @param {string|null} opacity The opacity expression; null if no stroke\n * @return {string} The final color expression, based on the distance field and given params\n */\nfunction getColorFromDistanceField(\n  distanceField,\n  fillColor,\n  strokeColor,\n  strokeWidth,\n  opacity,\n) {\n  let color = 'vec4(0.)';\n  if (fillColor !== null) {\n    color = fillColor;\n  }\n  if (strokeColor !== null && strokeWidth !== null) {\n    const strokeFillRatio = `smoothstep(-${strokeWidth} + 0.63, -${strokeWidth} - 0.58, ${distanceField})`;\n    color = `mix(${strokeColor}, ${color}, ${strokeFillRatio})`;\n  }\n  const shapeOpacity = `(1.0 - smoothstep(-0.63, 0.58, ${distanceField}))`;\n  let result = `${color} * ${shapeOpacity}`;\n  if (opacity !== null) {\n    result = `${result} * ${opacity}`;\n  }\n  return result;\n}\n\n/**\n * This will parse an image property provided by `<prefix>-src`\n * The image size expression in GLSL will be returned\n * @param {import(\"../style/webgl.js\").WebGLStyle} style Style\n * @param {ShaderBuilder} builder Shader builder\n * @param {Object<string,import(\"../webgl/Helper\").UniformValue>} uniforms Uniforms\n * @param {'icon-'|'fill-pattern-'|'stroke-pattern-'} prefix Property prefix\n * @param {string} textureId A identifier that will be used in the generated uniforms: `sample2d u_texture<id>` and `vec2 u_texture<id>_size`\n * @return {string} The image size expression\n */\nfunction parseImageProperties(style, builder, uniforms, prefix, textureId) {\n  const image = new Image();\n  let size;\n  image.crossOrigin =\n    style[`${prefix}cross-origin`] === undefined\n      ? 'anonymous'\n      : style[`${prefix}cross-origin`];\n  image.src = style[`${prefix}src`];\n\n  if (image.complete && image.width && image.height) {\n    size = arrayToGlsl([image.width, image.height]);\n  } else {\n    // the size is provided asynchronously using a uniform\n    uniforms[`u_texture${textureId}_size`] = () => {\n      return image.complete ? [image.width, image.height] : [0, 0];\n    };\n    builder.addUniform(`vec2 u_texture${textureId}_size`);\n    size = `u_texture${textureId}_size`;\n  }\n  uniforms[`u_texture${textureId}`] = image;\n  builder.addUniform(`sampler2D u_texture${textureId}`);\n  return size;\n}\n\n/**\n * This will parse an image's offset properties provided by `<prefix>-offset`, `<prefix>-offset-origin` and `<prefix>-size`\n * @param {import(\"../style/webgl.js\").WebGLStyle} style Style\n * @param {'icon-'|'fill-pattern-'|'stroke-pattern-'} prefix Property prefix\n * @param {import(\"../expr/gpu.js\").CompilationContext} context Shader compilation context (vertex or fragment)\n * @param {string} imageSize Pixel size of the full image as a GLSL expression\n * @param {string} sampleSize Pixel size of the sample in the image as a GLSL expression\n * @return {string} The offset expression\n */\nfunction parseImageOffsetProperties(\n  style,\n  prefix,\n  context,\n  imageSize,\n  sampleSize,\n) {\n  let offsetExpression = expressionToGlsl(\n    context,\n    style[`${prefix}offset`],\n    NumberArrayType,\n  );\n  if (`${prefix}offset-origin` in style) {\n    switch (style[`${prefix}offset-origin`]) {\n      case 'top-right':\n        offsetExpression = `vec2(${imageSize}.x, 0.) + ${sampleSize} * vec2(-1., 0.) + ${offsetExpression} * vec2(-1., 1.)`;\n        break;\n      case 'bottom-left':\n        offsetExpression = `vec2(0., ${imageSize}.y) + ${sampleSize} * vec2(0., -1.) + ${offsetExpression} * vec2(1., -1.)`;\n        break;\n      case 'bottom-right':\n        offsetExpression = `${imageSize} - ${sampleSize} - ${offsetExpression}`;\n        break;\n      default: // pass\n    }\n  }\n  return offsetExpression;\n}\n\n/**\n * @param {import(\"../style/webgl.js\").WebGLStyle} style Style\n * @param {ShaderBuilder} builder Shader builder\n * @param {Object<string,import(\"../webgl/Helper\").UniformValue>} uniforms Uniforms\n * @param {import(\"../expr/gpu.js\").CompilationContext} vertContext Vertex shader compilation context\n * @param {import(\"../expr/gpu.js\").CompilationContext} fragContext Fragment shader compilation context\n */\nfunction parseCircleProperties(\n  style,\n  builder,\n  uniforms,\n  vertContext,\n  fragContext,\n) {\n  // this function takes in screen coordinates in pixels and returns the signed distance field\n  // (0 on the boundary, negative inside the circle, positive outside, values in pixels)\n  fragContext.functions['circleDistanceField'] =\n    `float circleDistanceField(vec2 point, float radius) {\n  return length(point) - radius;\n}`;\n\n  parseCommonSymbolProperties(style, builder, vertContext, 'circle-');\n\n  // OPACITY\n  let opacity = null;\n  if ('circle-opacity' in style) {\n    opacity = expressionToGlsl(\n      fragContext,\n      style['circle-opacity'],\n      NumberType,\n    );\n  }\n\n  // SCALE\n  let currentPoint = 'coordsPx';\n  if ('circle-scale' in style) {\n    const scale = expressionToGlsl(\n      fragContext,\n      style['circle-scale'],\n      SizeType,\n    );\n    currentPoint = `coordsPx / ${scale}`;\n  }\n\n  // FILL COLOR\n  let fillColor = null;\n  if ('circle-fill-color' in style) {\n    fillColor = expressionToGlsl(\n      fragContext,\n      style['circle-fill-color'],\n      ColorType,\n    );\n  }\n\n  // STROKE COLOR\n  let strokeColor = null;\n  if ('circle-stroke-color' in style) {\n    strokeColor = expressionToGlsl(\n      fragContext,\n      style['circle-stroke-color'],\n      ColorType,\n    );\n  }\n\n  // RADIUS\n  let radius = expressionToGlsl(\n    fragContext,\n    style['circle-radius'],\n    NumberType,\n  );\n\n  // STROKE WIDTH\n  let strokeWidth = null;\n  if ('circle-stroke-width' in style) {\n    strokeWidth = expressionToGlsl(\n      fragContext,\n      style['circle-stroke-width'],\n      NumberType,\n    );\n    radius = `(${radius} + ${strokeWidth} * 0.5)`;\n  }\n\n  // FINAL COLOR\n  const distanceField = `circleDistanceField(${currentPoint}, ${radius})`;\n  const colorExpression = getColorFromDistanceField(\n    distanceField,\n    fillColor,\n    strokeColor,\n    strokeWidth,\n    opacity,\n  );\n  builder.setSymbolColorExpression(colorExpression);\n}\n\n/**\n * @param {import(\"../style/webgl.js\").WebGLStyle} style Style\n * @param {ShaderBuilder} builder Shader builder\n * @param {Object<string,import(\"../webgl/Helper\").UniformValue>} uniforms Uniforms\n * @param {import(\"../expr/gpu.js\").CompilationContext} vertContext Vertex shader compilation context\n * @param {import(\"../expr/gpu.js\").CompilationContext} fragContext Fragment shader compilation context\n */\nfunction parseShapeProperties(\n  style,\n  builder,\n  uniforms,\n  vertContext,\n  fragContext,\n) {\n  fragContext.functions['round'] = `float round(float v) {\n  return sign(v) * floor(abs(v) + 0.5);\n}`;\n\n  // these functions take in screen coordinates in pixels and returns the signed distance field\n  // (0 on the boundary, negative inside the polygon, positive outside, values in pixels)\n  // inspired by https://github.com/zranger1/PixelblazePatterns/blob/master/Toolkit/sdf2d.md#n-sided-regular-polygon\n  fragContext.functions['starDistanceField'] =\n    `float starDistanceField(vec2 point, float numPoints, float radius, float radius2, float angle) {\n  float startAngle = -PI * 0.5 + angle; // tip starts upwards and rotates clockwise with angle\n  float c = cos(startAngle);\n  float s = sin(startAngle);\n  vec2 pointRotated = vec2(c * point.x - s * point.y, s * point.x + c * point.y);\n  float alpha = TWO_PI / numPoints; // the angle of one sector\n  float beta = atan(pointRotated.y, pointRotated.x);\n  float gamma = round(beta / alpha) * alpha; // angle in sector\n  c = cos(-gamma);\n  s = sin(-gamma);\n  vec2 inSector = vec2(c * pointRotated.x - s * pointRotated.y, abs(s * pointRotated.x + c * pointRotated.y));\n  vec2 tipToPoint = inSector + vec2(-radius, 0.);\n  vec2 edgeNormal = vec2(radius2 * sin(alpha * 0.5), -radius2 * cos(alpha * 0.5) + radius);\n  return dot(normalize(edgeNormal), tipToPoint);\n}`;\n  fragContext.functions['regularDistanceField'] =\n    `float regularDistanceField(vec2 point, float numPoints, float radius, float angle) {\n  float startAngle = -PI * 0.5 + angle; // tip starts upwards and rotates clockwise with angle\n  float c = cos(startAngle);\n  float s = sin(startAngle);\n  vec2 pointRotated = vec2(c * point.x - s * point.y, s * point.x + c * point.y);\n  float alpha = TWO_PI / numPoints; // the angle of one sector\n  float radiusIn = radius * cos(PI / numPoints);\n  float beta = atan(pointRotated.y, pointRotated.x);\n  float gamma = round((beta - alpha * 0.5) / alpha) * alpha + alpha * 0.5; // angle in sector from mid\n  c = cos(-gamma);\n  s = sin(-gamma);\n  vec2 inSector = vec2(c * pointRotated.x - s * pointRotated.y, abs(s * pointRotated.x + c * pointRotated.y));\n  return inSector.x - radiusIn;\n}`;\n\n  parseCommonSymbolProperties(style, builder, vertContext, 'shape-');\n\n  // OPACITY\n  let opacity = null;\n  if ('shape-opacity' in style) {\n    opacity = expressionToGlsl(fragContext, style['shape-opacity'], NumberType);\n  }\n\n  // SCALE\n  let currentPoint = 'coordsPx';\n  if ('shape-scale' in style) {\n    const scale = expressionToGlsl(fragContext, style['shape-scale'], SizeType);\n    currentPoint = `coordsPx / ${scale}`;\n  }\n\n  // FILL COLOR\n  let fillColor = null;\n  if ('shape-fill-color' in style) {\n    fillColor = expressionToGlsl(\n      fragContext,\n      style['shape-fill-color'],\n      ColorType,\n    );\n  }\n\n  // STROKE COLOR\n  let strokeColor = null;\n  if ('shape-stroke-color' in style) {\n    strokeColor = expressionToGlsl(\n      fragContext,\n      style['shape-stroke-color'],\n      ColorType,\n    );\n  }\n\n  // STROKE WIDTH\n  let strokeWidth = null;\n  if ('shape-stroke-width' in style) {\n    strokeWidth = expressionToGlsl(\n      fragContext,\n      style['shape-stroke-width'],\n      NumberType,\n    );\n  }\n\n  // SHAPE TYPE\n  const numPoints = expressionToGlsl(\n    fragContext,\n    style['shape-points'],\n    NumberType,\n  );\n  let angle = '0.';\n  if ('shape-angle' in style) {\n    angle = expressionToGlsl(fragContext, style['shape-angle'], NumberType);\n  }\n  let shapeField;\n  let radius = expressionToGlsl(fragContext, style['shape-radius'], NumberType);\n  if (strokeWidth !== null) {\n    radius = `${radius} + ${strokeWidth} * 0.5`;\n  }\n  if ('shape-radius2' in style) {\n    let radius2 = expressionToGlsl(\n      fragContext,\n      style['shape-radius2'],\n      NumberType,\n    );\n    if (strokeWidth !== null) {\n      radius2 = `${radius2} + ${strokeWidth} * 0.5`;\n    }\n    shapeField = `starDistanceField(${currentPoint}, ${numPoints}, ${radius}, ${radius2}, ${angle})`;\n  } else {\n    shapeField = `regularDistanceField(${currentPoint}, ${numPoints}, ${radius}, ${angle})`;\n  }\n\n  // FINAL COLOR\n  const colorExpression = getColorFromDistanceField(\n    shapeField,\n    fillColor,\n    strokeColor,\n    strokeWidth,\n    opacity,\n  );\n  builder.setSymbolColorExpression(colorExpression);\n}\n\n/**\n * @param {import(\"../style/webgl.js\").WebGLStyle} style Style\n * @param {ShaderBuilder} builder Shader builder\n * @param {Object<string,import(\"../webgl/Helper\").UniformValue>} uniforms Uniforms\n * @param {import(\"../expr/gpu.js\").CompilationContext} vertContext Vertex shader compilation context\n * @param {import(\"../expr/gpu.js\").CompilationContext} fragContext Fragment shader compilation context\n */\nfunction parseIconProperties(\n  style,\n  builder,\n  uniforms,\n  vertContext,\n  fragContext,\n) {\n  // COLOR\n  let color = 'vec4(1.0)';\n  if ('icon-color' in style) {\n    color = expressionToGlsl(fragContext, style['icon-color'], ColorType);\n  }\n\n  // OPACITY\n  if ('icon-opacity' in style) {\n    color = `${color} * ${expressionToGlsl(\n      fragContext,\n      style['icon-opacity'],\n      NumberType,\n    )}`;\n  }\n\n  // IMAGE & SIZE\n  const textureId = computeHash(style['icon-src']);\n  const sizeExpression = parseImageProperties(\n    style,\n    builder,\n    uniforms,\n    'icon-',\n    textureId,\n  );\n  builder\n    .setSymbolColorExpression(\n      `${color} * samplePremultiplied(u_texture${textureId}, v_texCoord)`,\n    )\n    .setSymbolSizeExpression(sizeExpression);\n\n  // override size if width/height were specified\n  if ('icon-width' in style && 'icon-height' in style) {\n    builder.setSymbolSizeExpression(\n      `vec2(${expressionToGlsl(\n        vertContext,\n        style['icon-width'],\n        NumberType,\n      )}, ${expressionToGlsl(vertContext, style['icon-height'], NumberType)})`,\n    );\n  }\n\n  // tex coord\n  if ('icon-offset' in style && 'icon-size' in style) {\n    const sampleSize = expressionToGlsl(\n      vertContext,\n      style['icon-size'],\n      NumberArrayType,\n    );\n    const fullsize = builder.getSymbolSizeExpression();\n    builder.setSymbolSizeExpression(sampleSize);\n    const offset = parseImageOffsetProperties(\n      style,\n      'icon-',\n      vertContext,\n      'v_quadSizePx',\n      sampleSize,\n    );\n    builder.setTextureCoordinateExpression(\n      `(vec4((${offset}).xyxy) + vec4(0., 0., ${sampleSize})) / (${fullsize}).xyxy`,\n    );\n  }\n\n  parseCommonSymbolProperties(style, builder, vertContext, 'icon-');\n\n  if ('icon-anchor' in style) {\n    const anchor = expressionToGlsl(\n      vertContext,\n      style['icon-anchor'],\n      NumberArrayType,\n    );\n    let scale = `1.0`;\n    if (`icon-scale` in style) {\n      scale = expressionToGlsl(vertContext, style[`icon-scale`], SizeType);\n    }\n    let shiftPx;\n    if (\n      style['icon-anchor-x-units'] === 'pixels' &&\n      style['icon-anchor-y-units'] === 'pixels'\n    ) {\n      shiftPx = `${anchor} * ${scale}`;\n    } else if (style['icon-anchor-x-units'] === 'pixels') {\n      shiftPx = `${anchor} * vec2(vec2(${scale}).x, v_quadSizePx.y)`;\n    } else if (style['icon-anchor-y-units'] === 'pixels') {\n      shiftPx = `${anchor} * vec2(v_quadSizePx.x, vec2(${scale}).x)`;\n    } else {\n      shiftPx = `${anchor} * v_quadSizePx`;\n    }\n    // default origin is top-left\n    let offsetPx = `v_quadSizePx * vec2(0.5, -0.5) + ${shiftPx} * vec2(-1., 1.)`;\n    if ('icon-anchor-origin' in style) {\n      switch (style['icon-anchor-origin']) {\n        case 'top-right':\n          offsetPx = `v_quadSizePx * -0.5 + ${shiftPx}`;\n          break;\n        case 'bottom-left':\n          offsetPx = `v_quadSizePx * 0.5 - ${shiftPx}`;\n          break;\n        case 'bottom-right':\n          offsetPx = `v_quadSizePx * vec2(-0.5, 0.5) + ${shiftPx} * vec2(1., -1.)`;\n          break;\n        default: // pass\n      }\n    }\n    builder.setSymbolOffsetExpression(\n      `${builder.getSymbolOffsetExpression()} + ${offsetPx}`,\n    );\n  }\n}\n\n/**\n * @param {import(\"../style/webgl.js\").WebGLStyle} style Style\n * @param {ShaderBuilder} builder Shader Builder\n * @param {Object<string,import(\"../webgl/Helper\").UniformValue>} uniforms Uniforms\n * @param {import(\"../expr/gpu.js\").CompilationContext} vertContext Vertex shader compilation context\n * @param {import(\"../expr/gpu.js\").CompilationContext} fragContext Fragment shader compilation context\n */\nfunction parseStrokeProperties(\n  style,\n  builder,\n  uniforms,\n  vertContext,\n  fragContext,\n) {\n  if ('stroke-color' in style) {\n    builder.setStrokeColorExpression(\n      expressionToGlsl(fragContext, style['stroke-color'], ColorType),\n    );\n  }\n  if ('stroke-pattern-src' in style) {\n    const textureId = computeHash(style['stroke-pattern-src']);\n    const sizeExpression = parseImageProperties(\n      style,\n      builder,\n      uniforms,\n      'stroke-pattern-',\n      textureId,\n    );\n    let sampleSizeExpression = sizeExpression;\n    let offsetExpression = 'vec2(0.)';\n    if ('stroke-pattern-offset' in style && 'stroke-pattern-size' in style) {\n      sampleSizeExpression = expressionToGlsl(\n        fragContext,\n        style[`stroke-pattern-size`],\n        NumberArrayType,\n      );\n      offsetExpression = parseImageOffsetProperties(\n        style,\n        'stroke-pattern-',\n        fragContext,\n        sizeExpression,\n        sampleSizeExpression,\n      );\n    }\n    let spacingExpression = '0.';\n    if ('stroke-pattern-spacing' in style) {\n      spacingExpression = expressionToGlsl(\n        fragContext,\n        style['stroke-pattern-spacing'],\n        NumberType,\n      );\n    }\n    fragContext.functions['sampleStrokePattern'] =\n      `vec4 sampleStrokePattern(sampler2D texture, vec2 textureSize, vec2 textureOffset, vec2 sampleSize, float spacingPx, float currentLengthPx, float currentRadiusRatio, float lineWidth) {\n  float currentLengthScaled = currentLengthPx * sampleSize.y / lineWidth;\n  float spacingScaled = spacingPx * sampleSize.y / lineWidth;\n  float uCoordPx = mod(currentLengthScaled, (sampleSize.x + spacingScaled));\n  // make sure that we're not sampling too close to the borders to avoid interpolation with outside pixels\n  uCoordPx = clamp(uCoordPx, 0.5, sampleSize.x - 0.5);\n  float vCoordPx = (-currentRadiusRatio * 0.5 + 0.5) * sampleSize.y;\n  vec2 texCoord = (vec2(uCoordPx, vCoordPx) + textureOffset) / textureSize;\n  return samplePremultiplied(texture, texCoord);\n}`;\n    const textureName = `u_texture${textureId}`;\n    let tintExpression = '1.';\n    if ('stroke-color' in style) {\n      tintExpression = builder.getStrokeColorExpression();\n    }\n    builder.setStrokeColorExpression(\n      `${tintExpression} * sampleStrokePattern(${textureName}, ${sizeExpression}, ${offsetExpression}, ${sampleSizeExpression}, ${spacingExpression}, currentLengthPx, currentRadiusRatio, v_width)`,\n    );\n  }\n\n  if ('stroke-width' in style) {\n    builder.setStrokeWidthExpression(\n      expressionToGlsl(vertContext, style['stroke-width'], NumberType),\n    );\n  }\n\n  if ('stroke-offset' in style) {\n    builder.setStrokeOffsetExpression(\n      expressionToGlsl(vertContext, style['stroke-offset'], NumberType),\n    );\n  }\n\n  if ('stroke-line-cap' in style) {\n    builder.setStrokeCapExpression(\n      expressionToGlsl(vertContext, style['stroke-line-cap'], StringType),\n    );\n  }\n\n  if ('stroke-line-join' in style) {\n    builder.setStrokeJoinExpression(\n      expressionToGlsl(vertContext, style['stroke-line-join'], StringType),\n    );\n  }\n\n  if ('stroke-miter-limit' in style) {\n    builder.setStrokeMiterLimitExpression(\n      expressionToGlsl(vertContext, style['stroke-miter-limit'], NumberType),\n    );\n  }\n\n  if ('stroke-line-dash' in style) {\n    fragContext.functions['getSingleDashDistance'] =\n      `float getSingleDashDistance(float distance, float radius, float dashOffset, float dashLength, float dashLengthTotal, float capType) {\n  float localDistance = mod(distance, dashLengthTotal);\n  float distanceSegment = abs(localDistance - dashOffset - dashLength * 0.5) - dashLength * 0.5;\n  distanceSegment = min(distanceSegment, dashLengthTotal - localDistance);\n  if (capType == ${stringToGlsl('square')}) {\n    distanceSegment -= v_width * 0.5;\n  } else if (capType == ${stringToGlsl('round')}) {\n    distanceSegment = min(distanceSegment, sqrt(distanceSegment * distanceSegment + radius * radius) - v_width * 0.5);\n  }\n  return distanceSegment;\n}`;\n\n    let dashPattern = style['stroke-line-dash'].map((v) =>\n      expressionToGlsl(fragContext, v, NumberType),\n    );\n    // if pattern has odd length, concatenate it with itself to be even\n    if (dashPattern.length % 2 === 1) {\n      dashPattern = [...dashPattern, ...dashPattern];\n    }\n\n    let offsetExpression = '0.';\n    if ('stroke-line-dash-offset' in style) {\n      offsetExpression = expressionToGlsl(\n        vertContext,\n        style['stroke-line-dash-offset'],\n        NumberType,\n      );\n    }\n\n    // define a function for this dash specifically\n    const uniqueDashKey = computeHash(style['stroke-line-dash']);\n    const dashFunctionName = `dashDistanceField_${uniqueDashKey}`;\n\n    const dashLengthsDef = dashPattern.map(\n      (v, i) => `float dashLength${i} = ${v};`,\n    );\n    const totalLengthDef = dashPattern\n      .map((v, i) => `dashLength${i}`)\n      .join(' + ');\n    let currentDashOffset = '0.';\n    let distanceExpression = `getSingleDashDistance(distance, radius, ${currentDashOffset}, dashLength0, totalDashLength, capType)`;\n    for (let i = 2; i < dashPattern.length; i += 2) {\n      currentDashOffset = `${currentDashOffset} + dashLength${\n        i - 2\n      } + dashLength${i - 1}`;\n      distanceExpression = `min(${distanceExpression}, getSingleDashDistance(distance, radius, ${currentDashOffset}, dashLength${i}, totalDashLength, capType))`;\n    }\n\n    fragContext.functions[dashFunctionName] =\n      `float ${dashFunctionName}(float distance, float radius, float capType) {\n  ${dashLengthsDef.join('\\n  ')}\n  float totalDashLength = ${totalLengthDef};\n  return ${distanceExpression};\n}`;\n    builder.setStrokeDistanceFieldExpression(\n      `${dashFunctionName}(currentLengthPx + ${offsetExpression}, currentRadiusPx, capType)`,\n    );\n  }\n}\n\n/**\n * @param {import(\"../style/webgl.js\").WebGLStyle} style Style\n * @param {ShaderBuilder} builder Shader Builder\n * @param {Object<string,import(\"../webgl/Helper\").UniformValue>} uniforms Uniforms\n * @param {import(\"../expr/gpu.js\").CompilationContext} vertContext Vertex shader compilation context\n * @param {import(\"../expr/gpu.js\").CompilationContext} fragContext Fragment shader compilation context\n */\nfunction parseFillProperties(\n  style,\n  builder,\n  uniforms,\n  vertContext,\n  fragContext,\n) {\n  if ('fill-color' in style) {\n    builder.setFillColorExpression(\n      expressionToGlsl(fragContext, style['fill-color'], ColorType),\n    );\n  }\n  if ('fill-pattern-src' in style) {\n    const textureId = computeHash(style['fill-pattern-src']);\n    const sizeExpression = parseImageProperties(\n      style,\n      builder,\n      uniforms,\n      'fill-pattern-',\n      textureId,\n    );\n    let sampleSizeExpression = sizeExpression;\n    let offsetExpression = 'vec2(0.)';\n    if ('fill-pattern-offset' in style && 'fill-pattern-size' in style) {\n      sampleSizeExpression = expressionToGlsl(\n        fragContext,\n        style[`fill-pattern-size`],\n        NumberArrayType,\n      );\n      offsetExpression = parseImageOffsetProperties(\n        style,\n        'fill-pattern-',\n        fragContext,\n        sizeExpression,\n        sampleSizeExpression,\n      );\n    }\n    fragContext.functions['sampleFillPattern'] =\n      `vec4 sampleFillPattern(sampler2D texture, vec2 textureSize, vec2 textureOffset, vec2 sampleSize, vec2 pxOrigin, vec2 pxPosition) {\n  float scaleRatio = pow(2., mod(u_zoom + 0.5, 1.) - 0.5);\n  vec2 pxRelativePos = pxPosition - pxOrigin;\n  // rotate the relative position from origin by the current view rotation\n  pxRelativePos = vec2(pxRelativePos.x * cos(u_rotation) - pxRelativePos.y * sin(u_rotation), pxRelativePos.x * sin(u_rotation) + pxRelativePos.y * cos(u_rotation));\n  // sample position is computed according to the sample offset & size\n  vec2 samplePos = mod(pxRelativePos / scaleRatio, sampleSize);\n  // also make sure that we're not sampling too close to the borders to avoid interpolation with outside pixels\n  samplePos = clamp(samplePos, vec2(0.5), sampleSize - vec2(0.5));\n  samplePos.y = sampleSize.y - samplePos.y; // invert y axis so that images appear upright\n  return samplePremultiplied(texture, (samplePos + textureOffset) / textureSize);\n}`;\n    const textureName = `u_texture${textureId}`;\n    let tintExpression = '1.';\n    if ('fill-color' in style) {\n      tintExpression = builder.getFillColorExpression();\n    }\n    builder.setFillColorExpression(\n      `${tintExpression} * sampleFillPattern(${textureName}, ${sizeExpression}, ${offsetExpression}, ${sampleSizeExpression}, pxOrigin, pxPos)`,\n    );\n  }\n}\n\n/**\n * @typedef {Object} StyleParseResult\n * @property {ShaderBuilder} builder Shader builder pre-configured according to a given style\n * @property {import(\"../render/webgl/VectorStyleRenderer.js\").UniformDefinitions} uniforms Uniform definitions\n * @property {import(\"../render/webgl/VectorStyleRenderer.js\").AttributeDefinitions} attributes Attribute definitions\n */\n\n/**\n * Parses a {@link import(\"../style/webgl.js\").WebGLStyle} object and returns a {@link ShaderBuilder}\n * object that has been configured according to the given style, as well as `attributes` and `uniforms`\n * arrays to be fed to the `WebGLPointsRenderer` class.\n *\n * Also returns `uniforms` and `attributes` properties as expected by the\n * {@link module:ol/renderer/webgl/PointsLayer~WebGLPointsLayerRenderer}.\n *\n * @param {import(\"../style/webgl.js\").WebGLStyle} style Literal style.\n * @return {StyleParseResult} Result containing shader params, attributes and uniforms.\n */\nexport function parseLiteralStyle(style) {\n  /**\n   * @type {import(\"../expr/gpu.js\").CompilationContext}\n   */\n  const vertContext = {\n    inFragmentShader: false,\n    properties: {},\n    variables: {},\n    functions: {},\n    style,\n  };\n\n  /**\n   * @type {import(\"../expr/gpu.js\").CompilationContext}\n   */\n  const fragContext = {\n    inFragmentShader: true,\n    variables: vertContext.variables,\n    properties: {},\n    functions: {},\n    style,\n  };\n\n  const builder = new ShaderBuilder();\n\n  /** @type {Object<string,import(\"../webgl/Helper\").UniformValue>} */\n  const uniforms = {};\n\n  if ('icon-src' in style) {\n    parseIconProperties(style, builder, uniforms, vertContext, fragContext);\n  } else if ('shape-points' in style) {\n    parseShapeProperties(style, builder, uniforms, vertContext, fragContext);\n  } else if ('circle-radius' in style) {\n    parseCircleProperties(style, builder, uniforms, vertContext, fragContext);\n  }\n  parseStrokeProperties(style, builder, uniforms, vertContext, fragContext);\n  parseFillProperties(style, builder, uniforms, vertContext, fragContext);\n\n  if (style.filter) {\n    const parsedFilter = expressionToGlsl(\n      fragContext,\n      style.filter,\n      BooleanType,\n    );\n    builder.setFragmentDiscardExpression(`!${parsedFilter}`);\n  }\n\n  // define one uniform per variable\n  Object.keys(fragContext.variables).forEach(function (varName) {\n    const variable = fragContext.variables[varName];\n    const uniformName = uniformNameForVariable(variable.name);\n    builder.addUniform(`${getGlslTypeFromType(variable.type)} ${uniformName}`);\n\n    let callback;\n    if (variable.type === StringType) {\n      callback = () =>\n        getStringNumberEquivalent(\n          /** @type {string} */ (style.variables[variable.name]),\n        );\n    } else if (variable.type === ColorType) {\n      callback = () =>\n        packColor([\n          ...asArray(\n            /** @type {string|Array<number>} */ (\n              style.variables[variable.name]\n            ) || '#eee',\n          ),\n        ]);\n    } else if (variable.type === BooleanType) {\n      callback = () =>\n        /** @type {boolean} */ (style.variables[variable.name]) ? 1.0 : 0.0;\n    } else {\n      callback = () => /** @type {number} */ (style.variables[variable.name]);\n    }\n    uniforms[uniformName] = callback;\n  });\n\n  // for each feature attribute used in the fragment shader, define a varying that will be used to pass data\n  // from the vertex to the fragment shader, as well as an attribute in the vertex shader (if not already present)\n  Object.keys(fragContext.properties).forEach(function (propName) {\n    const property = fragContext.properties[propName];\n    if (!vertContext.properties[propName]) {\n      vertContext.properties[propName] = property;\n    }\n    let type = getGlslTypeFromType(property.type);\n    let expression = `a_prop_${property.name}`;\n    if (property.type === ColorType) {\n      type = 'vec4';\n      expression = `unpackColor(${expression})`;\n      builder.addVertexShaderFunction(UNPACK_COLOR_FN);\n    }\n    builder.addVarying(`v_prop_${property.name}`, type, expression);\n  });\n\n  // for each feature attribute used in the vertex shader, define an attribute in the vertex shader.\n  Object.keys(vertContext.properties).forEach(function (propName) {\n    const property = vertContext.properties[propName];\n    builder.addAttribute(\n      `${getGlslTypeFromType(property.type)} a_prop_${property.name}`,\n    );\n  });\n\n  const attributes = Object.keys(vertContext.properties).map(\n    function (propName) {\n      const property = vertContext.properties[propName];\n      let callback;\n      if (property.evaluator) {\n        callback = property.evaluator;\n      } else if (property.type === StringType) {\n        callback = (feature) =>\n          getStringNumberEquivalent(feature.get(property.name));\n      } else if (property.type === ColorType) {\n        callback = (feature) =>\n          packColor([...asArray(feature.get(property.name) || '#eee')]);\n      } else if (property.type === BooleanType) {\n        callback = (feature) => (feature.get(property.name) ? 1.0 : 0.0);\n      } else {\n        callback = (feature) => feature.get(property.name);\n      }\n\n      return {\n        name: property.name,\n        size: getGlslSizeFromType(property.type),\n        callback,\n      };\n    },\n  );\n\n  // add functions that were collected in the compilation contexts\n  for (const functionName in vertContext.functions) {\n    builder.addVertexShaderFunction(vertContext.functions[functionName]);\n  }\n  for (const functionName in fragContext.functions) {\n    builder.addFragmentShaderFunction(fragContext.functions[functionName]);\n  }\n\n  return {\n    builder: builder,\n    attributes: attributes.reduce(\n      (prev, curr) => ({\n        ...prev,\n        [curr.name]: {callback: curr.callback, size: curr.size},\n      }),\n      {},\n    ),\n    uniforms: uniforms,\n  };\n}\n","/**\n * @module ol/layer/WebGLPoints\n */\nimport Layer from './Layer.js';\nimport WebGLPointsLayerRenderer from '../renderer/webgl/PointsLayer.js';\nimport {parseLiteralStyle} from '../webgl/styleparser.js';\n\n/**\n * @template {import(\"../source/Vector.js\").default<import('../Feature').FeatureLike>} VectorSourceType\n * @typedef {Object} Options\n * @property {import('../style/webgl.js').WebGLStyle} style Literal style to apply to the layer features.\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {VectorSourceType} [source] Point source.\n * @property {boolean} [disableHitDetection=false] Setting this to true will provide a slight performance boost, but will\n * prevent all hit detection on the layer.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Layer optimized for rendering large point datasets. Takes a `style` property which\n * is a serializable JSON object describing how the layer should be rendered.\n *\n * Here are a few samples of literal style objects:\n * ```js\n * const style = {\n *   'circle-radius': 8,\n *   'circle-fill-color': '#33AAFF',\n *   'circle-opacity': 0.9\n * }\n * ```\n *\n * ```js\n * const style = {\n *   'icon-src': '../static/exclamation-mark.png',\n *   'icon-offset': [0, 12],\n *   'icon-width': 4,\n *   'icon-height': 8\n * }\n * ```\n *\n * **Important: a `WebGLPoints` layer must be manually disposed when removed, otherwise the underlying WebGL context\n * will not be garbage collected.**\n *\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default<import('../Feature').FeatureLike>} VectorSourceType\n * @extends {Layer<VectorSourceType, WebGLPointsLayerRenderer>}\n * @fires import(\"../render/Event.js\").RenderEvent\n */\nclass WebGLPointsLayer extends Layer {\n  /**\n   * @param {Options<VectorSourceType>} options Options.\n   */\n  constructor(options) {\n    const baseOptions = Object.assign({}, options);\n\n    super(baseOptions);\n\n    /**\n     * @private\n     * @type {import('../webgl/styleparser.js').StyleParseResult}\n     */\n    this.parseResult_ = parseLiteralStyle(options.style);\n\n    /**\n     * @type {Object<string, (string|number|Array<number>|boolean)>}\n     * @private\n     */\n    this.styleVariables_ = options.style.variables || {};\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.hitDetectionDisabled_ = !!options.disableHitDetection;\n  }\n\n  createRenderer() {\n    const attributes = Object.keys(this.parseResult_.attributes).map(\n      (name) => ({\n        name,\n        ...this.parseResult_.attributes[name],\n      }),\n    );\n    return new WebGLPointsLayerRenderer(this, {\n      vertexShader: this.parseResult_.builder.getSymbolVertexShader(),\n      fragmentShader: this.parseResult_.builder.getSymbolFragmentShader(),\n      hitDetectionEnabled: !this.hitDetectionDisabled_,\n      uniforms: this.parseResult_.uniforms,\n      attributes:\n        /** @type {Array<import('../renderer/webgl/PointsLayer.js').CustomAttribute>} */ (\n          attributes\n        ),\n    });\n  }\n\n  /**\n   * Update any variables used by the layer style and trigger a re-render.\n   * @param {Object<string, number>} variables Variables to update.\n   */\n  updateStyleVariables(variables) {\n    Object.assign(this.styleVariables_, variables);\n    this.changed();\n  }\n}\n\nexport default WebGLPointsLayer;\n","/**\n * @module ol/layer/WebGLTile\n */\nimport BaseTileLayer from './BaseTile.js';\nimport LayerProperty from '../layer/Property.js';\nimport WebGLTileLayerRenderer, {\n  Attributes,\n  Uniforms,\n} from '../renderer/webgl/TileLayer.js';\nimport {ColorType, NumberType} from '../expr/expression.js';\nimport {\n  PALETTE_TEXTURE_ARRAY,\n  getStringNumberEquivalent,\n  newCompilationContext,\n  uniformNameForVariable,\n} from '../expr/gpu.js';\nimport {expressionToGlsl} from '../webgl/styleparser.js';\n\n/**\n * @typedef {import(\"../source/DataTile.js\").default|import(\"../source/TileImage.js\").default} SourceType\n */\n\n/**\n * @typedef {Object} Style\n * Translates tile data to rendered pixels.\n *\n * @property {Object<string, (string|number)>} [variables] Style variables.  Each variable must hold a number or string.  These\n * variables can be used in the `color`, `brightness`, `contrast`, `exposure`, `saturation` and `gamma`\n * {@link import(\"../expr/expression.js\").ExpressionValue expressions}, using the `['var', 'varName']` operator.\n * To update style variables, use the {@link import(\"./WebGLTile.js\").default#updateStyleVariables} method.\n * @property {import(\"../expr/expression.js\").ExpressionValue} [color] An expression applied to color values.\n * @property {import(\"../expr/expression.js\").ExpressionValue} [brightness=0] Value used to decrease or increase\n * the layer brightness.  Values range from -1 to 1.\n * @property {import(\"../expr/expression.js\").ExpressionValue} [contrast=0] Value used to decrease or increase\n * the layer contrast.  Values range from -1 to 1.\n * @property {import(\"../expr/expression.js\").ExpressionValue} [exposure=0] Value used to decrease or increase\n * the layer exposure.  Values range from -1 to 1.\n * @property {import(\"../expr/expression.js\").ExpressionValue} [saturation=0] Value used to decrease or increase\n * the layer saturation.  Values range from -1 to 1.\n * @property {import(\"../expr/expression.js\").ExpressionValue} [gamma=1] Apply a gamma correction to the layer.\n * Values range from 0 to infinity.\n */\n\n/**\n * @typedef {Object} Options\n * @property {Style} [style] Style to apply to the layer.\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {SourceType} [source] Source for this layer.\n * @property {Array<SourceType>|function(import(\"../extent.js\").Extent, number):Array<SourceType>} [sources] Array\n * of sources for this layer. Takes precedence over `source`. Can either be an array of sources, or a function that\n * expects an extent and a resolution (in view projection units per pixel) and returns an array of sources. See\n * {@link module:ol/source.sourcesFromTileGrid} for a helper function to generate sources that are organized in a\n * pyramid following the same pattern as a tile grid. **Note:** All sources must have the same band count and content.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link module:ol/Map~Map#addLayer}.\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\n * @property {number} [cacheSize=512] The internal texture cache size.  This needs to be large enough to render\n * two zoom levels worth of tiles.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @typedef {Object} ParsedStyle\n * @property {string} vertexShader The vertex shader.\n * @property {string} fragmentShader The fragment shader.\n * @property {Object<string,import(\"../webgl/Helper.js\").UniformValue>} uniforms Uniform definitions.\n * @property {Array<import(\"../webgl/PaletteTexture.js\").default>} paletteTextures Palette textures.\n */\n\n/**\n * @param {Style} style The layer style.\n * @param {number} [bandCount] The number of bands.\n * @return {ParsedStyle} Shaders and uniforms generated from the style.\n */\nfunction parseStyle(style, bandCount) {\n  const vertexShader = `\n    attribute vec2 ${Attributes.TEXTURE_COORD};\n    uniform mat4 ${Uniforms.TILE_TRANSFORM};\n    uniform float ${Uniforms.TEXTURE_PIXEL_WIDTH};\n    uniform float ${Uniforms.TEXTURE_PIXEL_HEIGHT};\n    uniform float ${Uniforms.TEXTURE_RESOLUTION};\n    uniform float ${Uniforms.TEXTURE_ORIGIN_X};\n    uniform float ${Uniforms.TEXTURE_ORIGIN_Y};\n    uniform float ${Uniforms.DEPTH};\n\n    varying vec2 v_textureCoord;\n    varying vec2 v_mapCoord;\n\n    void main() {\n      v_textureCoord = ${Attributes.TEXTURE_COORD};\n      v_mapCoord = vec2(\n        ${Uniforms.TEXTURE_ORIGIN_X} + ${Uniforms.TEXTURE_RESOLUTION} * ${Uniforms.TEXTURE_PIXEL_WIDTH} * v_textureCoord[0],\n        ${Uniforms.TEXTURE_ORIGIN_Y} - ${Uniforms.TEXTURE_RESOLUTION} * ${Uniforms.TEXTURE_PIXEL_HEIGHT} * v_textureCoord[1]\n      );\n      gl_Position = ${Uniforms.TILE_TRANSFORM} * vec4(${Attributes.TEXTURE_COORD}, ${Uniforms.DEPTH}, 1.0);\n    }\n  `;\n\n  /**\n   * @type {import(\"../expr/gpu.js\").CompilationContext}\n   */\n  const context = {\n    ...newCompilationContext(),\n    inFragmentShader: true,\n    bandCount: bandCount,\n    style: style,\n  };\n\n  const pipeline = [];\n\n  if (style.color !== undefined) {\n    const color = expressionToGlsl(context, style.color, ColorType);\n    pipeline.push(`color = ${color};`);\n  }\n\n  if (style.contrast !== undefined) {\n    const contrast = expressionToGlsl(context, style.contrast, NumberType);\n    pipeline.push(\n      `color.rgb = clamp((${contrast} + 1.0) * color.rgb - (${contrast} / 2.0), vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0));`,\n    );\n  }\n\n  if (style.exposure !== undefined) {\n    const exposure = expressionToGlsl(context, style.exposure, NumberType);\n    pipeline.push(\n      `color.rgb = clamp((${exposure} + 1.0) * color.rgb, vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0));`,\n    );\n  }\n\n  if (style.saturation !== undefined) {\n    const saturation = expressionToGlsl(context, style.saturation, NumberType);\n    pipeline.push(`\n      float saturation = ${saturation} + 1.0;\n      float sr = (1.0 - saturation) * 0.2126;\n      float sg = (1.0 - saturation) * 0.7152;\n      float sb = (1.0 - saturation) * 0.0722;\n      mat3 saturationMatrix = mat3(\n        sr + saturation, sr, sr,\n        sg, sg + saturation, sg,\n        sb, sb, sb + saturation\n      );\n      color.rgb = clamp(saturationMatrix * color.rgb, vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0));\n    `);\n  }\n\n  if (style.gamma !== undefined) {\n    const gamma = expressionToGlsl(context, style.gamma, NumberType);\n    pipeline.push(`color.rgb = pow(color.rgb, vec3(1.0 / ${gamma}));`);\n  }\n\n  if (style.brightness !== undefined) {\n    const brightness = expressionToGlsl(context, style.brightness, NumberType);\n    pipeline.push(\n      `color.rgb = clamp(color.rgb + ${brightness}, vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0));`,\n    );\n  }\n\n  /** @type {Object<string,import(\"../webgl/Helper\").UniformValue>} */\n  const uniforms = {};\n\n  const numVariables = Object.keys(context.variables).length;\n  if (numVariables > 1 && !style.variables) {\n    throw new Error(\n      `Missing variables in style (expected ${context.variables})`,\n    );\n  }\n\n  for (let i = 0; i < numVariables; ++i) {\n    const variable = context.variables[Object.keys(context.variables)[i]];\n    if (!(variable.name in style.variables)) {\n      throw new Error(`Missing '${variable.name}' in style variables`);\n    }\n    const uniformName = uniformNameForVariable(variable.name);\n    uniforms[uniformName] = function () {\n      let value = style.variables[variable.name];\n      if (typeof value === 'string') {\n        value = getStringNumberEquivalent(value);\n      }\n      return value !== undefined ? value : -9999999; // to avoid matching with the first string literal\n    };\n  }\n\n  const uniformDeclarations = Object.keys(uniforms).map(function (name) {\n    return `uniform float ${name};`;\n  });\n\n  const textureCount = Math.ceil(bandCount / 4);\n  uniformDeclarations.push(\n    `uniform sampler2D ${Uniforms.TILE_TEXTURE_ARRAY}[${textureCount}];`,\n  );\n\n  if (context.paletteTextures) {\n    uniformDeclarations.push(\n      `uniform sampler2D ${PALETTE_TEXTURE_ARRAY}[${context.paletteTextures.length}];`,\n    );\n  }\n\n  const functionDefintions = Object.keys(context.functions).map(\n    function (name) {\n      return context.functions[name];\n    },\n  );\n\n  const fragmentShader = `\n    #ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    #else\n    precision mediump float;\n    #endif\n\n    varying vec2 v_textureCoord;\n    varying vec2 v_mapCoord;\n    uniform vec4 ${Uniforms.RENDER_EXTENT};\n    uniform float ${Uniforms.TRANSITION_ALPHA};\n    uniform float ${Uniforms.TEXTURE_PIXEL_WIDTH};\n    uniform float ${Uniforms.TEXTURE_PIXEL_HEIGHT};\n    uniform float ${Uniforms.RESOLUTION};\n    uniform float ${Uniforms.ZOOM};\n\n    ${uniformDeclarations.join('\\n')}\n\n    ${functionDefintions.join('\\n')}\n\n    void main() {\n      if (\n        v_mapCoord[0] < ${Uniforms.RENDER_EXTENT}[0] ||\n        v_mapCoord[1] < ${Uniforms.RENDER_EXTENT}[1] ||\n        v_mapCoord[0] > ${Uniforms.RENDER_EXTENT}[2] ||\n        v_mapCoord[1] > ${Uniforms.RENDER_EXTENT}[3]\n      ) {\n        discard;\n      }\n\n      vec4 color = texture2D(${\n        Uniforms.TILE_TEXTURE_ARRAY\n      }[0],  v_textureCoord);\n\n      ${pipeline.join('\\n')}\n\n      gl_FragColor = color;\n      gl_FragColor.rgb *= gl_FragColor.a;\n      gl_FragColor *= ${Uniforms.TRANSITION_ALPHA};\n    }`;\n\n  return {\n    vertexShader: vertexShader,\n    fragmentShader: fragmentShader,\n    uniforms: uniforms,\n    paletteTextures: context.paletteTextures,\n  };\n}\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @extends BaseTileLayer<SourceType, WebGLTileLayerRenderer>\n * @fires import(\"../render/Event.js\").RenderEvent\n * @api\n */\nclass WebGLTileLayer extends BaseTileLayer {\n  /**\n   * @param {Options} options Tile layer options.\n   */\n  constructor(options) {\n    options = options ? Object.assign({}, options) : {};\n\n    const style = options.style || {};\n    delete options.style;\n\n    const cacheSize = options.cacheSize;\n    delete options.cacheSize;\n\n    super(options);\n\n    /**\n     * @type {Array<SourceType>|function(import(\"../extent.js\").Extent, number):Array<SourceType>}\n     * @private\n     */\n    this.sources_ = options.sources;\n\n    /**\n     * @type {SourceType|null}\n     * @private\n     */\n    this.renderedSource_ = null;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.renderedResolution_ = NaN;\n\n    /**\n     * @type {Style}\n     * @private\n     */\n    this.style_ = style;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.cacheSize_ = cacheSize;\n\n    /**\n     * @type {Object<string, (string|number)>}\n     * @private\n     */\n    this.styleVariables_ = this.style_.variables || {};\n\n    this.addChangeListener(LayerProperty.SOURCE, this.handleSourceUpdate_);\n  }\n\n  /**\n   * Gets the sources for this layer, for a given extent and resolution.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @return {Array<SourceType>} Sources.\n   */\n  getSources(extent, resolution) {\n    const source = this.getSource();\n    return this.sources_\n      ? typeof this.sources_ === 'function'\n        ? this.sources_(extent, resolution)\n        : this.sources_\n      : source\n        ? [source]\n        : [];\n  }\n\n  /**\n   * @return {SourceType} The source being rendered.\n   */\n  getRenderSource() {\n    return this.renderedSource_ || this.getSource();\n  }\n\n  /**\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    const source = this.getRenderSource();\n    return source ? source.getState() : 'undefined';\n  }\n\n  /**\n   * @private\n   */\n  handleSourceUpdate_() {\n    if (this.hasRenderer()) {\n      this.getRenderer().clearCache();\n    }\n    if (this.getSource()) {\n      this.setStyle(this.style_);\n    }\n  }\n\n  /**\n   * @private\n   * @return {number} The number of source bands.\n   */\n  getSourceBandCount_() {\n    const max = Number.MAX_SAFE_INTEGER;\n    const sources = this.getSources([-max, -max, max, max], max);\n    return sources && sources.length && 'bandCount' in sources[0]\n      ? sources[0].bandCount\n      : 4;\n  }\n\n  createRenderer() {\n    const parsedStyle = parseStyle(this.style_, this.getSourceBandCount_());\n\n    return new WebGLTileLayerRenderer(this, {\n      vertexShader: parsedStyle.vertexShader,\n      fragmentShader: parsedStyle.fragmentShader,\n      uniforms: parsedStyle.uniforms,\n      cacheSize: this.cacheSize_,\n      paletteTextures: parsedStyle.paletteTextures,\n    });\n  }\n\n  /**\n   * @param {import(\"../Map\").FrameState} frameState Frame state.\n   * @param {Array<SourceType>} sources Sources.\n   * @return {HTMLElement} Canvas.\n   */\n  renderSources(frameState, sources) {\n    const layerRenderer = this.getRenderer();\n    let canvas;\n    for (let i = 0, ii = sources.length; i < ii; ++i) {\n      this.renderedSource_ = sources[i];\n      if (layerRenderer.prepareFrame(frameState)) {\n        canvas = layerRenderer.renderFrame(frameState);\n      }\n    }\n    return canvas;\n  }\n\n  /**\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target which the renderer may (but need not) use\n   * for rendering its content.\n   * @return {HTMLElement} The rendered element.\n   */\n  render(frameState, target) {\n    this.rendered = true;\n    const viewState = frameState.viewState;\n    const sources = this.getSources(frameState.extent, viewState.resolution);\n    let ready = true;\n    for (let i = 0, ii = sources.length; i < ii; ++i) {\n      const source = sources[i];\n      const sourceState = source.getState();\n      if (sourceState == 'loading') {\n        const onChange = () => {\n          if (source.getState() == 'ready') {\n            source.removeEventListener('change', onChange);\n            this.changed();\n          }\n        };\n        source.addEventListener('change', onChange);\n      }\n      ready = ready && sourceState == 'ready';\n    }\n    const canvas = this.renderSources(frameState, sources);\n    if (this.getRenderer().renderComplete && ready) {\n      // Fully rendered, done.\n      this.renderedResolution_ = viewState.resolution;\n      return canvas;\n    }\n    // Render sources from previously fully rendered frames\n    if (this.renderedResolution_ > 0.5 * viewState.resolution) {\n      const altSources = this.getSources(\n        frameState.extent,\n        this.renderedResolution_,\n      ).filter((source) => !sources.includes(source));\n      if (altSources.length > 0) {\n        return this.renderSources(frameState, altSources);\n      }\n    }\n    return canvas;\n  }\n\n  /**\n   * Update the layer style.  The `updateStyleVariables` function is a more efficient\n   * way to update layer rendering.  In cases where the whole style needs to be updated,\n   * this method may be called instead.  Note that calling this method will also replace\n   * any previously set variables, so the new style also needs to include new variables,\n   * if needed.\n   * @param {Style} style The new style.\n   */\n  setStyle(style) {\n    this.styleVariables_ = style.variables || {};\n    this.style_ = style;\n    const parsedStyle = parseStyle(this.style_, this.getSourceBandCount_());\n    const renderer = this.getRenderer();\n    renderer.reset({\n      vertexShader: parsedStyle.vertexShader,\n      fragmentShader: parsedStyle.fragmentShader,\n      uniforms: parsedStyle.uniforms,\n      paletteTextures: parsedStyle.paletteTextures,\n    });\n    this.changed();\n  }\n\n  /**\n   * Update any variables used by the layer style and trigger a re-render.\n   * @param {Object<string, number>} variables Variables to update.\n   * @api\n   */\n  updateStyleVariables(variables) {\n    Object.assign(this.styleVariables_, variables);\n    this.changed();\n  }\n}\n\n/**\n * Clean up underlying WebGL resources.\n * @function\n * @api\n */\nWebGLTileLayer.prototype.dispose;\n\nexport default WebGLTileLayer;\n","/**\n * @module ol/layer\n */\n\nexport {default as Graticule} from './layer/Graticule.js';\nexport {default as Group} from './layer/Group.js';\nexport {default as Heatmap} from './layer/Heatmap.js';\nexport {default as Image} from './layer/Image.js';\nexport {default as Layer} from './layer/Layer.js';\nexport {default as Tile} from './layer/Tile.js';\nexport {default as Vector} from './layer/Vector.js';\nexport {default as VectorImage} from './layer/VectorImage.js';\nexport {default as VectorTile} from './layer/VectorTile.js';\nexport {default as WebGLPoints} from './layer/WebGLPoints.js';\nexport {default as WebGLTile} from './layer/WebGLTile.js';\n","/**\n * @module ol/reproj/Image\n */\nimport {ERROR_THRESHOLD} from './common.js';\n\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport ImageWrapper from '../Image.js';\nimport Triangulation from './Triangulation.js';\nimport {\n  calculateSourceResolution,\n  render as renderReprojected,\n} from '../reproj.js';\nimport {fromResolutionLike} from '../resolution.js';\nimport {\n  getCenter,\n  getHeight,\n  getIntersection,\n  getWidth,\n  isEmpty,\n} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {function(import(\"../extent.js\").Extent, number, number) : import(\"../Image.js\").default} FunctionType\n */\n\n/**\n * @classdesc\n * Class encapsulating single reprojected image.\n * See {@link module:ol/source/Image~ImageSource}.\n */\nclass ReprojImage extends ImageWrapper {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection (of the data).\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../extent.js\").Extent} targetExtent Target extent.\n   * @param {number} targetResolution Target resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {FunctionType} getImageFunction\n   *     Function returning source images (extent, resolution, pixelRatio).\n   * @param {boolean} interpolate Use linear interpolation when resampling.\n   */\n  constructor(\n    sourceProj,\n    targetProj,\n    targetExtent,\n    targetResolution,\n    pixelRatio,\n    getImageFunction,\n    interpolate,\n  ) {\n    let maxSourceExtent = sourceProj.getExtent();\n    if (maxSourceExtent && sourceProj.canWrapX()) {\n      maxSourceExtent = maxSourceExtent.slice();\n      maxSourceExtent[0] = -Infinity;\n      maxSourceExtent[2] = Infinity;\n    }\n    let maxTargetExtent = targetProj.getExtent();\n    if (maxTargetExtent && targetProj.canWrapX()) {\n      maxTargetExtent = maxTargetExtent.slice();\n      maxTargetExtent[0] = -Infinity;\n      maxTargetExtent[2] = Infinity;\n    }\n\n    const limitedTargetExtent = maxTargetExtent\n      ? getIntersection(targetExtent, maxTargetExtent)\n      : targetExtent;\n\n    const targetCenter = getCenter(limitedTargetExtent);\n    const sourceResolution = calculateSourceResolution(\n      sourceProj,\n      targetProj,\n      targetCenter,\n      targetResolution,\n    );\n\n    const errorThresholdInPixels = ERROR_THRESHOLD;\n\n    const triangulation = new Triangulation(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      maxSourceExtent,\n      sourceResolution * errorThresholdInPixels,\n      targetResolution,\n    );\n\n    const sourceExtent = triangulation.calculateSourceExtent();\n    const sourceImage = isEmpty(sourceExtent)\n      ? null\n      : getImageFunction(sourceExtent, sourceResolution, pixelRatio);\n    const state = sourceImage ? ImageState.IDLE : ImageState.EMPTY;\n    const sourcePixelRatio = sourceImage ? sourceImage.getPixelRatio() : 1;\n\n    super(targetExtent, targetResolution, sourcePixelRatio, state);\n\n    /**\n     * @private\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.targetProj_ = targetProj;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.maxSourceExtent_ = maxSourceExtent;\n\n    /**\n     * @private\n     * @type {!import(\"./Triangulation.js\").default}\n     */\n    this.triangulation_ = triangulation;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.targetResolution_ = targetResolution;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.targetExtent_ = targetExtent;\n\n    /**\n     * @private\n     * @type {import(\"../Image.js\").default}\n     */\n    this.sourceImage_ = sourceImage;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.sourcePixelRatio_ = sourcePixelRatio;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.interpolate_ = interpolate;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.sourceListenerKey_ = null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.state == ImageState.LOADING) {\n      this.unlistenSource_();\n    }\n    super.disposeInternal();\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image.\n   */\n  getImage() {\n    return this.canvas_;\n  }\n\n  /**\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  getProjection() {\n    return this.targetProj_;\n  }\n\n  /**\n   * @private\n   */\n  reproject_() {\n    const sourceState = this.sourceImage_.getState();\n    if (sourceState == ImageState.LOADED) {\n      const width = getWidth(this.targetExtent_) / this.targetResolution_;\n      const height = getHeight(this.targetExtent_) / this.targetResolution_;\n      this.canvas_ = renderReprojected(\n        width,\n        height,\n        this.sourcePixelRatio_,\n        fromResolutionLike(this.sourceImage_.getResolution()),\n        this.maxSourceExtent_,\n        this.targetResolution_,\n        this.targetExtent_,\n        this.triangulation_,\n        [\n          {\n            extent: this.sourceImage_.getExtent(),\n            image: this.sourceImage_.getImage(),\n          },\n        ],\n        0,\n        undefined,\n        this.interpolate_,\n        true,\n      );\n    }\n    this.state = sourceState;\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == ImageState.IDLE) {\n      this.state = ImageState.LOADING;\n      this.changed();\n\n      const sourceState = this.sourceImage_.getState();\n      if (sourceState == ImageState.LOADED || sourceState == ImageState.ERROR) {\n        this.reproject_();\n      } else {\n        this.sourceListenerKey_ = listen(\n          this.sourceImage_,\n          EventType.CHANGE,\n          function (e) {\n            const sourceState = this.sourceImage_.getState();\n            if (\n              sourceState == ImageState.LOADED ||\n              sourceState == ImageState.ERROR\n            ) {\n              this.unlistenSource_();\n              this.reproject_();\n            }\n          },\n          this,\n        );\n        this.sourceImage_.load();\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  unlistenSource_() {\n    unlistenByKey(\n      /** @type {!import(\"../events.js\").EventsKey} */ (\n        this.sourceListenerKey_\n      ),\n    );\n    this.sourceListenerKey_ = null;\n  }\n}\n\nexport default ReprojImage;\n","/**\n * @module ol/source/common\n */\n\n/**\n * Default WMS version.\n * @type {string}\n */\nexport const DEFAULT_WMS_VERSION = '1.3.0';\n\n/**\n * Number of decimal digits to consider in integer values when rounding.\n * @type {number}\n */\nexport const DECIMALS = 4;\n","/**\n * @module ol/source/Image\n */\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport ImageWrapper from '../Image.js';\nimport ReprojImage from '../reproj/Image.js';\nimport Source from './Source.js';\nimport {DECIMALS} from './common.js';\nimport {ceil} from '../math.js';\nimport {\n  containsExtent,\n  equals,\n  getCenter,\n  getForViewAndSize,\n  getHeight,\n  getWidth,\n} from '../extent.js';\nimport {equivalent} from '../proj.js';\nimport {fromResolutionLike} from '../resolution.js';\nimport {linearFindNearest} from '../array.js';\n\n/**\n * @enum {string}\n */\nexport const ImageSourceEventType = {\n  /**\n   * Triggered when an image starts loading.\n   * @event module:ol/source/Image.ImageSourceEvent#imageloadstart\n   * @api\n   */\n  IMAGELOADSTART: 'imageloadstart',\n\n  /**\n   * Triggered when an image finishes loading.\n   * @event module:ol/source/Image.ImageSourceEvent#imageloadend\n   * @api\n   */\n  IMAGELOADEND: 'imageloadend',\n\n  /**\n   * Triggered if image loading results in an error.\n   * @event module:ol/source/Image.ImageSourceEvent#imageloaderror\n   * @api\n   */\n  IMAGELOADERROR: 'imageloaderror',\n};\n\n/**\n * @typedef {'imageloadend'|'imageloaderror'|'imageloadstart'} ImageSourceEventTypes\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Image~ImageSource} instances are instances of this\n * type.\n */\nexport class ImageSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Image.js\").default} image The image.\n   */\n  constructor(type, image) {\n    super(type);\n\n    /**\n     * The image related to the event.\n     * @type {import(\"../Image.js\").default}\n     * @api\n     */\n    this.image = image;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<ImageSourceEventTypes, ImageSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types\n *     |ImageSourceEventTypes, Return>} ImageSourceOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {import(\"../Image.js\").Loader} [loader] Loader. Can either be a custom loader, or one of the\n * loaders created with a `createLoader()` function ({@link module:ol/source/wms.createLoader wms},\n * {@link module:ol/source/arcgisRest.createLoader arcgisRest}, {@link module:ol/source/mapguide.createLoader mapguide},\n * {@link module:ol/source/static.createLoader static}).\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {Array<number>} [resolutions] Resolutions.\n * @property {import(\"./Source.js\").State} [state] State.\n */\n\n/**\n * @classdesc\n * Base class for sources providing a single image.\n * @fires module:ol/source/Image.ImageSourceEvent\n * @api\n */\nclass ImageSource extends Source {\n  /**\n   * @param {Options} options Single image source options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      projection: options.projection,\n      state: options.state,\n      interpolate:\n        options.interpolate !== undefined ? options.interpolate : true,\n    });\n\n    /***\n     * @type {ImageSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ImageSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ImageSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @protected\n     * @type {import(\"../Image.js\").Loader}\n     */\n    this.loader = options.loader || null;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.resolutions_ =\n      options.resolutions !== undefined ? options.resolutions : null;\n\n    /**\n     * @private\n     * @type {import(\"../reproj/Image.js\").default}\n     */\n    this.reprojectedImage_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.reprojectedRevision_ = 0;\n\n    /**\n     * @protected\n     * @type {import(\"../Image.js\").default}\n     */\n    this.image = null;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.wantedExtent_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.wantedResolution_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.static_ = options.loader ? options.loader.length === 0 : false;\n\n    /**\n     * @private\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.wantedProjection_ = null;\n  }\n\n  /**\n   * @return {Array<number>|null} Resolutions.\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * @param {Array<number>|null} resolutions Resolutions.\n   */\n  setResolutions(resolutions) {\n    this.resolutions_ = resolutions;\n  }\n\n  /**\n   * @protected\n   * @param {number} resolution Resolution.\n   * @return {number} Resolution.\n   */\n  findNearestResolution(resolution) {\n    const resolutions = this.getResolutions();\n    if (resolutions) {\n      const idx = linearFindNearest(resolutions, resolution, 0);\n      resolution = resolutions[idx];\n    }\n    return resolution;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../Image.js\").default} Single image.\n   */\n  getImage(extent, resolution, pixelRatio, projection) {\n    const sourceProjection = this.getProjection();\n    if (\n      !sourceProjection ||\n      !projection ||\n      equivalent(sourceProjection, projection)\n    ) {\n      if (sourceProjection) {\n        projection = sourceProjection;\n      }\n\n      return this.getImageInternal(extent, resolution, pixelRatio, projection);\n    }\n    if (this.reprojectedImage_) {\n      if (\n        this.reprojectedRevision_ == this.getRevision() &&\n        equivalent(this.reprojectedImage_.getProjection(), projection) &&\n        this.reprojectedImage_.getResolution() == resolution &&\n        equals(this.reprojectedImage_.getExtent(), extent)\n      ) {\n        return this.reprojectedImage_;\n      }\n      this.reprojectedImage_.dispose();\n      this.reprojectedImage_ = null;\n    }\n\n    this.reprojectedImage_ = new ReprojImage(\n      sourceProjection,\n      projection,\n      extent,\n      resolution,\n      pixelRatio,\n      (extent, resolution, pixelRatio) =>\n        this.getImageInternal(extent, resolution, pixelRatio, sourceProjection),\n      this.getInterpolate(),\n    );\n    this.reprojectedRevision_ = this.getRevision();\n\n    return this.reprojectedImage_;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../Image.js\").default} Single image.\n   * @protected\n   */\n  getImageInternal(extent, resolution, pixelRatio, projection) {\n    if (this.loader) {\n      const requestExtent = getRequestExtent(extent, resolution, pixelRatio, 1);\n      const requestResolution = this.findNearestResolution(resolution);\n      if (\n        this.image &&\n        (this.static_ ||\n          (this.wantedProjection_ === projection &&\n            ((this.wantedExtent_ &&\n              containsExtent(this.wantedExtent_, requestExtent)) ||\n              containsExtent(this.image.getExtent(), requestExtent)) &&\n            ((this.wantedResolution_ &&\n              fromResolutionLike(this.wantedResolution_) ===\n                requestResolution) ||\n              fromResolutionLike(this.image.getResolution()) ===\n                requestResolution)))\n      ) {\n        return this.image;\n      }\n      this.wantedProjection_ = projection;\n      this.wantedExtent_ = requestExtent;\n      this.wantedResolution_ = requestResolution;\n      this.image = new ImageWrapper(\n        requestExtent,\n        requestResolution,\n        pixelRatio,\n        this.loader,\n      );\n      this.image.addEventListener(\n        EventType.CHANGE,\n        this.handleImageChange.bind(this),\n      );\n    }\n    return this.image;\n  }\n\n  /**\n   * Handle image change events.\n   * @param {import(\"../events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleImageChange(event) {\n    const image = /** @type {import(\"../Image.js\").default} */ (event.target);\n    let type;\n    switch (image.getState()) {\n      case ImageState.LOADING:\n        this.loading = true;\n        type = ImageSourceEventType.IMAGELOADSTART;\n        break;\n      case ImageState.LOADED:\n        this.loading = false;\n        type = ImageSourceEventType.IMAGELOADEND;\n        break;\n      case ImageState.ERROR:\n        this.loading = false;\n        type = ImageSourceEventType.IMAGELOADERROR;\n        break;\n      default:\n        return;\n    }\n    if (this.hasListener(type)) {\n      this.dispatchEvent(new ImageSourceEvent(type, image));\n    }\n  }\n}\n\n/**\n * Default image load function for image sources that use import(\"../Image.js\").Image image\n * instances.\n * @param {import(\"../Image.js\").default} image Image.\n * @param {string} src Source.\n */\nexport function defaultImageLoadFunction(image, src) {\n  /** @type {HTMLImageElement|HTMLVideoElement} */ (image.getImage()).src = src;\n}\n\n/**\n * Adjusts the extent so it aligns with pixel boundaries.\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @param {number} resolution Reolution.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} ratio Ratio between request size and view size.\n * @return {import(\"../extent.js\").Extent} Request extent.\n */\nexport function getRequestExtent(extent, resolution, pixelRatio, ratio) {\n  const imageResolution = resolution / pixelRatio;\n  const center = getCenter(extent);\n  const viewWidth = ceil(getWidth(extent) / imageResolution, DECIMALS);\n  const viewHeight = ceil(getHeight(extent) / imageResolution, DECIMALS);\n  const marginWidth = ceil(((ratio - 1) * viewWidth) / 2, DECIMALS);\n  const requestWidth = viewWidth + 2 * marginWidth;\n  const marginHeight = ceil(((ratio - 1) * viewHeight) / 2, DECIMALS);\n  const requestHeight = viewHeight + 2 * marginHeight;\n  return getForViewAndSize(center, imageResolution, 0, [\n    requestWidth,\n    requestHeight,\n  ]);\n}\n\nexport default ImageSource;\n","/**\n * @module ol/uri\n */\n\n/**\n * Appends query parameters to a URI.\n *\n * @param {string} uri The original URI, which may already have query data.\n * @param {!Object} params An object where keys are URI-encoded parameter keys,\n *     and the values are arbitrary types or arrays.\n * @return {string} The new URI.\n */\nexport function appendParams(uri, params) {\n  /** @type {Array<string>} */\n  const keyParams = [];\n  // Skip any null or undefined parameter values\n  Object.keys(params).forEach(function (k) {\n    if (params[k] !== null && params[k] !== undefined) {\n      keyParams.push(k + '=' + encodeURIComponent(params[k]));\n    }\n  });\n  const qs = keyParams.join('&');\n  // remove any trailing ? or &\n  uri = uri.replace(/[?&]$/, '');\n  // append ? or & depending on whether uri has existing parameters\n  uri += uri.includes('?') ? '&' : '?';\n  return uri + qs;\n}\n","/**\n * @module ol/source/wms\n */\n\nimport {DECIMALS} from './common.js';\nimport {appendParams} from '../uri.js';\nimport {compareVersions} from '../string.js';\nimport {decode} from '../Image.js';\nimport {floor, round} from '../math.js';\nimport {getForViewAndSize, getHeight, getWidth} from '../extent.js';\nimport {get as getProjection} from '../proj.js';\nimport {getRequestExtent} from './Image.js';\n\n/**\n * Default WMS version.\n * @type {string}\n */\nexport const DEFAULT_VERSION = '1.3.0';\n\n/**\n * @const\n * @type {import(\"../size.js\").Size}\n */\nconst GETFEATUREINFO_IMAGE_SIZE = [101, 101];\n\n/**\n * @api\n * @typedef {'carmentaserver' | 'geoserver' | 'mapserver' | 'qgis'} ServerType\n * Set the server type to use implementation-specific parameters beyond the WMS specification.\n *  - `'carmentaserver'`: HiDPI support for [Carmenta Server](https://www.carmenta.com/en/products/carmenta-server)\n *  - `'geoserver'`: HiDPI support for [GeoServer](https://geoserver.org/)\n *  - `'mapserver'`: HiDPI support for [MapServer](https://mapserver.org/)\n *  - `'qgis'`: HiDPI support for [QGIS](https://qgis.org/)\n */\n\n/**\n * @param {string} baseUrl Base URL.\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @param {import(\"../size.js\").Size} size Size.\n * @param {import(\"../proj/Projection.js\").default} projection Projection.\n * @param {Object} params WMS params. Will be modified in place.\n * @return {string} Request URL.\n */\nexport function getRequestUrl(baseUrl, extent, size, projection, params) {\n  params['WIDTH'] = size[0];\n  params['HEIGHT'] = size[1];\n\n  const axisOrientation = projection.getAxisOrientation();\n  let bbox;\n  const v13 = compareVersions(params['VERSION'], '1.3') >= 0;\n  params[v13 ? 'CRS' : 'SRS'] = projection.getCode();\n  if (v13 && axisOrientation.substr(0, 2) == 'ne') {\n    bbox = [extent[1], extent[0], extent[3], extent[2]];\n  } else {\n    bbox = extent;\n  }\n  params['BBOX'] = bbox.join(',');\n\n  return appendParams(/** @type {string} */ (baseUrl), params);\n}\n\n/**\n * @param {import(\"../extent\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio pixel ratio.\n * @param {import(\"../proj.js\").Projection} projection Projection.\n * @param {string} url WMS service url.\n * @param {Object} params WMS params.\n * @param {import(\"./wms.js\").ServerType} serverType The type of the remote WMS server.\n * @return {string} Image src.\n */\nexport function getImageSrc(\n  extent,\n  resolution,\n  pixelRatio,\n  projection,\n  url,\n  params,\n  serverType,\n) {\n  params = Object.assign({REQUEST: 'GetMap'}, params);\n\n  const imageResolution = resolution / pixelRatio;\n\n  const imageSize = [\n    round(getWidth(extent) / imageResolution, DECIMALS),\n    round(getHeight(extent) / imageResolution, DECIMALS),\n  ];\n\n  if (pixelRatio != 1) {\n    switch (serverType) {\n      case 'geoserver':\n        const dpi = (90 * pixelRatio + 0.5) | 0;\n        if ('FORMAT_OPTIONS' in params) {\n          params['FORMAT_OPTIONS'] += ';dpi:' + dpi;\n        } else {\n          params['FORMAT_OPTIONS'] = 'dpi:' + dpi;\n        }\n        break;\n      case 'mapserver':\n        params['MAP_RESOLUTION'] = 90 * pixelRatio;\n        break;\n      case 'carmentaserver':\n      case 'qgis':\n        params['DPI'] = 90 * pixelRatio;\n        break;\n      default:\n        throw new Error('Unknown `serverType` configured');\n    }\n  }\n\n  const src = getRequestUrl(url, extent, imageSize, projection, params);\n  return src;\n}\n\n/**\n * @param {Object} params WMS params.\n * @param {string} request WMS `REQUEST`.\n * @return {Object} WMS params with required properties set.\n */\nexport function getRequestParams(params, request) {\n  return Object.assign(\n    {\n      'REQUEST': request,\n      'SERVICE': 'WMS',\n      'VERSION': DEFAULT_VERSION,\n      'FORMAT': 'image/png',\n      'STYLES': '',\n      'TRANSPARENT': true,\n    },\n    params,\n  );\n}\n\n/**\n * @typedef {Object} LoaderOptions\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [hidpi=true] Use the `ol/Map#pixelRatio` value when requesting\n * the image from the remote server.\n * @property {Object<string,*>} [params] WMS request parameters.\n * At least a `LAYERS` param is required. `STYLES` is\n * `''` by default. `VERSION` is `1.3.0` by default. `WIDTH`, `HEIGHT` and `BBOX` will be set\n * dynamically. `CRS` (`SRS` for WMS version < 1.3.0) will is derived from the `proection` config.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is 'EPSG:3857'.\n * @property {number} [ratio=1.5] Ratio. `1` means image requests are the size of the map viewport, `2` means\n * twice the width and height of the map viewport, and so on. Must be `1` or higher.\n * @property {import(\"./wms.js\").ServerType} [serverType] The type of\n * the remote WMS server: `mapserver`, `geoserver`, `carmentaserver`, or `qgis`.\n * Only needed if `hidpi` is `true`.\n * @property {string} url WMS service URL.\n * @property {function(HTMLImageElement, string): Promise<import('../DataTile.js').ImageLike>} [load] Function\n * to perform loading of the image. Receives the created `HTMLImageElement` and the desired `src` as argument and\n * returns a promise resolving to the loaded or decoded image. Default is {@link module:ol/Image.decode}.\n */\n\n/**\n * Creates a loader for WMS images.\n * @param {LoaderOptions} options Loader options.\n * @return {import(\"../Image.js\").ImageObjectPromiseLoader} Loader.\n * @api\n */\nexport function createLoader(options) {\n  const hidpi = options.hidpi === undefined ? true : options.hidpi;\n  const projection = getProjection(options.projection || 'EPSG:3857');\n  const ratio = options.ratio || 1.5;\n  const load = options.load || decode;\n\n  /**\n   * @type {import(\"../Image.js\").Loader}\n   */\n  return (extent, resolution, pixelRatio) => {\n    extent = getRequestExtent(extent, resolution, pixelRatio, ratio);\n    if (pixelRatio != 1 && (!hidpi || options.serverType === undefined)) {\n      pixelRatio = 1;\n    }\n    const src = getImageSrc(\n      extent,\n      resolution,\n      pixelRatio,\n      projection,\n      options.url,\n      getRequestParams(options.params, 'GetMap'),\n      options.serverType,\n    );\n    const image = new Image();\n    if (options.crossOrigin !== null) {\n      image.crossOrigin = options.crossOrigin;\n    }\n    return load(image, src).then((image) => ({image, extent, pixelRatio}));\n  };\n}\n\n/**\n * Get the GetFeatureInfo URL for the passed coordinate and resolution. Returns `undefined` if the\n * GetFeatureInfo URL cannot be constructed.\n * @param {LoaderOptions} options Options passed the `createWMSLoader()` function. In addition to\n * the params required by the loader, `INFO_FORMAT` should be specified, it defaults to\n * `application/json`. If `QUERY_LAYERS` is not provided, then the layers specified in the `LAYERS`\n * parameter will be used.\n * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} resolution Resolution.\n * @return {string|undefined} GetFeatureInfo URL.\n * @api\n */\nexport function getFeatureInfoUrl(options, coordinate, resolution) {\n  if (options.url === undefined) {\n    return undefined;\n  }\n\n  const projectionObj = getProjection(options.projection || 'EPSG:3857');\n\n  const extent = getForViewAndSize(\n    coordinate,\n    resolution,\n    0,\n    GETFEATUREINFO_IMAGE_SIZE,\n  );\n\n  const baseParams = {\n    'QUERY_LAYERS': options.params['LAYERS'],\n    'INFO_FORMAT': 'application/json',\n  };\n  Object.assign(\n    baseParams,\n    getRequestParams(options.params, 'GetFeatureInfo'),\n    options.params,\n  );\n\n  const x = floor((coordinate[0] - extent[0]) / resolution, DECIMALS);\n  const y = floor((extent[3] - coordinate[1]) / resolution, DECIMALS);\n  const v13 = compareVersions(baseParams['VERSION'], '1.3') >= 0;\n  baseParams[v13 ? 'I' : 'X'] = x;\n  baseParams[v13 ? 'J' : 'Y'] = y;\n\n  return getRequestUrl(\n    options.url,\n    extent,\n    GETFEATUREINFO_IMAGE_SIZE,\n    projectionObj,\n    baseParams,\n  );\n}\n\n/**\n * Get the GetLegendGraphic URL, optionally optimized for the passed resolution and possibly\n * including any passed specific parameters. Returns `undefined` if the GetLegendGraphic URL\n * cannot be constructed.\n *\n * @param {LoaderOptions} options Options passed the `createWMSLoader()` function.\n * @param {number} [resolution] Resolution. If not provided, `SCALE` will not be calculated and\n * included in URL.\n * @return {string|undefined} GetLegendGraphic URL.\n * @api\n */\nexport function getLegendUrl(options, resolution) {\n  if (options.url === undefined) {\n    return undefined;\n  }\n\n  const baseParams = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_VERSION,\n    'REQUEST': 'GetLegendGraphic',\n    'FORMAT': 'image/png',\n  };\n\n  if (options.params === undefined || options.params['LAYER'] === undefined) {\n    const layers = options.params.LAYERS;\n    const isSingleLayer = !Array.isArray(layers) || layers.length === 1;\n    if (!isSingleLayer) {\n      return undefined;\n    }\n    baseParams['LAYER'] = layers;\n  }\n\n  if (resolution !== undefined) {\n    const mpu =\n      getProjection(options.projection || 'EPSG:3857').getMetersPerUnit() || 1;\n    const pixelSize = 0.00028;\n    baseParams['SCALE'] = (resolution * mpu) / pixelSize;\n  }\n\n  Object.assign(baseParams, options.params);\n\n  return appendParams(options.url, baseParams);\n}\n","/**\n * @module ol/source/ImageWMS\n */\n\nimport ImageSource, {defaultImageLoadFunction} from './Image.js';\nimport {calculateSourceResolution} from '../reproj.js';\nimport {createLoader, getFeatureInfoUrl, getLegendUrl} from './wms.js';\nimport {decode} from '../Image.js';\nimport {get as getProjection, transform} from '../proj.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [hidpi=true] Use the `ol/Map#pixelRatio` value when requesting\n * the image from the remote server.\n * @property {import(\"./wms.js\").ServerType} [serverType] The type of\n * the remote WMS server: `mapserver`, `geoserver`, `carmentaserver`, or `qgis`.\n * Only needed if `hidpi` is `true`.\n * @property {import(\"../Image.js\").LoadFunction} [imageLoadFunction] Optional function to load an image given a URL.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {Object<string,*>} [params] WMS request parameters.\n * At least a `LAYERS` param is required. `STYLES` is\n * `''` by default. `VERSION` is `1.3.0` by default. `WIDTH`, `HEIGHT`, `BBOX`\n * and `CRS` (`SRS` for WMS version < 1.3.0) will be set dynamically.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [ratio=1.5] Ratio. `1` means image requests are the size of the map viewport, `2` means\n * twice the width and height of the map viewport, and so on. Must be `1` or higher.\n * @property {Array<number>} [resolutions] Resolutions.\n * If specified, requests will be made for these resolutions only.\n * @property {string} [url] WMS service URL.\n */\n\n/**\n * @classdesc\n * Source for WMS servers providing single, untiled images.\n *\n * @fires module:ol/source/Image.ImageSourceEvent\n * @api\n */\nclass ImageWMS extends ImageSource {\n  /**\n   * @param {Options} [options] ImageWMS options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      attributions: options.attributions,\n      interpolate: options.interpolate,\n      projection: options.projection,\n      resolutions: options.resolutions,\n    });\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.url_ = options.url;\n\n    /**\n     * @private\n     * @type {import(\"../Image.js\").LoadFunction}\n     */\n    this.imageLoadFunction_ =\n      options.imageLoadFunction !== undefined\n        ? options.imageLoadFunction\n        : defaultImageLoadFunction;\n\n    /**\n     * @private\n     * @type {!Object}\n     */\n    this.params_ = Object.assign({}, options.params);\n\n    /**\n     * @private\n     * @type {import(\"./wms.js\").ServerType}\n     */\n    this.serverType_ = options.serverType;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRevision_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.ratio_ = options.ratio !== undefined ? options.ratio : 1.5;\n\n    /**\n     * @private\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.loaderProjection_ = null;\n  }\n\n  /**\n   * Return the GetFeatureInfo URL for the passed coordinate, resolution, and\n   * projection. Return `undefined` if the GetFeatureInfo URL cannot be\n   * constructed.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n   * @param {!Object} params GetFeatureInfo params. `INFO_FORMAT` at least should\n   *     be provided. If `QUERY_LAYERS` is not provided then the layers specified\n   *     in the `LAYERS` parameter will be used. `VERSION` should not be\n   *     specified here.\n   * @return {string|undefined} GetFeatureInfo URL.\n   * @api\n   */\n  getFeatureInfoUrl(coordinate, resolution, projection, params) {\n    const projectionObj = getProjection(projection);\n    const sourceProjectionObj = this.getProjection();\n\n    if (sourceProjectionObj && sourceProjectionObj !== projectionObj) {\n      resolution = calculateSourceResolution(\n        sourceProjectionObj,\n        projectionObj,\n        coordinate,\n        resolution,\n      );\n      coordinate = transform(coordinate, projectionObj, sourceProjectionObj);\n    }\n\n    const options = {\n      url: this.url_,\n      params: {\n        ...this.params_,\n        ...params,\n      },\n      projection: sourceProjectionObj || projectionObj,\n    };\n    return getFeatureInfoUrl(options, coordinate, resolution);\n  }\n\n  /**\n   * Return the GetLegendGraphic URL, optionally optimized for the passed\n   * resolution and possibly including any passed specific parameters. Returns\n   * `undefined` if the GetLegendGraphic URL cannot be constructed.\n   *\n   * @param {number} [resolution] Resolution. If set to undefined, `SCALE`\n   *     will not be calculated and included in URL.\n   * @param {Object} [params] GetLegendGraphic params. If `LAYER` is set, the\n   *     request is generated for this wms layer, else it will try to use the\n   *     configured wms layer. Default `FORMAT` is `image/png`.\n   *     `VERSION` should not be specified here.\n   * @return {string|undefined} GetLegendGraphic URL.\n   * @api\n   */\n  getLegendUrl(resolution, params) {\n    return getLegendUrl(\n      {\n        url: this.url_,\n        params: {\n          ...this.params_,\n          ...params,\n        },\n      },\n      resolution,\n    );\n  }\n\n  /**\n   * Get the user-provided params, i.e. those passed to the constructor through\n   * the \"params\" option, and possibly updated using the updateParams method.\n   * @return {Object} Params.\n   * @api\n   */\n  getParams() {\n    return this.params_;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../Image.js\").default} Single image.\n   */\n  getImageInternal(extent, resolution, pixelRatio, projection) {\n    if (this.url_ === undefined) {\n      return null;\n    }\n    if (!this.loader || this.loaderProjection_ !== projection) {\n      // Lazily create loader to pick up the view projection and to allow `params` updates\n      this.loaderProjection_ = projection;\n      this.loader = createLoader({\n        crossOrigin: this.crossOrigin_,\n        params: this.params_,\n        projection: projection,\n        serverType: this.serverType_,\n        hidpi: this.hidpi_,\n        url: this.url_,\n        ratio: this.ratio_,\n        load: (image, src) => {\n          this.image.setImage(image);\n          this.imageLoadFunction_(this.image, src);\n          return decode(image);\n        },\n      });\n    }\n\n    return super.getImageInternal(extent, resolution, pixelRatio, projection);\n  }\n\n  /**\n   * Return the image load function of the source.\n   * @return {import(\"../Image.js\").LoadFunction} The image load function.\n   * @api\n   */\n  getImageLoadFunction() {\n    return this.imageLoadFunction_;\n  }\n\n  /**\n   * Return the URL used for this WMS source.\n   * @return {string|undefined} URL.\n   * @api\n   */\n  getUrl() {\n    return this.url_;\n  }\n\n  /**\n   * Set the image load function of the source.\n   * @param {import(\"../Image.js\").LoadFunction} imageLoadFunction Image load function.\n   * @api\n   */\n  setImageLoadFunction(imageLoadFunction) {\n    this.imageLoadFunction_ = imageLoadFunction;\n    this.changed();\n  }\n\n  /**\n   * Set the URL to use for requests.\n   * @param {string|undefined} url URL.\n   * @api\n   */\n  setUrl(url) {\n    if (url != this.url_) {\n      this.url_ = url;\n      this.loader = null;\n      this.changed();\n    }\n  }\n\n  /**\n   * Update the user-provided params.\n   * @param {Object} params Params.\n   * @api\n   */\n  updateParams(params) {\n    Object.assign(this.params_, params);\n    this.changed();\n  }\n\n  changed() {\n    this.image = null;\n    super.changed();\n  }\n}\n\nexport default ImageWMS;\n","/**\n * @module ol/source/TileEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a tile starts loading.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadstart\n   * @api\n   */\n  TILELOADSTART: 'tileloadstart',\n\n  /**\n   * Triggered when a tile finishes loading, either when its data is loaded,\n   * or when loading was aborted because the tile is no longer needed.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadend\n   * @api\n   */\n  TILELOADEND: 'tileloadend',\n\n  /**\n   * Triggered if tile loading results in an error. Note that this is not the\n   * right place to re-fetch tiles. See {@link module:ol/ImageTile~ImageTile#load}\n   * for details.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloaderror\n   * @api\n   */\n  TILELOADERROR: 'tileloaderror',\n};\n\n/**\n * @typedef {'tileloadstart'|'tileloadend'|'tileloaderror'} TileSourceEventTypes\n */\n","/**\n * @module ol/tilegrid/TileGrid\n */\nimport TileRange, {\n  createOrUpdate as createOrUpdateTileRange,\n} from '../TileRange.js';\nimport {DEFAULT_TILE_SIZE} from './common.js';\nimport {assert} from '../asserts.js';\nimport {ceil, clamp, floor} from '../math.js';\nimport {createOrUpdate, getTopLeft} from '../extent.js';\nimport {createOrUpdate as createOrUpdateTileCoord} from '../tilecoord.js';\nimport {intersectsLinearRing} from '../geom/flat/intersectsextent.js';\nimport {isSorted, linearFindNearest} from '../array.js';\nimport {toSize} from '../size.js';\n\n/**\n * @private\n * @type {import(\"../tilecoord.js\").TileCoord}\n */\nconst tmpTileCoord = [0, 0, 0];\n\n/**\n * Number of decimal digits to consider in integer values when rounding.\n * @type {number}\n */\nconst DECIMALS = 5;\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the tile grid. No tiles outside this\n * extent will be requested by {@link module:ol/source/Tile~TileSource} sources. When no `origin` or\n * `origins` are configured, the `origin` will be set to the top-left corner of the extent.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {import(\"../coordinate.js\").Coordinate} [origin] The tile grid origin, i.e. where the `x`\n * and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left to right and downwards. If not\n * specified, `extent` or `origins` must be provided.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} [origins] Tile grid origins, i.e. where\n * the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * origin. Tile coordinates increase left to right and downwards. If not specified, `extent` or\n * `origin` must be provided.\n * @property {!Array<number>} resolutions Resolutions. The array index of each resolution needs\n * to match the zoom level. This means that even if a `minZoom` is configured, the resolutions\n * array will have a length of `maxZoom + 1`.\n * @property {Array<import(\"../size.js\").Size>} [sizes] Number of tile rows and columns\n * of the grid for each zoom level. If specified the values\n * define each zoom level's extent together with the `origin` or `origins`.\n * A grid `extent` can be configured in addition, and will further limit the extent\n * for which tile requests are made by sources. If the bottom-left corner of\n * an extent is used as `origin` or `origins`, then the `y` value must be\n * negative because OpenLayers tile coordinates use the top left as the origin.\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\n * Default is `[256, 256]`.\n * @property {Array<number|import(\"../size.js\").Size>} [tileSizes] Tile sizes. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * tile size.\n */\n\n/**\n * @classdesc\n * Base class for setting the grid pattern for sources accessing tiled-image\n * servers.\n * @api\n */\nclass TileGrid {\n  /**\n   * @param {Options} options Tile grid options.\n   */\n  constructor(options) {\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.minZoom = options.minZoom !== undefined ? options.minZoom : 0;\n\n    /**\n     * @private\n     * @type {!Array<number>}\n     */\n    this.resolutions_ = options.resolutions;\n    assert(\n      isSorted(\n        this.resolutions_,\n        /**\n         * @param {number} a First resolution\n         * @param {number} b Second resolution\n         * @return {number} Comparison result\n         */\n        (a, b) => b - a,\n        true,\n      ),\n      '`resolutions` must be sorted in descending order',\n    );\n\n    // check if we've got a consistent zoom factor and origin\n    let zoomFactor;\n    if (!options.origins) {\n      for (let i = 0, ii = this.resolutions_.length - 1; i < ii; ++i) {\n        if (!zoomFactor) {\n          zoomFactor = this.resolutions_[i] / this.resolutions_[i + 1];\n        } else {\n          if (this.resolutions_[i] / this.resolutions_[i + 1] !== zoomFactor) {\n            zoomFactor = undefined;\n            break;\n          }\n        }\n      }\n    }\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zoomFactor_ = zoomFactor;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxZoom = this.resolutions_.length - 1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate|null}\n     */\n    this.origin_ = options.origin !== undefined ? options.origin : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../coordinate.js\").Coordinate>}\n     */\n    this.origins_ = null;\n    if (options.origins !== undefined) {\n      this.origins_ = options.origins;\n      assert(\n        this.origins_.length == this.resolutions_.length,\n        'Number of `origins` and `resolutions` must be equal',\n      );\n    }\n\n    const extent = options.extent;\n\n    if (extent !== undefined && !this.origin_ && !this.origins_) {\n      this.origin_ = getTopLeft(extent);\n    }\n\n    assert(\n      (!this.origin_ && this.origins_) || (this.origin_ && !this.origins_),\n      'Either `origin` or `origins` must be configured, never both',\n    );\n\n    /**\n     * @private\n     * @type {Array<number|import(\"../size.js\").Size>}\n     */\n    this.tileSizes_ = null;\n    if (options.tileSizes !== undefined) {\n      this.tileSizes_ = options.tileSizes;\n      assert(\n        this.tileSizes_.length == this.resolutions_.length,\n        'Number of `tileSizes` and `resolutions` must be equal',\n      );\n    }\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.tileSize_ =\n      options.tileSize !== undefined\n        ? options.tileSize\n        : !this.tileSizes_\n          ? DEFAULT_TILE_SIZE\n          : null;\n    assert(\n      (!this.tileSize_ && this.tileSizes_) ||\n        (this.tileSize_ && !this.tileSizes_),\n      'Either `tileSize` or `tileSizes` must be configured, never both',\n    );\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = extent !== undefined ? extent : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../TileRange.js\").default>}\n     */\n    this.fullTileRanges_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize_ = [0, 0];\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.tmpExtent_ = [0, 0, 0, 0];\n\n    if (options.sizes !== undefined) {\n      this.fullTileRanges_ = options.sizes.map((size, z) => {\n        const tileRange = new TileRange(\n          Math.min(0, size[0]),\n          Math.max(size[0] - 1, -1),\n          Math.min(0, size[1]),\n          Math.max(size[1] - 1, -1),\n        );\n        if (extent) {\n          const restrictedTileRange = this.getTileRangeForExtentAndZ(extent, z);\n          tileRange.minX = Math.max(restrictedTileRange.minX, tileRange.minX);\n          tileRange.maxX = Math.min(restrictedTileRange.maxX, tileRange.maxX);\n          tileRange.minY = Math.max(restrictedTileRange.minY, tileRange.minY);\n          tileRange.maxY = Math.min(restrictedTileRange.maxY, tileRange.maxY);\n        }\n        return tileRange;\n      });\n    } else if (extent) {\n      this.calculateTileRanges_(extent);\n    }\n  }\n\n  /**\n   * Call a function with each tile coordinate for a given extent and zoom level.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} zoom Integer zoom level.\n   * @param {function(import(\"../tilecoord.js\").TileCoord): void} callback Function called with each tile coordinate.\n   * @api\n   */\n  forEachTileCoord(extent, zoom, callback) {\n    const tileRange = this.getTileRangeForExtentAndZ(extent, zoom);\n    for (let i = tileRange.minX, ii = tileRange.maxX; i <= ii; ++i) {\n      for (let j = tileRange.minY, jj = tileRange.maxY; j <= jj; ++j) {\n        callback([zoom, i, j]);\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {function(number, import(\"../TileRange.js\").default): boolean} callback Callback.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary import(\"../extent.js\").Extent object.\n   * @return {boolean} Callback succeeded.\n   */\n  forEachTileCoordParentTileRange(\n    tileCoord,\n    callback,\n    tempTileRange,\n    tempExtent,\n  ) {\n    let tileRange, x, y;\n    let tileCoordExtent = null;\n    let z = tileCoord[0] - 1;\n    if (this.zoomFactor_ === 2) {\n      x = tileCoord[1];\n      y = tileCoord[2];\n    } else {\n      tileCoordExtent = this.getTileCoordExtent(tileCoord, tempExtent);\n    }\n    while (z >= this.minZoom) {\n      if (x !== undefined && y !== undefined) {\n        x = Math.floor(x / 2);\n        y = Math.floor(y / 2);\n        tileRange = createOrUpdateTileRange(x, x, y, y, tempTileRange);\n      } else {\n        tileRange = this.getTileRangeForExtentAndZ(\n          tileCoordExtent,\n          z,\n          tempTileRange,\n        );\n      }\n      if (callback(z, tileRange)) {\n        return true;\n      }\n      --z;\n    }\n    return false;\n  }\n\n  /**\n   * Get the extent for this tile grid, if it was configured.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the maximum zoom level for the grid.\n   * @return {number} Max zoom.\n   * @api\n   */\n  getMaxZoom() {\n    return this.maxZoom;\n  }\n\n  /**\n   * Get the minimum zoom level for the grid.\n   * @return {number} Min zoom.\n   * @api\n   */\n  getMinZoom() {\n    return this.minZoom;\n  }\n\n  /**\n   * Get the origin for the grid at the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {import(\"../coordinate.js\").Coordinate} Origin.\n   * @api\n   */\n  getOrigin(z) {\n    if (this.origin_) {\n      return this.origin_;\n    }\n    return this.origins_[z];\n  }\n\n  /**\n   * Get the resolution for the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {number} Resolution.\n   * @api\n   */\n  getResolution(z) {\n    return this.resolutions_[z];\n  }\n\n  /**\n   * Get the list of resolutions for the tile grid.\n   * @return {Array<number>} Resolutions.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary import(\"../extent.js\").Extent object.\n   * @return {import(\"../TileRange.js\").default|null} Tile range.\n   */\n  getTileCoordChildTileRange(tileCoord, tempTileRange, tempExtent) {\n    if (tileCoord[0] < this.maxZoom) {\n      if (this.zoomFactor_ === 2) {\n        const minX = tileCoord[1] * 2;\n        const minY = tileCoord[2] * 2;\n        return createOrUpdateTileRange(\n          minX,\n          minX + 1,\n          minY,\n          minY + 1,\n          tempTileRange,\n        );\n      }\n      const tileCoordExtent = this.getTileCoordExtent(\n        tileCoord,\n        tempExtent || this.tmpExtent_,\n      );\n      return this.getTileRangeForExtentAndZ(\n        tileCoordExtent,\n        tileCoord[0] + 1,\n        tempTileRange,\n      );\n    }\n    return null;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @return {import(\"../TileRange.js\").default|null} Tile range.\n   */\n  getTileRangeForTileCoordAndZ(tileCoord, z, tempTileRange) {\n    if (z > this.maxZoom || z < this.minZoom) {\n      return null;\n    }\n\n    const tileCoordZ = tileCoord[0];\n    const tileCoordX = tileCoord[1];\n    const tileCoordY = tileCoord[2];\n\n    if (z === tileCoordZ) {\n      return createOrUpdateTileRange(\n        tileCoordX,\n        tileCoordY,\n        tileCoordX,\n        tileCoordY,\n        tempTileRange,\n      );\n    }\n\n    if (this.zoomFactor_) {\n      const factor = Math.pow(this.zoomFactor_, z - tileCoordZ);\n      const minX = Math.floor(tileCoordX * factor);\n      const minY = Math.floor(tileCoordY * factor);\n      if (z < tileCoordZ) {\n        return createOrUpdateTileRange(minX, minX, minY, minY, tempTileRange);\n      }\n\n      const maxX = Math.floor(factor * (tileCoordX + 1)) - 1;\n      const maxY = Math.floor(factor * (tileCoordY + 1)) - 1;\n      return createOrUpdateTileRange(minX, maxX, minY, maxY, tempTileRange);\n    }\n\n    const tileCoordExtent = this.getTileCoordExtent(tileCoord, this.tmpExtent_);\n    return this.getTileRangeForExtentAndZ(tileCoordExtent, z, tempTileRange);\n  }\n\n  /**\n   * Get a tile range for the given extent and integer zoom level.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary tile range object.\n   * @return {import(\"../TileRange.js\").default} Tile range.\n   */\n  getTileRangeForExtentAndZ(extent, z, tempTileRange) {\n    this.getTileCoordForXYAndZ_(extent[0], extent[3], z, false, tmpTileCoord);\n    const minX = tmpTileCoord[1];\n    const minY = tmpTileCoord[2];\n    this.getTileCoordForXYAndZ_(extent[2], extent[1], z, true, tmpTileCoord);\n    const maxX = tmpTileCoord[1];\n    const maxY = tmpTileCoord[2];\n    return createOrUpdateTileRange(minX, maxX, minY, maxY, tempTileRange);\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {import(\"../coordinate.js\").Coordinate} Tile center.\n   */\n  getTileCoordCenter(tileCoord) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    return [\n      origin[0] + (tileCoord[1] + 0.5) * tileSize[0] * resolution,\n      origin[1] - (tileCoord[2] + 0.5) * tileSize[1] * resolution,\n    ];\n  }\n\n  /**\n   * Get the extent of a tile coordinate.\n   *\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary extent object.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getTileCoordExtent(tileCoord, tempExtent) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    const minX = origin[0] + tileCoord[1] * tileSize[0] * resolution;\n    const minY = origin[1] - (tileCoord[2] + 1) * tileSize[1] * resolution;\n    const maxX = minX + tileSize[0] * resolution;\n    const maxY = minY + tileSize[1] * resolution;\n    return createOrUpdate(minX, minY, maxX, maxY, tempExtent);\n  }\n\n  /**\n   * Get the tile coordinate for the given map coordinate and resolution.  This\n   * method considers that coordinates that intersect tile boundaries should be\n   * assigned the higher tile coordinate.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndResolution(coordinate, resolution, opt_tileCoord) {\n    return this.getTileCoordForXYAndResolution_(\n      coordinate[0],\n      coordinate[1],\n      resolution,\n      false,\n      opt_tileCoord,\n    );\n  }\n\n  /**\n   * Note that this method should not be called for resolutions that correspond\n   * to an integer zoom level.  Instead call the `getTileCoordForXYAndZ_` method.\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {number} resolution Resolution (for a non-integer zoom level).\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndResolution_(\n    x,\n    y,\n    resolution,\n    reverseIntersectionPolicy,\n    opt_tileCoord,\n  ) {\n    const z = this.getZForResolution(resolution);\n    const scale = resolution / this.getResolution(z);\n    const origin = this.getOrigin(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    let tileCoordX = (scale * (x - origin[0])) / resolution / tileSize[0];\n    let tileCoordY = (scale * (origin[1] - y)) / resolution / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = ceil(tileCoordX, DECIMALS) - 1;\n      tileCoordY = ceil(tileCoordY, DECIMALS) - 1;\n    } else {\n      tileCoordX = floor(tileCoordX, DECIMALS);\n      tileCoordY = floor(tileCoordY, DECIMALS);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Although there is repetition between this method and `getTileCoordForXYAndResolution_`,\n   * they should have separate implementations.  This method is for integer zoom\n   * levels.  The other method should only be called for resolutions corresponding\n   * to non-integer zoom levels.\n   * @param {number} x Map x coordinate.\n   * @param {number} y Map y coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndZ_(x, y, z, reverseIntersectionPolicy, opt_tileCoord) {\n    const origin = this.getOrigin(z);\n    const resolution = this.getResolution(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    let tileCoordX = (x - origin[0]) / resolution / tileSize[0];\n    let tileCoordY = (origin[1] - y) / resolution / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = ceil(tileCoordX, DECIMALS) - 1;\n      tileCoordY = ceil(tileCoordY, DECIMALS) - 1;\n    } else {\n      tileCoordX = floor(tileCoordX, DECIMALS);\n      tileCoordY = floor(tileCoordY, DECIMALS);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Get a tile coordinate given a map coordinate and zoom level.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} z Integer zoom level, e.g. the result of a `getZForResolution()` method call\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndZ(coordinate, z, opt_tileCoord) {\n    return this.getTileCoordForXYAndZ_(\n      coordinate[0],\n      coordinate[1],\n      z,\n      false,\n      opt_tileCoord,\n    );\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {number} Tile resolution.\n   */\n  getTileCoordResolution(tileCoord) {\n    return this.resolutions_[tileCoord[0]];\n  }\n\n  /**\n   * Get the tile size for a zoom level. The type of the return value matches the\n   * `tileSize` or `tileSizes` that the tile grid was configured with. To always\n   * get an {@link import(\"../size.js\").Size}, run the result through {@link module:ol/size.toSize}.\n   * @param {number} z Z.\n   * @return {number|import(\"../size.js\").Size} Tile size.\n   * @api\n   */\n  getTileSize(z) {\n    if (this.tileSize_) {\n      return this.tileSize_;\n    }\n    return this.tileSizes_[z];\n  }\n\n  /**\n   * @param {number} z Zoom level.\n   * @return {import(\"../TileRange.js\").default|null} Extent tile range for the specified zoom level.\n   */\n  getFullTileRange(z) {\n    if (!this.fullTileRanges_) {\n      return this.extent_\n        ? this.getTileRangeForExtentAndZ(this.extent_, z)\n        : null;\n    }\n    return this.fullTileRanges_[z];\n  }\n\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number|import(\"../array.js\").NearestDirectionFunction} [opt_direction]\n   *     If 0, the nearest resolution will be used.\n   *     If 1, the nearest higher resolution (lower Z) will be used. If -1, the\n   *     nearest lower resolution (higher Z) will be used. Default is 0.\n   *     Use a {@link module:ol/array~NearestDirectionFunction} for more precise control.\n   *\n   * For example to change tile Z at the midpoint of zoom levels\n   * ```js\n   * function(value, high, low) {\n   *   return value - low * Math.sqrt(high / low);\n   * }\n   * ```\n   * @return {number} Z.\n   * @api\n   */\n  getZForResolution(resolution, opt_direction) {\n    const z = linearFindNearest(\n      this.resolutions_,\n      resolution,\n      opt_direction || 0,\n    );\n    return clamp(z, this.minZoom, this.maxZoom);\n  }\n\n  /**\n   * The tile with the provided tile coordinate intersects the given viewport.\n   * @param {import('../tilecoord.js').TileCoord} tileCoord Tile coordinate.\n   * @param {Array<number>} viewport Viewport as returned from {@link module:ol/extent.getRotatedViewport}.\n   * @return {boolean} The tile with the provided tile coordinate intersects the given viewport.\n   */\n  tileCoordIntersectsViewport(tileCoord, viewport) {\n    return intersectsLinearRing(\n      viewport,\n      0,\n      viewport.length,\n      2,\n      this.getTileCoordExtent(tileCoord),\n    );\n  }\n\n  /**\n   * @param {!import(\"../extent.js\").Extent} extent Extent for this tile grid.\n   * @private\n   */\n  calculateTileRanges_(extent) {\n    const length = this.resolutions_.length;\n    const fullTileRanges = new Array(length);\n    for (let z = this.minZoom; z < length; ++z) {\n      fullTileRanges[z] = this.getTileRangeForExtentAndZ(extent, z);\n    }\n    this.fullTileRanges_ = fullTileRanges;\n  }\n}\n\nexport default TileGrid;\n","/**\n * @module ol/tilegrid/WMTS\n */\n\nimport TileGrid from './TileGrid.js';\nimport {get as getProjection} from '../proj.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the tile grid. No tiles\n * outside this extent will be requested by {@link module:ol/source/Tile~TileSource} sources.\n * When no `origin` or `origins` are configured, the `origin` will be set to the\n * top-left corner of the extent.\n * @property {import(\"../coordinate.js\").Coordinate} [origin] The tile grid origin, i.e.\n * where the `x` and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left\n * to right and downwards. If not specified, `extent` or `origins` must be provided.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} [origins] Tile grid origins,\n * i.e. where the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If\n * given, the array length should match the length of the `resolutions` array, i.e.\n * each resolution can have a different origin. Tile coordinates increase left to\n * right and downwards. If not specified, `extent` or `origin` must be provided.\n * @property {!Array<number>} resolutions Resolutions. The array index of each\n * resolution needs to match the zoom level. This means that even if a `minZoom`\n * is configured, the resolutions array will have a length of `maxZoom + 1`\n * @property {!Array<string>} matrixIds matrix IDs. The length of this array needs\n * to match the length of the `resolutions` array.\n * @property {Array<import(\"../size.js\").Size>} [sizes] Number of tile rows and columns\n * of the grid for each zoom level. The values here are the `TileMatrixWidth` and\n * `TileMatrixHeight` advertised in the GetCapabilities response of the WMTS, and\n * define each zoom level's extent together with the `origin` or `origins`.\n * A grid `extent` can be configured in addition, and will further limit the extent for\n * which tile requests are made by sources. If the bottom-left corner of\n * an extent is used as `origin` or `origins`, then the `y` value must be\n * negative because OpenLayers tile coordinates use the top left as the origin.\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\n * @property {Array<number|import(\"../size.js\").Size>} [tileSizes] Tile sizes. The length of\n * this array needs to match the length of the `resolutions` array.\n */\n\n/**\n * @classdesc\n * Set the grid pattern for sources accessing WMTS tiled-image servers.\n * @api\n */\nclass WMTSTileGrid extends TileGrid {\n  /**\n   * @param {Options} options WMTS options.\n   */\n  constructor(options) {\n    super({\n      extent: options.extent,\n      origin: options.origin,\n      origins: options.origins,\n      resolutions: options.resolutions,\n      tileSize: options.tileSize,\n      tileSizes: options.tileSizes,\n      sizes: options.sizes,\n    });\n\n    /**\n     * @private\n     * @type {!Array<string>}\n     */\n    this.matrixIds_ = options.matrixIds;\n  }\n\n  /**\n   * @param {number} z Z.\n   * @return {string} MatrixId..\n   */\n  getMatrixId(z) {\n    return this.matrixIds_[z];\n  }\n\n  /**\n   * Get the list of matrix identifiers.\n   * @return {Array<string>} MatrixIds.\n   * @api\n   */\n  getMatrixIds() {\n    return this.matrixIds_;\n  }\n}\n\nexport default WMTSTileGrid;\n\n/**\n * Create a tile grid from a WMTS capabilities matrix set and an\n * optional TileMatrixSetLimits.\n * @param {Object} matrixSet An object representing a matrixSet in the\n *     capabilities document.\n * @param {import(\"../extent.js\").Extent} [extent] An optional extent to restrict the tile\n *     ranges the server provides.\n * @param {Array<Object>} [matrixLimits] An optional object representing\n *     the available matrices for tileGrid.\n * @return {WMTSTileGrid} WMTS tileGrid instance.\n * @api\n */\nexport function createFromCapabilitiesMatrixSet(\n  matrixSet,\n  extent,\n  matrixLimits,\n) {\n  /** @type {!Array<number>} */\n  const resolutions = [];\n  /** @type {!Array<string>} */\n  const matrixIds = [];\n  /** @type {!Array<import(\"../coordinate.js\").Coordinate>} */\n  const origins = [];\n  /** @type {!Array<number|import(\"../size.js\").Size>} */\n  const tileSizes = [];\n  /** @type {!Array<import(\"../size.js\").Size>} */\n  const sizes = [];\n\n  matrixLimits = matrixLimits !== undefined ? matrixLimits : [];\n\n  const supportedCRSPropName = 'SupportedCRS';\n  const matrixIdsPropName = 'TileMatrix';\n  const identifierPropName = 'Identifier';\n  const scaleDenominatorPropName = 'ScaleDenominator';\n  const topLeftCornerPropName = 'TopLeftCorner';\n  const tileWidthPropName = 'TileWidth';\n  const tileHeightPropName = 'TileHeight';\n\n  const code = matrixSet[supportedCRSPropName];\n  const projection = getProjection(code);\n  const metersPerUnit = projection.getMetersPerUnit();\n  // swap origin x and y coordinates if axis orientation is lat/long\n  const switchOriginXY = projection.getAxisOrientation().substr(0, 2) == 'ne';\n\n  matrixSet[matrixIdsPropName].sort(function (a, b) {\n    return b[scaleDenominatorPropName] - a[scaleDenominatorPropName];\n  });\n\n  matrixSet[matrixIdsPropName].forEach(function (elt) {\n    let matrixAvailable;\n    // use of matrixLimits to filter TileMatrices from GetCapabilities\n    // TileMatrixSet from unavailable matrix levels.\n    if (matrixLimits.length > 0) {\n      matrixAvailable = matrixLimits.find(function (elt_ml) {\n        if (elt[identifierPropName] == elt_ml[matrixIdsPropName]) {\n          return true;\n        }\n        // Fallback for tileMatrix identifiers that don't get prefixed\n        // by their tileMatrixSet identifiers.\n        if (!elt[identifierPropName].includes(':')) {\n          return (\n            matrixSet[identifierPropName] + ':' + elt[identifierPropName] ===\n            elt_ml[matrixIdsPropName]\n          );\n        }\n        return false;\n      });\n    } else {\n      matrixAvailable = true;\n    }\n\n    if (matrixAvailable) {\n      matrixIds.push(elt[identifierPropName]);\n      const resolution =\n        (elt[scaleDenominatorPropName] * 0.28e-3) / metersPerUnit;\n      const tileWidth = elt[tileWidthPropName];\n      const tileHeight = elt[tileHeightPropName];\n      if (switchOriginXY) {\n        origins.push([\n          elt[topLeftCornerPropName][1],\n          elt[topLeftCornerPropName][0],\n        ]);\n      } else {\n        origins.push(elt[topLeftCornerPropName]);\n      }\n      resolutions.push(resolution);\n      tileSizes.push(\n        tileWidth == tileHeight ? tileWidth : [tileWidth, tileHeight],\n      );\n      sizes.push([elt['MatrixWidth'], elt['MatrixHeight']]);\n    }\n  });\n\n  return new WMTSTileGrid({\n    extent: extent,\n    origins: origins,\n    resolutions: resolutions,\n    matrixIds: matrixIds,\n    tileSizes: tileSizes,\n    sizes: sizes,\n  });\n}\n","/**\n * @module ol/tilegrid\n */\nimport TileGrid from './tilegrid/TileGrid.js';\nimport {DEFAULT_MAX_ZOOM, DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {METERS_PER_UNIT, get as getProjection} from './proj.js';\nimport {\n  containsCoordinate,\n  createOrUpdate,\n  getCorner,\n  getHeight,\n  getWidth,\n} from './extent.js';\nimport {toSize} from './size.js';\n\nexport {TileGrid};\nexport {default as WMTS} from './tilegrid/WMTS.js';\n\n/**\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {!TileGrid} Default tile grid for the\n * passed projection.\n */\nexport function getForProjection(projection) {\n  let tileGrid = projection.getDefaultTileGrid();\n  if (!tileGrid) {\n    tileGrid = createForProjection(projection);\n    projection.setDefaultTileGrid(tileGrid);\n  }\n  return tileGrid;\n}\n\n/**\n * @param {TileGrid} tileGrid Tile grid.\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {import(\"./tilecoord.js\").TileCoord} Tile coordinate.\n */\nexport function wrapX(tileGrid, tileCoord, projection) {\n  const z = tileCoord[0];\n  const center = tileGrid.getTileCoordCenter(tileCoord);\n  const projectionExtent = extentFromProjection(projection);\n  if (!containsCoordinate(projectionExtent, center)) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.ceil(\n      (projectionExtent[0] - center[0]) / worldWidth,\n    );\n    center[0] += worldWidth * worldsAway;\n    return tileGrid.getTileCoordForCoordAndZ(center, z);\n  }\n  return tileCoord;\n}\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent.js\").Corner} [corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForExtent(extent, maxZoom, tileSize, corner) {\n  corner = corner !== undefined ? corner : 'top-left';\n\n  const resolutions = resolutionsFromExtent(extent, maxZoom, tileSize);\n\n  return new TileGrid({\n    extent: extent,\n    origin: getCorner(extent, corner),\n    resolutions: resolutions,\n    tileSize: tileSize,\n  });\n}\n\n/**\n * @typedef {Object} XYZOptions\n * @property {import(\"./extent.js\").Extent} [extent] Extent for the tile grid. The origin for an XYZ tile grid is the\n * top-left corner of the extent. If `maxResolution` is not provided the zero level of the grid is defined by the resolution\n * at which one tile fits in the provided extent. If not provided, the extent of the EPSG:3857 projection is used.\n * @property {number} [maxResolution] Resolution at level zero.\n * @property {number} [maxZoom] Maximum zoom. The default is `42`. This determines the number of levels\n * in the grid set. For example, a `maxZoom` of 21 means there are 22 levels in the grid set.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {number|import(\"./size.js\").Size} [tileSize=[256, 256]] Tile size in pixels.\n */\n\n/**\n * Creates a tile grid with a standard XYZ tiling scheme.\n * @param {XYZOptions} [options] Tile grid options.\n * @return {!TileGrid} Tile grid instance.\n * @api\n */\nexport function createXYZ(options) {\n  const xyzOptions = options || {};\n\n  const extent = xyzOptions.extent || getProjection('EPSG:3857').getExtent();\n\n  const gridOptions = {\n    extent: extent,\n    minZoom: xyzOptions.minZoom,\n    tileSize: xyzOptions.tileSize,\n    resolutions: resolutionsFromExtent(\n      extent,\n      xyzOptions.maxZoom,\n      xyzOptions.tileSize,\n      xyzOptions.maxResolution,\n    ),\n  };\n  return new TileGrid(gridOptions);\n}\n\n/**\n * Create a resolutions array from an extent.  A zoom factor of 2 is assumed.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {number} [maxResolution] Resolution at level zero.\n * @return {!Array<number>} Resolutions array.\n */\nfunction resolutionsFromExtent(extent, maxZoom, tileSize, maxResolution) {\n  maxZoom = maxZoom !== undefined ? maxZoom : DEFAULT_MAX_ZOOM;\n  tileSize = toSize(tileSize !== undefined ? tileSize : DEFAULT_TILE_SIZE);\n\n  const height = getHeight(extent);\n  const width = getWidth(extent);\n\n  maxResolution =\n    maxResolution > 0\n      ? maxResolution\n      : Math.max(width / tileSize[0], height / tileSize[1]);\n\n  const length = maxZoom + 1;\n  const resolutions = new Array(length);\n  for (let z = 0; z < length; ++z) {\n    resolutions[z] = maxResolution / Math.pow(2, z);\n  }\n  return resolutions;\n}\n\n/**\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent.js\").Corner} [corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForProjection(projection, maxZoom, tileSize, corner) {\n  const extent = extentFromProjection(projection);\n  return createForExtent(extent, maxZoom, tileSize, corner);\n}\n\n/**\n * Generate a tile grid extent from a projection.  If the projection has an\n * extent, it is used.  If not, a global extent is assumed.\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @return {import(\"./extent.js\").Extent} Extent.\n */\nexport function extentFromProjection(projection) {\n  projection = getProjection(projection);\n  let extent = projection.getExtent();\n  if (!extent) {\n    const half =\n      (180 * METERS_PER_UNIT.degrees) / projection.getMetersPerUnit();\n    extent = createOrUpdate(-half, -half, half, half);\n  }\n  return extent;\n}\n","/**\n * @module ol/source/Tile\n */\nimport Event from '../events/Event.js';\nimport Source from './Source.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport {abstract} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {equivalent} from '../proj.js';\nimport {getKeyZXY, withinExtentAndZ} from '../tilecoord.js';\nimport {\n  getForProjection as getTileGridForProjection,\n  wrapX,\n} from '../tilegrid.js';\nimport {scale as scaleSize, toSize} from '../size.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./TileEventType\").TileSourceEventTypes, TileSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     import(\"./TileEventType\").TileSourceEventTypes, Return>} TileSourceOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] CacheSize.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./Source.js\").State} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {boolean} [wrapX=false] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing images divided into a tile grid.\n * @abstract\n * @api\n */\nclass TileSource extends Source {\n  /**\n   * @param {Options} options SourceTile source options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      projection: options.projection,\n      state: options.state,\n      wrapX: options.wrapX,\n      interpolate: options.interpolate,\n    });\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {TileSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.opaque_ = options.opaque !== undefined ? options.opaque : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilePixelRatio_ =\n      options.tilePixelRatio !== undefined ? options.tilePixelRatio : 1;\n\n    /**\n     * @type {import(\"../tilegrid/TileGrid.js\").default|null}\n     */\n    this.tileGrid = options.tileGrid !== undefined ? options.tileGrid : null;\n\n    const tileSize = [256, 256];\n    if (this.tileGrid) {\n      toSize(this.tileGrid.getTileSize(this.tileGrid.getMinZoom()), tileSize);\n    }\n\n    /**\n     * @protected\n     * @type {import(\"../TileCache.js\").default}\n     */\n    this.tileCache = new TileCache(options.cacheSize || 0);\n\n    /**\n     * @protected\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize = [0, 0];\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.key_ = options.key || '';\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").Options}\n     */\n    this.tileOptions = {\n      transition: options.transition,\n      interpolate: options.interpolate,\n    };\n\n    /**\n     * zDirection hint, read by the renderer. Indicates which resolution should be used\n     * by a renderer if the views resolution does not match any resolution of the tile source.\n     * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n     * will be used. If -1, the nearest higher resolution will be used.\n     * @type {number|import(\"../array.js\").NearestDirectionFunction}\n     */\n    this.zDirection = options.zDirection ? options.zDirection : 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.tileCache.canExpireCache();\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (tileCache) {\n      tileCache.expireCache(usedTiles);\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {number} z Zoom level.\n   * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n   * @param {function(import(\"../Tile.js\").default):(boolean|void)} callback Called with each\n   *     loaded tile.  If the callback returns `false`, the tile will not be\n   *     considered loaded.\n   * @return {boolean} The tile range is fully covered with loaded tiles.\n   */\n  forEachLoadedTile(projection, z, tileRange, callback) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (!tileCache) {\n      return false;\n    }\n\n    let covered = true;\n    let tile, tileCoordKey, loaded;\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        tileCoordKey = getKeyZXY(z, x, y);\n        loaded = false;\n        if (tileCache.containsKey(tileCoordKey)) {\n          tile = /** @type {!import(\"../Tile.js\").default} */ (\n            tileCache.get(tileCoordKey)\n          );\n          loaded = tile.getState() === TileState.LOADED;\n          if (loaded) {\n            loaded = callback(tile) !== false;\n          }\n        }\n        if (!loaded) {\n          covered = false;\n        }\n      }\n    }\n    return covered;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   */\n  getKey() {\n    return this.key_;\n  }\n\n  /**\n   * Set the value to be used as the key for all tiles in the source.\n   * @param {string} key The key for tiles.\n   * @protected\n   */\n  setKey(key) {\n    if (this.key_ !== key) {\n      this.key_ = key;\n      this.changed();\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {boolean} Opaque.\n   */\n  getOpaque(projection) {\n    return this.opaque_;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection\").default} [projection] Projection.\n   * @return {Array<number>|null} Resolutions.\n   */\n  getResolutions(projection) {\n    const tileGrid = projection\n      ? this.getTileGridForProjection(projection)\n      : this.tileGrid;\n    if (!tileGrid) {\n      return null;\n    }\n    return tileGrid.getResolutions();\n  }\n\n  /**\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    return abstract();\n  }\n\n  /**\n   * Return the tile grid of the tile source.\n   * @return {import(\"../tilegrid/TileGrid.js\").default|null} Tile grid.\n   * @api\n   */\n  getTileGrid() {\n    return this.tileGrid;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    if (!this.tileGrid) {\n      return getTileGridForProjection(projection);\n    }\n    return this.tileGrid;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   * @protected\n   */\n  getTileCacheForProjection(projection) {\n    const sourceProjection = this.getProjection();\n    assert(\n      sourceProjection === null || equivalent(sourceProjection, projection),\n      'A VectorTile source can only be rendered if it has a projection compatible with the view projection.',\n    );\n    return this.tileCache;\n  }\n\n  /**\n   * Get the tile pixel ratio for this source. Subclasses may override this\n   * method, which is meant to return a supported pixel ratio that matches the\n   * provided `pixelRatio` as close as possible.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Tile pixel ratio.\n   */\n  getTilePixelRatio(pixelRatio) {\n    return this.tilePixelRatio_;\n  }\n\n  /**\n   * @param {number} z Z.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../size.js\").Size} Tile size.\n   */\n  getTilePixelSize(z, pixelRatio, projection) {\n    const tileGrid = this.getTileGridForProjection(projection);\n    const tilePixelRatio = this.getTilePixelRatio(pixelRatio);\n    const tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n    if (tilePixelRatio == 1) {\n      return tileSize;\n    }\n    return scaleSize(tileSize, tilePixelRatio, this.tmpSize);\n  }\n\n  /**\n   * Returns a tile coordinate wrapped around the x-axis. When the tile coordinate\n   * is outside the resolution and extent range of the tile grid, `null` will be\n   * returned.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../proj/Projection.js\").default} [projection] Projection.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate to be passed to the tileUrlFunction or\n   *     null if no tile URL should be created for the passed `tileCoord`.\n   */\n  getTileCoordForTileUrlFunction(tileCoord, projection) {\n    projection = projection !== undefined ? projection : this.getProjection();\n    const tileGrid = this.getTileGridForProjection(projection);\n    if (this.getWrapX() && projection.isGlobal()) {\n      tileCoord = wrapX(tileGrid, tileCoord, projection);\n    }\n    return withinExtentAndZ(tileCoord, tileGrid) ? tileCoord : null;\n  }\n\n  /**\n   * Remove all cached tiles from the source. The next render cycle will fetch new tiles.\n   * @api\n   */\n  clear() {\n    this.tileCache.clear();\n  }\n\n  refresh() {\n    this.clear();\n    super.refresh();\n  }\n\n  /**\n   * Increases the cache size if needed\n   * @param {number} tileCount Minimum number of tiles needed.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  updateCacheSize(tileCount, projection) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (tileCount > tileCache.highWaterMark) {\n      tileCache.highWaterMark = tileCount;\n    }\n  }\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  useTile(z, x, y, projection) {}\n}\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Tile~TileSource} instances are instances of this\n * type.\n */\nexport class TileSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Tile.js\").default} tile The tile.\n   */\n  constructor(type, tile) {\n    super(type);\n\n    /**\n     * The tile related to the event.\n     * @type {import(\"../Tile.js\").default}\n     * @api\n     */\n    this.tile = tile;\n  }\n}\n\nexport default TileSource;\n","/**\n * @module ol/tileurlfunction\n */\nimport {modulo} from './math.js';\nimport {hash as tileCoordHash} from './tilecoord.js';\n\n/**\n * @param {string} template Template.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplate(template, tileGrid) {\n  const zRegEx = /\\{z\\}/g;\n  const xRegEx = /\\{x\\}/g;\n  const yRegEx = /\\{y\\}/g;\n  const dashYRegEx = /\\{-y\\}/g;\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      }\n      return template\n        .replace(zRegEx, tileCoord[0].toString())\n        .replace(xRegEx, tileCoord[1].toString())\n        .replace(yRegEx, tileCoord[2].toString())\n        .replace(dashYRegEx, function () {\n          const z = tileCoord[0];\n          const range = tileGrid.getFullTileRange(z);\n          if (!range) {\n            throw new Error(\n              'The {-y} placeholder requires a tile grid with extent',\n            );\n          }\n          const y = range.getHeight() - tileCoord[2] - 1;\n          return y.toString();\n        });\n    }\n  );\n}\n\n/**\n * @param {Array<string>} templates Templates.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplates(templates, tileGrid) {\n  const len = templates.length;\n  const tileUrlFunctions = new Array(len);\n  for (let i = 0; i < len; ++i) {\n    tileUrlFunctions[i] = createFromTemplate(templates[i], tileGrid);\n  }\n  return createFromTileUrlFunctions(tileUrlFunctions);\n}\n\n/**\n * @param {Array<import(\"./Tile.js\").UrlFunction>} tileUrlFunctions Tile URL Functions.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTileUrlFunctions(tileUrlFunctions) {\n  if (tileUrlFunctions.length === 1) {\n    return tileUrlFunctions[0];\n  }\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      }\n      const h = tileCoordHash(tileCoord);\n      const index = modulo(h, tileUrlFunctions.length);\n      return tileUrlFunctions[index](tileCoord, pixelRatio, projection);\n    }\n  );\n}\n\n/**\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {number} pixelRatio Pixel ratio.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {string|undefined} Tile URL.\n */\nexport function nullTileUrlFunction(tileCoord, pixelRatio, projection) {\n  return undefined;\n}\n\n/**\n * @param {string} url URL.\n * @return {Array<string>} Array of urls.\n */\nexport function expandUrl(url) {\n  const urls = [];\n  let match = /\\{([a-z])-([a-z])\\}/.exec(url);\n  if (match) {\n    // char range\n    const startCharCode = match[1].charCodeAt(0);\n    const stopCharCode = match[2].charCodeAt(0);\n    let charCode;\n    for (charCode = startCharCode; charCode <= stopCharCode; ++charCode) {\n      urls.push(url.replace(match[0], String.fromCharCode(charCode)));\n    }\n    return urls;\n  }\n  match = /\\{(\\d+)-(\\d+)\\}/.exec(url);\n  if (match) {\n    // number range\n    const stop = parseInt(match[2], 10);\n    for (let i = parseInt(match[1], 10); i <= stop; i++) {\n      urls.push(url.replace(match[0], i.toString()));\n    }\n    return urls;\n  }\n  urls.push(url);\n  return urls;\n}\n","/**\n * @module ol/source/UrlTile\n */\nimport TileEventType from './TileEventType.js';\nimport TileSource, {TileSourceEvent} from './Tile.js';\nimport TileState from '../TileState.js';\nimport {createFromTemplates, expandUrl} from '../tileurlfunction.js';\nimport {getKeyZXY} from '../tilecoord.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Cache size.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./Source.js\").State} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {import(\"../Tile.js\").LoadFunction} tileLoadFunction TileLoadFunction.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] TileUrlFunction.\n * @property {string} [url] Url.\n * @property {Array<string>} [urls] Urls.\n * @property {boolean} [wrapX=true] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Base class for sources providing tiles divided into a tile grid over http.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n */\nclass UrlTile extends TileSource {\n  /**\n   * @param {Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tilePixelRatio: options.tilePixelRatio,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      interpolate: options.interpolate,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.generateTileUrlFunction_ =\n      this.tileUrlFunction === UrlTile.prototype.tileUrlFunction;\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction = options.tileLoadFunction;\n\n    if (options.tileUrlFunction) {\n      this.tileUrlFunction = options.tileUrlFunction;\n    }\n\n    /**\n     * @protected\n     * @type {!Array<string>|null}\n     */\n    this.urls = null;\n\n    if (options.urls) {\n      this.setUrls(options.urls);\n    } else if (options.url) {\n      this.setUrl(options.url);\n    }\n\n    /**\n     * @private\n     * @type {!Object<string, boolean>}\n     */\n    this.tileLoadingKeys_ = {};\n  }\n\n  /**\n   * Return the tile load function of the source.\n   * @return {import(\"../Tile.js\").LoadFunction} TileLoadFunction\n   * @api\n   */\n  getTileLoadFunction() {\n    return this.tileLoadFunction;\n  }\n\n  /**\n   * Return the tile URL function of the source.\n   * @return {import(\"../Tile.js\").UrlFunction} TileUrlFunction\n   * @api\n   */\n  getTileUrlFunction() {\n    return Object.getPrototypeOf(this).tileUrlFunction === this.tileUrlFunction\n      ? this.tileUrlFunction.bind(this)\n      : this.tileUrlFunction;\n  }\n\n  /**\n   * Return the URLs used for this source.\n   * When a tileUrlFunction is used instead of url or urls,\n   * null will be returned.\n   * @return {!Array<string>|null} URLs.\n   * @api\n   */\n  getUrls() {\n    return this.urls;\n  }\n\n  /**\n   * Handle tile change events.\n   * @param {import(\"../events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"../Tile.js\").default} */ (event.target);\n    const uid = getUid(tile);\n    const tileState = tile.getState();\n    let type;\n    if (tileState == TileState.LOADING) {\n      this.tileLoadingKeys_[uid] = true;\n      type = TileEventType.TILELOADSTART;\n    } else if (uid in this.tileLoadingKeys_) {\n      delete this.tileLoadingKeys_[uid];\n      type =\n        tileState == TileState.ERROR\n          ? TileEventType.TILELOADERROR\n          : tileState == TileState.LOADED\n            ? TileEventType.TILELOADEND\n            : undefined;\n    }\n    if (type != undefined) {\n      this.dispatchEvent(new TileSourceEvent(type, tile));\n    }\n  }\n\n  /**\n   * Set the tile load function of the source.\n   * @param {import(\"../Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @api\n   */\n  setTileLoadFunction(tileLoadFunction) {\n    this.tileCache.clear();\n    this.tileLoadFunction = tileLoadFunction;\n    this.changed();\n  }\n\n  /**\n   * Set the tile URL function of the source.\n   * @param {import(\"../Tile.js\").UrlFunction} tileUrlFunction Tile URL function.\n   * @param {string} [key] Optional new tile key for the source.\n   * @api\n   */\n  setTileUrlFunction(tileUrlFunction, key) {\n    this.tileUrlFunction = tileUrlFunction;\n    this.tileCache.pruneExceptNewestZ();\n    if (typeof key !== 'undefined') {\n      this.setKey(key);\n    } else {\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the URL to use for requests.\n   * @param {string} url URL.\n   * @api\n   */\n  setUrl(url) {\n    const urls = expandUrl(url);\n    this.urls = urls;\n    this.setUrls(urls);\n  }\n\n  /**\n   * Set the URLs to use for requests.\n   * @param {Array<string>} urls URLs.\n   * @api\n   */\n  setUrls(urls) {\n    this.urls = urls;\n    const key = urls.join('\\n');\n    if (this.generateTileUrlFunction_) {\n      this.setTileUrlFunction(createFromTemplates(urls, this.tileGrid), key);\n    } else {\n      this.setKey(key);\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {string|undefined} Tile URL.\n   */\n  tileUrlFunction(tileCoord, pixelRatio, projection) {\n    return undefined;\n  }\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   */\n  useTile(z, x, y) {\n    const tileCoordKey = getKeyZXY(z, x, y);\n    if (this.tileCache.containsKey(tileCoordKey)) {\n      this.tileCache.get(tileCoordKey);\n    }\n  }\n}\n\nexport default UrlTile;\n","/**\n * @module ol/source/TileImage\n */\nimport EventType from '../events/EventType.js';\nimport ImageTile from '../ImageTile.js';\nimport ReprojTile from '../reproj/Tile.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport UrlTile from './UrlTile.js';\nimport {equivalent, get as getProjection} from '../proj.js';\nimport {getKey, getKeyZXY} from '../tilecoord.js';\nimport {getForProjection as getTileGridForProjection} from '../tilegrid.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"./Source.js\").State} [state] Source state.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service. For example, if the tile\n * service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get tile URL given a tile coordinate and the projection.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX] Whether to wrap the world horizontally. The default, is to\n * request out-of-bounds tiles from the server. When set to `false`, only one\n * world will be rendered. When set to `true`, tiles will be requested for one\n * world only, but they will be wrapped horizontally to render multiple worlds.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [key] Optional tile key for proper cache fetching\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Base class for sources providing images divided into a tile grid.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n * @api\n */\nclass TileImage extends UrlTile {\n  /**\n   * @param {!Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tileLoadFunction: options.tileLoadFunction\n        ? options.tileLoadFunction\n        : defaultTileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      interpolate:\n        options.interpolate !== undefined ? options.interpolate : true,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @protected\n     * @type {?string}\n     */\n    this.crossOrigin =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @protected\n     * @type {typeof ImageTile}\n     */\n    this.tileClass =\n      options.tileClass !== undefined ? options.tileClass : ImageTile;\n\n    /**\n     * @protected\n     * @type {!Object<string, TileCache>}\n     */\n    this.tileCacheForProjection = {};\n\n    /**\n     * @protected\n     * @type {!Object<string, import(\"../tilegrid/TileGrid.js\").default>}\n     */\n    this.tileGridForProjection = {};\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.reprojectionErrorThreshold_ = options.reprojectionErrorThreshold;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderReprojectionEdges_ = false;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    if (this.tileCache.canExpireCache()) {\n      return true;\n    }\n    for (const key in this.tileCacheForProjection) {\n      if (this.tileCacheForProjection[key].canExpireCache()) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    const usedTileCache = this.getTileCacheForProjection(projection);\n\n    this.tileCache.expireCache(\n      this.tileCache == usedTileCache ? usedTiles : {},\n    );\n    for (const id in this.tileCacheForProjection) {\n      const tileCache = this.tileCacheForProjection[id];\n      tileCache.expireCache(tileCache == usedTileCache ? usedTiles : {});\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    if (\n      this.getProjection() &&\n      projection &&\n      !equivalent(this.getProjection(), projection)\n    ) {\n      return 0;\n    }\n    return this.getGutter();\n  }\n\n  /**\n   * @return {number} Gutter.\n   */\n  getGutter() {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   */\n  getKey() {\n    let key = super.getKey();\n    if (!this.getInterpolate()) {\n      key += ':disable-interpolation';\n    }\n    return key;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {boolean} Opaque.\n   */\n  getOpaque(projection) {\n    if (\n      this.getProjection() &&\n      projection &&\n      !equivalent(this.getProjection(), projection)\n    ) {\n      return false;\n    }\n    return super.getOpaque(projection);\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    const thisProj = this.getProjection();\n    if (this.tileGrid && (!thisProj || equivalent(thisProj, projection))) {\n      return this.tileGrid;\n    }\n    const projKey = getUid(projection);\n    if (!(projKey in this.tileGridForProjection)) {\n      this.tileGridForProjection[projKey] =\n        getTileGridForProjection(projection);\n    }\n    return this.tileGridForProjection[projKey];\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   */\n  getTileCacheForProjection(projection) {\n    const thisProj = this.getProjection();\n    if (!thisProj || equivalent(thisProj, projection)) {\n      return this.tileCache;\n    }\n    const projKey = getUid(projection);\n    if (!(projKey in this.tileCacheForProjection)) {\n      this.tileCacheForProjection[projKey] = new TileCache(\n        this.tileCache.highWaterMark,\n      );\n    }\n    return this.tileCacheForProjection[projKey];\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {string} key The key set on the tile.\n   * @return {!ImageTile} Tile.\n   * @private\n   */\n  createTile_(z, x, y, pixelRatio, projection, key) {\n    const tileCoord = [z, x, y];\n    const urlTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      projection,\n    );\n    const tileUrl = urlTileCoord\n      ? this.tileUrlFunction(urlTileCoord, pixelRatio, projection)\n      : undefined;\n    const tile = new this.tileClass(\n      tileCoord,\n      tileUrl !== undefined ? TileState.IDLE : TileState.EMPTY,\n      tileUrl !== undefined ? tileUrl : '',\n      this.crossOrigin,\n      this.tileLoadFunction,\n      this.tileOptions,\n    );\n    tile.key = key;\n    tile.addEventListener(EventType.CHANGE, this.handleTileChange.bind(this));\n    return tile;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!(ImageTile|ReprojTile)} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    const sourceProjection = this.getProjection();\n    if (\n      !sourceProjection ||\n      !projection ||\n      equivalent(sourceProjection, projection)\n    ) {\n      return this.getTileInternal(\n        z,\n        x,\n        y,\n        pixelRatio,\n        sourceProjection || projection,\n      );\n    }\n    const cache = this.getTileCacheForProjection(projection);\n    const tileCoord = [z, x, y];\n    let tile;\n    const tileCoordKey = getKey(tileCoord);\n    if (cache.containsKey(tileCoordKey)) {\n      tile = cache.get(tileCoordKey);\n    }\n    const key = this.getKey();\n    if (tile && tile.key == key) {\n      return tile;\n    }\n    const sourceTileGrid = this.getTileGridForProjection(sourceProjection);\n    const targetTileGrid = this.getTileGridForProjection(projection);\n    const wrappedTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      projection,\n    );\n    const newTile = new ReprojTile(\n      sourceProjection,\n      sourceTileGrid,\n      projection,\n      targetTileGrid,\n      tileCoord,\n      wrappedTileCoord,\n      this.getTilePixelRatio(pixelRatio),\n      this.getGutter(),\n      (z, x, y, pixelRatio) =>\n        this.getTileInternal(z, x, y, pixelRatio, sourceProjection),\n      this.reprojectionErrorThreshold_,\n      this.renderReprojectionEdges_,\n      this.tileOptions,\n    );\n    newTile.key = key;\n\n    if (tile) {\n      newTile.interimTile = tile;\n      newTile.refreshInterimChain();\n      cache.replace(tileCoordKey, newTile);\n    } else {\n      cache.set(tileCoordKey, newTile);\n    }\n    return newTile;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {!import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!ImageTile} Tile.\n   * @protected\n   */\n  getTileInternal(z, x, y, pixelRatio, projection) {\n    let tile = null;\n    const tileCoordKey = getKeyZXY(z, x, y);\n    const key = this.getKey();\n    if (!this.tileCache.containsKey(tileCoordKey)) {\n      tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n      this.tileCache.set(tileCoordKey, tile);\n    } else {\n      tile = this.tileCache.get(tileCoordKey);\n      if (tile.key != key) {\n        // The source's params changed. If the tile has an interim tile and if we\n        // can use it then we use it. Otherwise we create a new tile.  In both\n        // cases we attempt to assign an interim tile to the new tile.\n        const interimTile = tile;\n        tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n\n        //make the new tile the head of the list,\n        if (interimTile.getState() == TileState.IDLE) {\n          //the old tile hasn't begun loading yet, and is now outdated, so we can simply discard it\n          tile.interimTile = interimTile.interimTile;\n        } else {\n          tile.interimTile = interimTile;\n        }\n        tile.refreshInterimChain();\n        this.tileCache.replace(tileCoordKey, tile);\n      }\n    }\n    return tile;\n  }\n\n  /**\n   * Sets whether to render reprojection edges or not (usually for debugging).\n   * @param {boolean} render Render the edges.\n   * @api\n   */\n  setRenderReprojectionEdges(render) {\n    if (this.renderReprojectionEdges_ == render) {\n      return;\n    }\n    this.renderReprojectionEdges_ = render;\n    for (const id in this.tileCacheForProjection) {\n      this.tileCacheForProjection[id].clear();\n    }\n    this.changed();\n  }\n\n  /**\n   * Sets the tile grid to use when reprojecting the tiles to the given\n   * projection instead of the default tile grid for the projection.\n   *\n   * This can be useful when the default tile grid cannot be created\n   * (e.g. projection has no extent defined) or\n   * for optimization reasons (custom tile size, resolutions, ...).\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tilegrid Tile grid to use for the projection.\n   * @api\n   */\n  setTileGridForProjection(projection, tilegrid) {\n    const proj = getProjection(projection);\n    if (proj) {\n      const projKey = getUid(proj);\n      if (!(projKey in this.tileGridForProjection)) {\n        this.tileGridForProjection[projKey] = tilegrid;\n      }\n    }\n  }\n\n  clear() {\n    super.clear();\n    for (const id in this.tileCacheForProjection) {\n      this.tileCacheForProjection[id].clear();\n    }\n  }\n}\n\n/**\n * @param {ImageTile} imageTile Image tile.\n * @param {string} src Source.\n */\nfunction defaultTileLoadFunction(imageTile, src) {\n  /** @type {HTMLImageElement|HTMLVideoElement} */ (imageTile.getImage()).src =\n    src;\n}\n\nexport default TileImage;\n","/**\n * @module ol/source/TileWMS\n */\n\nimport TileImage from './TileImage.js';\nimport {DEFAULT_VERSION, getImageSrc, getRequestParams} from './wms.js';\nimport {appendParams} from '../uri.js';\nimport {buffer, createEmpty} from '../extent.js';\nimport {calculateSourceResolution} from '../reproj.js';\nimport {compareVersions} from '../string.js';\nimport {get as getProjection, transform} from '../proj.js';\nimport {modulo} from '../math.js';\nimport {hash as tileCoordHash} from '../tilecoord.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {Object<string,*>} params WMS request parameters.\n * At least a `LAYERS` param is required. `STYLES` is\n * `''` by default. `VERSION` is `1.3.0` by default. `WIDTH`, `HEIGHT`, `BBOX`\n * and `CRS` (`SRS` for WMS version < 1.3.0) will be set dynamically.\n * @property {number} [gutter=0]\n * The size in pixels of the gutter around image tiles to ignore. By setting\n * this property to a non-zero value, images will be requested that are wider\n * and taller than the tile size by a value of `2 x gutter`.\n * Using a non-zero value allows artifacts of rendering at tile edges to be\n * ignored. If you control the WMS service it is recommended to address\n * \"artifacts at tile edges\" issues by properly configuring the WMS service. For\n * example, MapServer has a `tile_map_edge_buffer` configuration parameter for\n * this. See https://mapserver.org/output/tile_mode.html.\n * @property {boolean} [hidpi=true] Use the `ol/Map#pixelRatio` value when requesting\n * the image from the remote server.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid. Base this on the resolutions,\n * tilesize and extent supported by the server.\n * If this is not defined, a default grid will be used: if there is a projection\n * extent, the grid will be based on that; if not, a grid based on a global\n * extent with origin at 0,0 will be used.\n * @property {import(\"./wms.js\").ServerType} [serverType] The type of\n * the remote WMS server: `mapserver`, `geoserver`, `carmentaserver`, or `qgis`.\n * Only needed if `hidpi` is `true`.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {string} [url] WMS service URL.\n * @property {Array<string>} [urls] WMS service urls.\n * Use this instead of `url` when the WMS supports multiple urls for GetMap requests.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * When set to `false`, only one world\n * will be rendered. When `true`, tiles will be requested for one world only,\n * but they will be wrapped horizontally to render multiple worlds.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for tile data from WMS servers.\n * @api\n */\nclass TileWMS extends TileImage {\n  /**\n   * @param {Options} [options] Tile WMS options.\n   */\n  constructor(options) {\n    options = options ? options : /** @type {Options} */ ({});\n\n    const params = Object.assign({}, options.params);\n\n    const transparent = 'TRANSPARENT' in params ? params['TRANSPARENT'] : true;\n\n    super({\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      interpolate: options.interpolate,\n      opaque: !transparent,\n      projection: options.projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileClass: options.tileClass,\n      tileGrid: options.tileGrid,\n      tileLoadFunction: options.tileLoadFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = options.gutter !== undefined ? options.gutter : 0;\n\n    /**\n     * @private\n     * @type {!Object}\n     */\n    this.params_ = params;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.v13_ = true;\n\n    /**\n     * @private\n     * @type {import(\"./wms.js\").ServerType}\n     */\n    this.serverType_ = options.serverType;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.tmpExtent_ = createEmpty();\n\n    this.updateV13_();\n    this.setKey(this.getKeyForParams_());\n  }\n\n  /**\n   * Return the GetFeatureInfo URL for the passed coordinate, resolution, and\n   * projection. Return `undefined` if the GetFeatureInfo URL cannot be\n   * constructed.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n   * @param {!Object} params GetFeatureInfo params. `INFO_FORMAT` at least should\n   *     be provided. If `QUERY_LAYERS` is not provided then the layers specified\n   *     in the `LAYERS` parameter will be used. `VERSION` should not be\n   *     specified here.\n   * @return {string|undefined} GetFeatureInfo URL.\n   * @api\n   */\n  getFeatureInfoUrl(coordinate, resolution, projection, params) {\n    const projectionObj = getProjection(projection);\n    const sourceProjectionObj = this.getProjection() || projectionObj;\n\n    let tileGrid = this.getTileGrid();\n    if (!tileGrid) {\n      tileGrid = this.getTileGridForProjection(sourceProjectionObj);\n    }\n\n    const sourceProjCoord = transform(\n      coordinate,\n      projectionObj,\n      sourceProjectionObj,\n    );\n    const sourceResolution = calculateSourceResolution(\n      sourceProjectionObj,\n      projectionObj,\n      coordinate,\n      resolution,\n    );\n\n    const z = tileGrid.getZForResolution(sourceResolution, this.zDirection);\n    const tileResolution = tileGrid.getResolution(z);\n    const tileCoord = tileGrid.getTileCoordForCoordAndZ(sourceProjCoord, z);\n\n    if (tileGrid.getResolutions().length <= tileCoord[0]) {\n      return undefined;\n    }\n\n    let tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\n\n    const gutter = this.gutter_;\n    if (gutter !== 0) {\n      tileExtent = buffer(tileExtent, tileResolution * gutter, tileExtent);\n    }\n\n    const baseParams = {\n      'QUERY_LAYERS': this.params_['LAYERS'],\n    };\n    Object.assign(\n      baseParams,\n      getRequestParams(this.params_, 'GetFeatureInfo'),\n      params,\n    );\n\n    const x = Math.floor((sourceProjCoord[0] - tileExtent[0]) / tileResolution);\n    const y = Math.floor((tileExtent[3] - sourceProjCoord[1]) / tileResolution);\n\n    baseParams[this.v13_ ? 'I' : 'X'] = x;\n    baseParams[this.v13_ ? 'J' : 'Y'] = y;\n\n    return this.getRequestUrl_(\n      tileCoord,\n      tileExtent,\n      1,\n      sourceProjectionObj || projectionObj,\n      baseParams,\n    );\n  }\n\n  /**\n   * Return the GetLegendGraphic URL, optionally optimized for the passed\n   * resolution and possibly including any passed specific parameters. Returns\n   * `undefined` if the GetLegendGraphic URL cannot be constructed.\n   *\n   * @param {number} [resolution] Resolution. If set to undefined, `SCALE`\n   *     will not be calculated and included in URL.\n   * @param {Object} [params] GetLegendGraphic params. If `LAYER` is set, the\n   *     request is generated for this wms layer, else it will try to use the\n   *     configured wms layer. Default `FORMAT` is `image/png`.\n   *     `VERSION` should not be specified here.\n   * @return {string|undefined} GetLegendGraphic URL.\n   * @api\n   */\n  getLegendUrl(resolution, params) {\n    if (this.urls[0] === undefined) {\n      return undefined;\n    }\n\n    const baseParams = {\n      'SERVICE': 'WMS',\n      'VERSION': DEFAULT_VERSION,\n      'REQUEST': 'GetLegendGraphic',\n      'FORMAT': 'image/png',\n    };\n\n    if (params === undefined || params['LAYER'] === undefined) {\n      const layers = this.params_.LAYERS;\n      const isSingleLayer = !Array.isArray(layers) || layers.length === 1;\n      if (!isSingleLayer) {\n        return undefined;\n      }\n      baseParams['LAYER'] = layers;\n    }\n\n    if (resolution !== undefined) {\n      const mpu = this.getProjection()\n        ? this.getProjection().getMetersPerUnit()\n        : 1;\n      const pixelSize = 0.00028;\n      baseParams['SCALE'] = (resolution * mpu) / pixelSize;\n    }\n\n    Object.assign(baseParams, params);\n\n    return appendParams(/** @type {string} */ (this.urls[0]), baseParams);\n  }\n\n  /**\n   * @return {number} Gutter.\n   */\n  getGutter() {\n    return this.gutter_;\n  }\n\n  /**\n   * Get the user-provided params, i.e. those passed to the constructor through\n   * the \"params\" option, and possibly updated using the updateParams method.\n   * @return {Object} Params.\n   * @api\n   */\n  getParams() {\n    return this.params_;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../extent.js\").Extent} tileExtent Tile extent.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {Object} params Params.\n   * @return {string|undefined} Request URL.\n   * @private\n   */\n  getRequestUrl_(tileCoord, tileExtent, pixelRatio, projection, params) {\n    const urls = this.urls;\n    if (!urls) {\n      return undefined;\n    }\n    let url;\n    if (urls.length == 1) {\n      url = urls[0];\n    } else {\n      const index = modulo(tileCoordHash(tileCoord), urls.length);\n      url = urls[index];\n    }\n\n    return getImageSrc(\n      tileExtent,\n      (\n        this.tileGrid || this.getTileGridForProjection(projection)\n      ).getResolution(tileCoord[0]),\n      pixelRatio,\n      projection,\n      url,\n      params,\n      this.serverType_,\n    );\n  }\n\n  /**\n   * Get the tile pixel ratio for this source.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Tile pixel ratio.\n   */\n  getTilePixelRatio(pixelRatio) {\n    return !this.hidpi_ || this.serverType_ === undefined ? 1 : pixelRatio;\n  }\n\n  /**\n   * @private\n   * @return {string} The key for the current params.\n   */\n  getKeyForParams_() {\n    let i = 0;\n    const res = [];\n    for (const key in this.params_) {\n      res[i++] = key + '-' + this.params_[key];\n    }\n    return res.join('/');\n  }\n\n  /**\n   * Update the user-provided params.\n   * @param {Object} params Params.\n   * @api\n   */\n  updateParams(params) {\n    Object.assign(this.params_, params);\n    this.updateV13_();\n    this.setKey(this.getKeyForParams_());\n  }\n\n  /**\n   * @private\n   */\n  updateV13_() {\n    const version = this.params_['VERSION'] || DEFAULT_VERSION;\n    this.v13_ = compareVersions(version, '1.3') >= 0;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord The tile coordinate\n   * @param {number} pixelRatio The pixel ratio\n   * @param {import(\"../proj/Projection.js\").default} projection The projection\n   * @return {string|undefined} The tile URL\n   * @override\n   */\n  tileUrlFunction(tileCoord, pixelRatio, projection) {\n    let tileGrid = this.getTileGrid();\n    if (!tileGrid) {\n      tileGrid = this.getTileGridForProjection(projection);\n    }\n\n    if (tileGrid.getResolutions().length <= tileCoord[0]) {\n      return undefined;\n    }\n\n    if (pixelRatio != 1 && (!this.hidpi_ || this.serverType_ === undefined)) {\n      pixelRatio = 1;\n    }\n\n    const tileResolution = tileGrid.getResolution(tileCoord[0]);\n    let tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\n\n    const gutter = this.gutter_;\n    if (gutter !== 0) {\n      tileExtent = buffer(tileExtent, tileResolution * gutter, tileExtent);\n    }\n\n    const baseParams = Object.assign(\n      {},\n      getRequestParams(this.params_, 'GetMap'),\n    );\n\n    return this.getRequestUrl_(\n      tileCoord,\n      tileExtent,\n      pixelRatio,\n      projection,\n      baseParams,\n    );\n  }\n}\n\nexport default TileWMS;\n","import 'ol/ol.css';\r\nimport {Map,View} from 'ol/';\r\n//import TileLayer from 'ol/layer/Tile' Used at start of the training;\r\n//import OSM from 'ol/source/OSM';\r\nimport {Image as ImageLayer} from 'ol/layer';\r\nimport ImageWMS from'ol/source/ImageWMS';\r\nimport TileLayer from 'ol/layer/Tile';\r\nimport TileWMS from 'ol/source/TileWMS';\r\nimport Projection from 'ol/proj/Projection';\r\n\r\n\r\nconst serverUrl=\"http://localhost:8080/geoserver/wms\";\r\n\r\nconst mapProjection=new Projection ({\r\n\r\n    code: 'EPSG:32632',\r\n    //code: 'EPSG:28191',\r\n    units: 'm', \r\n    axisOrientation: 'neu',\r\n    global:false\r\n});\r\n  \r\n\r\n// Definition of the orthophoto source\r\nconst orthophotoSource=new TileWMS ({ \r\n    url: serverUrl,\r\n    //params:{\"LAYERS\":\"Training:orthophoto\", \"VERSION\":\"1.1.1\", \"FORMAT\":\"image/jpeg\" }\r\n    params:{\"LAYERS\":\"Training:orthophot\", \"VERSION\":\"1.1.1\", \"FORMAT\":\"image/jpeg\" }\r\n});\r\n\r\n// calling the orthophoto layer\r\nconst orthophotoLayer=new TileLayer ({\r\n    source:orthophotoSource, \r\n    // @ts-ignore\r\n    name: 'Orthophoto'\r\n});\r\n \r\n// Definition of the parcel layer\r\n\r\nconst parcelsSource=new ImageWMS({\r\n    url: serverUrl,\r\n    //params:{\"LAYERS\":\"Training:Parcels\", \"VERSION\":\"1.1.1\", \"FORMAT\":\"image/png\" }\r\n    params:{\"LAYERS\":\"Training:parcel1\", \"VERSION\":\"1.1.1\", \"FORMAT\":\"image/png\" }\r\n\r\n});\r\n// calling the Parcels layer\r\nconst parcelsLayer=new ImageLayer({\r\n    source:parcelsSource, \r\n    name: 'Parcels'\r\n});\r\n\r\n\r\n// Definition of the building laye\r\n\r\n\r\nconst BuildingsSource=new ImageWMS({\r\n    url: serverUrl,\r\n    //params:{\"LAYERS\":\"Training:Buildings\", \"VERSION\":\"1.1.1\", \"FORMAT\":\"image/png\" }\r\n    params:{\"LAYERS\":\"Training:Building\", \"VERSION\":\"1.1.1\", \"FORMAT\":\"image/png\" }\r\n});\r\n\r\n// Calling the Building Layer\r\nconst BuildingsLayer=new ImageLayer ({\r\n    source:BuildingsSource,\r\n    name: 'Buildings'\r\n});\r\n\r\n/*const osmLayer=new TileLayer({\r\n    source:new OSM\r\n}); */\r\n\r\nconst view= new View({\r\n    //extent: [165217.233, 151185.7259,172973.3239, 155713.6059],\r\n    //center: [168540,153370],\r\n    extent: [526590.2218252672, 459028.8116037153,528608.1761278327, 459748.55362365395],\r\n    center: [527655.4,459442.5],\r\n    zoom:0,\r\n    projection:mapProjection\r\n});\r\nconst map=new Map ({\r\n\r\ntarget:\"map\",\r\nlayers:[orthophotoLayer, parcelsLayer, BuildingsLayer],\r\nview:view\r\n\r\n\r\n})\r\n\r\n$('#map').data('map',map);","var bundleURL = null;\nfunction getBundleURLCached() {\n  if (!bundleURL) {\n    bundleURL = getBundleURL();\n  }\n\n  return bundleURL;\n}\n\nfunction getBundleURL() {\n  // Attempt to find the URL of the current script and use that as the base URL\n  try {\n    throw new Error;\n  } catch (err) {\n    var matches = ('' + err.stack).match(/(https?|file|ftp|chrome-extension|moz-extension):\\/\\/[^)\\n]+/g);\n    if (matches) {\n      return getBaseURL(matches[0]);\n    }\n  }\n\n  return '/';\n}\n\nfunction getBaseURL(url) {\n  return ('' + url).replace(/^((?:https?|file|ftp|chrome-extension|moz-extension):\\/\\/.+)?\\/[^/]+(?:\\?.*)?$/, '$1') + '/';\n}\n\nexports.getBundleURL = getBundleURLCached;\nexports.getBaseURL = getBaseURL;\n","var bundle = require('./bundle-url');\n\nfunction updateLink(link) {\n  var newLink = link.cloneNode();\n  newLink.onload = function () {\n    link.remove();\n  };\n  newLink.href = link.href.split('?')[0] + '?' + Date.now();\n  link.parentNode.insertBefore(newLink, link.nextSibling);\n}\n\nvar cssTimeout = null;\nfunction reloadCSS() {\n  if (cssTimeout) {\n    return;\n  }\n\n  cssTimeout = setTimeout(function () {\n    var links = document.querySelectorAll('link[rel=\"stylesheet\"]');\n    for (var i = 0; i < links.length; i++) {\n      if (bundle.getBaseURL(links[i].href) === bundle.getBundleURL()) {\n        updateLink(links[i]);\n      }\n    }\n\n    cssTimeout = null;\n  }, 50);\n}\n\nmodule.exports = reloadCSS;\n","var OVERLAY_ID = '__parcel__error__overlay__';\n\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n\n  module.bundle.hotData = null;\n}\n\nmodule.bundle.Module = Module;\nvar checkedAssets, assetsToAccept;\n\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = process.env.HMR_HOSTNAME || location.hostname;\n  var protocol = location.protocol === 'https:' ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + ':' + process.env.HMR_PORT + '/');\n  ws.onmessage = function(event) {\n    checkedAssets = {};\n    assetsToAccept = [];\n\n    var data = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      var handled = false;\n      data.assets.forEach(function(asset) {\n        if (!asset.isNew) {\n          var didAccept = hmrAcceptCheck(global.parcelRequire, asset.id);\n          if (didAccept) {\n            handled = true;\n          }\n        }\n      });\n\n      // Enable HMR for CSS by default.\n      handled = handled || data.assets.every(function(asset) {\n        return asset.type === 'css' && asset.generated.js;\n      });\n\n      if (handled) {\n        console.clear();\n\n        data.assets.forEach(function (asset) {\n          hmrApply(global.parcelRequire, asset);\n        });\n\n        assetsToAccept.forEach(function (v) {\n          hmrAcceptRun(v[0], v[1]);\n        });\n      } else if (location.reload) { // `location` global exists in a web worker context but lacks `.reload()` function.\n        location.reload();\n      }\n    }\n\n    if (data.type === 'reload') {\n      ws.close();\n      ws.onclose = function () {\n        location.reload();\n      }\n    }\n\n    if (data.type === 'error-resolved') {\n      console.log('[parcel] ✨ Error resolved');\n\n      removeErrorOverlay();\n    }\n\n    if (data.type === 'error') {\n      console.error('[parcel] 🚨  ' + data.error.message + '\\n' + data.error.stack);\n\n      removeErrorOverlay();\n\n      var overlay = createErrorOverlay(data);\n      document.body.appendChild(overlay);\n    }\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n  }\n}\n\nfunction createErrorOverlay(data) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n\n  // html encode message and stack trace\n  var message = document.createElement('div');\n  var stackTrace = document.createElement('pre');\n  message.innerText = data.error.message;\n  stackTrace.innerText = data.error.stack;\n\n  overlay.innerHTML = (\n    '<div style=\"background: black; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; opacity: 0.85; font-family: Menlo, Consolas, monospace; z-index: 9999;\">' +\n      '<span style=\"background: red; padding: 2px 4px; border-radius: 2px;\">ERROR</span>' +\n      '<span style=\"top: 2px; margin-left: 5px; position: relative;\">🚨</span>' +\n      '<div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">' + message.innerHTML + '</div>' +\n      '<pre>' + stackTrace.innerHTML + '</pre>' +\n    '</div>'\n  );\n\n  return overlay;\n\n}\n\nfunction getParents(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || (Array.isArray(dep) && dep[dep.length - 1] === id)) {\n        parents.push(k);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction hmrApply(bundle, asset) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (modules[asset.id] || !bundle.parent) {\n    var fn = new Function('require', 'module', 'exports', asset.generated.js);\n    asset.isNew = !modules[asset.id];\n    modules[asset.id] = [fn, asset.deps];\n  } else if (bundle.parent) {\n    hmrApply(bundle.parent, asset);\n  }\n}\n\nfunction hmrAcceptCheck(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (!modules[id] && bundle.parent) {\n    return hmrAcceptCheck(bundle.parent, id);\n  }\n\n  if (checkedAssets[id]) {\n    return;\n  }\n  checkedAssets[id] = true;\n\n  var cached = bundle.cache[id];\n\n  assetsToAccept.push([bundle, id]);\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n\n  return getParents(global.parcelRequire, id).some(function (id) {\n    return hmrAcceptCheck(global.parcelRequire, id)\n  });\n}\n\nfunction hmrAcceptRun(bundle, id) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n  if (cached) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n\n  cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      cb();\n    });\n    return true;\n  }\n}\n"]}